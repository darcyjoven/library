#該程式未解開Section, 採用最新樣板產出!
#該程式為freestyle程式!
{<section id="s_axcp500_avg.description" type="s" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0280(1900-01-01 00:00:00), PR版次:0280(2021-03-29 13:45:52)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000635
#+ Filename...: s_axcp500_avg
#+ Description: 成本計算作業- 月加權平均成本-SUB應用元件集合
#+ Creator....: 00378(2014-10-13 11:45:07)
#+ Modifier...: 00000 -SD/PR- 01996
 
{</section>}
 
{<section id="s_axcp500_avg.global" type="s" >}
#應用 p00 樣板自動產生(Version:6)
#add-point:填寫註解說明 name="main.memo"
# 150717 By zhangllc 在aoos020加一个成本参数“S-FIN-6017：联产品转出数量是否按分配率计算”
#                    如果是，就按目前的；如果不是，那么在制转出数量在计算时联产品的转出数量不需要乘以分配率
# 150730 By zhangllc 一个料件的不同产品特征可能不是相同成本阶
# 150810 By zhangllc 由于天和历史数据已经有把入库拆成多仓储批的入库了，必然要重计成本，目前axcp500是不支持的，所以要修正一下axcp500
#160518-00033#2  16/05/30 By 02295     小数点取位问题调整
#160509-00004#76 16/06/20 By 02295     xcck_t中增加成本代销单号
#160727-00038#1  16/07/28 By Ann_Huang xccc280平均單價為0時重取上期的平均單價,需增加條件,要判斷本月是否有入庫數量為0
#160728-00020#1  16/07/28 By Ann_Huang 1.下階領上階時明細資料已給值，不需重新更新
#                                      2.下階領上階時，元件取前期單價
#160805-00033#1  16/08/05 By 00768     对工单的回收料部分，若本期工单有入库，则回收料在制全部转出
#160727-00019#29 16/08/08 By 08742     系统中定义的临时表名称超过15码在执行时会出错,所以需要将系统中定义的临时表长度超过15码的全部改掉	 	
#                                      Mod  repeat_wip4_tmp1 --> rept_wip_tmp01 , repeat_wip4_tmp2 --> rept_wip_tmp02
#                                      Mod  repeat_wip4_tmp3 --> rept_wip_tmp03 , repeat_wip4_tmp4 --> rept_wip_tmp04
#                                      Mod  repeat_wip4_tmp5 --> rept_wip_tmp05
#160813-00001#2  16/08/25 By 02040     #本月无入库的在制差异转入主件当期入库='Y'也需寫入一筆 xccc資料
#160816-00015#2  16/08/26 By 02040     產生xcck020=101雜收或是301雜發，xcck033費用科目的取值以aooi125對應的費用性質至agli180抓取相對應科目
#160829-00020#1  16/08/29 By 02295     1.remark采购入库在勾选含税单价的逻辑
#                                      2.采购入库抓取采购金额时的sql错误
#160823-00040#1  16/0830  By xianghui  将apcb118该抓apcb113
#160921-00005#1  16/09/26 By Ann_Huang 修正160727-00038#1, 當本月有入庫數量時，就不應該抓上期的資料,但程式寫成了"判斷上期的入庫數量"
#                                      並且把判斷入庫數量分開判斷(因合計有可能加減會變成0)
#160929-00019#1  16/09/29 By lixiang   s_axcp500_avg1_wip_4_2里面，原160805-00033#1修改的回收料转出逻辑，没有限定sfac002=‘5.副产品/回收料’，造成返工工单在制转出数量异常
#160906-00036#1  16/09/29 By whitney   重工入庫xcck055=209寫入xccc時調整為不排除成本階99的資料
#160923-00047#1  16/09/30 By 02040     xcce_t、xccd_t須照小數位數進行取位
#160923-00003#1  16/09/30 By 02040     調整計算邏輯，先算重工工單，再算拆件工單
#160930-00026#1  16/09/30 By 02040     計算後有xcce_t和xcck_t，因取位有尾差問題，在計算xcce時，直接拿xcck的資料更新即可
#161004-00001#1  16/09/30 By 02040     調整重工領用的程式段，讓xcce_t和xcck_t的金額是一樣的
#161004-00022#5  16/10/07 By 02040     將l_sum殘留值清空
#161010-00010#1  16/10/10 By 00768     处理修改xccd成本域栏位时报-268的错误
#161004-00022#7  16/10/12 By 02040     只要當月有異動(xcck_t)，都要留著，避免xcce_t和xcck_t資料不一樣，將del段mark
#161024-00006#1  16/10/27 By 02040     因資料庫版本不同導致放在第三層的子查詢沒有辨法join到第一層造成SQL錯誤，調整SQL寫法
#161030-00001#1  16/10/30 By 02040     因拆件工单的主件料号与sfac料号有成本阶不一致而发生拆件工单算不到，故拿掉成本階條件
#161019-00039#1  16/11/02 By 02040     xccd_t須照小數位數進行取位
#161103-00024#1  16/11/03 By 02295     依顺序抓取xccc280单价时候，銷貨類的303排除在外，不要根据顺序抓取
#161104-00008#1  16/11/04 By 02295     sql语法错误调整
#161114-00003#1  16/11/14 By 02040     1.調整採購入庫單抓取應付帳款分配，入庫項次有多個倉儲批明細的資料才需要執行此段 2.修正使用產品特徵計算成本時，取成本階取不到問題
#                                      3.效能調整，加上TEMP TABLE的INDEX；加上/*+ PARALLEL(4) */ (可以讓ORACLE一次啟用4個核心來運作這個SQL，速度會加快)
#161115-00004#1  16/11/14 By 02040     調整因工單多次入庫，又因該張入庫數量又過小，分到的金額小於0.5，導致尾差分攤給其它入庫單，而使該張完工入庫單的成本金額為0
#161124-00016#1  16/11/24 By shiun     增加IF cl_db_generate_analyze("xcce_tmp") THEN END IF
#161208-00030#1  16/12/07 By wuije     委外代買無法計算轉出量
#161212-00079#1  16/12/14 By 02040     有上期成本資料，但做了成本開帳，如果本期沒有任何異動，期末結存數量會取到上期的數量，應調整為取開帳數量
#161129-00050#1  16/12/14 By 02040     增加判斷，當期沒有異動的話，如果還取不到單價，則取開帳的平均單價
#161206-00025#1  16/12/16 By 02040     增加判斷：已成本結案的工單才轉差異
#161124-00048#20 16/12/13 By xujing    整批调整系统RECORD LIKE xxxx_t.* 星号写法
#161212-00078#1  16/12/23 By 02040     1.判斷當月的入庫項目數量有沒有異動，若沒異動，會取上個月的單價或開帳單價，需多加考慮所有的金額項目為零才能抓取上月單價
#                                      2.單價計算後是負的，也應該照計算的結果呈現，不需再抓其它資料
#161215-00011#3  2016/12/26 By 02040   拿掉xccd008產品特徵給予MULT處理
#161109-00032#3  2016/12/27 By lixiang  成本计算时，原来处理inaj036/xcck020 = 301的地方，追加inaj036/xcck020=301X；原来处理xcck055=309、3091、3092的地方，追加309X
#161216-00008#1  2016/12/30 By 02040   寫入發料明細時需加上工單項序條件
#170105-00016#1  2017/01/05 By charles4m 聯產品成本計算後 axcq517、axcq501 會有尾差問題。
#161208-00069#1  2017/01/11 By 02040   小數位數取位
#170109-00064#1  2017/01/12 By 02040   增加條件判斷是否為最後一張入庫單，把剩下的金額直接給此張入庫單
#170111-00004#1  2017/01/12 By 02040   本期本階投入金額，需排除非發料的金額
#161108-00046#1  2017/01/12 By 02040   增加處理本期銷貨收入金額xccc401 
#170112-00041#1  2017/01/13 By 02295   計算成本時，成本階不用串產品特徵的條件。
#170110-00028#1  2017/01/13 By 02295   將SQL語法內的/*+ PARALLEL(4) */ 清除
#170116-00028#1  2017/01/16 By 02040   本期銷貨收入金額xccc401，出現sql錯誤
#170118-00002#1  2017/01/18 By xujing  修正 select tmp.* into 栏位不对应的问题
#170216-00059#2  2017/02/20 By zhujing 在LEFT OUTER JOIN xrcb與xcck的條件增加AND (xcck008 = 0 OR xcck008 = 1 OR xcck008 IS NULL)  
#170222-00055#1  2017/02/23 By 02295   月加權平均成本計算時，當本期料件明細進出成本檔的各項金額不等於明細金額加總,分攤差異金額時，分到金額最大的那筆明細中
#170120-00013#1  2017/03/10 By lixiang  成本計算s_axcp500_avg.4gl
#                                       1.增加參數「當站報廢轉出」的處理
#                                       2.增加參數「超領轉出方式」的處理
#                                       3.增加參數「下階料報廢轉出方式」的處理
#170316-00003#1  2017/03/21 By 02111    本期有工單入庫，有回收料的需全部轉出的數量、金額必須期初+本期投入+退料。
#170317-00006#1  2017/03/21 By 02111    sale_return_tmp 取完出貨當月成本，不能直接將所有NULL的欄位預設給 0，會導致後續所有資料都取當月成本。必須排除出貨當月沒有成本資料的銷退單保持 NULL，後續更新到 xcck_tmp 在判斷 NULL 給 0。
#161121-00018#5  2017/03/21 By 02295    增加工艺成本逻辑
#170315-00026#1  2017/03/27 By 02295    axcp500中添加主件开账数量的更新
#170329-00068#1  2017/03/29 By 02295    1.委外倉退單的xcck_t不應該有金額
#                                       2.結案工單，DL+OH+SUB也要根據參數，將金額轉到入庫轉出或差異轉出
#170330-00046#1  2017/03/31 By 02111    期末金額尾差改為攤到最大金額項目。
#170330-00107#1  2017/04/05 By 02295    1.上站转出转到下站时在END站结束不要产生STORGE站
#                                       2.将工艺元件里面每站报废回收差异转出全部放入xcce的期末里面,待后面参数决定放入库转出或差异转出
#170407-00007#1  2017/04/07 By 02295    效能优化
#170407-00021#1  2017/04/18 By 05599    若期初數量與本期異動數量合計為0時，本期平均單價需為0
#170418-00027#1  2017/04/18 By 05599    經SA討論後，170407-00021轉為客戶個案處理，產品不回追
#170418-00026#1  2017/04/19 By 02295    工艺成本处理逻辑调整
#170418-00054#1  2017/04/24 By 02111    xccd_t 尾差問題。將尾差分攤到最大筆。
#170425-00007#1  2017/04/25 By 00768    修改161108-00046#1单加入sql的效能（回收柯乐芙）
#170316-00053#2  2017/04/27 By lixiang  s_axcp500_avg1_wip_4_2在處理完結案工單後，判斷該工單是研發工單時，將入庫轉出的金額，轉到差異轉出上
#170504-00046#1  2017/05/10 By lixiang  1.修正计算主件报废转出数量错误的问题
#                                       2.调整报废数量的计算逻辑：下阶料在转出时，若入库转出数+报废转出超过投入数，则报废转出=投入-入库转出
#170511-00068#1  2017/05/16 By Mandy    加入類別1100,沒加的話導致axcq301 若沒有使用聯產品,出現axc-00449 的錯誤(聯產品材料合計%1不等於材料入庫%2)
#170513-00005#1  2017/05/17 By 00768    本月无入库的部分写入diff的xcck资料时，排除金额为0的
#170504-00004#1  2017/05/17 By 02111    1. PREPARE s_axcp500_avg1_wip_3_p1 FROM g_sql 條件拿掉 AND sfdd001 = sfba006，否則會導致撈不到備料。
#                                       2. xccz_t 的工單若有多筆項序，請排除項序 0 取最小值。
#                                       3. 欄位回寫錯誤，將 xccc202h 改為 xcce202h。
#170511-00056#1  2017/05/17 By 02295    本期下阶投入关联条件给的不足,加上批号的关联
#170605-00013#1  2017/06/06 By 07024    FUNCTION中DEFINE的RECORD，改成TYPE寫在inc(s_axcp500)
#                                       EX:INC=>TYPE type_g_xccc RECORD …… END RECORD ； 4gl=>DEFINE l_xxxx type_g_xccc
#170607-00058#1  2017/06/07 By 02295    主件投入的数量在axcp162已经换算成成本单位,所以axcp500不需要在乘以xcbg006
#170601-00051#1  2017/06/08 By 02111    將 CREATE  GLOBAL TEMPORARY TABLE xrcb_tmp 建立的語法改為一般 temptable 寫法。
#170608-00060#1  2017/06/09 By lixiang  委外拆件入庫，異動類型(xcck020)=106.委外拆件入庫，把xcck055 改成3012.工單領用
#170612-00014#1  2017/06/13 By lixiang  在抓xcck_t算拆件投入前，拆件工單的xcck202的金额要重新根据xccc280*数量重新计算
#170615-00011#1  2017/06/15 By lixiang  延續170612-00014問題,處理xcck_t完須做取位並做xcck202和xcck202a~h的尾差處理
#170603-00020#1  2017/06/15 By 02111    xccd_t 分攤到 xcck_t 的邏輯時，因有重複多筆資料造成已經調整尾差的資料又被覆蓋，故將SQL 加上 DISTINCT。
#170618-00372#1  2017/06/18 By 02111    PREPARE s_axcp500_avg1_wip_4_2_p11 FROM g_sql 要增加判斷當月有報廢的判斷。
#170601-00062#1  2017/06/19 By 02295    工艺成本:产生xchb_t关联sfba时需要加上作业序不为空且不能为空格
#170617-00494#1  2017/06/27 By 02111    执行curosr:s_axcp500_avg1_wip_3_p1_upd_xccz011报错的问题
#170618-00446#1  2017/06/27 By lixiang  参数超领转入库转出时，sql改用merge的写法
#170618-00158#1  2017/06/27 By lixiang  1.工藝的金額尾差處理，良品轉出、報廢、回收轉出是存放負數,所以应用+号做减
#                                       2.工艺成本的当站下线的资料相关的制程都要写入
#170618-00382#1  2017/06/28 By lixiang  超領的參數設定，是設定為當月有入庫即轉出，但實際上本月成品並沒有入庫，所以超領不應該在本月轉出
#170629-00054#1  2017/06/29 By 02111    因工單備料出現重覆的料件，導致成本計算有誤。
#170704-00015#1  2017/07/04 By 02111    當站報廢轉出方式 設置 2:當月轉出，金額轉入庫存成本 時，要將 xccd301+xccd303。
#170705-00006#1  2017/07/06 By 08734    用到除數量計算的公式时，要排除數量為0的
#170620-00028#1  2017/07/14 By lixiang  下阶料报废转出的问题
#170705-00053#1  2017/07/17 By 02111    1. 調整為 xccc401 不要抓到銷退金額，改把銷退金額放到 xccc402。
#                                       2. xccc402 呈上 -1。
#170629-00045#1  2017/07/21 By 02295    元件转出根据主件*QPA算出之后需要进行小数的取位
#170722-00004#1  2017/07/24 By 02295    工艺成本,整批取製程成本工時費用明細資料时关联表字段需要加上料号=DL+OH+SUB
#170724-00055#1  2017/07/24 By 02295    还原170618-00158这个单第二点处理工艺当站下线的部分
#170724-00055#1  2017/07/27 By 02295    1.当站下线的处理放在for循环里面
#                                       2.报废转入当期入库转出时,如果本期无入库则需产生一笔DIFF的xcck异动资料
#                                       3.xccd302转出的尾差处理,因为xccd302的金额都是负数,所以在判断上需要调整
#170601-00092#1  2017/08/01 By 02295    工艺成本,在算出良品转出,报废,回收后进行a~h不等于金额的尾差处理
#170705-00044#1  2017/08/02 By 02295    整数发料,分批全部退料导致发料与退料的数量可以抵消等于0,金额相加减有尾差存在.处理方法把xcck或xccc領料算出來後分在最大一筆xcck上
#170808-00077#1  2017/08/10 By lixiang  製程成本，超領的部分也要计算到良品转出上
#170801-00003#1  2017/08/16 By lixiang  效率改善:加上 IF cl_db_generate_analyze("xcck_tmp") THEN END IF 能有效減少執行時間，請協助加上
#170323-00069#1  2017/08/17 By lixiang  抓取ap资料时的效能优化
#170629-00004#1  2017/08/23 By lixiang  增加参数S-FIN-6025,当站下线的取价方式
#                                       1.系統設定：合計投料的單價*當站下線數量
#                                       2.人工設定：取axct314成本
#170906-00019#1  2017/09/07 By 02295    超领转出的部分需要根据参数S_FIN-6023的设置就行转出
#170526-00032#1  2017/09/08 By 02295    1.s_axcp500_avg_coproduct_set_xcck()中xcck201计算后没有进行取位
#                                       2.s_axcp500_avg1_wip_1()中qty用inaj048/inaj49计算之后做小数取位
#170804-00027#1  2017/09/20 By 02294    处理尾差时，将条件xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0去掉
#170617-00032#1  2017/09/20 By 02294    同一入庫單可能會有多筆應付單(aapt300)，其匯率可能會有不同，故抓取日期最大一筆來做更新
#170411-00032#1  2017/09/21 By 02294    增加回收料轉出方式參數，根據參數設置更新回收料的部分
#170811-00039#1  2017/09/25 By 02294    製程成本調整：經寶調整回收產中
#170825-00011#1  2017/10/03 By 02111    1. PREPARE s_axcp500_avg1_wip_4_2_p11 FROM g_sql  的 ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) 的條件拿掉。
#                                       2. INSERT INTO xcck_t 時回寫當下時間。
#                                       3. EXECUTE s_axcp500_avg1_wip_4_2_p10 SQL 排除已經存在 DIFF 的相同資料。
#170906-00053#1  2017/10/09 By 02295    runcard 返工处理,作业编号+作业序不存在axcq163中的数据 (DL+OH+SUB/ADJUST)全部转到END站中去
#171013-00022#1  2017/10/16 By 05599    回收料部分处理完之后没有对xcce302的金额做小数取位和尾差的处理
#171020-00010#1  2017/10/20 By 02295    程式是有差异处理,但是这种料工费全是0,按序处理0.01差异时会放在材料上,目前处理是在材料的那个sql加上一个料号<>'DL+OH+SUB'
#171023-00005#1  2017/10/25 By 00531    成本計算在抓取開帳資料要不要考慮批號成本應該要參考axci100的設置
#171024-00046#1  2017/10/26 By 05599    回收料轉出部分,在2.依工單QPA比率轉出時,xccd002=xcce002 成本域的關聯不需要,需要mark,關聯到工單單號就好了
#171006-00036#1  2017/10/31 By 02111    PREPARE s_axcp500_avg1_set_xcck_5_p1_4 FROM g_sql 未乘上 xcck009 判斷入出庫正負向的處理造成計算錯誤。
#171107-00005#1  2017/11/07 By 05599    重工入库计算后,#170612-00014#1这个处理完需要重新计算xccc280重工领出的金额
#171114-00019#1  2017/11/14 By 05599    工艺成本当月只有报废没有入库,且工单本月结案,在产生xcck012=DIFF资料时,资料插入会重复
#                                       s_axcp500_avg.4gl中PREPARE s_axcp500_avg_wip_process_p13 FROM g_sql这个里面sql抓取项次时需要加上已存在资料的最大项次,这样资料就不会重复
#171114-00027#1  2017/11/14 By 02295    一般退料在工艺计算的部分记录的是负数,在判断转出<>投入时,没有用绝对值来判断
#171115-00033#1  2017/11/16 By 08525    基础等式不平；富钛回收产品
#171115-00022#1  2017/11/22 By 02295    工艺成本DL+OH+SUB的数量投入与转出调整,投入为xccd的投入数量,转出为xcha_t END站的各个转出
#171127-00005#1  2017/11/27 By 05599    f()中wip4_tmp1/wip4_tmp2两张临时表产生的数据数量小于等于0的不用删除,当前问题是走成本域(仓库),A仓发料B仓退料,这样B仓的资料临时表的数量是负数,这边删除就不能正常转出了,故将这2个mark
#171122-00029#2  2017/12/01 By 05423    s_axcp500_avg_wip_process_p11 更新各項投入金額時,判斷工單條件 應加上"sfaa003 <> 3.拆解工單"的條件
#160726-00001#11 2017/12/21 By 07423    有做SET替代時，備料轉出數要先算各小群組的足套數，再計算轉出數
#171005-00021#1  2017/12/29 By 02294    效能优化
#180108-00085#1  2018/01/10 By 05423    参数[当站下线的取价方式]仅适用于制程成本，其他需要还原
#180129-00022#1  2018/01/29 By 02295    参数g_sys_6006='2'部分影响时,关联检查是否存在其他库存异动时,应关联料号+产品特征+批号
#170617-00245#1  2018/01/30 By 09042    规格画面上stagenow栏位的sizePolicy调整为dynamic
#180129-00075#1  2018/01/31 By 02295    抓拆件式工单时条件应改为整单成本阶等于传入的当前计算成本阶
#180131-00016#1  2018/02/01 By 02295    1.判断当期是否有入库改成去inaj_tmp中检查是否有入库的异动
#                                       2.尾差的处理：當期初無值或 有值但單價一樣，那判斷轉出的數量跟投入(期初、領料、退料、超領其中一種)的數量一樣的話，直接更新轉出金額跟投入的金額一樣
#180205-00026#1  2018/02/06 By 02295    计算xccz_t投入数量时,因为sfdc003=sfbaseq1导致取替代资料算不到资料,现mark掉这个关联条件
#180112-00027#1  2018/02/06 By 02111    EXECUTE s_axcp500_avg1_set_xcck_5_p3 尾差分攤的 SQL 調整  xcck202 - 非分攤欄位之總和 <> 0 改為 分攤的欄位 <> 0。
#180206-00033#1  2018/02/07 By 02295    1.wip_4_1()计算转出数量时产生wip4_tmp2的数量排除掉超领数量xccz209
#                                       2.计算wip4_tmp2的累积已发量增加条件 b.qty<>0
#180125-00005#1  2018/02/28 By 05423    S-FIN-6025非制程当站下线取价方式修改：参数=系统设置时，单价来源抓当站下线之料号的当月单位成本(抓不到则抓上期单位成本)
#180305-00062#1  2018/03/06 By 02295    1.工单是整张委外时,委外加工费的转出比例为-1
#                                       2.工单是工单委外时,委外加工费的转出参考人工制費转出原则的参数设定做转出
#180308-00016#1  2018/03/08 By 02295    销退是否影响成本改用2.部分影响时当期初+本期入库+重工入库<=重工领出时,更新为影响成本
#180314-00043#1  2018/03/19 By 02295    在当期单价算不出来时,抓取上期单价时,也需要判断当期重工入库是否有数量,如果没有数量才会去抓上期单价 
#180305-00001#1  2018/03/20 By 02111    當工單調整應發數量增加，但發料未發完，會造成 本期入庫轉出 > 本期異動數量總和，造成期末結存為負。調整判斷當 本期入庫轉出 > 本期異動總和時，直接給 本期異動的值。
#180314-00064#1  2018/03/20 By 02111    180131-00016#1 處理 在製入庫轉出金額與投入不一致的段落加上判斷當工單結案或本月有入庫時才處理。
#180320-00059#1  2018/03/20 By 00531    研發工單結案時也會被結轉到成品入庫成本
#170829-00035#1  2018/03/20 By 02294    跑製程成本時，若有分段投料(不同作業編號，相同料號) 或不同作業序、相同料，會出現sql報錯EXECUTE s_axcp500_avg_wip_process_p0查無此筆資料
#171228-00050#1  2018/03/27 By 02295    成本走成本域时,同一备料不同成本域发退料,在写入xccc_t和xccq_t资料时,merge匹配不到时,新增xccc_t和xccq_t的资料,
#                                       另外xcce_t与xccd_t关联时不需要加上xcce002成本域的关联
#180329-00007#1  2018/03/29 By 02295    下阶料报废转出参数选择3:当月转出，金额转至在制差异转出时,处理完之后需要xcce304进行金额的取位和尾差处理
#180330-00010#1  2018/04/04 By 02295    元件在制最后处理判断转出+差异转出>投入时,更新良品转出=投入-差异转出
#180411-00001#1  2018/04/11 By 00531    當工單有使用副產品或是連產品時，則成本計算後對應的xccd008的值會變成NULL，正常應該是要為' '
#180409-00031#1  2018/04/11 By 02295    SQL语句没有做单号+项次+项序的排序,导致判断项次总数量与项序的汇总无法对上.应要加上相应的排序
#180413-00008#1  2018/04/13 By 02295    #180131-00016#1的条件中需要增加一个xcce301<>0的条件,当其有转出时才这样处理
#180422-00001#1  2018/04/25 By 02111    在 UPDATE xccd_tmp SET xccd008=sfac006 段落 判斷 g_sys_6013 = 'Y' 時才執行。
#180420-00005#1  2018/04/25 By 02294    全柴客戶-axcp500效能優化-回追產中
#180418-00031#1  2018/05/04 By 02295    在拆件工单处理xcci_t与xcck_t尾差后面增加同一料号同期分批发料,整数入库造成差异的处理
#                                       170609-00032此单处理的尾差放在s_axcp500_avg的xcck_5中处理   
#180507-00051#1  2018/05/08 By 02295    因为当月没有入库的才会写一笔DIFF,当月没有入库投入的全部在期末在制xcce902,中间有报废的会直接写入xcce302,报废产生的DIFF条件里面xcce302<>0即可,不需要xcce902=0,这个时候xcce902肯定不为0,除非全部退料退掉
#180509-00052#1  2018/06/05 By 02295    期初+投入, 投入不是本期投入,而是本期全部投入
#180606-00035#1  2018/06/07 By 02295    此段逻辑已经与烽翔确认,不需要在做处理,故可以将其mark掉
#180610-00024#1  2018/06/12 By 02295    #180314-00064#1增加的当期有入库条件,需要加上关联,筛选出该工单的整单成本阶为当前计算成本阶,是否为重工也需要给条件
#180613-00026#1  2018/06/14 By 02295    1.wip_4_1最后元件转出数量做单位小数取位后,没有做投入>=转出的差异处理,比如投入100 ,转出100.1时,转出单位做无条件取位后转出101,这样就会造成投入小于转出,故在取位后进行判断如果转出大于投入则转出等于投入数量
#                                       2.xccz301更新后应对其做单位的取位
#180620-00045#1  2018/06/21 By 02295    元件数量转出在主件转出数量*QPA后不根据单位的设置做取位,无条件的做四舍五入三位小数
#180620-00028#1  2018/06/22 By 02295    s_axcp500_avg1_cal_p2这个cursor只要抓取工单整单成本阶为当前计算就好,关联条件中不需要sfaa010的成本阶也等于工单整单成本阶,因为两者可能是不同阶的
#180627-00020#1  2018/06/27 By 02295    下阶料报废如果2:当月转出，金额转入库存成本时,需要对此做DIFF的xcck资料入库
#180705-00009#1  2018/07/05 By 02295    在结转上期资料时,xcci_t的判断条件改成xcch902<>0,因为xcci902不一定会是0,xcci_t里面存在投入和转出的料号,同一个料号不会既有转入又转出,所以期末结存不一定为0,但实际上SUM时会正负抵消为0
#180706-00041#1  2018/07/09 By 02295    axcp500计算销退的xcck202时,一并将xccc280的单价给xcck282,后面对xcck202做尾差处理,xcck282与xccc280的第一次单价一样(具体情境见本单型管需求单处理描述)
#180712-00023#1  2018/07/13 By 02295    工艺成本人工制費:成本计算抓取时是根据入库单或者仓退的来源单号为工单抓取资料,但是有时这个表为空,改成先关联到采购单再用采购的来源单据编号作为工单抓取
#180611-00091#1  2018/07/20 By 05423    在制人工制费转出规则S-FIN-6014=1.依实际输入时，轉出比率=(轉出數量*(SUM(1/(入庫數量*同成本中心的報工站數+約當量)/總報工站數)
#180727-00061#1  2018/07/30 By 02295    s_axcp500_avg_wip_process()里面投入,一般退料,超领3个sql的sfba_tmp用外联关联,这样在对应不好料号时,抓取的作业编号+作业序为END+0
#180731-00016#1  2018/08/01 By 02295    1.xcce_tmp 抓取开张资料时,增加一个判断,工单性质不为拆件式工单
#                                       2.s_axcp500_avg_get_previous_balance()中增加开账资料的抓取,如果存在上期则更新,如果不存在则新增
#180802-00015#1  2018/08/03 By 05423    增加取位方式：2：四舍六入五成双、4：无条件进位的取位逻辑。
#180802-00068#1  2018/08/09 By 02295    增加判断临时表里面单价为空的情况
#180809-00014#1  2018/08/10 By 02295    s_axcp500_avg_disassemble_cs1的sql中字段写错，导致sql抓不到资料。
#180808-00019#1  2018/08/10 By 02295    工艺成本的投入写入xchb_t时,关联到发料单sfdc_t和sfdd_t,用sfdc去关联工单项次,这样会解决不同作业编号相同料号的问题
#180808-00024#1  2018/08/10 By 02295    因为超领转出的参数,当月有入库时转出,这样xcce有处理转出,但是xccz_t没有做处理,导致延续要下个月的xccz101,这样在计算下个月的xcce301转出时,数量变大,但xcce101的期初却小于转出.所以在超领转出xcce段,将xccz的也做一次转出
#180904-00049#1  2018/09/04 By 05423    获取应付单汇率时，应按照单据日期+单号进行排序，选择最近的一笔（原先按照单据日期，可能会有同一天的多张应付单，导致SQL出错)
#180831-00062#1  2018/09/07 By 05423    修复销退获取axct300开账资料时，未抓到资料的问题
#180905-00006#1  2018/09/10 By 02295    20180905 02295:销退影响成本单价时,应在重工领出之处理,并做一次成本单价的计算,即将xcck_3和xccc_3的销退部分单独列出
#180907-00050#1  2018/09/10 By 02295    1.工单整批发料,分批退料的逻辑处理中,如果总金额相等,但料工费的有不等,没有考虑到,做相应处理
#                                       2.元件在制最后处理判断转出+差异转出>投入时,更新良品转出=投入-差异转出,在判断是要用ABS绝对值做判断
#180910-00065#1  2018/09/11 By 02295    延续#170825-00011#1这个单的处理,将产生DIFF的SQL,里面sfac_tmp的关联拿掉,不然当有联产品的时候,因为有写ROW_NUMBER=1所以无法确定抓取的是生产料号
#180906-00016#1  2018/09/13 By 02295    xcck_5()xcck202与xcck202a~h的差异处理,用ABS绝对值来判断大小
#180918-00031#1  2018/09/18 By 02295    1.xcce902在处理DIFF之前有做过重新计算,所以在对期末结存产生DIFF的时候,不需要再判断是否存在xcck_t的DIFF资料了
#                                       2.s_axcp500_avg1_wip_4_2_p99这个SQL的处理,是因为数量全部转出,但是金额因为前后期的单价不一样,导致有差异,才会有这个sql产生DIFF,但是目前前面已经处理过了,这样的资料不会转入xcce302,会在xcce902再做期末的DIFF资料
#181016-00001#1  2018/10/16 By 02295    SQL增加金额缺位，写法出现点问题
#180926-00040#1  2018/10/19 By 05423    工艺首站的数量调整：本期投入=axcp163算得的上站转入
#180712-00001#1  2018/10/23 By 05423    工艺成本如果有平行制程，会重复插入资料，修正：EXECUTE s_axcp500_avg_wip_process_p63 這句sql，抓取xchb_t資料後，將相同的key資料，SUM(數量)、SUM(金額)後，再做INSERT或UPDATE
#181010-00003#1  2018/10/29 By 05423    修正拆件工单获取期初开账资料axct301时，未获取人工制费的问题
#181101-00027#1  2018/11/01 By 05423    修正拆件工单获取期初开账资料axct301时，金额未带出的问题(xccd/xcce抓开账资料要排除拆件工单；xcci/xcch抓开账资料，只抓拆件工单的)
#181024-00082#1  2018/11/08 By 02295    DL+OH+SUB的期末数量为xcha_t所有站的SUM(xcha901)数量
#181026-00070#1  2018/11/12 By 02295    将抓取入库的SQL从料件成本阶改成用工单低阶码去抓取,这样同一张工单的所有入库都会在同一阶计算.
#181119-00040#1  2018/11/20 By 05423    修正s_axcp500_avg1_wip_2_1_p2、s_axcp500_avg1_repeat_wip_2_1_p3中，未正确给值xcce010的问题
#181116-00032#1  2018/11/21 By 02295    效能优化
#181120-00039#1  2018/11/21 By 02295    工艺成本
#                                       1.生产数量小于实际入库数量时,会造成期末有负数数量,调整将期末的数量更新为0
#                                       2.备料转出QPA计算时因为总应发量已经算过替代率,在算QPA时无需再除以替代率
#                                       3.DL+OH+SUB的更新s_axcp500_avg_wip_xchb_1_1(),这FUNCTION之后再做投入数量=axcq163的转出数量
#181203-00024#1  2018/12/03 By 05423    修正数量未取位的问题
#181205-00001#1  2018/12/07 By 02295    在处理元件在制最后处理判断转出+差异转出>投入时,更新良品转出=投入-差异转出时,SQL条件里面有指定成本结案日范围,未考虑到未结案的情况.
#                                       目前改法,因为这个SQL中抓取的是xccd_tmp,sfac_tmp2,sfaa_tmp这个3张临时表,这个三张的资料其实已经经过当期计算的范围的筛选,所以不需要加上成本结案日期的条件
#181207-00006#1  2018/12/07 By 05423    效能优化
#181211-00016#1  2018/12/11 By 02295    在做发料和退料因分批退料或分批发料导致当发退料数量相等时,金额存在差异,这个SQL中在分组中应加上工单单号做分组,这样处理时以工单单号+料号来做小分组,把差异分配到相应的一笔资料中
#181213-00042#1  2018/12/17 By 02295    将结存调整计算放在成本阶循环计算foreach的外面,做一次全部的计算
#181224-00058#1  2018/12/26 By 02295    返工工单的返工领出如果生产料号和元件料号的成本阶相同时,需要将单价给xcck282
#181214-00009#1  2018/12/26 By 02295    工艺成本计算逻辑增加研发工单的处理,研发工单金额转差异转出
#190103-00040#1  2019/01/07 By 02295    当期初数量+本期入库数量小于发料数量,会将销退算影响成本单价,这时需要更新xcck005='215'
#190110-00065#1  2019/01/11 By 02295    xcha_1_p4中抓取sfcb007上站作业时,应该给sfcb001=0即runcard=0的条件,因为axcp163计算时是只计算runcard=0的资料
#190117-00035#1  2019/01/17 By 02111    調整 171013-00022#1 分攤尾差方式，改為分攤到最大筆。
#190103-00004#1  2019/01/08 By 02295    1.工艺成本群组替代逻辑调整
#                                       2.在算出良品转出/报废/回收转出后做的尾差处理,要考虑期末和差异转出是否为0
#190124-00054#1  2019/03/05 By 02295    如果此料+產品特徵無其他工單入庫，s_axcp500_tmp會沒有此資料，因此會抓不到該工單,調整為當xcck020='1100'時，改用sfaa011串xcck011 (ps.產生DIFF資料時，xcck011是抓sfaa011來給值的)
#190219-00009#1  2019/03/05 By 02295    根据发料资料产生xchb_t时,作业编号+作业序要先根据发料单的对应到工单的项次(情境:遇到客户家料号一样,不同作业编号+作业序)
#190213-00028#1  2019/03/11 By 05423    修正：重工领出第二轮月加权平均单价计算时，应当排除拆件工单
#190305-00034#1  2019/03/11 By 05423    修正：s_axcp500_avg1_wip_3_p2的SQL中加上ORDER BY，防止数据量大导致MERGE内部死锁\
#190115-00064#1  2019/03/14 By 02295    用哪个新单价重算拆件工单的金额时,一并更新xcck282等单价栏位
#190221-00025#1  2019/03/13 By 02295    成本取位2位小數，月平均單價0.050811，材料單價0.024799，人工0.016513，制費一0.009499，領料數量0.17，數量*金額後，領料金額0.01，材料~製費一因四捨五入金額為0，原先的尾差處理不會處理到這個問題，故做調整：當材料~製費五金額為0時，尾差放在單價最高的那個主要素上
#190313-00012#1  2019/03/13 By 02295    xcck_t尾差处理,SUM(xcck201)*单价并取位的金额与SUM(xcck202)的尾差处理
#190221-00003#1  2019/03/15 By 02111    工藝成本增加處理在製金額、數量結餘計算。
#190411-00017#1  2019/04/18 By 05423    效能优化：A.改写表格连接，若为非查询字段，条件变为EXISTS B.改写IN-->EXISTS/UNION C.单位取位写法调整 D.新增S-FIN-9024判断结存调整是否产生 F.BUG修正
#190403-00052#1  2019/04/25 By 02295    上站转入的抓取改抓前一站的良品转出,不用直接抓取axcq163的上站转入
#190329-00023#1  2019/04/29 By 02295    SQL只需要确认xcce007料号是否为A:组合/加工品类型就好,所以改写法存在s_axcp500_tmp中,料号做关联,然后再判断imaa004='A'即可
#190411-00016#1  2019/04/29 By 05423    没有作业编号+作业序或作业编号+作业序没有在制程内，应放在END+0这笔
#190219-00019#1  2019/05/20 By 02295    当工单无报工,有入库,人工制费以标准工时分摊,目前人工制费以参数1.实际输入计算时会算不到数据,所以当出现这种情境时参数为1的抓不到数据则以入库比例算
#190520-00024#1  2019/05/21 By 02295    SQL语法错误
#190506-00043#1  2019/05/27 By 02111    修正本期無異動且尚未結案的拆件工單，沒有產生在製資料。
#190607-00003#1  2019/06/19 By 02111    PREPARE s_axcp500_avg1_wip_4_2_xcce301_p61 FROM g_sql 取位時沒有考慮到是否重工以及成本階，導致已經處理過的數據又重新取位。調整：將條件增加 重工否 及 成本階的判斷。
#190705-00016#1  2019/07/15 By 00272    工單單頭回收料號和單身備料BOM料號相同時,不做回收料的處理
#190513-00024#1  2019/07/17 By 05423    效能优化：暂存档栏位仅保留需要使用到的栏位
#190606-00019#1  2019/08/07 By 02295    下阶料报废与xcce关联时，如果参数设置产品特征不参与计算时，应该给空格
#190612-00014#1  2019/08/07 By 02295    销退样品时,也算入销售费用中
#190702-00024#1  2019/08/07 By 02295    回收料处理时,需加上返工否条件,否则一般工单的计算完,在算返工工单时会把一般工单的资料给重新计算了
#190712-00045#1  2019/08/07 By 02295    小数尾差处理,发退料正负尾差的处理，SQL中不需要rownum=1，不然只会更新到一张工单的问题
#190802-00019#1  2019/08/09 By 00272    s_axcp500_avg1_wip_4_2_p17 SQL在190411-00017#1調整時筆誤xcceent打成xcccent
#190610-00001#1  2019/08/13 By 02111    當站下線金額由系統指定時，金額直接抓取 xcck202 匯總到 xcce206。
#190815-00023#1  2019/08/15 By 02111    當期末數量為 0，期末金額不為 0 時，要判斷到每一個細項金額。
#190805-00002#1  2019/08/05 By 02111    人工製費轉出比率沒有考慮到分子為 0 時要給 1，導致在算人工製費沒有入庫轉出。
#190806-00021#1  2019/09/19 By 02295    xcck_5()中的金额做完币别取位后,进行总金额与各主要素料工费合计的尾差处理时,没有考虑到当站下线xcck055的类型.
#190919-00050#1  2019/09/24 By 02295    增加料工费的差异判断,如果料工费有差异也需做一次尾差的处理
#190802-00007#1  2019/10/01 By 00593    成本參數選擇「當站下線影響成本」
#                                       1.計算一般入的s_axcp500_avg1_set_xccc_1中,當站下線的部份增加判斷當「當站下線的取價方式」=2.人工取值，才做處理
#                                       2.當「當站下線的取價方式」=1.系統取價時，在計算完一般入庫及銷退入庫後、計算重工領之前，增加處理當站下線的處理
#190702-00040#1  2019/10/08 By 05423    修正获取上期xcce时，未考虑到料工费差异转入的问题
#190708-00008#1  2019/10/11 By 02295    当下阶料报废和超领同时存在时,先结算下阶料报废的转出逻辑,再处理超领的转出.
#                                       参数设置如下:  超领转出:2:当期有入库转出(如超领月未入库，则结案月转出)
#                                                   下阶料转出:3:当月转出，金额转至在制差异转出
#191016-00049#1  2019/10/17 By 02702    調整ORACLE語法與 INFORMIX 模擬語法不能同時使用的問題
#190823-00038#1  2019/11/04 By 02295    当当站报废和下阶料报废同时存在时，会导致当站报废的DIFF会重复算一次金额，所以将这2部分统一在后面做处理
#191111-00038#1  2019/11/13 By 02295    处理#190411-00017#1此单效能优化遗留SQL未优化
#191114-00039#1  2019/11/15 By 02295    s_axcp500_avg1_wip_4_2_p1算转出金额时,期初+投入的金额要扣除掉超领退的部分,因为这边是单独放在xcce210的,不能放在这边的转入金额做处理,因为这边数量的投入和转出是不包含超领的
#191202-00037#1  2019/12/04 By 02295    当站下线 设置影响单价且单价来源设置系统设置时才走s_axcp500_avg1_set_xcck_2_3()
#191205-00053#1  2019/12/06 By 02295    所有产生xcck DIFF资料的地方,xcck044单位的给值应用主件料号xccd007去关联抓取imaa006
#191206-00002#1  2019/12/06 By 02295    当备料有取替代时,在算替代料转出数量时,如果主料未有发料,在分配转出数量时,应只分配有发料的项序
#191128-00004#1  2019/12/17 By 02295    s_axcp500_avg1_wip_3()中在INSERT一部分资料时,在更新上期的资料前先将xccz_tmp的数据重新收集,这样在做merge时就会因为数据收集的问题导致效能慢
#191129-00042#1  2019/12/19 By 02295    当站报废参数程式式缺少参数为3的处理逻辑,将原参数为3的段落取消mark
#191205-00016#1  2019/12/19 By 02295    工艺成本良品转出逻辑的检查时,应不包含超领退的数量
#191220-00003#1  2019/12/20 By 02295    DISTINCT的SQL语句中增加报工单单号,这样就会将所有的报工单都能抓取来,后面做SUM就对了
#191126-00020#1  2019/12/30 By 11234    axcp500:DL+OH+SUB的上站转入数量,当投入有数量时,axcp500的投入数量=上站转入,否则=转出的数量的合计
#200206-00008#1  2020/02/06 By 00272    一般的工單也要寫入xccg_t,不是聯產品的也要寫入
#200210-00001#1  2020/02/11 By 02295    走工艺成本计算时,超领转出参数设置2:当期有入库转出(如超领月未入库，则结案月转出),超领部分在非END站时不控管是否当期是否有入库,在END转出时判断是否有入库,有入库时才将超领的部分转入入库转出
#200202-00005#1  2020/02/12 By 02295    当期只是开立工单,无投入,无库存异动时,不需要产生xccd的资料
#200212-00022#1  2020/02/17 By 01996    据点参数 回收料转出方式=1.当期全部转出时,需将本期无入库的金额纳入 xcck_t
#200115-00003#1  2020/02/24 By 02295    程式撰写错误,产品特征字段关联错误
#190730-00046#1  2020/02/25 By 02295    工艺成本,有存在报废,且设置当期有入库转出,但未完全入库,工单做结案,会2次产生DIFF的xcck,报废产生一次,结案产生一次,在结案产生的时候,项次应接着报废的最大项次+1
#190809-00016#1  2020/02/26 By 02295    元件转出数量的小数位取位,如果小位数设置大于3位,则以单位的取位方式做取位,如果小数位小于等于3位,则统一做3位的四舍五入的方式取位.
#200227-00009#1  2020/02/27 By 02295    抓取应付账款汇率时,当资料入库单+项次在单身中存在两笔时,用row_number排序后抓取第一笔
#200228-00004#1  2020/03/02 By 02295    成本单价计算并取位完,会存在尾差的问题,处理将尾差分摊到单价数值最大的主要素上
#200310-00043#1  2020/03/10 By 01996    1.DL+OH+SUB xcce_t期末结存数量抓取的SQL需增加当前计算的是一般工单还是返工工单
#                                       2.DL+OH+SUB xcce_t期末结存数量和差异转出数量的給值应该是抓取所有站的数量,而不是只抓取END站的
#                                       3.库存成本本期领用存在尾差,处理的SQL中排除掉工单单号的维度,因为可能存在不同工单,同一料号的发退料,这样造成的尾差就不能处理了.
#200310-00068#1  2020/03/12 By 02295    增加参数S-FIN-9027:组件转出数量是否要保留至少3位小数
#                                       参数='Y'时系统默认给3位小数的取位,但如果单位小数位设置超过3位,仍以单位小数位取位
#                                       参数='N'时系统默认依单位小数位设置做取位.
#200407-00007#1  2020/04/08 By 02295    s_axcp500_avg1_set_xcck_2_3()当站下线的xcck金额单价更新时,应只更新xcck055='213'当站下线的xcck资料,不要影响其他的xcck的资料
#200407-00021#1  2020/04/08 By 02295    返工工单的计算时机以工单整单成本阶计算
#200408-00002#1  2020/04/09 By 02295    效能优化:xccz抓取上期资料时只抓取期末不为0的,且资料不需要做排序
#200416-00033#1  2020/04/22 By 02295    当期初数量+本期入库数量小于发料数量时,销退的数量则算成当期影响成本,xcck055='215',这个判断的处理,不管销退是否影响成本这个参数影响.只要满足都要处理
#200120-00015#1  2020/04/22 By 02295    效能优化
#200507-00039#1  2020/05/07 By 02295    发料数量为0,金额不为0的尾差处理在抓取分摊到哪一笔xcck的SQL中未排除掉工单单号分组
#191126-00022#1  2020/05/08 By 11515    效能优化
#200506-00046#1  2020/05/15 By 01996    调整处理,xccc214 调整入库金额,没有更新到的问题 mark掉
#200506-00035#1  2020/05/19 By 02295    人工制費转出,整单委外,当期无入库,只有委外仓退单时,加工费需要做转出
#200522-00051#1  2020/05/25 By 02295    抓取报废数量换算备料量时,分组合计时以工单+料号做合计
#200523-00002#1  2020/05/25 By 02295    当当期存在其他入项库存异动时,则给'305'销退,没有判断出入项,导致只要存在库存异动就会算成'305',增加出入项条件
#200604-00021#1  2020/06/05 By 02295    当站下线不影响成本本,且单价取值是系统給值时,返工工单当站下线料号成本阶与工单成本阶一样时,当站下线要在返工工单计算在制成本之前处理
#200605-00043#2  2020/06/10 By 01996    aoos020.S-FIN-6005销退成本来源，参数1.原始出货月，【应用建议】与系统当前逻辑不符，逻辑为：若取不到原始月，则取axct300上期开账，再取不至则取上月
#200604-00071#1  2020/06/15 By 02295    工单结案期末转入库时,判断金额不为0时,需要判断人工,加工,制費都不为0
#200212-00020#1  2020/06/16 By 12787    成本計算在製工單投入時，抓取當站下線(xcck020='115')的資料，到xcce205、xcce206(a~h)當站下線欄位內
#200618-00056#1  2020/07/06 By 01996    续200604-00071#1 工艺成本段落需一并修改
#200706-00060#1  2020/07/09 By 08734    修正S-FIN-6007为3时报废转出逻辑，加上期初数量
#200708-00088#1  2020/07/14 By 00902    调整PostgreSQL数据库时，axcp500执行报错的问题
#200807-00025#1  2020/08/07 By 02295    销退影响成本时需要更新xcck055='215'
#200922-00036#1  2020/09/22 By 02295    MOD函数PGS语法错误修改
#200928-00040#1  2020/09/29 By 02295    调整SQL中除数为0的情况 
#200903-00086#1  2020/10/09 By 02295    SET群组替代计算转出错误,SQL定义游标时临时还没有创建,到时游标建立错误.
#201012-00033#1  2020/10/12 By 01996    调整200506-00035漏掉参数S-FIN-6014 在制人工制费转出规则为‘3’的情况，也需将委外仓退的加工费转出   
#201012-00066#1  2020/10/14 By 12731    PGS 效能改善 ( index , analyze , vacuum , <> 0 )
#201012-00066#1  2020/10/20 By 12731    s_axcp500_avg_wip_xchb_1_p3 ( insert 沒有補齊語法 ) , s_axcp500_avg_coproduct_cs1 ( select 要給別名 )
#                                       s_axcp500_avg_wip_process_p122_22 ( CASE ... END IF , PostgreSQL 使用 CASE ... END , 參數傳入空值到日期型態 )
#201103-00060#1  2020/11/19 By 02295    1.人工制費在axcq203分摊金额为0时,就不需要在axcp500抓取了
#                                       2.当站下线的部分,不管当站下线是否影响成本,都需要在在制成本中体现出来
#201118-00012#1  2020/11/24 By 02295    本期销货收入金额(xccc401)和本期销退金额(xccc402)抓取立账金额SQL调整
#201119-00005#1  2020/11/26 By 10130    修正cast（表达式 AS DECIMAL）语法抓出值错误的问题
#201126-00039#1  2020/11/26 By 02295    当站下线取价来源系统设置时,抓取当站下线作业编号关联sfha_t单头时,将xcck006=sfhadocno条件关联上,不然会到导致数量翻倍
#201210-00021#1  2020/12/11 By 02295    工艺成本DL+OH+SUB当期在制投入数量xcce201給值,判断元件DL+OH+SUB期初是否有数量,如果没有则给主件的期初数量+投入数量,否则给当期投入数量.
#                                       判断CASE WHEN xcce101 = 0 THEN xccd201+xccd001 ELSE xccd201 END
#201216-00043#1  2020/12/16 By 12731    PGS 大數據效能改善 ( lock 等待 , analyze , update 減少 index , vacuum )
#210105-00009#1  2021/01/06 By 02295    工艺成本尾差处理,判断如果转入和转出总的金额相等,说明要全部转出,那把转出的各项金额就给投入的各项金额,这样避免总金额已经转出,细项的料工费存在一正一负的情况
#210105-00048#1  2021/01/14 By 02295    间接材料在发料发其他料时,总应发量是记录0,数量记录在超领发料中,工艺成本算其QPA时单独处理,以项次总应发数量去算QPA
#210115-00025#1  2021/01/19 By 02295    当期初数量+本期入库数量+返工领出数量+返工入库数量<0时,销退的数量则算成当期影响成本,程式逻辑写成小于等于了,改成小于
#210220-00018#1  2021/02/23 By 02295    1.不存在axcq163的工艺产生一笔END站的时候,期初给0
#                                       2.不存在axcq163的工艺全部转出到END站的上站转入时,应包含期初的部分
#                                       3.xcha202本期投入=xchb202本期投入+xchb208一般退料
#                                       4.xcha002和xchb002 成本域不可以关联
#210125-00026#1  2021/02/26 By 02295    联产品分配方式:2:联产品分配比率且在制转出数量不按按联产品分批比率折算时,在制转出数量依实际数量计算,但金额转出按联产品分配计算
#210112-00042#1  2021/03/22 By 02295    工单入库多次入库,每次入库金额因为小数位进位,导致金额在计算倒数几笔时就已经将入库金额分摊完,这样导致最终金额与入库金额在每一个细项上对不上.
#                                       判断是否最后一笔
#                                       1.当前笔xcck是最后一笔
#                                       2.当前笔计算出的金额大于剩下未分的金额
#210303-00044#1  2021/03/03 By 02295    1.主件投入数量+小于转出的判断,应加上差异转出的数量
#                                       2.当站下线的数量写入xccd303差异转出中

#end add-point
#add-point:填寫註解說明(客製用) name="main.memo_customerization"

#end add-point
#(ver:6) ---start---
#add-point:填寫註解說明(行業用) name="global.memo_industry"

#end add-point
#(ver:6) --- end ---
 
IMPORT os
#add-point:增加匯入項目 name="main.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
#add-point:增加匯入變數檔 name="global.inc"
GLOBALS "../../../com/sub/4gl/s_axcp500.inc"
#end add-point
 
{</section>}
 
{<section id="s_axcp500_avg.free_style_variable" type="s" >}
#add-point:free_style模組變數(Module Variable) name="free_style.variable"
 
#end add-point
 
{</section>}
 
{<section id="s_axcp500_avg.global_variable" type="s" >}
#add-point:自定義模組變數(Module Variable) name="global.variable"
DEFINE g_mesg          STRING
DEFINE g_stat_msg      RECORD
                       msg1    LIKE type_t.chr200,
                       msg2    LIKE type_t.chr200,
                       msg3    LIKE type_t.chr200,
                       msg4    LIKE type_t.chr200,
                       msg5    LIKE type_t.chr200,
                       msg6    LIKE type_t.chr200,
                       msg7    LIKE type_t.chr200,
                       msg8    LIKE type_t.chr200,
                       msg9    LIKE type_t.chr200,
                       msg10   LIKE type_t.chr200,
                       msg11   LIKE type_t.chr200,
                       msg12   LIKE type_t.chr200,
                       msg13   LIKE type_t.chr200,
                       msg14   LIKE type_t.chr200,
                       msg15   LIKE type_t.chr200,
                       msg16   LIKE type_t.chr200
                       END RECORD
#end add-point
 
{</section>}
 
{<section id="s_axcp500_avg.other_dialog" type="s" >}

 
{</section>}
 
{<section id="s_axcp500_avg.other_function" readonly="Y" type="s" >}

################################################################################
# Descriptions...: s_axcp500_avg cursor 定义汇总 
# Memo...........:
# Usage..........: CALL s_axcp500_avg_def_cursor()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-7-28 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_def_cursor()
   DEFINE r_success       LIKE type_t.num5
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   #zhangllc mark 未使用 --begin
   ##定义CURSOR--成本计算的主SQL,选取计算的相关信息
   ##99阶时,若完全没有异动,则不进入主FOREACH段落
   ##非99阶,可能会由于WIP的缘故,所以不管INAJ是否有异动,都要进入主FOREACH段落
   #DECLARE s_axcp500_avg_cs1 CURSOR FOR
   # SELECT UNIQUE imaa001,xccc007,xcbb006,imac003,imaa004,imaa011,imae013,xccc002,xccc008,xccc003,imag014,imaa006
   #   FROM s_axcp500_tmp,imag_t
   #  WHERE imagent  = g_enterprise
   #    AND imagsite = g_comp
   #    AND imag001  = imaa001
   #    AND xcbb006 <> 99
   # UNION
   # SELECT UNIQUE imaa001,xccc007,xcbb006,imac003,imaa004,imaa011,imae013,xccc002,xccc008,xccc003,imag014,imaa006
   #   FROM s_axcp500_tmp,imag_t,inaj_tmp
   #  WHERE imagent  = g_enterprise
   #    AND imagsite = g_comp
   #    AND imag001  = imaa001
   #    AND inajent  = g_enterprise
   #    AND inaj005  = imaa001
   #    AND inaj006  = xccc007
   #    AND inaj010  = xccc008
   #    AND xcbb006 = 99    
   #  ORDER BY xcbb006 DESC,imaa011 DESC,imac003,imaa001,xccc007,xccc002,xccc008
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF     
   #zhangllc mark 未使用 --end
      
      
   ############下面的SQL重要,用于串inaj的资料,其中"?"的顺序各SQL要保持一致#################
   ############之所以这样的写法,是为了确保后续只有一个FOREACH就能处理这么多的类型###########
#   CASE g_field_type
#           WHEN '1'  #组织
#                LET g_sql = "SELECT inaj_tmp.* FROM inaa_t,inaj_tmp LEFT OUTER JOIN xcbf_t",
#                            "                                         ON xcbfent = inajent ",
#                            "                                        AND xcbfcomp = '",g_comp,"'",
#                            "                                        AND xcbf002  = inajsite ",
#                            "                                        AND xcbf001  = ? ",
#                            " WHERE inajent = inaaent AND inajent = ",g_enterprise,
#                            "   AND inajsite = inaasite ",
#                            "   AND inaj008  = inaa001 ",
#                            "   AND inaa010  = 'Y'  ",
#                            "   AND inaj005 = ? ",                  #料件
#                            "   AND inaj006 = ? ",                  #产品特征
#                            "   AND (inaj004 = 1 OR inaj004 = -1) "
#           WHEN '2'  #仓库 
#                LET g_sql = "SELECT inaj_tmp.* FROM inaa_t,inaj_tmp LEFT OUTER JOIN xcbf_t",
#                            "                                         ON xcbfent = inajent ",
#                            "                                        AND xcbfcomp = '",g_comp,"'",
#                            "                                        AND xcbf002  = inaj008 ",
#                            "                                        AND xcbf001  = ? ",
#                            " WHERE inajent = inaaent AND inajent = ",g_enterprise,
#                            "   AND inajsite = inaasite ",
#                            "   AND inaj008  = inaa001 ",
#                            "   AND inaa010  = 'Y'  ",
#                            "   AND inaj005 = ? ",                  #料件
#                            "   AND inaj006 = ? ",                  #产品特征
#                            "   AND (inaj004 = 1 OR inaj004 = -1) "
#           WHEN '3'  #库存管理特征 
#                LET g_sql = "SELECT inaj_tmp.* FROM inaj_tmp,inaa_t ",
#                            " WHERE inajent = inaaent AND inajent = ",g_enterprise,
#                            "   AND inajsite = inaasite ",
#                            "   AND inaj008  = inaa001 ",
#                            "   AND inaa010  = 'Y'  ",
#                            "   AND inaj007 = ? ",                  #库存管理特征
#                            "   AND inaj005 = ? ",                  #料件
#                            "   AND inaj006 = ? ",                  #产品特征
#                            "   AND (inaj004 = 1 OR inaj004 = -1) "
#           OTHERWISE
#                LET g_sql = "SELECT inaj_tmp.* FROM inaj_tmp,inaa_t ",
#                            " WHERE inajent = inaaent AND inajent = ",g_enterprise,
#                            "   AND inajsite = inaasite ",
#                            "   AND inaj008  = inaa001 ",
#                            "   AND inaa010  = 'Y'  ",
#                            "   AND ' '     = ? ",                  #无
#                            "   AND inaj005 = ? ",                  #料件
#                            "   AND inaj006 = ? ",                  #产品特征
#                            "   AND (inaj004 = 1 OR inaj004 = -1) "
#   END CASE   
#   LET g_sql = g_sql CLIPPED,"    AND inaj022 BETWEEN '",g_bdate,"' AND '",g_edate,"'"
#   IF g_cost_type = '3' THEN  #批次成本 
#      LET g_sql = g_sql CLIPPED,"   AND inaj010 = ? "
#   ELSE
#      LET g_sql = g_sql CLIPPED,"   AND ' ' = ? "
#   END IF
#   
#   IF g_sys_6013 = 'N' THEN
#      LET g_sql = cl_str_replace_multistr(g_sql,"AND inaj006 = ?","AND ' ' = ? ")
#   END IF
#      
#--   LET g_sql = g_sql CLIPPED,"   AND inaj036 <> '999'"
   
   #zhangllc mark 未使用 --begin
   #LET g_sql = "SELECT /*+ full(inaj_tmp) */ * FROM inaj_tmp ",
   #             " WHERE inaj999 = ? ",                  #成本域
   #             "   AND inaj005 = ? ",                  #料件
   #             "   AND inaj006 = ? ",                  #产品特征
   #             "   AND inaj010 = ? ",                  #批号
   #             "   AND (inaj004 = 1 OR inaj004 = -1) "   
   #PREPARE s_axcp500_avg_cal_p1 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg_cal_inaj_cs1 CURSOR FOR s_axcp500_avg_cal_p1
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_cal_inaj_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF  
   #
   #
   ##在制计算时,选取工单的SQL-- 找一般在制的工单SQL (FOR :s_axcp500_avg_wip)
   #LET g_sql = "SELECT * FROM sfaa_tmp ",
   #            " WHERE sfaaent = ",g_enterprise,
   #            "   AND sfaa010 = ? "
   #
   #PREPARE s_axcp500_avg_cal_p2 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p2"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg_sfaa_cs1 CURSOR FOR s_axcp500_avg_cal_p2
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_sfaa_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF
   # 
   ##SUM(xcck)的资料SET xccc_t
   ##p_flag值说明:
   ##=1 处理类型: 201(采购入库) 203(委外入库) 205(一般工单入库) 211(杂入) 217(其他入库) 3011(当站下线) 3091(杂发补单价) 3131(调拨出)
   ##=2 处理类型: 207(本期重工领出) 215(本期销退入库)
   ##=3 处理类型: 209(重工入库)
   ##=4 处理类型: 3012(其他工单领用) 303(销货) 305(销退) 307(销售费用) 3092(杂发不补单价) 311(盘盈亏) 3132(其他出库-不含调拨)
   #
   ##SUM(xcck)的资料SET xccc_t
   ##p_flag=3 处理类型: 209(重工入库)
   #LET g_sql = "SELECT /*+ full(xcck_tmp) */ SUM(xcck201*xcck009), SUM(xcck202*xcck009), SUM(xcck202a*xcck009),",
   #            "       SUM(xcck202b*xcck009),SUM(xcck202c*xcck009),SUM(xcck202d*xcck009),",
   #            "       SUM(xcck202e*xcck009),SUM(xcck202f*xcck009),SUM(xcck202g*xcck009),",
   #            "       SUM(xcck202h*xcck009) ",   
   #            "  FROM xcck_tmp ",
   #            " WHERE xcckent =  ",g_enterprise,
   #            "   AND xcckld  = '",g_ld,"'",
   #            "   AND xcck001 = ? ",
   #            "   AND xcck002 = ? ",
   #            "   AND xcck003 = ? ",
   #            "   AND xcck004 = ? ",
   #            "   AND xcck005 = ? ",
   #            "   AND xcck010 = ? ",
   #            "   AND xcck011 = ? ",
   #            "   AND xcck017 = ? ",  
   #            "   AND xcck055 = ? "
   #PREPARE s_axcp500_avg_cal_p14 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p14"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF
   #
   ##SUM(xcck)的资料SET xccc_t
   ##p_flag=1 处理类型: 201(采购入库) 203(委外入库) 205(一般工单入库) 211(杂入) 217(其他入库) 
   #LET g_sql = "SELECT /*+ full(xcck_tmp) */ xcck055,SUM(xcck201*xcck009), SUM(xcck202*xcck009), SUM(xcck202a*xcck009),",
   #            "               SUM(xcck202b*xcck009),SUM(xcck202c*xcck009),SUM(xcck202d*xcck009),",
   #            "               SUM(xcck202e*xcck009),SUM(xcck202f*xcck009),SUM(xcck202g*xcck009),",
   #            "               SUM(xcck202h*xcck009) ",
   #            "  FROM xcck_tmp ",
   #            " WHERE xcckent =  ",g_enterprise,
   #            "   AND xcckld  = '",g_ld,"'",
   #            "   AND xcck001 = ? ",
   #            "   AND xcck002 = ? ",
   #            "   AND xcck003 = ? ",
   #            "   AND xcck004 = ? ",
   #            "   AND xcck005 = ? ",
   #            "   AND xcck010 = ? ",
   #            "   AND xcck011 = ? ",
   #            "   AND xcck017 = ? ",  
   #            #"   AND xcck055 IN ('201','203','205','211','217')",  
   #            "   AND xcck055 IN ('2011','2012','203','205','211','217')",  #mod zhangllc 151203           
   #            " GROUP BY xcck055  "
   #PREPARE s_axcp500_avg_cal_p21 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p21"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF  
   #DECLARE s_axcp500_avg_get_xccc_from_xcck_cs1 CURSOR FOR s_axcp500_avg_cal_p21
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_get_xccc_from_xcck_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF
   #
   ##SUM(xcck)的资料SET xccc_t
   ##p_flag=2 处理类型: 207(本期重工领出) 215(本期销退入库)
   #LET g_sql = "SELECT /*+ full(xcck_tmp) */ xcck055,SUM(xcck201*xcck009), SUM(xcck202*xcck009), SUM(xcck202a*xcck009),",
   #            "               SUM(xcck202b*xcck009),SUM(xcck202c*xcck009),SUM(xcck202d*xcck009),",
   #            "               SUM(xcck202e*xcck009),SUM(xcck202f*xcck009),SUM(xcck202g*xcck009),",
   #            "               SUM(xcck202h*xcck009) ",
   #            "  FROM xcck_tmp ",
   #            " WHERE xcckent =  ",g_enterprise,
   #            "   AND xcckld  = '",g_ld,"'",
   #            "   AND xcck001 = ? ",
   #            "   AND xcck002 = ? ",
   #            "   AND xcck003 = ? ",
   #            "   AND xcck004 = ? ",
   #            "   AND xcck005 = ? ",
   #            "   AND xcck010 = ? ",
   #            "   AND xcck011 = ? ",
   #            "   AND xcck017 = ? ",  
   #            "   AND xcck055 IN ('207','215')",               
   #            " GROUP BY xcck055  "
   #PREPARE s_axcp500_avg_cal_p24 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p24"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF  
   #DECLARE s_axcp500_avg_get_xccc_from_xcck_cs2 CURSOR FOR s_axcp500_avg_cal_p24
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_get_xccc_from_xcck_cs2"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   ##SUM(xcck)的资料SET xccc_t 
   ##p_flag=4 处理类型: 303(销货) 305(销退) 307(销售费用) 311(盘盈亏)
   #LET g_sql = "SELECT /*+ full(xcck_tmp) */ xcck055,SUM(xcck201*xcck009), SUM(xcck202*xcck009), SUM(xcck202a*xcck009),",
   #            "               SUM(xcck202b*xcck009),SUM(xcck202c*xcck009),SUM(xcck202d*xcck009),",
   #            "               SUM(xcck202e*xcck009),SUM(xcck202f*xcck009),SUM(xcck202g*xcck009),",
   #            "               SUM(xcck202h*xcck009) ",
   #            "  FROM xcck_tmp ",
   #            " WHERE xcckent =  ",g_enterprise,
   #            "   AND xcckld  = '",g_ld,"'",
   #            "   AND xcck001 = ? ",
   #            "   AND xcck002 = ? ",
   #            "   AND xcck003 = ? ",
   #            "   AND xcck004 = ? ",
   #            "   AND xcck005 = ? ",
   #            "   AND xcck010 = ? ",
   #            "   AND xcck011 = ? ",
   #            "   AND xcck017 = ? ",  
   #            "   AND xcck055 IN ('303','305','307','311')",               
   #            " GROUP BY xcck055  "
   #PREPARE s_axcp500_avg_cal_p33 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p33"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF  
   #DECLARE s_axcp500_avg_get_xccc_from_xcck_cs3 CURSOR FOR s_axcp500_avg_cal_p33
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_get_xccc_from_xcck_cs3"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF 
   #
   ##SUM(xcck)的资料SET xccc_t 
   ###p_flag=4 处理类型: 3091.杂发补单价 3092.杂发不补单价
   #LET g_sql = "SELECT /*+ full(xcck_tmp) */ SUM(xcck201*xcck009), SUM(xcck202*xcck009), SUM(xcck202a*xcck009),SUM(xcck202b*xcck009),SUM(xcck202c*xcck009),",
   #            "       SUM(xcck202d*xcck009),SUM(xcck202e*xcck009),SUM(xcck202f*xcck009),SUM(xcck202g*xcck009),SUM(xcck202h*xcck009) ",
   #            "  FROM xcck_tmp ",
   #            " WHERE xcckent =  ",g_enterprise,
   #            "   AND xcckld  = '",g_ld,"'",
   #            "   AND xcck001 = ? ",
   #            "   AND xcck002 = ? ",
   #            "   AND xcck003 = ? ",
   #            "   AND xcck004 = ? ",
   #            "   AND xcck005 = ? ",
   #            "   AND xcck010 = ? ",
   #            "   AND xcck011 = ? ",
   #            "   AND xcck017 = ? ",  
   #            "   AND xcck055 IN ( '3091','3092' ) "
   #PREPARE s_axcp500_avg_cal_p22 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p22"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   ##SUM(xcck)的资料SET xccc_t
   ##p_flag=4 处理类型: 3131.调拨出库 3132.其他出库
   #LET g_sql = "SELECT /*+ full(xcck_tmp) */ SUM(xcck201*xcck009), SUM(xcck202*xcck009), SUM(xcck202a*xcck009),SUM(xcck202b*xcck009),SUM(xcck202c*xcck009),",
   #            "       SUM(xcck202d*xcck009),SUM(xcck202e*xcck009),SUM(xcck202f*xcck009),SUM(xcck202g*xcck009),SUM(xcck202h*xcck009) ",
   #            "  FROM xcck_tmp ",
   #            " WHERE xcckent =  ",g_enterprise,
   #            "   AND xcckld  = '",g_ld,"'",
   #            "   AND xcck001 = ? ",
   #            "   AND xcck002 = ? ",
   #            "   AND xcck003 = ? ",
   #            "   AND xcck004 = ? ",
   #            "   AND xcck005 = ? ",
   #            "   AND xcck010 = ? ",
   #            "   AND xcck011 = ? ",
   #            "   AND xcck017 = ? ",  
   #            "   AND xcck055 IN ( '3131','3132' ) "
   #PREPARE s_axcp500_avg_cal_p61 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p61"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF     
   #
   ##SUM(xcck)的资料SET xccc_t
   ##p_flag=4 处理类型: 3011.当站下线 3012.其他工单领用
   #LET g_sql = "SELECT /*+ full(xcck_tmp) */ SUM(xcck201*xcck009), SUM(xcck202*xcck009), SUM(xcck202a*xcck009),SUM(xcck202b*xcck009),SUM(xcck202c*xcck009),",
   #            "       SUM(xcck202d*xcck009),SUM(xcck202e*xcck009),SUM(xcck202f*xcck009),SUM(xcck202g*xcck009),SUM(xcck202h*xcck009) ",
   #            "  FROM xcck_tmp ",
   #            " WHERE xcckent =  ",g_enterprise,
   #            "   AND xcckld  = '",g_ld,"'",
   #            "   AND xcck001 = ? ",
   #            "   AND xcck002 = ? ",
   #            "   AND xcck003 = ? ",
   #            "   AND xcck004 = ? ",
   #            "   AND xcck005 = ? ",
   #            "   AND xcck010 = ? ",
   #            "   AND xcck011 = ? ",
   #            "   AND xcck017 = ? ",  
   #            "   AND xcck055 IN ( '3011','3012' ) "
   #PREPARE s_axcp500_avg_cal_p62 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p62"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF      
   #zhangllc mark 未使用 --end


   #联产品处理 - 取工单入库的xcck资料
   #取xcck中 inaj036 = 110.生产入库/111.联产品入库/112.多主件产出入库/113.折件入库(拆件不算)
   #小英:应该要去掉110.生产入库(这个类型在第一轮台应该有算过了)
   #成本阶=g_rec_t.xcbb006 & 料件编号不是主料
#   LET g_sql = " SELECT xcck_tmp.* FROM xcck_tmp,xcbb_t,sfaa_tmp",
#               "  WHERE xcckent =  ",g_enterprise,
#               "    AND xcckld  = '",g_ld,"'",
#               "    AND xcck001 = ?",
#               "    AND xcck003 = '",g_xcat001,"'",
#               "    AND xcck004 =  ",g_yy,
#               "    AND xcck005 =  ",g_pp,
##              "    AND xcck020 IN ('110','111','112') ",
#               "    AND xcck020 IN ('110','111','112','103','104','105') ",            #一般联产品/委外联产品
##               "    AND xcck020 IN ('111','112','104','105') ",            #一般联产品/委外联产品
#               "    AND xcbbent  = xcckent ",
#               "    AND xcbbcomp = '",g_comp,"'",
#               "    AND xcbb001  = xcck004 ",
#               "    AND xcbb002  = xcck005 ",
#               "    AND xcbb003  = xcck010 ",
#               "    AND xcbb004  = xcck011 ",
#               "    AND xcbb006  = ? ",
#               "    AND sfaaent = xcckent ",
#               "    AND sfaadocno = xcck047",
#               "    AND sfaa042 = ? "
   #190411-00017#1 A mark-S
#   LET g_sql = " SELECT UNIQUE a.* FROM xcck_tmp a,s_axcp500_tmp,sfaa_tmp",
#               "  WHERE a.xcckent =  ",g_enterprise,
#               "    AND a.xcckld  = '",g_ld,"'",
#               "    AND a.xcck001 = ?",
#               "    AND a.xcck003 = '",g_xcat001,"'",
#               "    AND a.xcck004 =  ",g_yy,
#               "    AND a.xcck005 =  ",g_pp,
#              #"    AND a.xcck020 IN ('110','111','112','103','104','105') ",            #一般联产品/委外联产品 #170511-00068#1 mark
#               "    AND a.xcck020 IN ('110','111','112','103','104','105','1100') ",     #一般联产品/委外联产品 #170511-00068#1 add 1100
#               "    AND imaa001 = a.xcck010 ",
#               #"    AND xccc007 = a.xcck011 ",  #cancel mark zhangllc 150730  #190124-00054#1 mark
#               "    AND (xccc007 = a.xcck011 OR (a.xcck020='1100' AND a.xcck011=sfaa011)) ",   #190124-00054#1 
#               "    AND xcbb006  = ? ",
#               "    AND sfaaent  = a.xcckent ",
#               "    AND sfaadocno = a.xcck047",
#               "    AND sfaa042 = ? ",
#               "    AND EXISTS( SELECT 1 FROM xcck_tmp b WHERE a.xcckent = b.xcckent ",
#               "                                           AND a.xcckld  = b.xcckld ",
#               "                                           AND a.xcck001 = b.xcck001 ",
#               "                                           AND a.xcck003 = b.xcck003 ",
#               "                                           AND a.xcck004 = b.xcck004 ",
#               "                                           AND a.xcck005 = b.xcck005 ",
#               "                                           AND a.xcck047 = b.xcck047 ",
#              #"                                           AND b.xcck020 IN ('111','112','104','105') ) ",
#              #"                                           AND b.xcck020 IN ('110','111','112','103','104','105') ) ",         #mod zhangllc 160630 #170511-00068#1 mark
#               "                                           AND b.xcck020 IN ('110','111','112','103','104','105','1100') ) ",  #mod zhangllc 160630 #170511-00068#1 add 1100
#               "  ORDER BY xcck010,xcck011,xcck017 "
   #190411-00017#1 A mark-E  
   #190411-00017#1 A add-S   #SQL改写，仅过滤来源表
  #LET g_sql = " SELECT UNIQUE a.* FROM xcck_tmp a",                #200206-00008#1 mark
   LET g_sql = " SELECT * FROM ( SELECT UNIQUE a.* FROM xcck_tmp a", #200206-00008#1 add
               "  WHERE a.xcckent =  ",g_enterprise,
               "    AND a.xcckld  = '",g_ld,"'",
               "    AND a.xcck001 = ?",
               "    AND a.xcck003 = '",g_xcat001,"'",
               "    AND a.xcck004 =  ",g_yy,
               "    AND a.xcck005 =  ",g_pp,
               "    AND a.xcck020 IN ('110','111','112','103','104','105') ", 
              #"    AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xcck010 AND xcck007 = a.xcck011 AND xcbb006  = ? ) ",  #200206-00008#1 mark
               #"    AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xcck010 AND CAST(xcck007 as varchar) = CAST(a.xcck011 as varchar) AND xcbb006  = ? ) ",   #PGS-(D)-03080   #200206-00008#1 mark
               #200810-00030#6 add -S-
               "    AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xcck010 AND xccc007 = a.xcck011  AND xcbb006  = ? ) ", #200206-00008#1 add xcck007改成xccc007
               #200810-00030#6 add -E-
               "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent  = a.xcckent AND sfaadocno = a.xcck047 AND sfaa042 = ?) ", 
               "    AND EXISTS( SELECT 1 FROM xcck_tmp b WHERE a.xcckent = b.xcckent ",
               "                                           AND a.xcckld  = b.xcckld ",
               "                                           AND a.xcck001 = b.xcck001 ",
               "                                           AND a.xcck003 = b.xcck003 ",
               "                                           AND a.xcck004 = b.xcck004 ",
               "                                           AND a.xcck005 = b.xcck005 ",
               "                                           AND a.xcck047 = b.xcck047 ",
               "                                           AND b.xcck020 IN ('110','111','112','103','104','105') ) ", 
               "  UNION ",
               " SELECT UNIQUE a.* FROM xcck_tmp a ",
               "  WHERE a.xcckent =  ",g_enterprise,
               "    AND a.xcckld  = '",g_ld,"'",
               "    AND a.xcck001 = ?",
               "    AND a.xcck003 = '",g_xcat001,"'",
               "    AND a.xcck004 =  ",g_yy,
               "    AND a.xcck005 =  ",g_pp,
               "    AND a.xcck020 = '1100' ", 
               "    AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xcck010 AND xcbb006  = ? ) ",
               "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent  = a.xcckent AND sfaadocno = a.xcck047 AND a.xcck011 = sfaa011 AND sfaa042 = ?) ", 
               "    AND EXISTS( SELECT 1 FROM xcck_tmp b WHERE a.xcckent = b.xcckent ",
               "                                           AND a.xcckld  = b.xcckld ",
               "                                           AND a.xcck001 = b.xcck001 ",
               "                                           AND a.xcck003 = b.xcck003 ",
               "                                           AND a.xcck004 = b.xcck004 ",
               "                                           AND a.xcck005 = b.xcck005 ",
               "                                           AND a.xcck047 = b.xcck047 ",
               "                                           AND b.xcck020 = '1100' ) ", 
               " ) ", #200206-00008#1 add
               "  ORDER BY xcck010,xcck011,xcck017 "
               
   #190411-00017#1 A add-E
   PREPARE s_axcp500_avg_cal_p15 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p15"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   
   
   DECLARE s_axcp500_avg_coproduct_cs1 CURSOR FOR s_axcp500_avg_cal_p15
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DECLARE s_axcp500_avg_coproduct_cs1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF 

   #重工处理(排除拆件)
   #在制计算时,选取工单的SQL
   #zhangllc 150730 mod --begin 将特征条件加进去 找成本阶为指定成本阶的工单
   #LET g_sql = "SELECT UNIQUE sfaa_tmp.* FROM sfaa_tmp,s_axcp500_tmp ",
   #            " WHERE sfaaent = ",g_enterprise,
   #            "   AND sfaa010 = imaa001 ",                           #料件
   #            "   AND xcbb006 = ? ",                                 #成本阶
   #            "   AND sfaa003 <> '3'  ",                             #拆件工单
   #            "   AND sfaa042 = 'Y' ",                               #重工否=Y
   #            " ORDER BY sfaa010 "
#   LET g_sql = "SELECT UNIQUE sfaa_tmp.* FROM sfaa_tmp,s_axcp500_tmp,sfac_tmp2 ",   #170118-00002#1 mark
   #190513-00024#1 mark-S
#   #170118-00002#1 add(s)
#   LET g_sql = "SELECT UNIQUE sfaa_tmp.sfaaent,sfaa_tmp.sfaaownid,sfaa_tmp.sfaaowndp,sfaa_tmp.sfaacrtid,sfaa_tmp.sfaacrtdp,sfaa_tmp.sfaacrtdt,",
#               "               sfaa_tmp.sfaamodid,sfaa_tmp.sfaamoddt,sfaa_tmp.sfaacnfid,sfaa_tmp.sfaacnfdt,sfaa_tmp.sfaapstid,sfaa_tmp.sfaapstdt,",
#               "               sfaa_tmp.sfaastus,sfaa_tmp.sfaasite,sfaa_tmp.sfaadocno,sfaa_tmp.sfaadocdt,sfaa_tmp.sfaa001,sfaa_tmp.sfaa002,sfaa_tmp.sfaa003,",
#               "               sfaa_tmp.sfaa004,sfaa_tmp.sfaa005,sfaa_tmp.sfaa006,sfaa_tmp.sfaa007,sfaa_tmp.sfaa008,sfaa_tmp.sfaa009,sfaa_tmp.sfaa010,",
#               "               sfaa_tmp.sfaa011,sfaa_tmp.sfaa012,sfaa_tmp.sfaa013,sfaa_tmp.sfaa014,sfaa_tmp.sfaa015,sfaa_tmp.sfaa016,sfaa_tmp.sfaa017,",
#               "               sfaa_tmp.sfaa018,sfaa_tmp.sfaa019,sfaa_tmp.sfaa020,sfaa_tmp.sfaa021,sfaa_tmp.sfaa022,sfaa_tmp.sfaa023,sfaa_tmp.sfaa024,",
#               "               sfaa_tmp.sfaa025,sfaa_tmp.sfaa026,sfaa_tmp.sfaa027,sfaa_tmp.sfaa028,sfaa_tmp.sfaa029,sfaa_tmp.sfaa030,sfaa_tmp.sfaa031,",
#               "               sfaa_tmp.sfaa032,sfaa_tmp.sfaa033,sfaa_tmp.sfaa034,sfaa_tmp.sfaa035,sfaa_tmp.sfaa036,sfaa_tmp.sfaa037,sfaa_tmp.sfaa038,",
#               "               sfaa_tmp.sfaa039,sfaa_tmp.sfaa040,sfaa_tmp.sfaa041,sfaa_tmp.sfaa042,sfaa_tmp.sfaa043,sfaa_tmp.sfaa044,sfaa_tmp.sfaa045,",
#               "               sfaa_tmp.sfaa046,sfaa_tmp.sfaa047,sfaa_tmp.sfaa048,sfaa_tmp.sfaa049,sfaa_tmp.sfaa050,sfaa_tmp.sfaa051,sfaa_tmp.sfaa052,",
#               "               sfaa_tmp.sfaa053,sfaa_tmp.sfaa054,sfaa_tmp.sfaa055,sfaa_tmp.sfaa056,sfaa_tmp.sfaa057,sfaa_tmp.sfaa058,sfaa_tmp.sfaa059,",
#               "               sfaa_tmp.sfaa060,sfaa_tmp.sfaa061,sfaa_tmp.sfaa062,sfaa_tmp.sfaa063,sfaa_tmp.sfaa064,sfaa_tmp.sfaa065,sfaa_tmp.sfaa066,",
#               "               sfaa_tmp.sfaa067,sfaa_tmp.sfaa068,sfaa_tmp.sfaa069,sfaa_tmp.sfaa070,sfaa_tmp.sfaa071,sfaa_tmp.sfaa072,sfaa_tmp.isgywwrk ",
#               "          FROM sfaa_tmp,s_axcp500_tmp,sfac_tmp2 ", 
#    #170118-00002#1 add(e)    
   #190513-00024#1 mark-E
   #190513-00024#1 add-S
   LET g_sql = " SELECT UNIQUE sfaa_tmp.sfaaent,sfaa_tmp.sfaasite,sfaa_tmp.sfaadocno,sfaa_tmp.sfaadocdt,sfaa_tmp.sfaa003,sfaa_tmp.sfaa010,sfaa_tmp.sfaa011,sfaa_tmp.sfaa012, ",
               "               sfaa_tmp.sfaa013,sfaa_tmp.sfaa028,sfaa_tmp.sfaa042,sfaa_tmp.sfaa048,sfaa_tmp.sfaa057,sfaa_tmp.isgywwrk ",
               #200407-00021#1---mark---s
               #"   FROM sfaa_tmp,s_axcp500_tmp,sfac_tmp2 ",
               ##190513-00024#1 add-E   
               #" WHERE sfaaent = ",g_enterprise,
               #"   AND sfaa010 = imaa001 ",                           #料件
               #"   AND sfaadocno = sfacdocno AND clevel = xcbb006 ",
               #"   AND xcbb006 = ? ",                                 #成本阶
               #"   AND sfaa003 <> '3'  ",                             #拆件工单
               #"   AND sfaa042 = 'Y' ",                               #重工否=Y
               #" ORDER BY sfaa010 "
               ##zhangllc 150730 mod --end
               #200407-00021#1---mark---e
               #200407-00021#1---add---s               
               "  FROM sfaa_tmp",
               " WHERE sfaaent = ",g_enterprise,
               "   AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE sfaa010 = imaa001) ",
               "   AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE clevel = ? AND sfaadocno = sfacdocno) ",
               "   AND sfaa003 <> '3' ",                              #拆件工单   
               "   AND sfaa042 = 'Y'  "           #重工否=Y
               #200407-00021#1---add---e
   PREPARE s_axcp500_avg_cal_p16 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p16"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   
   
   DECLARE s_axcp500_avg_rework_cs1 CURSOR FOR s_axcp500_avg_cal_p16
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DECLARE s_axcp500_avg_rework_cs1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF 

   #zhangllc mark 未使用 --begin
   ##重工处理完毕后,重工入库的成本取得后,要UPDATE xcck_t上各重工入库成本
   ##重工的在制处理完毕后,用最新的入库资料更新xcck资料
   #LET g_sql = " SELECT * FROM xcck_tmp",
   #            "  WHERE xcckent =  ",g_enterprise,
   #            "    AND xcckld  = '",g_ld,"'",
   #            "    AND xcck001 = ?",
   #            "    AND xcck003 = '",g_xcat001,"'",
   #            "    AND xcck004 =  ",g_yy,
   #            "    AND xcck005 =  ",g_pp,
   #            "    AND xcck020 IN ('110','111','112','113') ",
   #            "    AND xcck047 = ? "
   #PREPARE s_axcp500_avg_cal_p17 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p17"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg_rework_set_xcck_cs1 CURSOR FOR s_axcp500_avg_cal_p17
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_rework_set_xcck_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF 
   #
   ##重工的在制处理完毕后,用最新的入库资料更新xcck资料
   #LET g_sql = " SELECT UNIQUE xcck002,xcck010,xcck011,xcck017 FROM xcck_tmp,s_axcp500_tmp,sfaa_tmp",
   #            "  WHERE xcckent =  ",g_enterprise,
   #            "    AND xcckld  = '",g_ld,"'",
   #            "    AND xcck001 = ?",
   #            "    AND xcck003 = '",g_xcat001,"'",
   #            "    AND xcck004 =  ",g_yy,
   #            "    AND xcck005 =  ",g_pp,
   #            "    AND xcck020 IN ('110','111','112','113') ",
   #            "    AND sfaaent   = xcckent ",
   #            "    AND sfaadocno = xcck047 ",
   #            "    AND sfaa010   = imaa001 ",
   #            "    AND xcbb006 = ? ",
   #            "    AND sfaa003 <> '3'  ",                             #拆件工单
   #            "    AND sfaa042 = 'Y' "                                #重工否=Y
   #
   #            
   #PREPARE s_axcp500_avg_cal_p63 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p63"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg_rework_cs2 CURSOR FOR s_axcp500_avg_cal_p63
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_rework_cs2"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF
   #zhangllc mark 未使用 --end  
   
   #拆件处理,取拆件工单
   #拆件工单(最后计算)
   #zhangllc 150730 mod --begin 将特征条件加进去
   #LET g_sql = " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM sfaa_tmp,s_axcp500_tmp,xcck_tmp ",
   #            "  WHERE sfaaent   = xcckent AND sfaaent = ",g_enterprise,
   #            "    AND sfaa003   = '3' ",
   #            "    AND sfaadocno = xcck047",
   #            "    AND xcckld    = '",g_ld,"'",
   #            "    AND xcck003   = ? ",
   #            "    AND xcck004   = ",g_yy,
   #            "    AND xcck005   = ",g_pp,
   #            "    AND sfaa010   = imaa001 ",
   #            "    AND xcbb006   = ? "
   #当前有异动的
   #190411-00017#1 A mark-S
#   LET g_sql = " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM sfaa_tmp,s_axcp500_tmp,xcck_tmp,sfac_tmp2",
#               "  WHERE sfaaent   = xcckent AND sfaaent = ",g_enterprise,             
#               "    AND sfaa003   = '3' ",
#               "    AND sfaadocno = xcck047",
#               "    AND xcckld    = '",g_ld,"'",
#               "    AND xcck003   = ? ",   #成本计算类型
#               "    AND xcck004   = ",g_yy,
#               "    AND xcck005   = ",g_pp,
#               "    AND sfaa010   = imaa001 ",
#              #"    AND sfaadocno = sfacdocno AND clevel = xcbb006 ",  #161030-00001#1 mark
#               "    AND sfaadocno = sfacdocno  ",                      #161030-00001#1 add
#               #"    AND xcbb006   = ? "  #成本阶  #180129-00075#1 mark
#               "    AND clevel   = ? "  #成本阶  #180129-00075#1 add
#   #zhangllc 150730 mod --end
#   #add zhangllc 150810 --begin
#   #当前没有异动，且当期结案的
#   LET g_sql = g_sql CLIPPED," UNION ",
#               " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM sfaa_tmp,s_axcp500_tmp,sfac_tmp2 ",
#               "  WHERE sfaaent = ",g_enterprise,             
#               "    AND sfaa003   = '3' ",
#               "    AND sfaa010   = imaa001 ",
#               "    AND sfaa048 IS NOT NULL ",  #本期结案的
#               "    AND sfaa048 BETWEEN '",g_bdate,"' AND '",g_edate,"'",
#              #"    AND sfaadocno = sfacdocno AND clevel = xcbb006 ",   #161030-00001#1 mark
#               "    AND sfaadocno = sfacdocno  ",                       #161030-00001#1 add
#               #"    AND xcbb006   = ? "  #成本阶 #180129-00075#1 mark
#               "    AND clevel   = ? "  #成本阶  #180129-00075#1 add
#   #add zhangllc 150810 --end
#   #add by frank 20151117
#   #180731-00016#1---add---s 
#   LET g_sql = " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM (",g_sql CLIPPED," UNION ",
#               #" SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM sfaa_tmp,s_axcp500_tmp,sfac_tmp2,xcbb_t ",  #180809-00014#1 mark
#               " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM sfaa_tmp,s_axcp500_tmp,sfac_tmp2,xccb_t ",  #180809-00014#1
#               "  WHERE sfaaent = xccbent AND sfaadocno = xccb006 ",
#               "    AND sfaaent = ",g_enterprise,             
#               "    AND sfaa003   = '3' ",
#               "    AND sfaa010   = imaa001 ",
#               "    AND xccbld = '",g_ld,"'",
#               "    AND xccb004   = ",g_last_yy,
#               "    AND xccb005   = ",g_last_pp,               
#               "    AND sfaadocno = sfacdocno  ",                      
#               "    AND clevel   = ? )"            #成本阶 
#   #180731-00016#1---add---e
   #190411-00017#1 A mark-E
   #190411-00017#1 A add-S #非查询的表格放入条件中，用EXISTS来筛选
   LET g_sql = " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM sfaa_tmp",
               "  WHERE sfaaent = ",g_enterprise,             
               "    AND sfaa003   = '3' ",
               "    AND EXISTS(SELECT 1 FROM xcck_tmp WHERE sfaadocno = xcck047 AND xcckld = '",g_ld,"' ",
               "                                             AND xcck003 = ? AND xcck004 = ",g_yy,"  ",
               "                                             AND xcck005 = ",g_pp,") ",
               "    AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = sfaa010) ",
               "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfaadocno = sfacdocno AND clevel = ? )"
   #当前没有异动，且当期结案的
   LET g_sql = g_sql CLIPPED," UNION ",
               " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM sfaa_tmp",
               "  WHERE sfaaent = ",g_enterprise,             
               "    AND sfaa003   = '3' ",
               "    AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE sfaa010 = imaa001) ",
               "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = sfaadocno AND clevel = ? ) ",
               #"    AND sfaa048 IS NOT NULL ",  #本期结案的 #190506-00043#1 mark
               #"    AND sfaa048 BETWEEN ? AND ? "          #190506-00043#1 mark
               "    AND (sfaa048 >= ? OR sfaa048 IS NULL)"  #190506-00043#1 add
   LET g_sql = " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM (",g_sql CLIPPED," UNION ",
               " SELECT UNIQUE sfaadocno,sfaa048,sfaa010 FROM sfaa_tmp ",
               "  WHERE sfaaent = ",g_enterprise,             
               "    AND sfaa003   = '3' ",
               "    AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE sfaa010 = imaa001) ",
               "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfaadocno = sfacdocno AND clevel = ? ) ",
               "    AND EXISTS(SELECT 1 FROM xccb_t WHERE sfaaent = xccbent AND sfaadocno = xccb006 AND xccbld = '",g_ld,"' ",
               #"                                      AND xccb004 = ",g_last_yy," AND xccb005 = ",g_last_pp,")) "    #PGS-(D)-03080 mark
               "                                      AND xccb004 = ",g_last_yy," AND xccb005 = ",g_last_pp,")) t51 "    #PGS-(D)-03080
   #190411-00017#1 A add-E

   CREATE INDEX xcck_tmp_i02 ON xcck_tmp (xcckld,xcck003,xcck004,xcck005,xcck047) #ODI-ORA#
   IF cl_db_generate_analyze("xcck_tmp") THEN END IF
   
   PREPARE s_axcp500_avg_cal_p18 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p18"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   DECLARE s_axcp500_avg_disassemble_cs1 CURSOR FOR s_axcp500_avg_cal_p18
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DECLARE s_axcp500_avg_disassemble_cs1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF 
   
   #zhangllc mark 未使用 --begin
   ##重复性生产 - 在制计算时,选取工单的SQL-- 找重复性在制的工单SQL (FOR :s_axcp500_avg_repeat_wip)
   #LET g_sql = "SELECT srab_t.* FROM sraa,srab_t,ooef_t ",
   #            " WHERE sraaent  = srabent  AND srabent  = ooefent AND srabent = ",g_enterprise,
   #            "   AND sraasite = srabsite AND srabsite = ooef001 AND ooef017 = '",g_comp,"'",
   #            "   AND sraa000  = srab000 ",                               #版本
   #            "   AND sraa001  = srab001 ",                               #计划号
   #            "   AND sraa002  = srab002 ",                               #年
   #            "   AND sraa003  = srab003 ",                               #月
   #            "   AND srab004  = ? ",                                     #料件
   #            "   AND srab006  = ? ",                                     #产品特征
   #            "   AND srab009 BETWEEN '",g_bdate,"' AND '",g_edate,"'",   #日期
   #            "   AND sraastus = 'Y' "
   #
   #PREPARE s_axcp500_avg_cal_p44 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p44"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg_repeat_wip_cs1 CURSOR FOR s_axcp500_avg_cal_p44
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_repeat_wip_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF
   #zhangllc mark 未使用 --end
   
   

   #重复性生产 - 联产品处理 - 取工单入库的xcck资料
   #取xcck中 inaj020 = 110.生产入库/111.联产品入库/112.多主件产出入库/113.折件入库(拆件不算)
   #                   103.委外入库/104.委外联产品入库/105.委外多产出入库/106.委外拆件入库（拆件不算）
   #小英:应该要去掉110.生产入库(这个类型在第一轮台应该有算过了)
   #成本阶=g_rec_t.xcbb006 & 料件编号不是主料
#   LET g_sql = " SELECT xcck_tmp.* FROM xcck_tmp,xcbb_t ",
#               "  WHERE xcckent =  ",g_enterprise,
#               "    AND xcckld  = '",g_ld,"'",
#               "    AND xcck001 = ?",
#               "    AND xcck003 = '",g_xcat001,"'",
#               "    AND xcck004 =  ",g_yy,
#               "    AND xcck005 =  ",g_pp,
#               "    AND xcck020 IN ('110','111','112','103','104','105') ",            #一般联产品/委外联产品
#               "    AND xcbbent  = xcckent ",
#               "    AND xcbbcomp = '",g_comp,"'",
#               "    AND xcbb001  = xcck004 ",
#               "    AND xcbb002  = xcck005 ",
#               "    AND xcbb003  = xcck010 ",
#               "    AND xcbb004  = xcck011 ",
#               "    AND xcbb006  = ? ",
#               "    AND xcck049 IS NOT NULL "                           #重复性
               
   #zhangllc mark 未使用 --begin
   #LET g_sql = " SELECT xcck_tmp.* FROM xcck_tmp,s_axcp500_tmp ",
   #            "  WHERE xcckent =  ",g_enterprise,
   #            "    AND xcckld  = '",g_ld,"'",
   #            "    AND xcck001 = ?",
   #            "    AND xcck003 = '",g_xcat001,"'",
   #            "    AND xcck004 =  ",g_yy,
   #            "    AND xcck005 =  ",g_pp,
   #            "    AND xcck020 IN ('110','111','112','103','104','105') ",            #一般联产品/委外联产品
   #            "    AND xcck006 = imaa001 ",
   #            "    AND xcck007 = xccc007 ",
   #            "    AND xcbb006  = ? ",
   #            "    AND xcck049 IS NOT NULL "                           #重复性
   #            
   #PREPARE s_axcp500_avg_cal_p19 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p19"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg_repeat_coproduct_cs1 CURSOR FOR s_axcp500_avg_cal_p19
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_repeat_coproduct_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF 
   #zhangllc mark 未使用 --end

   #全部已经入库的金额
#wujie 160523 --begin
#   LET g_sql = " SELECT /*+ full(xcck_tmp) */ SUM(xcck202),SUM(xcck202a),SUM(xcck202b),SUM(xcck202c),",
   LET g_sql = " SELECT SUM(xcck202),SUM(xcck202a),SUM(xcck202b),SUM(xcck202c),",
#wujie 160523 --end
               "        SUM(xcck202d),SUM(xcck202e),SUM(xcck202f),SUM(xcck202g),SUM(xcck202h) ",
               "   FROM xcck_tmp ",
               "  WHERE xcckent = ",g_enterprise,
               "    AND xcckld  = '",g_ld,"'",
               "    AND xcck001 = ?",
               "    AND xcck003 = '",g_xcat001,"'",
               "    AND xcck004 = ",g_yy,
               "    AND xcck005 = ",g_pp,
               "    AND xcck047 = ? ", 
               "    AND xcck055 IN ('203','205','209') "  #委外入库/工单入库/重工入库
      
   PREPARE s_axcp500_avg_cal_p20 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p20"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   

   #联产品时,可能已经计算过,本笔要排除掉
   #LET g_sql = " SELECT /*+ index(xcck_tmp xcck_tmp_01) */ SUM(xcck202),SUM(xcck202a),SUM(xcck202b),SUM(xcck202c), ",  #170110-00028#1
   LET g_sql = " SELECT SUM(xcck202),SUM(xcck202a),SUM(xcck202b),SUM(xcck202c), ",  #170110-00028#1
               "        SUM(xcck202d),SUM(xcck202e),SUM(xcck202f),SUM(xcck202g),SUM(xcck202h) ",
               "  FROM xcck_tmp ",
               " WHERE xcckent = ",g_enterprise,
               "   AND xcckld  = '",g_ld,"'",
               "   AND xcck001 = ?",
               "   AND xcck003 = '",g_xcat001,"'",
               "   AND xcck004 = ",g_yy,
               "   AND xcck005 = ",g_pp,
               "   AND xcck047 = ?",
               "   AND xcck055 IN ('203','205','209')",  #委外入库/工单入库/重工入库
               "   AND xcck006 = ? ", #单号
               "   AND xcck007 = ? ", #项次
               "   AND xcck008 = ? ", #项序
               "   AND xcck009 = ? "  #出入库码
   PREPARE s_axcp500_avg_cal_p23 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p23"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   
   #171005-00021#1--add--s
   #判斷最後一張入庫單(所有的工單都有金額了，再來做處理)
   #191126-00022#1 mark -s
#   LET g_sql = " SELECT COUNT(1) FROM xcck_tmp ",
#               "  WHERE xcckent = ",g_enterprise,
#               "    AND xcckld  = '",g_ld,"'",
#               "    AND xcck001 = ? ",
#               "    AND xcck003 = '",g_xcat001,"'",
#               "    AND xcck004 = ",g_yy,
#               "    AND xcck005 = ",g_pp,
#               "    AND xcck047 = ? ",
#               "    AND xcck055 IN ('203','205','209') ", #委外入库/工单入库/重工入库
#               "    AND xcck202 = 0 ",
#               "    AND xcck201 = ? ",
#               "    AND xcck201 = (SELECT MAX(xcck201) FROM xcck_tmp ",
#               "                    WHERE xcckent = ",g_enterprise,
#               "                      AND xcckld  = '",g_ld,"'",
#               "                      AND xcck001 = ? ",
#               "                      AND xcck003 = '",g_xcat001,"'",
#               "                      AND xcck004 = ",g_yy,
#               "                      AND xcck005 = ",g_pp,
#               "                      AND xcck047 = ? ",
#               "                      AND xcck055 IN ('203','205','209'))"
   #191126-00022#1 mark -e
   #191126-00022#1 add -s
   LET g_sql = " SELECT COUNT(1) FROM xcck_tmp a ",
               "  WHERE a.xcckent = ",g_enterprise,
               "    AND a.xcckld  = '",g_ld,"'",
               "    AND a.xcck001 = ? ",
               "    AND a.xcck003 = '",g_xcat001,"'",
               "    AND a.xcck004 = ",g_yy,
               "    AND a.xcck005 = ",g_pp,
               "    AND a.xcck047 = ? ",
               "    AND a.xcck055 IN ('203','205','209') ", #委外入库/工单入库/重工入库
               "    AND a.xcck202 = 0 ",
               "    AND a.xcck201 = ? ",
               "    AND a.xcck201 = (SELECT MAX(b.xcck201) FROM xcck_tmp b",
               "                    WHERE b.xcckent = a.xcckent",
               "                      AND b.xcckld  = a.xcckld ",
               "                      AND b.xcck001 = a.xcck001",
               "                      AND b.xcck003 = a.xcck003",
               "                      AND b.xcck004 = a.xcck004",
               "                      AND b.xcck005 = a.xcck005",
               "                      AND b.xcck047 = a.xcck047",
               "                      AND b.xcck055 = a.xcck055)"      
   #191126-00022#1 add -e
   PREPARE s_axcp500_avg_cal_p29 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p29"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   #171005-00021#1--add--e
   
   #zhangllc mark 未使用 --begin
   #LET g_sql = " UPDATE xcck_tmp SET xcck202  = xcck201 * ? , ",
   #            "                     xcck202a = xcck201 * ? , ",
   #            "                     xcck202b = xcck201 * ? , ",
   #            "                     xcck202c = xcck201 * ? , ",
   #            "                     xcck202d = xcck201 * ? , ",
   #            "                     xcck202e = xcck201 * ? , ",
   #            "                     xcck202f = xcck201 * ? , ",
   #            "                     xcck202g = xcck201 * ? , ",
   #            "                     xcck202h = xcck201 * ? , ",
   #            "                     xcck282  = ? , ",
   #            "                     xcck282a = ? , ",
   #            "                     xcck282b = ? , ",
   #            "                     xcck282c = ? , ",
   #            "                     xcck282d = ? , ",
   #            "                     xcck282e = ? , ",
   #            "                     xcck282f = ? , ",
   #            "                     xcck282g = ? , ",
   #            "                     xcck282h = ? , ",
   #            "                     xcck902  = xcck201 * ? , ",
   #            "                     xcck902a = xcck201 * ? , ",                   
   #            "                     xcck902b = xcck201 * ? , ",                   
   #            "                     xcck902c = xcck201 * ? , ",                   
   #            "                     xcck902d = xcck201 * ? , ",                   
   #            "                     xcck902e = xcck201 * ? , ",                   
   #            "                     xcck902f = xcck201 * ? , ",                   
   #            "                     xcck902g = xcck201 * ? , ",                   
   #            "                     xcck902h = xcck201 * ? , ",
   #            "                     xcck980  = ? , ",
   #            "                     xcck980a = ? , ",
   #            "                     xcck980b = ? , ",
   #            "                     xcck980c = ? , ",
   #            "                     xcck980d = ? , ",
   #            "                     xcck980e = ? , ",
   #            "                     xcck980f = ? , ",
   #            "                     xcck980g = ? , ",
   #            "                     xcck980h = ?   ",
   #            "  WHERE xcckent = ",g_enterprise,
   #            "    AND xcckld  = '",g_ld,"'",
   #            "    AND xcck001 = ? ",
   #            "    AND xcck002 = ? ",
   #            "    AND xcck003 = ? ",
   #            "    AND xcck004 = ? ",
   #            "    AND xcck005 = ? ",
   #            "    AND xcck010 = ? ",
   #            "    AND xcck011 = ? ",
   #            "    AND xcck017 = ? ",
   #            "    AND xcck055 IN ('207','215')  "  
   #PREPARE s_axcp500_avg_cal_p25 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p25"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF
   #
   #LET g_sql = " UPDATE xcck_tmp SET xcck202  = xcck201 * ? , ",
   #            "                     xcck202a = xcck201 * ? , ",
   #            "                     xcck202b = xcck201 * ? , ",
   #            "                     xcck202c = xcck201 * ? , ",
   #            "                     xcck202d = xcck201 * ? , ",
   #            "                     xcck202e = xcck201 * ? , ",
   #            "                     xcck202f = xcck201 * ? , ",
   #            "                     xcck202g = xcck201 * ? , ",
   #            "                     xcck202h = xcck201 * ? , ",
   #            "                     xcck282  = ? , ",
   #            "                     xcck282a = ? , ",
   #            "                     xcck282b = ? , ",
   #            "                     xcck282c = ? , ",
   #            "                     xcck282d = ? , ",
   #            "                     xcck282e = ? , ",
   #            "                     xcck282f = ? , ",
   #            "                     xcck282g = ? , ",
   #            "                     xcck282h = ? , ",
   #            "                     xcck902  = xcck201 * ? , ",
   #            "                     xcck902a = xcck201 * ? , ",                   
   #            "                     xcck902b = xcck201 * ? , ",                   
   #            "                     xcck902c = xcck201 * ? , ",                   
   #            "                     xcck902d = xcck201 * ? , ",                   
   #            "                     xcck902e = xcck201 * ? , ",                   
   #            "                     xcck902f = xcck201 * ? , ",                   
   #            "                     xcck902g = xcck201 * ? , ",                   
   #            "                     xcck902h = xcck201 * ? , ",
   #            "                     xcck980  = ? , ",
   #            "                     xcck980a = ? , ",
   #            "                     xcck980b = ? , ",
   #            "                     xcck980c = ? , ",
   #            "                     xcck980d = ? , ",
   #            "                     xcck980e = ? , ",
   #            "                     xcck980f = ? , ",
   #            "                     xcck980g = ? , ",
   #            "                     xcck980h = ?   ",
   #            "  WHERE xcckent = ",g_enterprise,
   #            "    AND xcckld  = '",g_ld,"'",
   #            "    AND xcck001 = ? ",
   #            "    AND xcck002 = ? ",
   #            "    AND xcck003 = ? ",
   #            "    AND xcck004 = ? ",
   #            "    AND xcck005 = ? ",
   #            "    AND xcck010 = ? ",
   #            "    AND xcck011 = ? ",
   #            "    AND xcck017 = ? ",
   #            "    AND xcck055 IN ('3012','303','305','307','3092','311','3132') "
   #PREPARE s_axcp500_avg_cal_p26 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p26"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF
   #        
   #LET g_sql = " SELECT * FROM xcck_tmp ",
   #            "  WHERE xcckent = ",g_enterprise,
   #            "    AND xcckld  = '",g_ld,"'",
   #            "    AND xcck001 = ? ",
   #            "    AND xcck002 = ? ",
   #            "    AND xcck003 = ? ",
   #            "    AND xcck004 = ? ",
   #            "    AND xcck005 = ? ",
   #            "    AND xcck010 = ? ",
   #            "    AND xcck011 = ? ",
   #            "    AND xcck017 = ? ",
   #            "    AND xcck055 IN ('207','215')  "  
   #PREPARE s_axcp500_avg_cal_p27 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p27"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg_set_xccc_cs1 CURSOR FOR s_axcp500_avg_cal_p27
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_set_xccc_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF 
   #
   #LET g_sql = " SELECT * FROM xcck_tmp ",
   #            "  WHERE xcckent = ",g_enterprise,
   #            "    AND xcckld  = '",g_ld,"'",
   #            "    AND xcck001 = ? ",
   #            "    AND xcck002 = ? ",
   #            "    AND xcck003 = ? ",
   #            "    AND xcck004 = ? ",
   #            "    AND xcck005 = ? ",
   #            "    AND xcck010 = ? ",
   #            "    AND xcck011 = ? ",
   #            "    AND xcck017 = ? ",
   #            "    AND xcck055 IN ('3012','303','305','307','3092','311','3132') "
   #PREPARE s_axcp500_avg_cal_p28 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_cal_p28"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg_set_xccc_cs2 CURSOR FOR s_axcp500_avg_cal_p28
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg_set_xccc_cs2"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF 
   #zhangllc mark 未使用 --end
   
   LET r_success = TRUE
   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 月加权成本计算入口
# Memo...........:
# Usage..........: CALL s_axcp500_avg()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-10-11 By Carrier
# Modify.........: 
#                  zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg()
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_done          LIKE type_t.chr1
   DEFINE l_msg           STRING
   DEFINE l_msg1          STRING
   DEFINE l_msg2          STRING
#   
#   WHENEVER ERROR CONTINUE
#   LET r_success = FALSE
#   
#   #月加权的CURSOR 定义
#   CALL s_axcp500_avg_def_cursor()
#        RETURNING l_success
#   IF NOT l_success THEN
#      RETURN r_success
#   END IF 
#   
#   INITIALIZE g_rec_t.* TO NULL
#   INITIALIZE g_rec.* TO NULL
#   INITIALIZE g_xccd.* TO NULL
#   INITIALIZE g_xcch.* TO NULL
#   
#   #开始性能统计
#   CALL s_axcp500_avg_stats_begin()  
#   IF g_bgjob <> "Y" THEN   
#      LET g_progress_msg = cl_getmsg('axc-00625',g_dlang)   #读取  料件编号:
#      LET l_msg1         = cl_getmsg('axc-00629',g_dlang)   #成本阶:
#      LET l_msg2         = cl_getmsg('axc-00630',g_dlang)   #的重工/拆件/联产品处理
#   END IF
#   
#   #主运算逻辑
#   FOREACH s_axcp500_avg_cs1 INTO g_rec.*
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "FOREACH s_axcp500_avg_cs1"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
#         CONTINUE FOREACH
#      END IF
#      
#      #成本阶不同时，需要计算 （1）联产品  （2）重工 （3）拆件  （4）成本次要素
#      IF g_rec_t.xcbb006 <> g_rec.xcbb006 AND NOT cl_null(g_rec_t.xcbb006) THEN
#         LET g_rec_o.* = g_rec.*
#         LET g_rec.*   = g_rec_t.*
#            
#         IF g_bgjob <> "Y" THEN      
#            LET l_msg = l_msg1 CLIPPED,g_rec.xcbb006 USING "<<&",l_msg2 CLIPPED
#            CALL cl_progress_no_window_ing(l_msg)
#         END IF
#      
#         #联产品处理
#         CALL s_axcp500_avg_coproduct(g_rec.xcbb006,1,'N','2')
#              RETURNING l_success
#         IF NOT l_success THEN
#            
#         END IF 
#         
#         #重工处理
#         CALL s_axcp500_avg_rework(g_rec.xcbb006,1)
#              RETURNING l_success
#         IF NOT l_success THEN
#             
#         END IF   
#         
#         #拆件处理
#         CALL s_axcp500_avg_disassemble(g_rec.xcbb006,1)
#              RETURNING l_success         
#         IF NOT l_success THEN
#             
#         END IF                   
#         
#         LET g_rec.* = g_rec_o.*
#      END IF
#      
#      IF g_bgjob <> "Y" THEN      
#         LET l_msg = g_progress_msg CLIPPED,g_rec.imaa001
#         CALL cl_progress_no_window_ing(l_msg)
#      END IF
#      
#      #料件有变换,进行在制处理
#      IF cl_null(g_rec_t.imaa001) OR g_rec_t.imaa001 <> g_rec.imaa001 THEN
#         #取成本单位
##         LET g_cost_unit = g_rec.imag014
##         IF cl_null(g_cost_unit) THEN 
#            LET g_cost_unit = g_rec.imaa006
##         END IF
#         
#         IF g_rec.xcbb006 <> '99' THEN
#            #一般在制处理
#            CALL s_axcp500_avg_wip('1')
#                 RETURNING l_success
#            IF NOT l_success THEN
#            
#            END IF
#
#            
##            #重复性生产
##            CALL s_axcp500_avg_repeat_wip('1')
##                 RETURNING l_success
##            IF NOT l_success THEN
##            
##            END IF
##            
#            
#         END IF
#      END IF
#
#      #取计算前的xccc,若不存在,则各字段赋0
#      IF g_curr[1].cal = 'Y' THEN
#         #set xcck_t的资料 -- 入项单价能取得到
#         CALL s_axcp500_avg_cal_inaj('1')
#              RETURNING l_done
#         #本期无异动,则不需要产生xccc资料
#         IF l_done = 'Y' THEN
#            CALL s_axcp500_avg_set_xccc('1','1',g_rec.xccc002,g_rec.imaa001,g_rec.xccc007,g_rec.xccc008)
#                 RETURNING l_success
#            LET g_xccc_1.* = g_xccc.*
#         END IF
#                                     
#      END IF        
#      IF g_curr[2].cal = 'Y' THEN
#
#      END IF        
#      IF g_curr[3].cal = 'Y' THEN
#
#      END IF        
#      
#      LET g_rec_t.* = g_rec.*
#      
#   END FOREACH
#   
#   #联产品处理
#   CALL s_axcp500_avg_coproduct(g_rec.xcbb006,1,'N','2')
#        RETURNING l_success
#   IF NOT l_success THEN
#
#   END IF 
#   
#   #重工处理
#   CALL s_axcp500_avg_rework(g_rec.xcbb006,1)
#        RETURNING l_success
#   IF NOT l_success THEN
#       
#   END IF  
#         
#   #拆件处理
#   CALL s_axcp500_avg_disassemble(g_rec.xcbb006,1)
#        RETURNING l_success         
#   IF NOT l_success THEN
#
#   END IF 
#   
#
#   #将xcck_tmp 写入xcck
#   #mod zhangllc 151214 --begin
#   #INSERT INTO xcck_t SELECT * FROM xcck_tmp
#   INSERT INTO xcck_t(xcckent  ,xccksite ,xcckcomp ,xcckld   ,xcck001  ,xcck002  ,xcck003  ,xcck004  ,xcck005  ,
#                      xcck006  ,xcck007  ,xcck008  ,xcck009  ,xcck010  ,xcck011  ,xcck012  ,xcck013  ,xcck014  ,xcck015  ,
#                      xcck016  ,xcck017  ,xcck020  ,xcck021  ,xcck022  ,xcck023  ,xcck024  ,xcck025  ,xcck026  ,xcck027  ,
#                      xcck028  ,xcck029  ,xcck030  ,xcck031  ,xcck032  ,xcck033  ,xcck034  ,xcck040  ,xcck041  ,xcck042  ,
#                      xcck043  ,xcck044  ,xcck045  ,xcck046  ,xcck047  ,xcck048  ,xcck049  ,xcck050  ,xcck051  ,xcck055  ,
#                      xcck201  ,xcck202  ,xcck202a ,xcck202b ,xcck202c ,xcck202d ,xcck202e ,xcck202f ,xcck202g ,xcck202h ,
#                      xcck282  ,xcck282a ,xcck282b ,xcck282c ,xcck282d ,xcck282e ,xcck282f ,xcck282g ,xcck282h ,
#                      xcck301  ,xcck302  ,xcck302a ,xcck302b ,xcck302c ,xcck302d ,xcck302e ,xcck302f ,xcck302g ,xcck302h ,
#                      xcck901  ,xcck902  ,xcck902a ,xcck902b ,xcck902c ,xcck902d ,xcck902e ,xcck902f ,xcck902g ,xcck902h ,
#                      xcck980  ,xcck980a ,xcck980b ,xcck980c ,xcck980d ,xcck980e ,xcck980f ,xcck980g ,xcck980h ,
#                      xcck903  ,xcck903a ,xcck903b ,xcck903c ,xcck903d ,xcck903e ,xcck903f ,xcck903g ,xcck903h ,
#                      xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,xcckcrtdt,xcckmodid,xcckmoddt,xcckstus ,
#                      xcckud001,xcckud002,xcckud003,xcckud004,xcckud005,xcckud006,xcckud007,xcckud008,xcckud009,xcckud010,
#                      xcckud011,xcckud012,xcckud013,xcckud014,xcckud015,xcckud016,xcckud017,xcckud018,xcckud019,xcckud020,
#                      xcckud021,xcckud022,xcckud023,xcckud024,xcckud025,xcckud026,xcckud027,xcckud028,xcckud029,xcckud030 )
#     SELECT xcckent  ,xccksite ,xcckcomp ,xcckld   ,xcck001  ,xcck002  ,xcck003  ,xcck004  ,xcck005  ,
#            xcck006  ,xcck007  ,xcck008  ,xcck009  ,xcck010  ,xcck011  ,xcck012  ,xcck013  ,xcck014  ,xcck015  ,
#            xcck016  ,xcck017  ,xcck020  ,xcck021  ,xcck022  ,xcck023  ,xcck024  ,xcck025  ,xcck026  ,xcck027  ,
#            xcck028  ,xcck029  ,xcck030  ,xcck031  ,xcck032  ,xcck033  ,xcck034  ,xcck040  ,xcck041  ,xcck042  ,
#            xcck043  ,xcck044  ,xcck045  ,xcck046  ,xcck047  ,xcck048  ,xcck049  ,xcck050  ,xcck051  ,xcck055  ,
#            xcck201  ,xcck202  ,xcck202a ,xcck202b ,xcck202c ,xcck202d ,xcck202e ,xcck202f ,xcck202g ,xcck202h ,
#            xcck282  ,xcck282a ,xcck282b ,xcck282c ,xcck282d ,xcck282e ,xcck282f ,xcck282g ,xcck282h ,
#            xcck301  ,xcck302  ,xcck302a ,xcck302b ,xcck302c ,xcck302d ,xcck302e ,xcck302f ,xcck302g ,xcck302h ,
#            xcck901  ,xcck902  ,xcck902a ,xcck902b ,xcck902c ,xcck902d ,xcck902e ,xcck902f ,xcck902g ,xcck902h ,
#            xcck980  ,xcck980a ,xcck980b ,xcck980c ,xcck980d ,xcck980e ,xcck980f ,xcck980g ,xcck980h ,
#            xcck903  ,xcck903a ,xcck903b ,xcck903c ,xcck903d ,xcck903e ,xcck903f ,xcck903g ,xcck903h ,
#            xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,xcckcrtdt,xcckmodid,xcckmoddt,xcckstus ,
#            xcckud001,xcckud002,xcckud003,xcckud004,xcckud005,xcckud006,xcckud007,xcckud008,xcckud009,xcckud010,
#            xcckud011,xcckud012,xcckud013,xcckud014,xcckud015,xcckud016,xcckud017,xcckud018,xcckud019,xcckud020,
#            xcckud021,xcckud022,xcckud023,xcckud024,xcckud025,xcckud026,xcckud027,xcckud028,xcckud029,xcckud030
#       FROM xcck_tmp
#   #mod zhangllc 151214 --end
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = SQLCA.sqlcode
#      LET g_errparam.extend = 'ins xcck_tmp'
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','','',
#                               SQLCA.sqlcode,'','ins xcck')      
#      RETURN r_success   
#   END IF
#   
#   #将xccc_tmp 写入xccc
#   INSERT INTO xccc_t SELECT * FROM xccc_tmp
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = SQLCA.sqlcode
#      LET g_errparam.extend = 'ins xccc_t'
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','','',
#                               SQLCA.sqlcode,'','ins xccc')      
#      RETURN r_success   
#   END IF   
#   
#   #将xccd_tmp 写入xccd
#   INSERT INTO xccd_t SELECT * FROM xccd_tmp
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = SQLCA.sqlcode
#      LET g_errparam.extend = 'ins xccd_t'
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','','',
#                               SQLCA.sqlcode,'','ins xccd')      
#      RETURN r_success   
#   END IF   
#   
#   #将xcce_tmp 写入xcce
#   INSERT INTO xcce_t SELECT * FROM xcce_tmp
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = SQLCA.sqlcode
#      LET g_errparam.extend = 'ins xcce_t'
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','','',
#                               SQLCA.sqlcode,'','ins xcce')      
#      RETURN r_success   
#   END IF   
#   
#   #将xccz_tmp 写入xccz
#   INSERT INTO xccz_t SELECT * FROM xccz_tmp
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = SQLCA.sqlcode
#      LET g_errparam.extend = 'ins xccz_t'
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','','',
#                               SQLCA.sqlcode,'','ins xccz')      
#      RETURN r_success   
#   END IF   
#   
#   #将xccg_tmp 写入xccg
#   INSERT INTO xccg_t SELECT * FROM xccg_tmp
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = SQLCA.sqlcode
#      LET g_errparam.extend = 'ins xccg_t'
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','','',
#                               SQLCA.sqlcode,'','ins xccg')      
#      RETURN r_success   
#   END IF   
#      

#   DROP TABLE xcck_tmp; #ODI-ORA#

#   DROP TABLE sfaa_tmp; #ODI-ORA#

#   DROP TABLE inaj_tmp; #ODI-ORA#

#   DROP TABLE sfba_tmp; #ODI-ORA#

#   DROP TABLE xccc_tmp; #ODI-ORA#

#   DROP TABLE xccd_tmp; #ODI-ORA#

#   DROP TABLE xcce_tmp; #ODI-ORA#

#   DROP TABLE xccz_tmp; #ODI-ORA#

#   DROP TABLE xccg_tmp; #ODI-ORA#
#   
#   CALL s_axcp500_avg_stats_output()
#
#   LET r_success = TRUE
#   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 月加权-从库存异动档收集成本资料
# Memo...........:
# Usage..........: CALL s_axcp500_avg_cal_inaj(p_seq)
#                       RETURNING r_done
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_done         本期有异动否
# Date & Author..: 2014-07-24 By Carrier
# Modify.........:
#                  zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_cal_inaj(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_done          LIKE type_t.chr1
#   DEFINE l_inaj          RECORD LIKE inaj_t.*   #161124-00048#20 mark
#161124-00048#20 add(s)
   DEFINE l_inaj RECORD  #庫存交易明細檔
       inajent LIKE inaj_t.inajent, #企业编号
       inajsite LIKE inaj_t.inajsite, #营运据点
       inaj001 LIKE inaj_t.inaj001, #单据编号
       inaj002 LIKE inaj_t.inaj002, #项次
       inaj003 LIKE inaj_t.inaj003, #项序
       inaj004 LIKE inaj_t.inaj004, #出入库码
       inaj005 LIKE inaj_t.inaj005, #料件编号
       inaj006 LIKE inaj_t.inaj006, #产品特征
       inaj007 LIKE inaj_t.inaj007, #库存管理特征
       inaj008 LIKE inaj_t.inaj008, #库位编号
       inaj009 LIKE inaj_t.inaj009, #储位编号
       inaj010 LIKE inaj_t.inaj010, #批号
       inaj011 LIKE inaj_t.inaj011, #交易数量
       inaj012 LIKE inaj_t.inaj012, #交易单位
       inaj013 LIKE inaj_t.inaj013, #交易单位与库存单位换算率
       inaj014 LIKE inaj_t.inaj014, #交易单位与料件基本单位换算率
       inaj015 LIKE inaj_t.inaj015, #异动单据性质
       inaj016 LIKE inaj_t.inaj016, #理由码
       inaj017 LIKE inaj_t.inaj017, #异动部门编号
       inaj018 LIKE inaj_t.inaj018, #异动供应商/客户编号
       inaj019 LIKE inaj_t.inaj019, #备注
       inaj020 LIKE inaj_t.inaj020, #工单单号
       inaj021 LIKE inaj_t.inaj021, #多角序号
       inaj022 LIKE inaj_t.inaj022, #单据扣账日期
       inaj023 LIKE inaj_t.inaj023, #实际运行扣账日期
       inaj024 LIKE inaj_t.inaj024, #数据生成时间
       inaj025 LIKE inaj_t.inaj025, #异动数据生成者
       inaj026 LIKE inaj_t.inaj026, #参考单位
       inaj027 LIKE inaj_t.inaj027, #参考数量
       inaj028 LIKE inaj_t.inaj028, #成本料号
       inaj036 LIKE inaj_t.inaj036, #库存异动类型
       inaj029 LIKE inaj_t.inaj029, #交易单位与成本单位换算率
       inaj030 LIKE inaj_t.inaj030, #VMI交易结算否
       inaj031 LIKE inaj_t.inaj031, #VMI对应入库/仓退单号
       inaj032 LIKE inaj_t.inaj032, #VMI对应入库/仓退项次
       inaj033 LIKE inaj_t.inaj033, #VMI对应杂发/杂收单号
       inaj034 LIKE inaj_t.inaj034, #VMI对应杂发/杂收项次
       inaj035 LIKE inaj_t.inaj035, #异动作业编号
       inaj037 LIKE inaj_t.inaj037, #成本中心
       inaj038 LIKE inaj_t.inaj038, #项目编号
       inaj039 LIKE inaj_t.inaj039, #WBS编号
       inaj040 LIKE inaj_t.inaj040, #重复性生产-计划编号
       inaj041 LIKE inaj_t.inaj041, #重复性生产-生产料号
       inaj042 LIKE inaj_t.inaj042, #重复性生产-生产料号BOM特性
       inaj043 LIKE inaj_t.inaj043, #重复性生产-生产料号产品特征
       inaj044 LIKE inaj_t.inaj044, #来源单号
       inaj200 LIKE inaj_t.inaj200, #内部结算否
       inaj201 LIKE inaj_t.inaj201, #业务类型
       inaj202 LIKE inaj_t.inaj202, #内部交易类型
       inaj203 LIKE inaj_t.inaj203, #币种
       inaj204 LIKE inaj_t.inaj204, #税种
       inaj205 LIKE inaj_t.inaj205, #内部结算税前金额
       inaj206 LIKE inaj_t.inaj206, #内部结算含税金额
       inaj207 LIKE inaj_t.inaj207, #交易所属法人
       inaj208 LIKE inaj_t.inaj208, #内部交易对象组织
       inaj209 LIKE inaj_t.inaj209, #内部交易对象法人
       inaj045 LIKE inaj_t.inaj045, #异动时库存单位
       inaj046 LIKE inaj_t.inaj046, #交易单位与库存单位换算分子
       inaj047 LIKE inaj_t.inaj047, #交易单位与库存单位换算分母
       inaj048 LIKE inaj_t.inaj048, #交易单位与料件基本单位换算分子
       inaj049 LIKE inaj_t.inaj049, #交易单位与料件基本单位换算分母
       inaj050 LIKE inaj_t.inaj050, #交易单位与成本单位换算分子
       inaj051 LIKE inaj_t.inaj051, #交易单位与成本单位换算分母
       inaj210 LIKE inaj_t.inaj210, #单据单价
       inaj211 LIKE inaj_t.inaj211  #品类
END RECORD
#161124-00048#20 add(e)
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_sfaa042       LIKE sfaa_t.sfaa042
   DEFINE l_xcbf001       LIKE xcbf_t.xcbf001
   DEFINE l_xccc002       LIKE xccc_t.xccc002
#   
#   WHENEVER ERROR CONTINUE
#   LET r_done = 'N'
#   LET g_stat_cnt = 0
#   LET g_stat_begin = TIME
#   
#   FOREACH s_axcp500_avg_cal_inaj_cs1 USING g_rec.xccc002,g_rec.imaa001,g_rec.xccc007,g_rec.xccc008
#                                       INTO l_inaj.*
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "FOREACH s_axcp500_avg_cal_inaj_cs1"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
#         CALL s_axcp500_ins_error('',g_rec.xccc002,g_yy,g_pp,'','','','',g_rec.imaa001,g_rec.xccc007,
#                                  g_rec.xccc008,'',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_cal_inaj_cs1')
#         CONTINUE FOREACH
#      END IF   
#      
#      #mod zhangllc 150825
#      ##若不启用成本域时,内部调拨不进行成本计算
#      #IF g_sys_6001 = 'N' AND l_inaj.inaj036 = '401' THEN
#      #   CONTINUE FOREACH
#      #END IF
#      #若不启用成本域且系统参数[S-FIN-6018]:調撥是否納入計算
#      IF g_sys_6001 = 'N' AND g_sys_6018 = 'N' AND l_inaj.inaj036 = '401' THEN 
#         CONTINUE FOREACH
#      END IF
#      #add zhangllc 150825 end
#      
##      #这句有效能问题,最好的建议是inaj上多加一个成本域栏位,这样不需要这些判断
##      LET l_xcbf001 =  ' '
##      CASE g_field_type   #启用成本域
##           WHEN '1'  #组织
##                SELECT xcbf001 INTO l_xcbf001 FROM xcbf_t
##                 WHERE xcbfent  = g_enterprise
##                   AND xcbfcomp = g_comp
##                   AND xcbf002  = l_inaj.inajsite
##                IF cl_null(l_xcbf001) THEN LET l_xcbf001 = ' ' END IF
##                IF l_xcbf001 <> g_rec.xccc002 THEN
##                   CONTINUE FOREACH
##                END IF
##           WHEN '2'  #仓库 
##                SELECT xcbf001 INTO l_xcbf001 FROM xcbf_t
##                 WHERE xcbfent  = g_enterprise
##                   AND xcbfcomp = g_comp
##                   AND xcbf002  = l_inaj.inaj008          
##                IF cl_null(l_xcbf001) THEN LET l_xcbf001 = ' ' END IF
##                IF l_xcbf001 <> g_rec.xccc002 THEN
##                   CONTINUE FOREACH
##                END IF
##      END CASE
#
#
#
#      CALL s_axcp500_avg_set_xcck(p_seq,l_inaj.*)
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH
#      END IF
#      
#      LET r_done = 'Y'
#      LET g_stat_cnt = g_stat_cnt + 1   
#   END FOREACH
#
#   LET g_stat_end = TIME
#   CALL s_axcp500_avg_stats_cnt(5,g_stat_begin,g_stat_end,g_stat_cnt) 
#   
#   RETURN r_done
END FUNCTION

################################################################################
# Descriptions...: 月加权-设置xcck的值                                                 
# Memo...........:                                                              
# Usage..........: CALL s_axcp500_avg_set_xcck(p_seq,p_inaj)
#                       RETURNING r_success                                     
# Input parameter: p_seq          记帐本位币      
#                : p_inaj         inaj TABLE资料                                
# Return code....: r_success      成功否标识符                                  
# Date & Author..: 2014-07-29 By Carrier                                        
# Modify.........: zhangllc mark 未使用                                         
################################################################################
PUBLIC FUNCTION s_axcp500_avg_set_xcck(p_seq,p_inaj)
   DEFINE p_seq           LIKE xccc_t.xccc001
#   DEFINE p_inaj          RECORD LIKE inaj_t.*   #161124-00048#20 mark
#161124-00048#20 add(s)
   DEFINE p_inaj RECORD  #庫存交易明細檔
       inajent LIKE inaj_t.inajent, #企业编号
       inajsite LIKE inaj_t.inajsite, #营运据点
       inaj001 LIKE inaj_t.inaj001, #单据编号
       inaj002 LIKE inaj_t.inaj002, #项次
       inaj003 LIKE inaj_t.inaj003, #项序
       inaj004 LIKE inaj_t.inaj004, #出入库码
       inaj005 LIKE inaj_t.inaj005, #料件编号
       inaj006 LIKE inaj_t.inaj006, #产品特征
       inaj007 LIKE inaj_t.inaj007, #库存管理特征
       inaj008 LIKE inaj_t.inaj008, #库位编号
       inaj009 LIKE inaj_t.inaj009, #储位编号
       inaj010 LIKE inaj_t.inaj010, #批号
       inaj011 LIKE inaj_t.inaj011, #交易数量
       inaj012 LIKE inaj_t.inaj012, #交易单位
       inaj013 LIKE inaj_t.inaj013, #交易单位与库存单位换算率
       inaj014 LIKE inaj_t.inaj014, #交易单位与料件基本单位换算率
       inaj015 LIKE inaj_t.inaj015, #异动单据性质
       inaj016 LIKE inaj_t.inaj016, #理由码
       inaj017 LIKE inaj_t.inaj017, #异动部门编号
       inaj018 LIKE inaj_t.inaj018, #异动供应商/客户编号
       inaj019 LIKE inaj_t.inaj019, #备注
       inaj020 LIKE inaj_t.inaj020, #工单单号
       inaj021 LIKE inaj_t.inaj021, #多角序号
       inaj022 LIKE inaj_t.inaj022, #单据扣账日期
       inaj023 LIKE inaj_t.inaj023, #实际运行扣账日期
       inaj024 LIKE inaj_t.inaj024, #数据生成时间
       inaj025 LIKE inaj_t.inaj025, #异动数据生成者
       inaj026 LIKE inaj_t.inaj026, #参考单位
       inaj027 LIKE inaj_t.inaj027, #参考数量
       inaj028 LIKE inaj_t.inaj028, #成本料号
       inaj036 LIKE inaj_t.inaj036, #库存异动类型
       inaj029 LIKE inaj_t.inaj029, #交易单位与成本单位换算率
       inaj030 LIKE inaj_t.inaj030, #VMI交易结算否
       inaj031 LIKE inaj_t.inaj031, #VMI对应入库/仓退单号
       inaj032 LIKE inaj_t.inaj032, #VMI对应入库/仓退项次
       inaj033 LIKE inaj_t.inaj033, #VMI对应杂发/杂收单号
       inaj034 LIKE inaj_t.inaj034, #VMI对应杂发/杂收项次
       inaj035 LIKE inaj_t.inaj035, #异动作业编号
       inaj037 LIKE inaj_t.inaj037, #成本中心
       inaj038 LIKE inaj_t.inaj038, #项目编号
       inaj039 LIKE inaj_t.inaj039, #WBS编号
       inaj040 LIKE inaj_t.inaj040, #重复性生产-计划编号
       inaj041 LIKE inaj_t.inaj041, #重复性生产-生产料号
       inaj042 LIKE inaj_t.inaj042, #重复性生产-生产料号BOM特性
       inaj043 LIKE inaj_t.inaj043, #重复性生产-生产料号产品特征
       inaj044 LIKE inaj_t.inaj044, #来源单号
       inaj200 LIKE inaj_t.inaj200, #内部结算否
       inaj201 LIKE inaj_t.inaj201, #业务类型
       inaj202 LIKE inaj_t.inaj202, #内部交易类型
       inaj203 LIKE inaj_t.inaj203, #币种
       inaj204 LIKE inaj_t.inaj204, #税种
       inaj205 LIKE inaj_t.inaj205, #内部结算税前金额
       inaj206 LIKE inaj_t.inaj206, #内部结算含税金额
       inaj207 LIKE inaj_t.inaj207, #交易所属法人
       inaj208 LIKE inaj_t.inaj208, #内部交易对象组织
       inaj209 LIKE inaj_t.inaj209, #内部交易对象法人
       inaj045 LIKE inaj_t.inaj045, #异动时库存单位
       inaj046 LIKE inaj_t.inaj046, #交易单位与库存单位换算分子
       inaj047 LIKE inaj_t.inaj047, #交易单位与库存单位换算分母
       inaj048 LIKE inaj_t.inaj048, #交易单位与料件基本单位换算分子
       inaj049 LIKE inaj_t.inaj049, #交易单位与料件基本单位换算分母
       inaj050 LIKE inaj_t.inaj050, #交易单位与成本单位换算分子
       inaj051 LIKE inaj_t.inaj051, #交易单位与成本单位换算分母
       inaj210 LIKE inaj_t.inaj210, #单据单价
       inaj211 LIKE inaj_t.inaj211  #品类
END RECORD
#161124-00048#20 add(e)
   DEFINE r_success       LIKE type_t.num5
   #DEFINE l_xcck          RECORD LIKE xcck_t.*
   DEFINE l_xcck          type_xcck  #mod zhangllc 151214 比原来多了xccktmp1 库存管理特征
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_rate          LIKE inaj_t.inaj014
   DEFINE l_choice        LIKE type_t.chr10
   DEFINE l_sfaa010       LIKE sfaa_t.sfaa010
   DEFINE l_sfaa042       LIKE sfaa_t.sfaa042
   DEFINE l_exrate        LIKE ooan_t.ooan005     
   DEFINE l_sum           RECORD
                          tot  LIKE xccc_t.xccc202,
                          a    LIKE xccc_t.xccc202a,
                          b    LIKE xccc_t.xccc202b,
                          c    LIKE xccc_t.xccc202c,
                          d    LIKE xccc_t.xccc202d,
                          e    LIKE xccc_t.xccc202e,
                          f    LIKE xccc_t.xccc202f,
                          g    LIKE xccc_t.xccc202g,
                          h    LIKE xccc_t.xccc202h
                          END RECORD
   DEFINE l_qty           LIKE xccc_t.xccc201                          
   DEFINE l_xccd002       LIKE xccd_t.xccd002
   DEFINE l_cnt           LIKE type_t.num5
   #DEFINE l_imaa009       LIKE imaa_t.imaa009   #add zhangllc 150809 #mark zhangllc 151204
   #DEFINE l_rtaw001       LIKE rtaw_t.rtaw001   #add zhangllc 150809 #mark zhangllc 151204
      
#   WHENEVER ERROR CONTINUE
#
#   LET r_success = FALSE
#
#   INITIALIZE l_xcck.* TO NULL
#   LET l_xcck.xcckent  = g_enterprise                        #企业编号           
#   LET l_xcck.xccksite = p_inaj.inajsite                     #site组织           
#   LET l_xcck.xcckcomp = g_comp                              #法人组织           
#   LET l_xcck.xcckld   = g_ld                                #账套               
#   LET l_xcck.xcck001  = p_seq                               #账套本位币顺序
#   LET l_xcck.xcck002  = g_rec.xccc002                       #成本域                    
#   LET l_xcck.xcck003  = g_xcat001                           #成本计算类型       
#   LET l_xcck.xcck004  = g_yy                                #年度               
#   LET l_xcck.xcck005  = g_pp                                #期别               
#   LET l_xcck.xcck006  = p_inaj.inaj001                      #参考单号           
#   LET l_xcck.xcck007  = p_inaj.inaj002                      #项次               
#   LET l_xcck.xcck008  = p_inaj.inaj003                      #项序               
#   LET l_xcck.xcck009  = p_inaj.inaj004                      #出入库码           
#   LET l_xcck.xcck010  = p_inaj.inaj005                      #料号               
#   LET l_xcck.xcck011  = p_inaj.inaj006                      #产品特征               
#   LET l_xcck.xcck012  = p_inaj.inaj015                      #单据类型           
#   LET l_xcck.xcck013  = p_inaj.inaj022                      #单据日期           
#   LET l_xcck.xcck014  = p_inaj.inaj024                      #时间               
#   LET l_xcck.xcck015  = p_inaj.inaj008                      #仓库编号           
#   LET l_xcck.xcck016  = p_inaj.inaj009                      #储位编号 
#   IF g_rec.xccc003 = '3' THEN   
#      LET l_xcck.xcck017  = p_inaj.inaj010                   #批号       
#   ELSE
#      LET l_xcck.xcck017  = ' '
#   END IF
#   LET l_xcck.xcck020  = p_inaj.inaj036                      #异动类型           
#   LET l_xcck.xcck021  = p_inaj.inaj016                      #原因码           
#   
#   LET l_xcck.xcck022  = p_inaj.inaj018                      #交易对象   
#   
#   #      客群    区域     经营类别 渠道
#   SELECT pmaa090,pmaa241,pmaa092,pmaa231 
#     INTO l_xcck.xcck023,l_xcck.xcck024,l_xcck.xcck026,l_xcck.xcck027
#     FROM pmaa_t
#    WHERE pmaaent = g_enterprise
#      AND pmaa001 = l_xcck.xcck022        
#   
#   LET l_xcck.xcck025  = p_inaj.inaj037                      #成本中心  
#   #      品类     品牌    產品分類
#   #SELECT imaa108,imaa126,imaa009 INTO l_xcck.xcck028,l_xcck.xcck029,l_imaa009  #mod zhangllc 150809 add imaa009
#   SELECT imaa126 INTO l_xcck.xcck029  #mod zhangllc 150809 add imaa009 #mod zhangllc 151204
#     FROM imaa_t
#    WHERE imaaent = g_enterprise
#      AND imaa001 = l_xcck.xcck010
#      
#   #mark zhangllc 151204
#   ##add zhangllc 150809
#   #IF NOT cl_null(g_ent_0001) AND NOT cl_null(l_imaa009) THEN #E-CIR-0001 品類管理層級
#   #   SELECT rtaw001 INTO l_rtaw001 #品類對應最尾階產品品類資料檔:品類編號
#   #     FROM rtaw_t
#   #    WHERE rtawent = g_enterprise
#   #      AND rtaw002 = l_imaa009  #最尾階產品品類
#   #      AND rtaw003 = g_ent_0001    #品類層級
#   #    IF NOT cl_null(l_rtaw001) THEN
#   #       LET l_xcck.xcck028 = l_rtaw001
#   #    END IF
#   #END IF
#   ##add zhangllc 150809 end
#   #mark zhangllc 151204 end
#   LET l_xcck.xcck028  = p_inaj.inaj211   #品类  #add zhangllc 151204
#   
#   LET l_xcck.xcck030  = p_inaj.inaj038                      #项目号             
#   LET l_xcck.xcck031  = p_inaj.inaj039                      #WBS   
#
#   LET l_xcck.xcck032  = ' '                                 #存货科目           
#   LET l_xcck.xcck033  = ' '                                 #费用成本科目       
#   LET l_xcck.xcck034  = ' '                                 #收入科目   
#
#   #xcck021~xcck031 为核算项,不可为NULL
#   IF l_xcck.xcck021 IS NULL THEN LET l_xcck.xcck021 = ' ' END IF
#   IF l_xcck.xcck022 IS NULL THEN LET l_xcck.xcck022 = ' ' END IF   
#   IF l_xcck.xcck023 IS NULL THEN LET l_xcck.xcck023 = ' ' END IF      
#   IF l_xcck.xcck024 IS NULL THEN LET l_xcck.xcck024 = ' ' END IF
#   IF l_xcck.xcck025 IS NULL THEN LET l_xcck.xcck025 = ' ' END IF   
#   IF l_xcck.xcck026 IS NULL THEN LET l_xcck.xcck026 = ' ' END IF
#   IF l_xcck.xcck027 IS NULL THEN LET l_xcck.xcck027 = ' ' END IF   
#   IF l_xcck.xcck028 IS NULL THEN LET l_xcck.xcck028 = ' ' END IF
#   IF l_xcck.xcck029 IS NULL THEN LET l_xcck.xcck029 = ' ' END IF   
#   IF l_xcck.xcck030 IS NULL THEN LET l_xcck.xcck030 = ' ' END IF
#   IF l_xcck.xcck031 IS NULL THEN LET l_xcck.xcck031 = ' ' END IF   
#
#
#   LET l_xcck.xcck040  = p_inaj.inaj203                      #交易币别           
#   LET l_xcck.xcck041  = g_curr[p_seq].curr                  #本位币别   
#   LET l_exrate = 1
#   IF l_xcck.xcck040 <> l_xcck.xcck041 THEN
#      CALL s_aooi160_get_exrate('2',g_ld,l_xcck.xcck013,l_xcck.xcck040,l_xcck.xcck041,0,g_curr[p_seq].type2)
#           RETURNING l_exrate
#      IF cl_null(l_exrate) OR l_exrate=0 THEN LET l_exrate = 1 END IF
#   END IF        
#   LET l_xcck.xcck042  = l_exrate                            #汇率               
#   LET l_xcck.xcck043  = p_inaj.inaj012                      #交易单位           
#   LET l_xcck.xcck044  = g_cost_unit                         #成本单位           
#   LET l_xcck.xcck045  = p_inaj.inaj014                      #换算率             
#   LET l_xcck.xcck046  = p_inaj.inaj011                      #交易数量  
#   LET l_xcck.xcck047  = p_inaj.inaj020                      #工单号码
#   LET l_xcck.xcck048  = p_inaj.inaj040                      #重複性生產-計畫編號
#   LET l_xcck.xcck049  = p_inaj.inaj041                      #重複性生產-生產料號
#   LET l_xcck.xcck050  = p_inaj.inaj042                      #重複性生產-生產料號BOM特性
#   LET l_xcck.xcck051  = p_inaj.inaj043                      #重複性生產-生產料號產品特徵
#   
#   #若和工单相关的单据,要判断工单是否为"返工工单(重工工单)"
#   LET l_sfaa042 = 'N'
#   IF cl_null(p_inaj.inaj041) THEN   #一般生产时
#      SELECT sfaa010,sfaa042 INTO l_sfaa010,l_sfaa042 FROM sfaa_tmp
#       WHERE sfaaent   = g_enterprise
#         AND sfaadocno = p_inaj.inaj020
#      IF cl_null(l_sfaa042) THEN LET l_sfaa042 = 'N' END IF
#   END IF
# 
#   #销退是否影响成本 #g_sys_6006 
#   #杂发是否影响成本 #g_sys_6004 
#   CASE p_inaj.inaj036
#      WHEN '101'  #雜收入庫
#           LET l_choice = '211'
#      WHEN '102'  #採購入庫
#           #mod zhangllc 151203 --begin
#           #LET l_choice = '201' 
#           IF p_inaj.inaj200 = 'Y' THEN
#              LET l_choice = '2012'
#           ELSE
#              LET l_choice = '2011'
#           END IF
#           #mod zhangllc 151203 --end 
#      WHEN '103'  #委外入庫
#           LET l_choice = '203'
#      WHEN '104'  #委外聯產品入庫
#           LET l_choice = '203'
#      WHEN '105'  #委外多產出入庫
#           LET l_choice = '203'
#      WHEN '106'  #委外拆件入庫
#           #carrier 委外会有拆件入库吗?
#           LET l_choice = '203'
#      WHEN '107'  #委外回收入庫
#           LET l_choice = '3012'
#      WHEN '108'  #採購倉退
#           #mod zhangllc 151203 --begin
#           #LET l_choice = '201' 
#           IF p_inaj.inaj200 = 'Y' THEN
#              LET l_choice = '2012'
#           ELSE
#              LET l_choice = '2011'
#           END IF
#           #mod zhangllc 151203 --end 
#      WHEN '109'  #委外倉退
#           LET l_choice = '203'
#      WHEN '110'  #生產入庫
#           IF l_sfaa042 = 'N' THEN
#              LET l_choice = '205'
#           ELSE
#              LET l_choice = '209'
#           END IF
#      WHEN '111'  #聯產品入庫             
#           IF l_sfaa042 = 'N' THEN
#              LET l_choice = '205'
#           ELSE
#              LET l_choice = '209'
#           END IF
#      WHEN '112'  #多主件產出入庫        
#           IF l_sfaa042 = 'N' THEN
#              LET l_choice = '205'
#           ELSE
#              LET l_choice = '209'
#           END IF
#      WHEN '113'  #拆件入庫
#           LET l_choice = '3012'
#      WHEN '114'  #回收入庫
#           LET l_choice = '3012'  
#      WHEN '115'  #當站下線
#           IF g_sys_6016 = 'Y' THEN  #当站下线影响成本
#              #LET l_choice = '217'
#              LET l_choice = '213' #mod zhangllc 151208
#           ELSE
#              LET l_choice = '3011'
#           END IF     
#      WHEN '201'  #銷售出庫
#           LET l_choice = '303'
#      WHEN '202'  #銷售退貨
#           IF g_sys_6006 = '1' THEN    #1.销退不影响成本 2.部分影响 3.全部影响
#              LET l_choice = '305'
#           ELSE
#              LET l_choice = '215'
#           END IF
#      WHEN '301'  #雜發出庫
#           IF g_sys_6004 = '1' THEN   #杂发不补单价
#              LET l_choice = '3092'
#           ELSE                   #杂发补单价
#              LET l_choice = '3091'
#           END IF
#      WHEN '302'  #生產發料
#           #与主件相同,则为返工发料,否则为一般发料
#           IF l_sfaa042 = 'Y' THEN
#              IF l_sfaa010 = l_xcck.xcck010 THEN
#                 LET l_choice = '207'
#              ELSE
#                 SELECT COUNT(*) INTO l_cnt FROM sfac_t
#                  WHERE sfacent   = g_enterprise
#                    AND sfacdocno = l_xcck.xcck047
#                    AND sfac001   = l_xcck.xcck010
#                    AND sfac002   IN ('1','2')
#                 IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
#                 IF l_cnt > 0 THEN
#                    LET l_choice = '207'
#                 ELSE
#                    LET l_choice = '3012'
#                 END IF
#              
#              END IF
#           ELSE
#              LET l_choice = '3012'
#           END IF
#              
#      WHEN '303'  #生產退料       
#           IF l_sfaa042 = 'Y' THEN
#              IF l_sfaa010 = l_xcck.xcck010 THEN
#                 LET l_choice = '207'
#              ELSE
#                 SELECT COUNT(*) INTO l_cnt FROM sfac_t
#                  WHERE sfacent   = g_enterprise
#                    AND sfacdocno = l_xcck.xcck047
#                    AND sfac001   = l_xcck.xcck010
#                    AND sfac002   IN ('1','2')
#                 IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
#                 IF l_cnt > 0 THEN
#                    LET l_choice = '207'
#                 ELSE
#                    LET l_choice = '3012'
#                 END IF
#              
#              END IF
#           ELSE
#              LET l_choice = '3012'
#           END IF
#
#      WHEN '304'  #庫存報廢
#           LET l_choice = '3092'
#      WHEN '401'  #調撥
#           IF p_inaj.inaj004 = 1 THEN   #入项
#              LET l_choice = '217'
#           END IF
#           IF p_inaj.inaj004 = -1 THEN  #出项
#              LET l_choice = '3131'
#           END IF
#      WHEN '501'  #盤點
#           LET l_choice = '311'      
#   END CASE
#      
#   LET l_sum.a = 0 LET l_sum.b = 0 LET l_sum.c = 0 LET l_sum.d = 0 
#   LET l_sum.e = 0 LET l_sum.f = 0 LET l_sum.g = 0 LET l_sum.h = 0
#   
#   LET l_qty = l_xcck.xcck046 * l_xcck.xcck045
#   CASE l_choice
#        WHEN '2011'  #采购入库/采购仓退 要取AP  #mod zhangllc 151203 '201'->'2011'
#             CALL s_axcp500_get_ap_sum_1(l_xcck.xcck001,l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008)
#                  RETURNING l_sum.a
#        #add zhangllc 151203 --begin
#        WHEN '2012'  #采购入库/采购仓退 取stdf
#             CALL s_axcp500_get_stdf_amt(l_xcck.xcck001,l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
#                  RETURNING l_sum.a
#        #add zhangllc 151203 --end
#                  
#        WHEN '203' #委外加工费:委外入库/委外联产品入库/委外多产出入库/委外仓退 要取AP
#             LET l_xccd002 = ' '
#             IF g_field_type = '1' THEN
#                LET l_xccd002 = l_xcck.xcck002
#             END IF
#             CALL s_axcp500_avg_get_store_in_sum(p_seq,l_xccd002,l_xcck.xcck046 * l_xcck.xcck045,
#                                                 l_xcck.xcck047,l_xcck.xcck049,l_xcck.xccksite,l_xcck.xcck010,
#                                                 l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
#                  RETURNING l_sum.* 
#                  
#        WHEN '205' #工单入库
#             LET l_xccd002 = ' '
#             IF g_field_type = '1' THEN
#                LET l_xccd002 = l_xcck.xcck002
#             END IF
#             CALL s_axcp500_avg_get_store_in_sum(p_seq,l_xccd002,l_xcck.xcck046 * l_xcck.xcck045,
#                                                 l_xcck.xcck047,l_xcck.xcck049,l_xcck.xccksite,l_xcck.xcck010,
#                                                 l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
#                  RETURNING l_sum.*                 
#        WHEN '211' #杂收入库
#             CALL s_axcp500_get_xccw202_1(p_seq,l_xcck.xcck002,l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
#                  RETURNING l_sum.*               
#   END CASE 
#
#   IF p_inaj.inaj036 = '115'  THEN #当站下线/当站下线影响成本   
#      CALL s_axcp500_get_xccw202_1(p_seq,l_xcck.xcck002,l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
#           RETURNING l_sum.*   
#   END IF                  
#
#   CASE p_inaj.inaj036
#        WHEN '301'   #杂项出库
#             IF g_sys_6004 = '2' THEN 
#                CALL s_axcp500_get_xccw202_1(p_seq,l_xcck.xcck002,l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
#                     RETURNING l_sum.*  
#             END IF                     
#        WHEN '401'   #调拨
#             CALL s_axcp500_get_xccw202_1(p_seq,l_xcck.xcck002,l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
#                  RETURNING l_sum.*      
#   END CASE
#   
#
#   LET l_sum.tot = l_sum.a + l_sum.b + l_sum.c + l_sum.d + l_sum.e + l_sum.f + l_sum.g + l_sum.h
#   LET l_xcck.xcck055  = l_choice                     #xccc類型
#
#   CALL s_axcp500_get_round_setting(l_xcck.xcck010)
#
#   LET l_xcck.xcck201   = l_xcck.xcck046 * l_xcck.xcck045                                           #本期异动数量
#   LET l_xcck.xcck202   = l_sum.tot                                                                 #本期异动金额
#   LET l_xcck.xcck202a  = l_sum.a                                                                   #本期异动金额-材料
#   LET l_xcck.xcck202b  = l_sum.b                                                                   #本期异动金额-人工
#   LET l_xcck.xcck202c  = l_sum.c                                                                   #本期异动金额-加工费
#   LET l_xcck.xcck202d  = l_sum.d                                                                   #本期异动金额-制费一
#   LET l_xcck.xcck202e  = l_sum.e                                                                   #本期异动金额-制费二
#   LET l_xcck.xcck202f  = l_sum.f                                                                   #本期异动金额-制费三
#   LET l_xcck.xcck202g  = l_sum.g                                                                   #本期异动金额-制费四
#   LET l_xcck.xcck202h  = l_sum.h                                                                   #本期异动金额-制费五
#   
##  CALL s_num_round(g_unit_round_type,l_xcck.xcck201,g_unit_round_digit) RETURNING l_xcck.xcck201   #本期异动数量 
#   CALL s_num_round(g_round_type,l_xcck.xcck202a,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202a    #本期异动金额-材料       
#   CALL s_num_round(g_round_type,l_xcck.xcck202b,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202b    #本期异动金额-人工       
#   CALL s_num_round(g_round_type,l_xcck.xcck202c,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202c    #本期异动金额-加工费     
#   CALL s_num_round(g_round_type,l_xcck.xcck202d,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202d    #本期异动金额-制费一     
#   CALL s_num_round(g_round_type,l_xcck.xcck202e,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202e    #本期异动金额-制费二     
#   CALL s_num_round(g_round_type,l_xcck.xcck202f,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202f    #本期异动金额-制费三     
#   CALL s_num_round(g_round_type,l_xcck.xcck202g,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202g    #本期异动金额-制费四     
#   CALL s_num_round(g_round_type,l_xcck.xcck202h,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202h    #本期异动金额-制费五    
#
#   #本期异动金额
#   LET l_xcck.xcck202  = l_xcck.xcck202a + l_xcck.xcck202b + l_xcck.xcck202c +
#                         l_xcck.xcck202d + l_xcck.xcck202e + l_xcck.xcck202f +
#                         l_xcck.xcck202g + l_xcck.xcck202h
#   CALL s_num_round(g_round_type,l_xcck.xcck202,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202 
#
#   LET l_xcck.xcck282   = l_xcck.xcck202  / l_xcck.xcck201                                          #本期异动单价
#   LET l_xcck.xcck282a  = l_xcck.xcck202a / l_xcck.xcck201                                          #本期异动单价-材料
#   LET l_xcck.xcck282b  = l_xcck.xcck202b / l_xcck.xcck201                                          #本期异动单价-人工
#   LET l_xcck.xcck282c  = l_xcck.xcck202c / l_xcck.xcck201                                          #本期异动单价-加工
#   LET l_xcck.xcck282d  = l_xcck.xcck202d / l_xcck.xcck201                                          #本期异动单价-制费一
#   LET l_xcck.xcck282e  = l_xcck.xcck202e / l_xcck.xcck201                                          #本期异动单价-制费二
#   LET l_xcck.xcck282f  = l_xcck.xcck202f / l_xcck.xcck201                                          #本期异动单价-制费三
#   LET l_xcck.xcck282g  = l_xcck.xcck202g / l_xcck.xcck201                                          #本期异动单价-制费四
#   LET l_xcck.xcck282h  = l_xcck.xcck202h / l_xcck.xcck201                                          #本期异动单价-制费五
#
#   CALL s_num_round(g_round_type,l_xcck.xcck282a,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282a     #本期异动单价-材料    
#   CALL s_num_round(g_round_type,l_xcck.xcck282b,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282b     #本期异动单价-人工    
#   CALL s_num_round(g_round_type,l_xcck.xcck282c,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282c     #本期异动单价-加工    
#   CALL s_num_round(g_round_type,l_xcck.xcck282d,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282d     #本期异动单价-制费一  
#   CALL s_num_round(g_round_type,l_xcck.xcck282e,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282e     #本期异动单价-制费二  
#   CALL s_num_round(g_round_type,l_xcck.xcck282f,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282f     #本期异动单价-制费三  
#   CALL s_num_round(g_round_type,l_xcck.xcck282g,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282g     #本期异动单价-制费四  
#   CALL s_num_round(g_round_type,l_xcck.xcck282h,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282h     #本期异动单价-制费五  
#
#   #本期异动单价
#   LET l_xcck.xcck282  = l_xcck.xcck282a + l_xcck.xcck282b + l_xcck.xcck282c +
#                         l_xcck.xcck282d + l_xcck.xcck282e + l_xcck.xcck282f +
#                         l_xcck.xcck282g + l_xcck.xcck282h   
#   CALL s_num_round(g_round_type,l_xcck.xcck282,g_curr[p_seq].digit1) RETURNING l_xcck.xcck282                           
#                                                                        
#
#   LET l_xcck.xcck301   = 0                                    #已耗数量                   
#   LET l_xcck.xcck302   = 0                                    #已耗金额                   
#   LET l_xcck.xcck302a  = 0                                    #已耗金额-材料               
#   LET l_xcck.xcck302b  = 0                                    #已耗金额-人工               
#   LET l_xcck.xcck302c  = 0                                    #已耗金额-加工费             
#   LET l_xcck.xcck302d  = 0                                    #已耗金额-制费一             
#   LET l_xcck.xcck302e  = 0                                    #已耗金额-制费二             
#   LET l_xcck.xcck302f  = 0                                    #已耗金额-制费三             
#   LET l_xcck.xcck302g  = 0                                    #已耗金额-制费四             
#   LET l_xcck.xcck302h  = 0                                    #已耗金额-制费五  
#
#   LET l_xcck.xcck901   = l_xcck.xcck201                       #结存数量                   
#   LET l_xcck.xcck902   = l_xcck.xcck202                       #结存金额                   
#   LET l_xcck.xcck902a  = l_xcck.xcck202a                      #结存金额-材料               
#   LET l_xcck.xcck902b  = l_xcck.xcck202b                      #结存金额-人工               
#   LET l_xcck.xcck902c  = l_xcck.xcck202c                      #结存金额-加工费             
#   LET l_xcck.xcck902d  = l_xcck.xcck202d                      #结存金额-制费一             
#   LET l_xcck.xcck902e  = l_xcck.xcck202e                      #结存金额-制费二             
#   LET l_xcck.xcck902f  = l_xcck.xcck202f                      #结存金额-制费三             
#   LET l_xcck.xcck902g  = l_xcck.xcck202g                      #结存金额-制费四             
#   LET l_xcck.xcck902h  = l_xcck.xcck202h                      #结存金额-制费五  
#   
#   LET l_xcck.xcck980   = l_xcck.xcck282                       #结存单位成本         
#   LET l_xcck.xcck980a  = l_xcck.xcck282a                      #结存单位成本-材料    
#   LET l_xcck.xcck980b  = l_xcck.xcck282b                      #结存单位成本-人工    
#   LET l_xcck.xcck980c  = l_xcck.xcck282c                      #结存单位成本-加工费  
#   LET l_xcck.xcck980d  = l_xcck.xcck282d                      #结存单位成本-制费一  
#   LET l_xcck.xcck980e  = l_xcck.xcck282e                      #结存单位成本-制费二  
#   LET l_xcck.xcck980f  = l_xcck.xcck282f                      #结存单位成本-制费三  
#   LET l_xcck.xcck980g  = l_xcck.xcck282g                      #结存单位成本-制费四  
#   LET l_xcck.xcck980h  = l_xcck.xcck282h                      #结存单位成本-制费五  
#      
#   LET l_xcck.xcck903  = 0                                     #结存调整金额        
#   LET l_xcck.xcck903a = 0                                     #结存调整金额-材料   
#   LET l_xcck.xcck903b = 0                                     #结存调整金额-人工   
#   LET l_xcck.xcck903c = 0                                     #结存调整金额-加工费 
#   LET l_xcck.xcck903d = 0                                     #结存调整金额-制费一 
#   LET l_xcck.xcck903e = 0                                     #结存调整金额-制费二 
#   LET l_xcck.xcck903f = 0                                     #结存调整金额-制费三 
#   LET l_xcck.xcck903g = 0                                     #结存调整金额-制费四 
#   LET l_xcck.xcck903h = 0                                     #结存调整金额-制费五 
#
#   LET l_xcck.xcckownid = g_user                               #資料所有者                   
#   LET l_xcck.xcckowndp = g_dept                               #資料所屬部門                 
#   LET l_xcck.xcckcrtid = g_user                               #資料建立者                   
#   LET l_xcck.xcckcrtdp = g_dept                               #資料建立部門                 
#   LET l_xcck.xcckcrtdt = cl_get_current()                     #資料創建日                   
#   LET l_xcck.xcckmodid = ''                                   #資料修改者                   
#   LET l_xcck.xcckmoddt = ''                                   #最近修改日                   
#   LET l_xcck.xcckstus  = 'Y'                                  #狀態碼       
#   
#   CALL s_axcp500_ins_or_upd_xcck(l_xcck.*)
#        RETURNING l_success
#   IF NOT l_success THEN
#      RETURN r_success
#   END IF
#   
#   LET r_success = TRUE
#   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 月加权-取得工单的入库成本--BY料件及占比
# Memo...........:
# Usage..........: CALL s_axcp500_avg_get_store_in_sum(p_xccd001,p_xccd002,p_qty,p_xccd006,p_xccd007,p_site,p_xcck010,p_xcck006,p_xcck007,p_xcck008,p_xcck009)
#                       RETURNING r_sum
# Input parameter: p_xccd001      记账本位币顺序
#                : p_xccd002      成本域
#                : p_qty          异动数量
#                : p_xccd006      工单单号
#                : p_xccd007      生产主件
#                : p_site         营运据点
#                : p_xcck010      料件编号
#                : p_xcck006      单号
#                : p_xcck007      项次
#                : p_xcck008      项序
#                : p_xcck009      出入库码
# Return code....: r_sum          成本金额
# Date & Author..: 2014-07-31 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_get_store_in_sum(p_xccd001,p_xccd002,p_qty,p_xccd006,p_xccd007,p_site,p_xcck010,p_xcck006,p_xcck007,p_xcck008,p_xcck009)
   DEFINE p_xccd001       LIKE xccc_t.xccc001
   DEFINE p_xccd002       LIKE xccd_t.xccd002
   DEFINE p_qty           LIKE xccd_t.xccd301
   DEFINE p_xccd006       LIKE xccd_t.xccd006
   DEFINE p_xccd007       LIKE xccd_t.xccd007
   DEFINE p_site          LIKE xcck_t.xccksite
   DEFINE p_xcck010       LIKE xcck_t.xcck010
   DEFINE p_xcck006       LIKE xcck_t.xcck006
   DEFINE p_xcck007       LIKE xcck_t.xcck007
   DEFINE p_xcck008       LIKE xcck_t.xcck008
   DEFINE p_xcck009       LIKE xcck_t.xcck009
   DEFINE r_sum           RECORD
                          tot  LIKE xccc_t.xccc202,
                          a    LIKE xccc_t.xccc202a,
                          b    LIKE xccc_t.xccc202b,
                          c    LIKE xccc_t.xccc202c,
                          d    LIKE xccc_t.xccc202d,
                          e    LIKE xccc_t.xccc202e,
                          f    LIKE xccc_t.xccc202f,
                          g    LIKE xccc_t.xccc202g,
                          h    LIKE xccc_t.xccc202h
                          END RECORD 
   DEFINE l_xccd301       LIKE xccd_t.xccd301
   DEFINE l_rate          LIKE type_t.num20_6
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_xcbp006       LIKE xcbp_t.xcbp006
   DEFINE l_done          type_g_std_cost
   DEFINE l_total         type_g_std_cost
   DEFINE l_mine          type_g_std_cost
   DEFINE l_sum           LIKE xcck_t.xcck202
   DEFINE l_cnt           LIKE type_t.num5       #161115-00004#1 add
   DEFINE l_xccd301p      LIKE xccd_t.xccd301    #210125-00026#1


   WHENEVER ERROR CONTINUE
#   IF g_sys_6008 = 'Y' THEN  #工單結案在製差異轉入主件當期入庫
#      SELECT xccd301,xccd302+xccd304,xccd302a+xccd304a,xccd302b+xccd304b,
#             xccd302c+xccd304c,xccd302d+xccd304d,xccd302e+xccd304e,
#             xccd302f+xccd304f,xccd302g+xccd304g,xccd302h+xccd304h
#        INTO l_xccd301,r_sum.*
#        FROM xccd_tmp
#       WHERE xccdent = g_enterprise
#         AND xccdld  = g_ld
#         AND xccd001 = p_xccd001
#         AND xccd002 = p_xccd002
#         AND xccd003 = g_xcat001
#         AND xccd004 = g_yy
#         AND xccd005 = g_pp
#         AND xccd006 = p_xccd006         
#   ELSE
      SELECT xccd301,xccd302 ,xccd302a,xccd302b,  #本期转出数量，本期转出金额
                     xccd302c,xccd302d,xccd302e,
                     xccd302f,xccd302g,xccd302h
                    ,xccd301p    #210125-00026#1
        INTO l_xccd301,r_sum.*
             ,l_xccd301p         #210125-00026#1
        FROM xccd_tmp
       WHERE xccdent = g_enterprise
         AND xccdld  = g_ld
         AND xccd001 = p_xccd001
         AND xccd002 = p_xccd002
         AND xccd003 = g_xcat001
         AND xccd004 = g_yy
         AND xccd005 = g_pp
         AND xccd006 = p_xccd006 #工单单号  
#   END IF
      
   IF cl_null(r_sum.a) THEN LET r_sum.a = 0 END IF
   IF cl_null(r_sum.b) THEN LET r_sum.b = 0 END IF
   IF cl_null(r_sum.c) THEN LET r_sum.c = 0 END IF
   IF cl_null(r_sum.d) THEN LET r_sum.d = 0 END IF
   IF cl_null(r_sum.e) THEN LET r_sum.e = 0 END IF
   IF cl_null(r_sum.f) THEN LET r_sum.f = 0 END IF
   IF cl_null(r_sum.g) THEN LET r_sum.g = 0 END IF
   IF cl_null(r_sum.h) THEN LET r_sum.h = 0 END IF
   
   #210125-00026#1---add---s
   IF g_sys_6009 = '2' AND g_sys_6017 = 'N' THEN
      LET l_xccd301 = l_xccd301p
   END IF
   #210125-00026#1---add---e
   
#161019-00043#1-s
#   #add zhangllc 151126 --begin
#   #分步法，把下阶的材料＋人工＋加工＋委外都结转到上阶的“材料”中
#   IF g_xcat002 = '2' THEN  #分步法
#      LET r_sum.a = r_sum.tot
#      LET r_sum.b = 0
#      LET r_sum.c = 0
#      LET r_sum.d = 0
#      LET r_sum.e = 0
#      LET r_sum.f = 0
#      LET r_sum.g = 0
#      LET r_sum.h = 0
#   END IF
#   #add zhangllc 151126 --end
#161019-00043#1-e
   
   #l_total为工单的总转出
   LET l_total.sum = r_sum.tot
   LET l_total.a   = r_sum.a
   LET l_total.b   = r_sum.b
   LET l_total.c   = r_sum.c
   LET l_total.d   = r_sum.d
   LET l_total.e   = r_sum.e
   LET l_total.f   = r_sum.f
   LET l_total.g   = r_sum.g
   LET l_total.h   = r_sum.h
   
   #本次的转出量
   #取得联产品比率
   CALL s_axcp500_coproduct_get_share_rate(p_site,p_xccd006,p_xccd007,p_xcck010)
        RETURNING l_success,l_xcbp006  #联产期分配率
   IF NOT l_success OR cl_null(l_xcbp006) OR l_xcbp006 = 0 THEN
      LET l_xcbp006 = 100
   END IF
   #LET l_xccd301 = l_xccd301 / l_xcbp006 * 100 #170705-00006#1 mark
   #170705-00006#1 add(S)
   IF l_xcbp006 <> 0 THEN
      LET l_xccd301 = l_xccd301 / l_xcbp006 * 100
   ELSE
      LET l_xccd301 = 0
   END IF      
   #170705-00006#1 add(E)
   IF l_xccd301 = p_qty * -1 THEN
      LET r_sum.a   = r_sum.a * -1
      LET r_sum.b   = r_sum.b * -1
      LET r_sum.c   = r_sum.c * -1
      LET r_sum.d   = r_sum.d * -1
      LET r_sum.e   = r_sum.e * -1
      LET r_sum.f   = r_sum.f * -1
      LET r_sum.g   = r_sum.g * -1
      LET r_sum.h   = r_sum.h * -1
      LET r_sum.tot = r_sum.a + r_sum.b + r_sum.c + r_sum.d + r_sum.e + r_sum.f + r_sum.g + r_sum.h   
   ELSE
      #170705-00006#1 mark(S)
      #LET r_sum.a   = r_sum.a / l_xccd301 * p_qty
      #LET r_sum.b   = r_sum.b / l_xccd301 * p_qty
      #LET r_sum.c   = r_sum.c / l_xccd301 * p_qty
      #LET r_sum.d   = r_sum.d / l_xccd301 * p_qty
      #LET r_sum.e   = r_sum.e / l_xccd301 * p_qty
      #LET r_sum.f   = r_sum.f / l_xccd301 * p_qty
      #LET r_sum.g   = r_sum.g / l_xccd301 * p_qty
      #LET r_sum.h   = r_sum.h / l_xccd301 * p_qty
      #170705-00006#1 mark(E)
      #170705-00006#1 add(S)
      IF l_xccd301 * p_qty <> 0 THEN 
         LET r_sum.a   = r_sum.a / l_xccd301 * p_qty
         LET r_sum.b   = r_sum.b / l_xccd301 * p_qty
         LET r_sum.c   = r_sum.c / l_xccd301 * p_qty
         LET r_sum.d   = r_sum.d / l_xccd301 * p_qty
         LET r_sum.e   = r_sum.e / l_xccd301 * p_qty
         LET r_sum.f   = r_sum.f / l_xccd301 * p_qty
         LET r_sum.g   = r_sum.g / l_xccd301 * p_qty
         LET r_sum.h   = r_sum.h / l_xccd301 * p_qty
      ELSE 
         LET r_sum.a   = 0
         LET r_sum.b   = 0
         LET r_sum.c   = 0
         LET r_sum.d   = 0
         LET r_sum.e   = 0
         LET r_sum.f   = 0
         LET r_sum.g   = 0
         LET r_sum.h   = 0
      END IF
      #170705-00006#1 add(E)
      LET r_sum.tot = r_sum.a + r_sum.b + r_sum.c + r_sum.d + r_sum.e + r_sum.f + r_sum.g + r_sum.h
   END IF
   
   #取位
   CALL s_num_round(g_round_type,r_sum.tot,g_curr[p_xccd001].digit2) RETURNING r_sum.tot
   CALL s_num_round(g_round_type,r_sum.a,  g_curr[p_xccd001].digit2) RETURNING r_sum.a
   CALL s_num_round(g_round_type,r_sum.b,  g_curr[p_xccd001].digit2) RETURNING r_sum.b
   CALL s_num_round(g_round_type,r_sum.c,  g_curr[p_xccd001].digit2) RETURNING r_sum.c
   CALL s_num_round(g_round_type,r_sum.d,  g_curr[p_xccd001].digit2) RETURNING r_sum.d
   CALL s_num_round(g_round_type,r_sum.e,  g_curr[p_xccd001].digit2) RETURNING r_sum.e
   CALL s_num_round(g_round_type,r_sum.f,  g_curr[p_xccd001].digit2) RETURNING r_sum.f
   CALL s_num_round(g_round_type,r_sum.g,  g_curr[p_xccd001].digit2) RETURNING r_sum.g
   CALL s_num_round(g_round_type,r_sum.h,  g_curr[p_xccd001].digit2) RETURNING r_sum.h   
   
   #1分钱的问题
   #ex:xccd 入库数量 =100.000000 人工=13078.890000
   #   xcck 入库数量 =30.000000  人工=3923.67
   #   xcck 入库数量 =50.000000  人工=6539.45
   #   xcck 入库数量 =20.000000  人工=2615.78
   #   SUM(xcck入库数量)=100 SUM(人工)=13078.9
   #xccd的人工和SUM(xcck的人工)=13078.89 - 13078.9 = -0.01
   #xcck的数量<>xccd301,因为会有联产品比率的缘故,若要用数量来算的话,效率太差,要FOREACH所有资料再*联产品比例
   #目前只用0.01来做比较,若有<=0.01的差异的话,直接吸收


   LET l_done.sum = 0 LET l_done.a = 0 LET l_done.b = 0 LET l_done.c = 0 LET l_done.d = 0
                      LET l_done.e = 0 LET l_done.f = 0 LET l_done.g = 0 LET l_done.h = 0
   #全部已经入库的金额
   EXECUTE s_axcp500_avg_cal_p20 USING p_xccd001,p_xccd006
                                  INTO l_done.*
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = 'EXECUTE s_axcp500_avg_cal_p20'
      LET g_errparam.popup  = TRUE
      CALL cl_err()  
      CALL s_axcp500_ins_error('','','','',p_xccd006,'','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_cal_p20')         
      RETURN r_sum.* 
   END IF
      
#   SELECT SUM(xcck202),SUM(xcck202a),SUM(xcck202b),SUM(xcck202c),SUM(xcck202d),
#                       SUM(xcck202e),SUM(xcck202f),SUM(xcck202g),SUM(xcck202h)
#     INTO l_done.*
#     FROM xcck_tmp
#    WHERE xcckent = g_enterprise
#      AND xcckld  = g_ld
#      AND xcck001 = p_xccd001
#      AND xcck003 = g_xcat001
#      AND xcck004 = g_yy
#      AND xcck005 = g_pp
#      AND xcck047 = p_xccd006 
#      AND xcck055 IN ('203','205','209')
   IF cl_null(l_done.sum) THEN LET l_done.sum = 0 END IF
   IF cl_null(l_done.a)   THEN LET l_done.a   = 0 END IF
   IF cl_null(l_done.b)   THEN LET l_done.b   = 0 END IF
   IF cl_null(l_done.c)   THEN LET l_done.c   = 0 END IF
   IF cl_null(l_done.d)   THEN LET l_done.d   = 0 END IF
   IF cl_null(l_done.e)   THEN LET l_done.e   = 0 END IF
   IF cl_null(l_done.f)   THEN LET l_done.f   = 0 END IF
   IF cl_null(l_done.g)   THEN LET l_done.g   = 0 END IF
   IF cl_null(l_done.h)   THEN LET l_done.h   = 0 END IF

   #联产品时,可能已经计算过,本笔要排除掉
   LET l_mine.sum = 0 LET l_mine.a = 0 LET l_mine.b = 0 LET l_mine.c = 0 LET l_mine.d = 0
                      LET l_mine.e = 0 LET l_mine.f = 0 LET l_mine.g = 0 LET l_mine.h = 0   
   EXECUTE s_axcp500_avg_cal_p23 USING p_xccd001,p_xccd006,p_xcck006,p_xcck007,p_xcck008,p_xcck009
                                  INTO l_mine.*
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = 'EXECUTE s_axcp500_avg_cal_p23'
      LET g_errparam.popup  = TRUE
      CALL cl_err()  
      CALL s_axcp500_ins_error('','','','',p_xccd006,'','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_cal_p23')         
      RETURN r_sum.* 
   END IF                      
                      
#   SELECT SUM(xcck202),SUM(xcck202a),SUM(xcck202b),SUM(xcck202c),SUM(xcck202d),
#                       SUM(xcck202e),SUM(xcck202f),SUM(xcck202g),SUM(xcck202h)
#     INTO l_mine.*
#     FROM xcck_tmp
#    WHERE xcckent = g_enterprise
#      AND xcckld  = g_ld
#      AND xcck001 = p_xccd001
#      AND xcck003 = g_xcat001
#      AND xcck004 = g_yy
#      AND xcck005 = g_pp
#      AND xcck047 = p_xccd006 
#      AND xcck055 IN ('203','205','209')
#      AND xcck006 = p_xcck006
#      AND xcck007 = p_xcck007
#      AND xcck008 = p_xcck008
#      AND xcck009 = p_xcck009
   IF cl_null(l_mine.sum) THEN LET l_mine.sum = 0 END IF
   IF cl_null(l_mine.a)   THEN LET l_mine.a   = 0 END IF
   IF cl_null(l_mine.b)   THEN LET l_mine.b   = 0 END IF
   IF cl_null(l_mine.c)   THEN LET l_mine.c   = 0 END IF
   IF cl_null(l_mine.d)   THEN LET l_mine.d   = 0 END IF
   IF cl_null(l_mine.e)   THEN LET l_mine.e   = 0 END IF
   IF cl_null(l_mine.f)   THEN LET l_mine.f   = 0 END IF
   IF cl_null(l_mine.g)   THEN LET l_mine.g   = 0 END IF
   IF cl_null(l_mine.h)   THEN LET l_mine.h   = 0 END IF

#170105-00016#1 mark 換個寫法，最後一張入庫單直接給剩下的金額
#  #把自己扣除
#  LET l_done.sum = l_done.sum - l_mine.sum
#  LET l_done.a   = l_done.a   - l_mine.a
#  LET l_done.b   = l_done.b   - l_mine.b      
#  LET l_done.c   = l_done.c   - l_mine.c      
#  LET l_done.d   = l_done.d   - l_mine.d      
#  LET l_done.e   = l_done.e   - l_mine.e      
#  LET l_done.f   = l_done.f   - l_mine.f      
#  LET l_done.g   = l_done.g   - l_mine.g      
#  LET l_done.h   = l_done.h   - l_mine.h      
#
#  #l_done为已经计算的总量+本次计算的量
#  LET l_done.sum = l_done.sum + r_sum.tot
#  LET l_done.a   = l_done.a   + r_sum.a
#  LET l_done.b   = l_done.b   + r_sum.b
#  LET l_done.c   = l_done.c   + r_sum.c
#  LET l_done.d   = l_done.d   + r_sum.d
#  LET l_done.e   = l_done.e   + r_sum.e
#  LET l_done.f   = l_done.f   + r_sum.f
#  LET l_done.g   = l_done.g   + r_sum.g
#  LET l_done.h   = l_done.h   + r_sum.h
#  
#  #差异1分钱时,处理
#  LET l_sum = l_total.sum + l_done.sum
#  IF l_sum <= 0 THEN
#     LET l_sum = l_sum * -1
#  END IF
#  #161115-00004#1-s-add
#  #判斷最後一張入庫單(所有的工單都有金額了，再來做處理)
#  LET l_cnt = 0
#  SELECT COUNT(1) INTO l_cnt FROM xcck_tmp
#            WHERE xcckent = g_enterprise
#              AND xcckld  = g_ld
#              AND xcck001 = p_xccd001
#              AND xcck003 = g_xcat001
#              AND xcck004 = g_yy
#              AND xcck005 = g_pp
#              AND xcck047 = p_xccd006
#              AND xcck055 IN ('203','205','209') #委外入库/工单入库/重工入库
#              AND xcck202 = 0
#  #161115-00004#1-e-add
#  
# #IF l_sum <= 0.05 THEN
# #IF l_sum <= 0.5 THEN  #mod zhangllc SBS6  小数误差放宽,axcq301是判断误差不超过1，这里先0.5吧
#  IF l_cnt = 1 THEN     #161115-00004#1 add  #l_cnt = 1 判斷是最後一張入庫單再做
#     LET r_sum.tot = r_sum.tot - l_total.sum - l_done.sum
#     LET r_sum.a   = r_sum.a   - l_total.a   - l_done.a
#     LET r_sum.b   = r_sum.b   - l_total.b   - l_done.b
#     LET r_sum.c   = r_sum.c   - l_total.c   - l_done.c
#     LET r_sum.d   = r_sum.d   - l_total.d   - l_done.d
#     LET r_sum.e   = r_sum.e   - l_total.e   - l_done.e
#     LET r_sum.f   = r_sum.f   - l_total.f   - l_done.f
#     LET r_sum.g   = r_sum.g   - l_total.g   - l_done.g
#     LET r_sum.h   = r_sum.h   - l_total.h   - l_done.h
#  END IF
   #170105-00016#1 add-----
   #先調每一張合計的xcck202，避免之後再次被調整
   LET r_sum.tot = r_sum.a+r_sum.b+r_sum.c+r_sum.d+r_sum.e+r_sum.f+r_sum.g+r_sum.h


   #判斷最後一張入庫單(所有的工單都有金額了，再來做處理)
   LET l_cnt = 0
   #171005-00021#1--mark---s
   #SELECT COUNT(1) INTO l_cnt FROM xcck_tmp
   # WHERE xcckent = g_enterprise
   #   AND xcckld  = g_ld
   #   AND xcck001 = p_xccd001
   #   AND xcck003 = g_xcat001
   #   AND xcck004 = g_yy
   #   AND xcck005 = g_pp
   #   AND xcck047 = p_xccd006
   #   AND xcck055 IN ('203','205','209') #委外入库/工单入库/重工入库
   #   AND xcck202 = 0
   #  #170109-00064#1-s-add
   #   AND xcck201 = p_qty
   #   AND xcck201 = (SELECT MAX(xcck201) FROM xcck_tmp
   #                   WHERE xcckent = g_enterprise
   #                     AND xcckld  = g_ld
   #                     AND xcck001 = p_xccd001
   #                     AND xcck003 = g_xcat001
   #                     AND xcck004 = g_yy
   #                     AND xcck005 = g_pp
   #                     AND xcck047 = p_xccd006
   #                     AND xcck055 IN ('203','205','209'))      
   #  #170109-00064#1-e-add     
   #171005-00021#1--mark---e
   #171005-00021#1--add---s
  # EXECUTE s_axcp500_avg_cal_p29 USING p_xccd001,p_xccd006,p_qty,p_xccd001,p_xccd006  #191126-00022#1 mark
    EXECUTE s_axcp500_avg_cal_p29 USING p_xccd001,p_xccd006,p_qty                      #191126-00022# add
                                  INTO l_cnt
   #171005-00021#1--add---e
   #IF l_cnt = 1 THEN  #判斷是最後一張入庫單，把剩下的金額直接給此張入庫單  #210112-00042#1 mark
   #210112-00042#1---add---e
   IF l_cnt = 1 OR (l_total.sum + l_done.sum) * -1 < r_sum.tot
                OR (l_total.a + l_done.a) * -1 < r_sum.a
                OR (l_total.b + l_done.b) * -1 < r_sum.b
                OR (l_total.c + l_done.c) * -1 < r_sum.c
                OR (l_total.d + l_done.d) * -1 < r_sum.d
                OR (l_total.e + l_done.e) * -1 < r_sum.e
                OR (l_total.f + l_done.f) * -1 < r_sum.f
                OR (l_total.g + l_done.g) * -1 < r_sum.g
                OR (l_total.h + l_done.h) * -1 < r_sum.h
   THEN
   #210112-00042#1---add---e   
      LET r_sum.tot = (l_total.sum + l_done.sum) * -1
      LET r_sum.a   = (l_total.a   + l_done.a) * -1
      LET r_sum.b   = (l_total.b   + l_done.b) * -1
      LET r_sum.c   = (l_total.c   + l_done.c) * -1
      LET r_sum.d   = (l_total.d   + l_done.d) * -1
      LET r_sum.e   = (l_total.e   + l_done.e) * -1
      LET r_sum.f   = (l_total.f   + l_done.f) * -1
      LET r_sum.g   = (l_total.g   + l_done.g) * -1
      LET r_sum.h   = (l_total.h   + l_done.h) * -1
   END IF
   #170105-00016#1 add end

   RETURN r_sum.*
      
END FUNCTION

################################################################################
# Descriptions...: 月加权-料件的在制成本计算
# Memo...........:
# Usage..........: CALL s_axcp500_avg_wip(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-08-04 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_wip(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
#   DEFINE l_sfaa          RECORD LIKE sfaa_t.*  #161124-00048#20 mark
   DEFINE l_sfaa           type_g_sfaa  #170605-00013#1-add
   #170605-00013#1-s-mark 改用type方式
   ##161124-00048#20 add(s)
   #DEFINE l_sfaa RECORD  #工單單頭檔
   #    sfaaent LIKE sfaa_t.sfaaent, #企业编号
   #    sfaaownid LIKE sfaa_t.sfaaownid, #资料所有者
   #    sfaaowndp LIKE sfaa_t.sfaaowndp, #资料所有部门
   #    sfaacrtid LIKE sfaa_t.sfaacrtid, #资料录入者
   #    sfaacrtdp LIKE sfaa_t.sfaacrtdp, #资料录入部门
   #    sfaacrtdt LIKE sfaa_t.sfaacrtdt, #资料创建日
   #    sfaamodid LIKE sfaa_t.sfaamodid, #资料更改者
   #    sfaamoddt LIKE sfaa_t.sfaamoddt, #最近更改日
   #    sfaacnfid LIKE sfaa_t.sfaacnfid, #资料审核者
   #    sfaacnfdt LIKE sfaa_t.sfaacnfdt, #数据审核日
   #    sfaapstid LIKE sfaa_t.sfaapstid, #资料过账者
   #    sfaapstdt LIKE sfaa_t.sfaapstdt, #资料过账日
   #    sfaastus LIKE sfaa_t.sfaastus, #状态码
   #    sfaasite LIKE sfaa_t.sfaasite, #营运据点
   #    sfaadocno LIKE sfaa_t.sfaadocno, #单号
   #    sfaadocdt LIKE sfaa_t.sfaadocdt, #单据日期
   #    sfaa001 LIKE sfaa_t.sfaa001, #变更版本
   #    sfaa002 LIKE sfaa_t.sfaa002, #生管人员
   #    sfaa003 LIKE sfaa_t.sfaa003, #工单类型
   #    sfaa004 LIKE sfaa_t.sfaa004, #发料制度
   #    sfaa005 LIKE sfaa_t.sfaa005, #工单来源
   #    sfaa006 LIKE sfaa_t.sfaa006, #来源单号
   #    sfaa007 LIKE sfaa_t.sfaa007, #来源项次
   #    sfaa008 LIKE sfaa_t.sfaa008, #来源项序
   #    sfaa009 LIKE sfaa_t.sfaa009, #参考客户
   #    sfaa010 LIKE sfaa_t.sfaa010, #生产料号
   #    sfaa011 LIKE sfaa_t.sfaa011, #特性
   #    sfaa012 LIKE sfaa_t.sfaa012, #生产数量
   #    sfaa013 LIKE sfaa_t.sfaa013, #生产单位
   #    sfaa014 LIKE sfaa_t.sfaa014, #BOM版本
   #    sfaa015 LIKE sfaa_t.sfaa015, #BOM有效日期
   #    sfaa016 LIKE sfaa_t.sfaa016, #工艺编号
   #    sfaa017 LIKE sfaa_t.sfaa017, #部门供应商
   #    sfaa018 LIKE sfaa_t.sfaa018, #协作据点
   #    sfaa019 LIKE sfaa_t.sfaa019, #预计开工日
   #    sfaa020 LIKE sfaa_t.sfaa020, #预计完工日
   #    sfaa021 LIKE sfaa_t.sfaa021, #母工单单号
   #    sfaa022 LIKE sfaa_t.sfaa022, #参考原始单号
   #    sfaa023 LIKE sfaa_t.sfaa023, #参考原始项次
   #    sfaa024 LIKE sfaa_t.sfaa024, #参考原始项序
   #    sfaa025 LIKE sfaa_t.sfaa025, #前工单单号
   #    sfaa026 LIKE sfaa_t.sfaa026, #料表批号(PBI)
   #    sfaa027 LIKE sfaa_t.sfaa027, #No Use
   #    sfaa028 LIKE sfaa_t.sfaa028, #项目编号
   #    sfaa029 LIKE sfaa_t.sfaa029, #WBS
   #    sfaa030 LIKE sfaa_t.sfaa030, #活动
   #    sfaa031 LIKE sfaa_t.sfaa031, #理由码
   #    sfaa032 LIKE sfaa_t.sfaa032, #紧急比率
   #    sfaa033 LIKE sfaa_t.sfaa033, #优先级
   #    sfaa034 LIKE sfaa_t.sfaa034, #预计入库库位
   #    sfaa035 LIKE sfaa_t.sfaa035, #预计入库储位
   #    sfaa036 LIKE sfaa_t.sfaa036, #手册编号
   #    sfaa037 LIKE sfaa_t.sfaa037, #保税核准文号
   #    sfaa038 LIKE sfaa_t.sfaa038, #保税核销
   #    sfaa039 LIKE sfaa_t.sfaa039, #备料已生成
   #    sfaa040 LIKE sfaa_t.sfaa040, #生产工艺路线已审核
   #    sfaa041 LIKE sfaa_t.sfaa041, #冻结
   #    sfaa042 LIKE sfaa_t.sfaa042, #返工
   #    sfaa043 LIKE sfaa_t.sfaa043, #备置
   #    sfaa044 LIKE sfaa_t.sfaa044, #FQC
   #    sfaa045 LIKE sfaa_t.sfaa045, #实际开始发料日
   #    sfaa046 LIKE sfaa_t.sfaa046, #最后入库日
   #    sfaa047 LIKE sfaa_t.sfaa047, #生管结案日
   #    sfaa048 LIKE sfaa_t.sfaa048, #成本结案日
   #    sfaa049 LIKE sfaa_t.sfaa049, #已发料套数
   #    sfaa050 LIKE sfaa_t.sfaa050, #已入库合格量
   #    sfaa051 LIKE sfaa_t.sfaa051, #已入库不合格量
   #    sfaa052 LIKE sfaa_t.sfaa052, #Bouns
   #    sfaa053 LIKE sfaa_t.sfaa053, #工单转入数量
   #    sfaa054 LIKE sfaa_t.sfaa054, #工单转出数量
   #    sfaa055 LIKE sfaa_t.sfaa055, #下线数量
   #    sfaa056 LIKE sfaa_t.sfaa056, #报废数量
   #    sfaa057 LIKE sfaa_t.sfaa057, #委外类型
   #    sfaa058 LIKE sfaa_t.sfaa058, #参考数量
   #    sfaa059 LIKE sfaa_t.sfaa059, #预计入库批号
   #    sfaa060 LIKE sfaa_t.sfaa060, #参考单位
   #    sfaa061 LIKE sfaa_t.sfaa061, #工艺
   #    sfaa062 LIKE sfaa_t.sfaa062, #纳入APS计算
   #    sfaa063 LIKE sfaa_t.sfaa063, #来源分批序
   #    sfaa064 LIKE sfaa_t.sfaa064, #参考原始分批序
   #    sfaa065 LIKE sfaa_t.sfaa065, #生管结案状态
   #    sfaa066 LIKE sfaa_t.sfaa066, #多角流程编号
   #    sfaa067 LIKE sfaa_t.sfaa067, #多角流进程号
   #    sfaa068 LIKE sfaa_t.sfaa068, #成本中心
   #    sfaa069 LIKE sfaa_t.sfaa069, #可供给量
   #    sfaa070 LIKE sfaa_t.sfaa070, #原始预计完工日期
   #    sfaa071 LIKE sfaa_t.sfaa071, #齐料套数
   #    sfaa072 LIKE sfaa_t.sfaa072  #保税否
   #END RECORD
   ##161124-00048#20 add(e)
   #170605-00013#1-e-mark
   DEFINE l_close         LIKE type_t.chr1
   DEFINE l_date          LIKE type_t.dat
   
#   WHENEVER ERROR CONTINUE
#   LET r_success = FALSE
#   LET l_date = g_edate + 1
#   
#   LET g_stat_cnt = 0
#   LET g_stat_begin = TIME
#   FOREACH s_axcp500_avg_sfaa_cs1 USING g_rec.imaa001
#                                   INTO l_sfaa.*
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = 'FOREACH s_axcp500_avg_sfaa_cs1'
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()   
#         CONTINUE FOREACH    
#      END IF
#      
#      CALL s_axcp500_wip_1(p_seq,l_sfaa.sfaasite,l_sfaa.sfaadocno,'','','','',l_sfaa.sfaa010)     #主件 - 投入工时/入库数量                 
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH    
#      END IF
#      
#      CALL s_axcp500_wip_2()                            #元件投入 - 上期结转/材料/人工/加工/制费/调整 
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH    
#      END IF
#      
#      CALL s_axcp500_wip_3()                            #写xccz_t(工单备料对应的发料明细) 同一料件替代多个料件在转出时的处理逻辑 
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH    
#      END IF
#      
#      LET l_close = 'N'  #结案否
#      IF l_sfaa.sfaa048 >= g_bdate AND l_sfaa.sfaa048 < l_date THEN
#         LET l_close = 'Y'
#      END IF
#      CALL s_axcp500_wip_4(l_close,0)                   #元件转出
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH    
#      END IF
#      
#      CALL s_axcp500_wip_5()                            #主件转出
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH    
#      END IF
#      
#      CALL s_axcp500_wip_del(p_seq,l_sfaa.sfaasite,l_sfaa.sfaadocno,'','','','',l_sfaa.sfaa010)    #本期是否有异动,若无则DELETE
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH    
#      END IF
#
#      LET g_stat_cnt = g_stat_cnt + 1
#   END FOREACH
#   
#   LET g_stat_end = TIME
#   CALL s_axcp500_avg_stats_cnt(1,g_stat_begin,g_stat_end,g_stat_cnt)   
#   
#   LET r_success = TRUE
#   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 月加权-取成本单价
# Memo...........:
# Usage..........: CALL s_axcp500_avg_get_cost(p_imaa001,p_xccc001,p_xccc002,p_xccc003,p_xccc004,p_xccc005,p_xccc006,p_xccc007,p_xccc008)
#                      RETURNING r_success,r_avg
# Input parameter: p_imaa001      主件编号
#                : p_xccc001      记帐本位币顺序
#                : p_xccc002      成本域
#                : p_xccc003      成本计算类型
#                : p_xccc004      年度
#                : p_xccc005      期别
#                : p_xccc006      料件
#                : p_xccc007      特征
#                : p_xccc008      批次
# Return code....: r_success      成功否标识符
#                : r_avg          成本
# Date & Author..: 2014-08-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_get_cost(p_imaa001,p_xccc001,p_xccc002,p_xccc003,p_xccc004,p_xccc005,p_xccc006,p_xccc007,p_xccc008)
   DEFINE p_imaa001           LIKE imaa_t.imaa001
   DEFINE p_xccc001           LIKE xccc_t.xccc001
   DEFINE p_xccc002           LIKE xccc_t.xccc002
   DEFINE p_xccc003           LIKE xccc_t.xccc003
   DEFINE p_xccc004           LIKE xccc_t.xccc004
   DEFINE p_xccc005           LIKE xccc_t.xccc005
   DEFINE p_xccc006           LIKE xccc_t.xccc006
   DEFINE p_xccc007           LIKE xccc_t.xccc007
   DEFINE p_xccc008           LIKE xccc_t.xccc008
   DEFINE r_success           LIKE type_t.num5
   DEFINE r_avg               type_g_std_cost
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET r_avg.sum = 0   LET r_avg.a   = 0   LET r_avg.b   = 0   LET r_avg.c   = 0   LET r_avg.d   = 0     
   LET r_avg.e   = 0   LET r_avg.f   = 0   LET r_avg.g   = 0   LET r_avg.h   = 0

   SELECT nvl(xccc280,0), nvl(xccc280a,0),nvl(xccc280b,0),nvl(xccc280c,0),
          nvl(xccc280d,0),nvl(xccc280e,0),nvl(xccc280f,0),nvl(xccc280g,0),nvl(xccc280h,0)
     INTO r_avg.*
     FROM xccc_tmp
    WHERE xcccent = g_enterprise
      AND xcccld  = g_ld
      AND xccc001 = p_xccc001
      AND xccc002 = p_xccc002 
      AND xccc003 = p_xccc003
      AND xccc004 = p_xccc004
      AND xccc005 = p_xccc005
      AND xccc006 = p_xccc006
      AND xccc007 = p_xccc007
      AND xccc008 = p_xccc008
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      #计算主件%1的过程中，无法取得元件编号=%2 的成本资料
      LET g_errparam.code   = 'axc-00518'
      LET g_errparam.extend = ''
      LET g_errparam.replace[1] = ''
      LET g_errparam.replace[2] = p_imaa001
      LET g_errparam.replace[3] = p_xccc006
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_str = cl_getmsg('axc-00518',g_lang)
      LET g_str = cl_err_replace_msg(g_str)
      CALL s_axcp500_ins_error('','','','','','','','',p_xccc006,p_xccc007,
                               p_xccc008,'','axc-00518',g_str,'')      
      RETURN r_success,r_avg.*
   END IF
   
#   IF cl_null(r_avg.sum) THEN LET r_avg.sum = 0 END IF
#   IF cl_null(r_avg.a)   THEN LET r_avg.a   = 0 END IF
#   IF cl_null(r_avg.b)   THEN LET r_avg.b   = 0 END IF
#   IF cl_null(r_avg.c)   THEN LET r_avg.c   = 0 END IF
#   IF cl_null(r_avg.d)   THEN LET r_avg.d   = 0 END IF
#   IF cl_null(r_avg.e)   THEN LET r_avg.e   = 0 END IF
#   IF cl_null(r_avg.f)   THEN LET r_avg.f   = 0 END IF
#   IF cl_null(r_avg.g)   THEN LET r_avg.g   = 0 END IF
#   IF cl_null(r_avg.h)   THEN LET r_avg.h   = 0 END IF

   LET r_avg.sum = r_avg.a + r_avg.b + r_avg.c + r_avg.d + 
                   r_avg.e + r_avg.f + r_avg.g + r_avg.h
   LET r_success = TRUE
   RETURN r_success,r_avg.*
  
END FUNCTION

################################################################################
# Descriptions...: 得到xccc_t的资料
# Memo...........:
# Usage..........: CALL s_axcp500_avg_set_xccc(p_flag,p_seq,p_xccc002,p_xccc006,p_xccc007,p_xccc008)
#                       RETURNING r_success
# Input parameter: p_flag         '1'一般   '2'联产品  '3'重工
#                : p_seq          记帐本位币顺序
#                : p_xccc002      成本域
#                : p_xccc006      料件编号
#                : p_xccc007      特征
#                : p_xccc008      批号
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-08-11 By Carrier
# Modify.........:
#                  zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_set_xccc(p_flag,p_seq,p_xccc002,p_xccc006,p_xccc007,p_xccc008)
   DEFINE p_flag          LIKE type_t.chr1
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE p_xccc002       LIKE xccc_t.xccc002
   DEFINE p_xccc006       LIKE xccc_t.xccc006
   DEFINE p_xccc007       LIKE xccc_t.xccc007
   DEFINE p_xccc008       LIKE xccc_t.xccc008
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_qty           LIKE xccc_t.xccc201
   DEFINE l_xccc280       LIKE xccc_t.xccc280
   #DEFINE l_xcck          RECORD LIKE xcck_t.*
   DEFINE l_xcck          type_xcck  #mod zhangllc 151214 比原来多了xccktmp1 库存管理特征
#   
#   WHENEVER ERROR CONTINUE
#   LET r_success = FALSE        
#
#   LET g_stat_cnt = 0
#   LET g_stat_begin = TIME
#   
#   #每次进来把g_xccc清空,以免以前的结果影响月加权平均
#   INITIALIZE g_xccc.* TO NULL
#   
#   IF p_flag = '1' OR p_flag = '2' THEN
#      IF p_flag = '1' THEN
#         CALL s_axcp500_avg_init_xccc0()
#         LET g_xccc.xcccent  = g_enterprise         #企业编号
#         LET g_xccc.xccccomp = g_comp               #法人组织
#         LET g_xccc.xcccld   = g_ld                 #账套
#         LET g_xccc.xccc001  = p_seq                #账套本位币顺序
#         LET g_xccc.xccc002  = p_xccc002            #成本域
#         LET g_xccc.xccc003  = g_xcat001            #成本计算类型
#         LET g_xccc.xccc004  = g_yy                 #年度
#         LET g_xccc.xccc005  = g_pp                 #期别
#         LET g_xccc.xccc006  = p_xccc006            #料号
#         LET g_xccc.xccc007  = p_xccc007            #产品特征
#         LET g_xccc.xccc008  = p_xccc008            #批号
#         LET g_xccc.xccc010  = g_curr[p_seq].curr   #核算币别 
#         LET g_xccc.xccctime = cl_get_current()     #最近成本计算时间                
#      
#         #取得xccc_t的期初值
#         CALL s_axcp500_avg_get_last_xccc_balance(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008)
#              RETURNING g_xccc.xccc101, g_xccc.xccc102, g_xccc.xccc102a,g_xccc.xccc102b,g_xccc.xccc102c,
#                        g_xccc.xccc102d,g_xccc.xccc102e,g_xccc.xccc102f,g_xccc.xccc102g,g_xccc.xccc102h
#         
#         #本期调整入库 '213'
#         CALL s_axcp500_get_adjust(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008)
#      
#      ELSE
#      
#         CALL s_axcp500_get_xccc(p_seq,p_xccc002,p_xccc006,p_xccc007,p_xccc008)
#              RETURNING g_xccc.*  
#         IF p_flag = '2' THEN
#            CALL s_axcp500_avg_init_xccc1()
#            CALL s_axcp500_avg_init_xccc2()
#            CALL s_axcp500_avg_init_xccc3()
#         END IF
#      END IF
#      
#      # 处理的类型为 201(采购入库) 203(委外入库) 205(一般工单入库)
#      #             211(杂入) 217(其他入库) 
#      CALL s_axcp500_avg_get_xccc_from_xcck('1')
#           RETURNING l_success
#      IF NOT l_success THEN
#   #     RETURN r_success
#      END IF
#
#      #取得平均单价
#      CALL s_axcp500_avg_get_avg_cost(p_seq) 
#      
#      FOREACH s_axcp500_avg_set_xccc_cs1 USING g_xccc.xccc001,  g_xccc.xccc002,  g_xccc.xccc003,  g_xccc.xccc004,  
#                                               g_xccc.xccc005,  g_xccc.xccc006,  g_xccc.xccc007,  g_xccc.xccc008 
#                                          INTO l_xcck.*
#              LET l_xcck.xcck202a = l_xcck.xcck201 * g_xccc.xccc280a
#              LET l_xcck.xcck202b = l_xcck.xcck201 * g_xccc.xccc280b
#              LET l_xcck.xcck202c = l_xcck.xcck201 * g_xccc.xccc280c
#              LET l_xcck.xcck202d = l_xcck.xcck201 * g_xccc.xccc280d
#              LET l_xcck.xcck202e = l_xcck.xcck201 * g_xccc.xccc280e
#              LET l_xcck.xcck202f = l_xcck.xcck201 * g_xccc.xccc280f
#              LET l_xcck.xcck202g = l_xcck.xcck201 * g_xccc.xccc280g
#              LET l_xcck.xcck202h = l_xcck.xcck201 * g_xccc.xccc280h
#              
#              CALL s_num_round(g_round_type,l_xcck.xcck202a,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202a    #本期异动金额-材料       
#              CALL s_num_round(g_round_type,l_xcck.xcck202b,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202b    #本期异动金额-人工       
#              CALL s_num_round(g_round_type,l_xcck.xcck202c,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202c    #本期异动金额-加工费     
#              CALL s_num_round(g_round_type,l_xcck.xcck202d,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202d    #本期异动金额-制费一     
#              CALL s_num_round(g_round_type,l_xcck.xcck202e,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202e    #本期异动金额-制费二     
#              CALL s_num_round(g_round_type,l_xcck.xcck202f,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202f    #本期异动金额-制费三     
#              CALL s_num_round(g_round_type,l_xcck.xcck202g,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202g    #本期异动金额-制费四     
#              CALL s_num_round(g_round_type,l_xcck.xcck202h,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202h    #本期异动金额-制费五    
#
#              #本期异动金额
#              LET l_xcck.xcck202  = l_xcck.xcck202a + l_xcck.xcck202b + l_xcck.xcck202c +
#                                    l_xcck.xcck202d + l_xcck.xcck202e + l_xcck.xcck202f +
#                                    l_xcck.xcck202g + l_xcck.xcck202h
#              CALL s_num_round(g_round_type,l_xcck.xcck202,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202 
#           
#              LET l_xcck.xcck282   = g_xccc.xccc280                                           #本期异动单价
#              LET l_xcck.xcck282a  = g_xccc.xccc280a                                          #本期异动单价-材料
#              LET l_xcck.xcck282b  = g_xccc.xccc280b                                          #本期异动单价-人工
#              LET l_xcck.xcck282c  = g_xccc.xccc280c                                          #本期异动单价-加工
#              LET l_xcck.xcck282d  = g_xccc.xccc280d                                          #本期异动单价-制费一
#              LET l_xcck.xcck282e  = g_xccc.xccc280e                                          #本期异动单价-制费二
#              LET l_xcck.xcck282f  = g_xccc.xccc280f                                          #本期异动单价-制费三
#              LET l_xcck.xcck282g  = g_xccc.xccc280g                                          #本期异动单价-制费四
#              LET l_xcck.xcck282h  = g_xccc.xccc280h                                          #本期异动单价-制费五
# 
#              LET l_xcck.xcck901   = l_xcck.xcck201                       #结存数量                   
#              LET l_xcck.xcck902   = l_xcck.xcck202                       #结存金额                   
#              LET l_xcck.xcck902a  = l_xcck.xcck202a                      #结存金额-材料               
#              LET l_xcck.xcck902b  = l_xcck.xcck202b                      #结存金额-人工               
#              LET l_xcck.xcck902c  = l_xcck.xcck202c                      #结存金额-加工费             
#              LET l_xcck.xcck902d  = l_xcck.xcck202d                      #结存金额-制费一             
#              LET l_xcck.xcck902e  = l_xcck.xcck202e                      #结存金额-制费二             
#              LET l_xcck.xcck902f  = l_xcck.xcck202f                      #结存金额-制费三             
#              LET l_xcck.xcck902g  = l_xcck.xcck202g                      #结存金额-制费四             
#              LET l_xcck.xcck902h  = l_xcck.xcck202h                      #结存金额-制费五  
#              
#              LET l_xcck.xcck980   = l_xcck.xcck282                       #结存单位成本         
#              LET l_xcck.xcck980a  = l_xcck.xcck282a                      #结存单位成本-材料    
#              LET l_xcck.xcck980b  = l_xcck.xcck282b                      #结存单位成本-人工    
#              LET l_xcck.xcck980c  = l_xcck.xcck282c                      #结存单位成本-加工费  
#              LET l_xcck.xcck980d  = l_xcck.xcck282d                      #结存单位成本-制费一  
#              LET l_xcck.xcck980e  = l_xcck.xcck282e                      #结存单位成本-制费二  
#              LET l_xcck.xcck980f  = l_xcck.xcck282f                      #结存单位成本-制费三  
#              LET l_xcck.xcck980g  = l_xcck.xcck282g                      #结存单位成本-制费四  
#              LET l_xcck.xcck980h  = l_xcck.xcck282h                      #结存单位成本-制费五  
#      
#              CALL s_axcp500_ins_or_upd_xcck(l_xcck.*)
#                   RETURNING l_success
#              IF NOT l_success THEN
#                 RETURN r_success
#              END IF
#      END FOREACH
#      
#      
##      #更新 207(重工领用)/215(销退)
##      EXECUTE s_axcp500_avg_cal_p25 USING g_xccc.xccc280,  g_xccc.xccc280a, g_xccc.xccc280b, g_xccc.xccc280c,
##                                          g_xccc.xccc280d, g_xccc.xccc280e, g_xccc.xccc280f, g_xccc.xccc280g, g_xccc.xccc280h,
##                                          g_xccc.xccc280,  g_xccc.xccc280a, g_xccc.xccc280b, g_xccc.xccc280c,
##                                          g_xccc.xccc280d, g_xccc.xccc280e, g_xccc.xccc280f, g_xccc.xccc280g, g_xccc.xccc280h,      
##                                          g_xccc.xccc280,  g_xccc.xccc280a, g_xccc.xccc280b, g_xccc.xccc280c,
##                                          g_xccc.xccc280d, g_xccc.xccc280e, g_xccc.xccc280f, g_xccc.xccc280g, g_xccc.xccc280h,      
##                                          g_xccc.xccc280,  g_xccc.xccc280a, g_xccc.xccc280b, g_xccc.xccc280c,
##                                          g_xccc.xccc280d, g_xccc.xccc280e, g_xccc.xccc280f, g_xccc.xccc280g, g_xccc.xccc280h,      
##                                          g_xccc.xccc001,  g_xccc.xccc002,  g_xccc.xccc003,  g_xccc.xccc004,  
##                                          g_xccc.xccc005,  g_xccc.xccc006,  g_xccc.xccc007,  g_xccc.xccc008      
##      IF SQLCA.sqlcode THEN
##         INITIALIZE g_errparam TO NULL
##         #计算主件%1的过程中，无法取得元件编号=%2 的成本资料
##         LET g_errparam.code   = SQLCA.sqlcode
##         LET g_errparam.extend = 'EXCUTE s_axcp500_avg_cal_p25'
##         LET g_errparam.popup  = TRUE
##         CALL cl_err()   
##         CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
##                                  '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
##                                  SQLCA.sqlcode,'','EXCUTE s_axcp500_avg_cal_p25')
###        RETURN r_success
##      END IF  
#
##      UPDATE xcck_tmp SET xcck202  = xcck201 * g_xccc.xccc280,
##                          xcck202a = xcck201 * g_xccc.xccc280a,
##                          xcck202b = xcck201 * g_xccc.xccc280b,
##                          xcck202c = xcck201 * g_xccc.xccc280c,
##                          xcck202d = xcck201 * g_xccc.xccc280d,
##                          xcck202e = xcck201 * g_xccc.xccc280e,
##                          xcck202f = xcck201 * g_xccc.xccc280f,
##                          xcck202g = xcck201 * g_xccc.xccc280g,
##                          xcck202h = xcck201 * g_xccc.xccc280h,
##                          xcck282  = g_xccc.xccc280,
##                          xcck282a = g_xccc.xccc280a,
##                          xcck282b = g_xccc.xccc280b,
##                          xcck282c = g_xccc.xccc280c,
##                          xcck282d = g_xccc.xccc280d,
##                          xcck282e = g_xccc.xccc280e,
##                          xcck282f = g_xccc.xccc280f,
##                          xcck282g = g_xccc.xccc280g,
##                          xcck282h = g_xccc.xccc280h,
##                          xcck902  = xcck201 * g_xccc.xccc280,
##                          xcck902a = xcck201 * g_xccc.xccc280a,                     
##                          xcck902b = xcck201 * g_xccc.xccc280b,                     
##                          xcck902c = xcck201 * g_xccc.xccc280c,                     
##                          xcck902d = xcck201 * g_xccc.xccc280d,                     
##                          xcck902e = xcck201 * g_xccc.xccc280e,                     
##                          xcck902f = xcck201 * g_xccc.xccc280f,                     
##                          xcck902g = xcck201 * g_xccc.xccc280g,                     
##                          xcck902h = xcck201 * g_xccc.xccc280h,
##                          xcck980  = g_xccc.xccc280,
##                          xcck980a = g_xccc.xccc280a,
##                          xcck980b = g_xccc.xccc280b,
##                          xcck980c = g_xccc.xccc280c,
##                          xcck980d = g_xccc.xccc280d,
##                          xcck980e = g_xccc.xccc280e,
##                          xcck980f = g_xccc.xccc280f,
##                          xcck980g = g_xccc.xccc280g,
##                          xcck980h = g_xccc.xccc280h 
##       WHERE xcckent = g_enterprise
##         AND xcckld  = g_ld
##         AND xcck001 = g_xccc.xccc001
##         AND xcck002 = g_xccc.xccc002
##         AND xcck003 = g_xccc.xccc003
##         AND xcck004 = g_xccc.xccc004
##         AND xcck005 = g_xccc.xccc005
##         AND xcck010 = g_xccc.xccc006
##         AND xcck011 = g_xccc.xccc007
##         AND xcck017 = g_xccc.xccc008
##         AND xcck055 IN ('207','215') 
##      IF SQLCA.sqlcode THEN
##         INITIALIZE g_errparam TO NULL
##         #计算主件%1的过程中，无法取得元件编号=%2 的成本资料
##         LET g_errparam.code   = SQLCA.sqlcode
##         LET g_errparam.extend = 'UPDATE xcck202'
##         LET g_errparam.popup  = TRUE
##         CALL cl_err()   
##         CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
##                                  '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
##                                  SQLCA.sqlcode,'','UPDATE xcck202')
###        RETURN r_success
##      END IF         
#      
#      #处理类型:207 本期重工领出;215 本期销退入库
#      CALL s_axcp500_avg_get_xccc_from_xcck('2')
#           RETURNING l_success
#      IF NOT l_success THEN
##        RETURN r_success
#      END IF
#
#
#   ELSE
#      CALL s_axcp500_get_xccc(p_seq,p_xccc002,p_xccc006,p_xccc007,p_xccc008)
#           RETURNING g_xccc.*  
#      
#      #本期重工入库 '209'
#      IF p_flag = '3' THEN
#         CALL s_axcp500_avg_init_xccc3()
#         CALL s_axcp500_avg_get_xccc_from_xcck('3')
#              RETURNING l_success
#         IF NOT l_success THEN
##           RETURN r_success
#         END IF   
#         
#         #取得平均单价
#         CALL s_axcp500_avg_get_avg_cost(p_seq) 
#      
#      END IF      
#   END IF
#
#   FOREACH s_axcp500_avg_set_xccc_cs2 USING g_xccc.xccc001,  g_xccc.xccc002,  g_xccc.xccc003,  g_xccc.xccc004,  
#                                            g_xccc.xccc005,  g_xccc.xccc006,  g_xccc.xccc007,  g_xccc.xccc008 
#                                       INTO l_xcck.*
#           LET l_xcck.xcck202a = l_xcck.xcck201 * g_xccc.xccc280a
#           LET l_xcck.xcck202b = l_xcck.xcck201 * g_xccc.xccc280b
#           LET l_xcck.xcck202c = l_xcck.xcck201 * g_xccc.xccc280c
#           LET l_xcck.xcck202d = l_xcck.xcck201 * g_xccc.xccc280d
#           LET l_xcck.xcck202e = l_xcck.xcck201 * g_xccc.xccc280e
#           LET l_xcck.xcck202f = l_xcck.xcck201 * g_xccc.xccc280f
#           LET l_xcck.xcck202g = l_xcck.xcck201 * g_xccc.xccc280g
#           LET l_xcck.xcck202h = l_xcck.xcck201 * g_xccc.xccc280h
#           
#           CALL s_num_round(g_round_type,l_xcck.xcck202a,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202a    #本期异动金额-材料       
#           CALL s_num_round(g_round_type,l_xcck.xcck202b,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202b    #本期异动金额-人工       
#           CALL s_num_round(g_round_type,l_xcck.xcck202c,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202c    #本期异动金额-加工费     
#           CALL s_num_round(g_round_type,l_xcck.xcck202d,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202d    #本期异动金额-制费一     
#           CALL s_num_round(g_round_type,l_xcck.xcck202e,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202e    #本期异动金额-制费二     
#           CALL s_num_round(g_round_type,l_xcck.xcck202f,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202f    #本期异动金额-制费三     
#           CALL s_num_round(g_round_type,l_xcck.xcck202g,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202g    #本期异动金额-制费四     
#           CALL s_num_round(g_round_type,l_xcck.xcck202h,g_curr[p_seq].digit2)   RETURNING l_xcck.xcck202h    #本期异动金额-制费五    
#
#           #本期异动金额
#           LET l_xcck.xcck202  = l_xcck.xcck202a + l_xcck.xcck202b + l_xcck.xcck202c +
#                                 l_xcck.xcck202d + l_xcck.xcck202e + l_xcck.xcck202f +
#                                 l_xcck.xcck202g + l_xcck.xcck202h
#           CALL s_num_round(g_round_type,l_xcck.xcck202,g_curr[p_seq].digit2) RETURNING l_xcck.xcck202 
#        
#           LET l_xcck.xcck282   = g_xccc.xccc280                       #本期异动单价
#           LET l_xcck.xcck282a  = g_xccc.xccc280a                      #本期异动单价-材料
#           LET l_xcck.xcck282b  = g_xccc.xccc280b                      #本期异动单价-人工
#           LET l_xcck.xcck282c  = g_xccc.xccc280c                      #本期异动单价-加工
#           LET l_xcck.xcck282d  = g_xccc.xccc280d                      #本期异动单价-制费一
#           LET l_xcck.xcck282e  = g_xccc.xccc280e                      #本期异动单价-制费二
#           LET l_xcck.xcck282f  = g_xccc.xccc280f                      #本期异动单价-制费三
#           LET l_xcck.xcck282g  = g_xccc.xccc280g                      #本期异动单价-制费四
#           LET l_xcck.xcck282h  = g_xccc.xccc280h                      #本期异动单价-制费五
#
#           LET l_xcck.xcck901   = l_xcck.xcck201                       #结存数量                   
#           LET l_xcck.xcck902   = l_xcck.xcck202                       #结存金额                   
#           LET l_xcck.xcck902a  = l_xcck.xcck202a                      #结存金额-材料               
#           LET l_xcck.xcck902b  = l_xcck.xcck202b                      #结存金额-人工               
#           LET l_xcck.xcck902c  = l_xcck.xcck202c                      #结存金额-加工费             
#           LET l_xcck.xcck902d  = l_xcck.xcck202d                      #结存金额-制费一             
#           LET l_xcck.xcck902e  = l_xcck.xcck202e                      #结存金额-制费二             
#           LET l_xcck.xcck902f  = l_xcck.xcck202f                      #结存金额-制费三             
#           LET l_xcck.xcck902g  = l_xcck.xcck202g                      #结存金额-制费四             
#           LET l_xcck.xcck902h  = l_xcck.xcck202h                      #结存金额-制费五  
#           
#           LET l_xcck.xcck980   = l_xcck.xcck282                       #结存单位成本         
#           LET l_xcck.xcck980a  = l_xcck.xcck282a                      #结存单位成本-材料    
#           LET l_xcck.xcck980b  = l_xcck.xcck282b                      #结存单位成本-人工    
#           LET l_xcck.xcck980c  = l_xcck.xcck282c                      #结存单位成本-加工费  
#           LET l_xcck.xcck980d  = l_xcck.xcck282d                      #结存单位成本-制费一  
#           LET l_xcck.xcck980e  = l_xcck.xcck282e                      #结存单位成本-制费二  
#           LET l_xcck.xcck980f  = l_xcck.xcck282f                      #结存单位成本-制费三  
#           LET l_xcck.xcck980g  = l_xcck.xcck282g                      #结存单位成本-制费四  
#           LET l_xcck.xcck980h  = l_xcck.xcck282h                      #结存单位成本-制费五  
#   
#           CALL s_axcp500_ins_or_upd_xcck(l_xcck.*)
#                RETURNING l_success
#           IF NOT l_success THEN
#              RETURN r_success
#           END IF
#   END FOREACH
##   #更新出项
##   EXECUTE s_axcp500_avg_cal_p26 USING g_xccc.xccc280,  g_xccc.xccc280a, g_xccc.xccc280b, g_xccc.xccc280c,
##                                       g_xccc.xccc280d, g_xccc.xccc280e, g_xccc.xccc280f, g_xccc.xccc280g, g_xccc.xccc280h,
##                                       g_xccc.xccc280,  g_xccc.xccc280a, g_xccc.xccc280b, g_xccc.xccc280c,
##                                       g_xccc.xccc280d, g_xccc.xccc280e, g_xccc.xccc280f, g_xccc.xccc280g, g_xccc.xccc280h,      
##                                       g_xccc.xccc280,  g_xccc.xccc280a, g_xccc.xccc280b, g_xccc.xccc280c,
##                                       g_xccc.xccc280d, g_xccc.xccc280e, g_xccc.xccc280f, g_xccc.xccc280g, g_xccc.xccc280h,      
##                                       g_xccc.xccc280,  g_xccc.xccc280a, g_xccc.xccc280b, g_xccc.xccc280c,
##                                       g_xccc.xccc280d, g_xccc.xccc280e, g_xccc.xccc280f, g_xccc.xccc280g, g_xccc.xccc280h,      
##                                       g_xccc.xccc001,  g_xccc.xccc002,  g_xccc.xccc003,  g_xccc.xccc004,  
##                                       g_xccc.xccc005,  g_xccc.xccc006,  g_xccc.xccc007,  g_xccc.xccc008     
##   IF SQLCA.sqlcode THEN
##      INITIALIZE g_errparam TO NULL
##      #计算主件%1的过程中，无法取得元件编号=%2 的成本资料
##      LET g_errparam.code   = SQLCA.sqlcode
##      LET g_errparam.extend = 'EXCUTE s_axcp500_avg_cal_p26'
##      LET g_errparam.popup  = TRUE
##      CALL cl_err()   
##      CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
##                               '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
##                               SQLCA.sqlcode,'','EXCUTE s_axcp500_avg_cal_p26')
###     RETURN r_success
##   END IF     
##   UPDATE xcck_tmp SET xcck202  = xcck201 * g_xccc.xccc280,
##                       xcck202a = xcck201 * g_xccc.xccc280a,
##                       xcck202b = xcck201 * g_xccc.xccc280b,
##                       xcck202c = xcck201 * g_xccc.xccc280c,
##                       xcck202d = xcck201 * g_xccc.xccc280d,
##                       xcck202e = xcck201 * g_xccc.xccc280e,
##                       xcck202f = xcck201 * g_xccc.xccc280f,
##                       xcck202g = xcck201 * g_xccc.xccc280g,
##                       xcck202h = xcck201 * g_xccc.xccc280h,
##                       xcck282  = g_xccc.xccc280,
##                       xcck282a = g_xccc.xccc280a,
##                       xcck282b = g_xccc.xccc280b,
##                       xcck282c = g_xccc.xccc280c,
##                       xcck282d = g_xccc.xccc280d,
##                       xcck282e = g_xccc.xccc280e,
##                       xcck282f = g_xccc.xccc280f,
##                       xcck282g = g_xccc.xccc280g,
##                       xcck282h = g_xccc.xccc280h,
##                       xcck902  = xcck201 * g_xccc.xccc280,
##                       xcck902a = xcck201 * g_xccc.xccc280a,                     
##                       xcck902b = xcck201 * g_xccc.xccc280b,                     
##                       xcck902c = xcck201 * g_xccc.xccc280c,                     
##                       xcck902d = xcck201 * g_xccc.xccc280d,                     
##                       xcck902e = xcck201 * g_xccc.xccc280e,                     
##                       xcck902f = xcck201 * g_xccc.xccc280f,                     
##                       xcck902g = xcck201 * g_xccc.xccc280g,                     
##                       xcck902h = xcck201 * g_xccc.xccc280h,
##                       xcck980  = g_xccc.xccc280,
##                       xcck980a = g_xccc.xccc280a,
##                       xcck980b = g_xccc.xccc280b,
##                       xcck980c = g_xccc.xccc280c,
##                       xcck980d = g_xccc.xccc280d,
##                       xcck980e = g_xccc.xccc280e,
##                       xcck980f = g_xccc.xccc280f,
##                       xcck980g = g_xccc.xccc280g,
##                       xcck980h = g_xccc.xccc280h 
##    WHERE xcckent = g_enterprise
##      AND xcckld  = g_ld
##      AND xcck001 = g_xccc.xccc001
##      AND xcck002 = g_xccc.xccc002
##      AND xcck003 = g_xccc.xccc003
##      AND xcck004 = g_xccc.xccc004
##      AND xcck005 = g_xccc.xccc005
##      AND xcck010 = g_xccc.xccc006
##      AND xcck011 = g_xccc.xccc007
##      AND xcck017 = g_xccc.xccc008
##      AND xcck055 IN ('3012','303','305','307','3092','311','3132') 
##   IF SQLCA.sqlcode THEN
##      INITIALIZE g_errparam TO NULL
##      #计算主件%1的过程中，无法取得元件编号=%2 的成本资料
##      LET g_errparam.code   = SQLCA.sqlcode
##      LET g_errparam.extend = 'UPDATE xcck202'
##      LET g_errparam.popup  = TRUE
##      CALL cl_err()   
##      CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
##                               '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
##                               SQLCA.sqlcode,'','UPDATE xcck202')
###     RETURN r_success
##   END IF
#   
#   #处理的类型为  301(工单领用) 303(销货) 305(销退)
#   #             307(销售费用) 309(杂发) 311(盘盈亏) 313(其他出库)
#   CALL s_axcp500_avg_get_xccc_from_xcck('4')
#        RETURNING l_success
#   IF NOT l_success THEN
##     RETURN r_success
#   END IF  
#
#   CALL s_axcp500_set_xccc_null_to_zero(g_xccc.*)
#        RETURNING g_xccc.*
#   
#   CALL s_axcp500_sum_xccc(g_xccc.*)
#        RETURNING g_xccc.*
#
#   CALL s_axcp500_ins_or_upd_xccc(g_xccc.*)
#        RETURNING l_success
#   IF NOT l_success THEN
#      RETURN r_success
#   END IF
#
##   LET g_xccc_1.* = g_xccc.*
#
#   LET g_stat_cnt = g_stat_cnt + 1
#   LET g_stat_end = TIME
#   CALL s_axcp500_avg1_stats_cnt(7,g_stat_begin,g_stat_end,g_stat_cnt)  
#   
#   LET r_success = TRUE
#   RETURN r_success
#
#
END FUNCTION

################################################################################
# Descriptions...: 从xcck中取资料置于xccc
# Memo...........:
# Usage..........: CALL s_axcp500_avg_get_xccc_from_xcck(p_flag)
#                       RETURNING r_success
# Input parameter: p_flag         1/2/3/4
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-09-16 By Carrier
# Modify.........:
#                  zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_get_xccc_from_xcck(p_flag)
   DEFINE p_flag          LIKE type_t.chr1
   DEFINE l_choice        LIKE type_t.chr10
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_sum           type_get_cost_rec
   DEFINE l_condition     LIKE type_t.chr100
#   
#   WHENEVER ERROR CONTINUE
#   LET r_success = FALSE
#   
#   #p_flag值说明:
#   #=1 处理类型: 201(采购入库) 203(委外入库) 205(一般工单入库) 211(杂入) 217(其他入库) 3011(当站下线) 3091(杂发补单价) 313(调拨出)
#   #=2 处理类型: 207(本期重工领出) 215(本期销退入库)
#   #=3 处理类型: 209(重工入库)
#   #=4 处理类型: 205(入库) 3012(其他工单领用) 303(销货) 305(销退) 307(销售费用) 309(杂发) 311(盘盈亏)
#
#   #之所以这样设定的原因是:入项 207/215 的成本取第一轮的月加权 (p_flag=1的结果) 
#   #计算第一轮月加权后,更新 207/215的值(p_flag=2)
#   #再计算重工入库的成本(p_flag=3)
#   #当重工入库的成本计算完毕后,即可计算第二轮的月加权平均,以此影响 (p_flag=4的各项)
#   
#   IF p_flag = '1' THEN
#   
#      FOREACH s_axcp500_avg_get_xccc_from_xcck_cs1 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
#                                                         g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008
#                                                    INTO l_choice,l_sum.*
#                                                
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code   = SQLCA.sqlcode
#            LET g_errparam.extend = 'FOREACH s_axcp500_avg_get_xccc_from_xcck_cs1'
#            LET g_errparam.popup  = TRUE
#            CALL cl_err()   
#            CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
#                                     '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
#                                     SQLCA.sqlcode,'','FOREACH s_axcp500_avg_get_xccc_from_xcck_cs1')
#               
#            CONTINUE FOREACH
#         END IF
#         
#         CASE l_choice
#              WHEN '2011'  #采购入库   #mod zhangllc 151203 '201'->'2011'
#                   LET g_xccc.xccc201  = l_sum.qty
#                   LET g_xccc.xccc202  = l_sum.tot
#                   LET g_xccc.xccc202a = l_sum.a
#                   LET g_xccc.xccc202b = l_sum.b
#                   LET g_xccc.xccc202c = l_sum.c
#                   LET g_xccc.xccc202d = l_sum.d
#                   LET g_xccc.xccc202e = l_sum.e
#                   LET g_xccc.xccc202f = l_sum.f
#                   LET g_xccc.xccc202g = l_sum.g
#                   LET g_xccc.xccc202h = l_sum.h
#              #add zhangllc 151203
#              WHEN '2012'  #采购入库
#                   LET g_xccc.xccc201  = l_sum.qty
#                   LET g_xccc.xccc202  = l_sum.tot
#                   LET g_xccc.xccc202a = l_sum.a
#                   LET g_xccc.xccc202b = l_sum.b
#                   LET g_xccc.xccc202c = l_sum.c
#                   LET g_xccc.xccc202d = l_sum.d
#                   LET g_xccc.xccc202e = l_sum.e
#                   LET g_xccc.xccc202f = l_sum.f
#                   LET g_xccc.xccc202g = l_sum.g
#                   LET g_xccc.xccc202h = l_sum.h
#              #end add zhangllc 151203
#              WHEN '203'  #委外入库
#                   LET g_xccc.xccc203  = l_sum.qty     
#                   LET g_xccc.xccc204  = l_sum.tot     
#                   LET g_xccc.xccc204a = l_sum.a       
#                   LET g_xccc.xccc204b = l_sum.b       
#                   LET g_xccc.xccc204c = l_sum.c       
#                   LET g_xccc.xccc204d = l_sum.d       
#                   LET g_xccc.xccc204e = l_sum.e       
#                   LET g_xccc.xccc204f = l_sum.f       
#                   LET g_xccc.xccc204g = l_sum.g       
#                   LET g_xccc.xccc204h = l_sum.h           
#              WHEN '205'  #一般工单入库
#                   LET g_xccc.xccc205  = l_sum.qty     
#                   LET g_xccc.xccc206  = l_sum.tot     
#                   LET g_xccc.xccc206a = l_sum.a       
#                   LET g_xccc.xccc206b = l_sum.b       
#                   LET g_xccc.xccc206c = l_sum.c       
#                   LET g_xccc.xccc206d = l_sum.d       
#                   LET g_xccc.xccc206e = l_sum.e       
#                   LET g_xccc.xccc206f = l_sum.f       
#                   LET g_xccc.xccc206g = l_sum.g       
#                   LET g_xccc.xccc206h = l_sum.h      
#              WHEN '211'  #杂项入库
#                   LET g_xccc.xccc211  = l_sum.qty     
#                   LET g_xccc.xccc212  = l_sum.tot     
#                   LET g_xccc.xccc212a = l_sum.a       
#                   LET g_xccc.xccc212b = l_sum.b       
#                   LET g_xccc.xccc212c = l_sum.c       
#                   LET g_xccc.xccc212d = l_sum.d       
#                   LET g_xccc.xccc212e = l_sum.e       
#                   LET g_xccc.xccc212f = l_sum.f       
#                   LET g_xccc.xccc212g = l_sum.g       
#                   LET g_xccc.xccc212h = l_sum.h       
#              WHEN '217'  #其他入库
#                   LET g_xccc.xccc217  = l_sum.qty     
#                   LET g_xccc.xccc218  = l_sum.tot     
#                   LET g_xccc.xccc218a = l_sum.a       
#                   LET g_xccc.xccc218b = l_sum.b       
#                   LET g_xccc.xccc218c = l_sum.c       
#                   LET g_xccc.xccc218d = l_sum.d       
#                   LET g_xccc.xccc218e = l_sum.e       
#                   LET g_xccc.xccc218f = l_sum.f       
#                   LET g_xccc.xccc218g = l_sum.g       
#                   LET g_xccc.xccc218h = l_sum.h    
#                   
#         END CASE              
#      END FOREACH 
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'201'
##                                     INTO l_sum.*
##      LET g_xccc.xccc201  = l_sum.qty     
##      LET g_xccc.xccc202  = l_sum.tot     
##      LET g_xccc.xccc202a = l_sum.a       
##      LET g_xccc.xccc202b = l_sum.b       
##      LET g_xccc.xccc202c = l_sum.c       
##      LET g_xccc.xccc202d = l_sum.d       
##      LET g_xccc.xccc202e = l_sum.e       
##      LET g_xccc.xccc202f = l_sum.f       
##      LET g_xccc.xccc202g = l_sum.g       
##      LET g_xccc.xccc202h = l_sum.h 
##      
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'203'
##                                     INTO l_sum.*
##      LET g_xccc.xccc203  = l_sum.qty     
##      LET g_xccc.xccc204  = l_sum.tot     
##      LET g_xccc.xccc204a = l_sum.a       
##      LET g_xccc.xccc204b = l_sum.b       
##      LET g_xccc.xccc204c = l_sum.c       
##      LET g_xccc.xccc204d = l_sum.d       
##      LET g_xccc.xccc204e = l_sum.e       
##      LET g_xccc.xccc204f = l_sum.f       
##      LET g_xccc.xccc204g = l_sum.g       
##      LET g_xccc.xccc204h = l_sum.h       
##      
##      
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'205'
##                                     INTO l_sum.*
##      LET g_xccc.xccc205  = l_sum.qty     
##      LET g_xccc.xccc206  = l_sum.tot     
##      LET g_xccc.xccc206a = l_sum.a       
##      LET g_xccc.xccc206b = l_sum.b       
##      LET g_xccc.xccc206c = l_sum.c       
##      LET g_xccc.xccc206d = l_sum.d       
##      LET g_xccc.xccc206e = l_sum.e       
##      LET g_xccc.xccc206f = l_sum.f       
##      LET g_xccc.xccc206g = l_sum.g       
##      LET g_xccc.xccc206h = l_sum.h       
##      
##      
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'211'
##                                     INTO l_sum.*
##      LET g_xccc.xccc211  = l_sum.qty     
##      LET g_xccc.xccc212  = l_sum.tot     
##      LET g_xccc.xccc212a = l_sum.a       
##      LET g_xccc.xccc212b = l_sum.b       
##      LET g_xccc.xccc212c = l_sum.c       
##      LET g_xccc.xccc212d = l_sum.d       
##      LET g_xccc.xccc212e = l_sum.e       
##      LET g_xccc.xccc212f = l_sum.f       
##      LET g_xccc.xccc212g = l_sum.g       
##      LET g_xccc.xccc212h = l_sum.h       
##      
##      
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'217'
##                                     INTO l_sum.*
##      LET g_xccc.xccc217  = l_sum.qty     
##      LET g_xccc.xccc218  = l_sum.tot     
##      LET g_xccc.xccc218a = l_sum.a       
##      LET g_xccc.xccc218b = l_sum.b       
##      LET g_xccc.xccc218c = l_sum.c       
##      LET g_xccc.xccc218d = l_sum.d       
##      LET g_xccc.xccc218e = l_sum.e       
##      LET g_xccc.xccc218f = l_sum.f       
##      LET g_xccc.xccc218g = l_sum.g       
##      LET g_xccc.xccc218h = l_sum.h    
##      SELECT 
##      SELECT nvl(t201.qty,0),nvl(t201.sum,0),nvl(t201.a,0),nvl(t201.b,0),nvl(t201.c,0),nvl(t201.d,0),nvl(t201.e,0),nvl(t201.f,0),nvl(t201.g,0),nvl(t201.h,0),
##             nvl(t203.qty,0),nvl(t203.sum,0),nvl(t203.a,0),nvl(t203.b,0),nvl(t203.c,0),nvl(t203.d,0),nvl(t203.e,0),nvl(t203.f,0),nvl(t203.g,0),nvl(t203.h,0),
##             nvl(t205.qty,0),nvl(t205.sum,0),nvl(t205.a,0),nvl(t205.b,0),nvl(t205.c,0),nvl(t205.d,0),nvl(t205.e,0),nvl(t205.f,0),nvl(t205.g,0),nvl(t205.h,0),
##             nvl(t211.qty,0),nvl(t211.sum,0),nvl(t211.a,0),nvl(t211.b,0),nvl(t211.c,0),nvl(t211.d,0),nvl(t211.e,0),nvl(t211.f,0),nvl(t211.g,0),nvl(t211.h,0),
##             nvl(t217.qty,0),nvl(t217.sum,0),nvl(t217.a,0),nvl(t217.b,0),nvl(t217.c,0),nvl(t217.d,0),nvl(t217.e,0),nvl(t217.f,0),nvl(t217.g,0),nvl(t217.h,0)
##        INTO g_xccc.xccc201,g_xccc.xccc202,g_xccc.xccc202a,g_xccc.xccc202b,g_xccc.xccc202c,g_xccc.xccc202d,g_xccc.xccc202e,g_xccc.xccc202f,g_xccc.xccc202g,g_xccc.xccc202h,
##             g_xccc.xccc203,g_xccc.xccc204,g_xccc.xccc204a,g_xccc.xccc204b,g_xccc.xccc204c,g_xccc.xccc204d,g_xccc.xccc204e,g_xccc.xccc204f,g_xccc.xccc204g,g_xccc.xccc204h,
##             g_xccc.xccc205,g_xccc.xccc206,g_xccc.xccc206a,g_xccc.xccc206b,g_xccc.xccc206c,g_xccc.xccc206d,g_xccc.xccc206e,g_xccc.xccc206f,g_xccc.xccc206g,g_xccc.xccc206h,
##             g_xccc.xccc211,g_xccc.xccc212,g_xccc.xccc212a,g_xccc.xccc212b,g_xccc.xccc212c,g_xccc.xccc212d,g_xccc.xccc212e,g_xccc.xccc212f,g_xccc.xccc212g,g_xccc.xccc212h,
##             g_xccc.xccc217,g_xccc.xccc218,g_xccc.xccc218a,g_xccc.xccc218b,g_xccc.xccc218c,g_xccc.xccc218d,g_xccc.xccc218e,g_xccc.xccc218f,g_xccc.xccc218g,g_xccc.xccc218h    
##        FROM (
##      SELECT SUM(xcck201*xcck009) qty , SUM(xcck202*xcck009) sum, SUM(xcck202a*xcck009) a, SUM(xcck202b*xcck009) b, SUM(xcck202c*xcck009) c,
##             SUM(xcck202d*xcck009) d  , SUM(xcck202e*xcck009) e , SUM(xcck202f*xcck009) f, SUM(xcck202g*xcck009) g, SUM(xcck202h*xcck009) h
##       FROM xcck_t
##       WHERE xcckent = 99
##         AND xcckld  = 'X01'
##         AND xcck001 = 1
##         AND xcck002 = ' '
##         AND xcck003 = 'XC01'
##         AND xcck004 = 2014
##         AND xcck005 = 10
##         AND xcck010 = 'YJQ01'
##         AND xcck011 = ' '
##         AND xcck017 = ' '  
##         AND xcck055 = '201' )  t201
##         , (
##      SELECT SUM(xcck201*xcck009) qty , SUM(xcck202*xcck009) sum, SUM(xcck202a*xcck009) a, SUM(xcck202b*xcck009) b, SUM(xcck202c*xcck009) c,
##             SUM(xcck202d*xcck009) d  , SUM(xcck202e*xcck009) e , SUM(xcck202f*xcck009) f, SUM(xcck202g*xcck009) g, SUM(xcck202h*xcck009) h
##       FROM xcck_t
##       WHERE xcckent = 99
##         AND xcckld  = 'X01'
##         AND xcck001 = 1
##         AND xcck002 = ' '
##         AND xcck003 = 'XC01'
##         AND xcck004 = 2014
##         AND xcck005 = 10
##         AND xcck010 = 'YJQ01'
##         AND xcck011 = ' '
##         AND xcck017 = ' '  
##         AND xcck055 = '203' ) t203
##         , (
##      SELECT SUM(xcck201*xcck009) qty , SUM(xcck202*xcck009) sum, SUM(xcck202a*xcck009) a, SUM(xcck202b*xcck009) b, SUM(xcck202c*xcck009) c,
##             SUM(xcck202d*xcck009) d  , SUM(xcck202e*xcck009) e , SUM(xcck202f*xcck009) f, SUM(xcck202g*xcck009) g, SUM(xcck202h*xcck009) h
##       FROM xcck_t
##       WHERE xcckent = 99
##         AND xcckld  = 'X01'
##         AND xcck001 = 1
##         AND xcck002 = ' '
##         AND xcck003 = 'XC01'
##         AND xcck004 = 2014
##         AND xcck005 = 10
##         AND xcck010 = 'YJQ01'
##         AND xcck011 = ' '
##         AND xcck017 = ' '  
##         AND xcck055 = '205' ) t205
##         , (
##      SELECT SUM(xcck201*xcck009) qty , SUM(xcck202*xcck009) sum, SUM(xcck202a*xcck009) a, SUM(xcck202b*xcck009) b, SUM(xcck202c*xcck009) c,
##             SUM(xcck202d*xcck009) d  , SUM(xcck202e*xcck009) e , SUM(xcck202f*xcck009) f, SUM(xcck202g*xcck009) g, SUM(xcck202h*xcck009) h
##       FROM xcck_t
##       WHERE xcckent = 99
##         AND xcckld  = 'X01'
##         AND xcck001 = 1
##         AND xcck002 = ' '
##         AND xcck003 = 'XC01'
##         AND xcck004 = 2014
##         AND xcck005 = 10
##         AND xcck010 = 'YJQ01'
##         AND xcck011 = ' '
##         AND xcck017 = ' '  
##         AND xcck055 = '211' ) t211
##         , (
##      SELECT SUM(xcck201*xcck009) qty , SUM(xcck202*xcck009) sum, SUM(xcck202a*xcck009) a, SUM(xcck202b*xcck009) b, SUM(xcck202c*xcck009) c,
##             SUM(xcck202d*xcck009) d  , SUM(xcck202e*xcck009) e , SUM(xcck202f*xcck009) f, SUM(xcck202g*xcck009) g, SUM(xcck202h*xcck009) h
##       FROM xcck_t
##       WHERE xcckent = 99
##         AND xcckld  = 'X01'
##         AND xcck001 = 1
##         AND xcck002 = ' '
##         AND xcck003 = 'XC01'
##         AND xcck004 = 2014
##         AND xcck005 = 10
##         AND xcck010 = 'YJQ01'
##         AND xcck011 = ' '
##         AND xcck017 = ' '  
##         AND xcck055 = '217' ) t217         
#   END IF   
#
#   IF p_flag = '2' THEN
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'207'
##                                     INTO l_sum.*
##      LET g_xccc.xccc207  = l_sum.qty     
##      LET g_xccc.xccc208  = l_sum.tot     
##      LET g_xccc.xccc208a = l_sum.a       
##      LET g_xccc.xccc208b = l_sum.b       
##      LET g_xccc.xccc208c = l_sum.c       
##      LET g_xccc.xccc208d = l_sum.d       
##      LET g_xccc.xccc208e = l_sum.e       
##      LET g_xccc.xccc208f = l_sum.f       
##      LET g_xccc.xccc208g = l_sum.g       
##      LET g_xccc.xccc208h = l_sum.h 
##      
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'215'
##                                     INTO l_sum.*
##      LET g_xccc.xccc215  = l_sum.qty     
##      LET g_xccc.xccc216  = l_sum.tot     
##      LET g_xccc.xccc216a = l_sum.a       
##      LET g_xccc.xccc216b = l_sum.b       
##      LET g_xccc.xccc216c = l_sum.c       
##      LET g_xccc.xccc216d = l_sum.d       
##      LET g_xccc.xccc216e = l_sum.e       
##      LET g_xccc.xccc216f = l_sum.f       
##      LET g_xccc.xccc216g = l_sum.g       
##      LET g_xccc.xccc216h = l_sum.h      
#      FOREACH s_axcp500_avg_get_xccc_from_xcck_cs2 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
#                                                         g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008
#                                                    INTO l_choice,l_sum.*
#                                                
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code   = SQLCA.sqlcode
#            LET g_errparam.extend = 'FOREACH s_axcp500_avg_get_xccc_from_xcck_cs2'
#            LET g_errparam.popup  = TRUE
#            CALL cl_err()   
#            CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
#                                     '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
#                                     SQLCA.sqlcode,'','FOREACH s_axcp500_avg_get_xccc_from_xcck_cs2')
#            CONTINUE FOREACH
#         END IF
#         
#         CASE l_choice
#            WHEN '207'  #重工领出
#                 LET g_xccc.xccc207  = l_sum.qty     
#                 LET g_xccc.xccc208  = l_sum.tot     
#                 LET g_xccc.xccc208a = l_sum.a       
#                 LET g_xccc.xccc208b = l_sum.b       
#                 LET g_xccc.xccc208c = l_sum.c       
#                 LET g_xccc.xccc208d = l_sum.d       
#                 LET g_xccc.xccc208e = l_sum.e       
#                 LET g_xccc.xccc208f = l_sum.f       
#                 LET g_xccc.xccc208g = l_sum.g       
#                 LET g_xccc.xccc208h = l_sum.h       
#            WHEN '215'  #销退入库
#                 LET g_xccc.xccc215  = l_sum.qty     
#                 LET g_xccc.xccc216  = l_sum.tot     
#                 LET g_xccc.xccc216a = l_sum.a       
#                 LET g_xccc.xccc216b = l_sum.b       
#                 LET g_xccc.xccc216c = l_sum.c       
#                 LET g_xccc.xccc216d = l_sum.d       
#                 LET g_xccc.xccc216e = l_sum.e       
#                 LET g_xccc.xccc216f = l_sum.f       
#                 LET g_xccc.xccc216g = l_sum.g       
#                 LET g_xccc.xccc216h = l_sum.h       
#         END CASE     
#         
#      END FOREACH 
#   END IF    
#
#   IF p_flag = '3' THEN
#      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
#                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,
#                                          '209'
#                                     INTO l_sum.*
#                                      
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = 'EXECUTE s_axcp500_avg_cal_p14'
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()   
#         CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
#                                  '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
#                                  SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_cal_p14')
##        RETURN r_success 
#      END IF
#      
#      LET g_xccc.xccc209  = l_sum.qty     
#      LET g_xccc.xccc210  = l_sum.tot     
#      LET g_xccc.xccc210a = l_sum.a       
#      LET g_xccc.xccc210b = l_sum.b       
#      LET g_xccc.xccc210c = l_sum.c       
#      LET g_xccc.xccc210d = l_sum.d       
#      LET g_xccc.xccc210e = l_sum.e       
#      LET g_xccc.xccc210f = l_sum.f       
#      LET g_xccc.xccc210g = l_sum.g       
#      LET g_xccc.xccc210h = l_sum.h        
#   END IF
#
#
#   IF p_flag = '4' THEN
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'303'
##                                     INTO l_sum.*
##      LET g_xccc.xccc303  = l_sum.qty     
##      LET g_xccc.xccc304  = l_sum.tot     
##      LET g_xccc.xccc304a = l_sum.a       
##      LET g_xccc.xccc304b = l_sum.b       
##      LET g_xccc.xccc304c = l_sum.c       
##      LET g_xccc.xccc304d = l_sum.d       
##      LET g_xccc.xccc304e = l_sum.e       
##      LET g_xccc.xccc304f = l_sum.f       
##      LET g_xccc.xccc304g = l_sum.g       
##      LET g_xccc.xccc304h = l_sum.h 
##      
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'305'
##                                     INTO l_sum.*
##      LET g_xccc.xccc305  = l_sum.qty     
##      LET g_xccc.xccc306  = l_sum.tot     
##      LET g_xccc.xccc306a = l_sum.a       
##      LET g_xccc.xccc306b = l_sum.b       
##      LET g_xccc.xccc306c = l_sum.c       
##      LET g_xccc.xccc306d = l_sum.d       
##      LET g_xccc.xccc306e = l_sum.e       
##      LET g_xccc.xccc306f = l_sum.f       
##      LET g_xccc.xccc306g = l_sum.g       
##      LET g_xccc.xccc306h = l_sum.h       
##      
##      
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'307'
##                                     INTO l_sum.*
##      LET g_xccc.xccc307  = l_sum.qty     
##      LET g_xccc.xccc308  = l_sum.tot     
##      LET g_xccc.xccc308a = l_sum.a       
##      LET g_xccc.xccc308b = l_sum.b       
##      LET g_xccc.xccc308c = l_sum.c       
##      LET g_xccc.xccc308d = l_sum.d       
##      LET g_xccc.xccc308e = l_sum.e       
##      LET g_xccc.xccc308f = l_sum.f       
##      LET g_xccc.xccc308g = l_sum.g       
##      LET g_xccc.xccc308h = l_sum.h       
##      
##      
##      EXECUTE s_axcp500_avg_cal_p14 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
##                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'311'
##                                     INTO l_sum.*
##      LET g_xccc.xccc311  = l_sum.qty     
##      LET g_xccc.xccc312  = l_sum.tot     
##      LET g_xccc.xccc312a = l_sum.a       
##      LET g_xccc.xccc312b = l_sum.b       
##      LET g_xccc.xccc312c = l_sum.c       
##      LET g_xccc.xccc312d = l_sum.d       
##      LET g_xccc.xccc312e = l_sum.e       
##      LET g_xccc.xccc312f = l_sum.f       
##      LET g_xccc.xccc312g = l_sum.g       
##      LET g_xccc.xccc312h = l_sum.h        
#      FOREACH s_axcp500_avg_get_xccc_from_xcck_cs3 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
#                                                         g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008
#                                                    INTO l_choice,l_sum.*
#                                                
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code   = SQLCA.sqlcode
#            LET g_errparam.extend = 'FOREACH s_axcp500_avg_get_xccc_from_xcck_cs3'
#            LET g_errparam.popup  = TRUE
#            CALL cl_err()   
#            CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
#                                     '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
#                                     SQLCA.sqlcode,'','FOREACH s_axcp500_avg_get_xccc_from_xcck_cs3')
#            CONTINUE FOREACH
#         END IF
#         
#
#         CASE l_choice           
#            WHEN '303'  #销货
#                 LET g_xccc.xccc303  = l_sum.qty
#                 LET g_xccc.xccc304  = l_sum.tot
#                 LET g_xccc.xccc304a = l_sum.a  
#                 LET g_xccc.xccc304b = l_sum.b  
#                 LET g_xccc.xccc304c = l_sum.c  
#                 LET g_xccc.xccc304d = l_sum.d  
#                 LET g_xccc.xccc304e = l_sum.e  
#                 LET g_xccc.xccc304f = l_sum.f  
#                 LET g_xccc.xccc304g = l_sum.g  
#                 LET g_xccc.xccc304h = l_sum.h  
#            WHEN '305'  #销退
#                 LET g_xccc.xccc305  = l_sum.qty
#                 LET g_xccc.xccc306  = l_sum.tot
#                 LET g_xccc.xccc306a = l_sum.a  
#                 LET g_xccc.xccc306b = l_sum.b  
#                 LET g_xccc.xccc306c = l_sum.c  
#                 LET g_xccc.xccc306d = l_sum.d  
#                 LET g_xccc.xccc306e = l_sum.e  
#                 LET g_xccc.xccc306f = l_sum.f  
#                 LET g_xccc.xccc306g = l_sum.g  
#                 LET g_xccc.xccc306h = l_sum.h  
#            WHEN '307'  #销售费用
#                 LET g_xccc.xccc307  = l_sum.qty
#                 LET g_xccc.xccc308  = l_sum.tot
#                 LET g_xccc.xccc308a = l_sum.a  
#                 LET g_xccc.xccc308b = l_sum.b  
#                 LET g_xccc.xccc308c = l_sum.c  
#                 LET g_xccc.xccc308d = l_sum.d  
#                 LET g_xccc.xccc308e = l_sum.e  
#                 LET g_xccc.xccc308f = l_sum.f  
#                 LET g_xccc.xccc308g = l_sum.g  
#                 LET g_xccc.xccc308h = l_sum.h  
#            WHEN '311'  #盘盈亏
#                 LET g_xccc.xccc311  = l_sum.qty
#                 LET g_xccc.xccc312  = l_sum.tot
#                 LET g_xccc.xccc312a = l_sum.a  
#                 LET g_xccc.xccc312b = l_sum.b  
#                 LET g_xccc.xccc312c = l_sum.c  
#                 LET g_xccc.xccc312d = l_sum.d  
#                 LET g_xccc.xccc312e = l_sum.e  
#                 LET g_xccc.xccc312f = l_sum.f  
#                 LET g_xccc.xccc312g = l_sum.g  
#                 LET g_xccc.xccc312h = l_sum.h  
#     
#         END CASE     
#         
#      END FOREACH       
#      
#      #301.工单领用 (3011.当站下线 3012.其他工单领用)
#      EXECUTE s_axcp500_avg_cal_p62 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
#                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008
#                                     INTO l_sum.*
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = 'EXECUTE s_axcp500_avg_cal_p62'
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()   
#         CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
#                                  '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
#                                  SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_cal_p62')
##        RETURN r_success 
#      END IF 
#      
#      LET g_xccc.xccc301  = l_sum.qty     
#      LET g_xccc.xccc302  = l_sum.tot     
#      LET g_xccc.xccc302a = l_sum.a       
#      LET g_xccc.xccc302b = l_sum.b       
#      LET g_xccc.xccc302c = l_sum.c       
#      LET g_xccc.xccc302d = l_sum.d       
#      LET g_xccc.xccc302e = l_sum.e       
#      LET g_xccc.xccc302f = l_sum.f       
#      LET g_xccc.xccc302g = l_sum.g       
#      LET g_xccc.xccc302h = l_sum.h
#      
#      #309 杂发
#      EXECUTE s_axcp500_avg_cal_p22 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
#                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008
#                                     INTO l_sum.*                                  
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = 'EXECUTE s_axcp500_avg_cal_p22'
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()   
#         CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
#                                  '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
#                                  SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_cal_p22')
##        RETURN r_success 
#      END IF    
#
#      LET g_xccc.xccc309  = l_sum.qty
#      LET g_xccc.xccc310  = l_sum.tot
#      LET g_xccc.xccc310a = l_sum.a  
#      LET g_xccc.xccc310b = l_sum.b  
#      LET g_xccc.xccc310c = l_sum.c  
#      LET g_xccc.xccc310d = l_sum.d  
#      LET g_xccc.xccc310e = l_sum.e  
#      LET g_xccc.xccc310f = l_sum.f  
#      LET g_xccc.xccc310g = l_sum.g  
#      LET g_xccc.xccc310h = l_sum.h  
#
#
#      #313.其他出库(3131.调拨出库 & 3132.其他出库) 
#      EXECUTE s_axcp500_avg_cal_p61 USING g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc003,g_xccc.xccc004,
#                                          g_xccc.xccc005,g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008
#                                     INTO l_sum.*
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = 'EXECUTE s_axcp500_avg_cal_p61'
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()   
#         CALL s_axcp500_ins_error(g_xccc.xccc001,g_xccc.xccc002,g_xccc.xccc004,g_xccc.xccc005,
#                                  '','','','',g_xccc.xccc006,g_xccc.xccc007,g_xccc.xccc008,'',
#                                  SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_cal_p61')
##        RETURN r_success 
#      END IF 
#      
#      LET g_xccc.xccc313  = l_sum.qty     
#      LET g_xccc.xccc314  = l_sum.tot     
#      LET g_xccc.xccc314a = l_sum.a       
#      LET g_xccc.xccc314b = l_sum.b       
#      LET g_xccc.xccc314c = l_sum.c       
#      LET g_xccc.xccc314d = l_sum.d       
#      LET g_xccc.xccc314e = l_sum.e       
#      LET g_xccc.xccc314f = l_sum.f       
#      LET g_xccc.xccc314g = l_sum.g       
#      LET g_xccc.xccc314h = l_sum.h
#
#   END IF      
#
#   LET r_success = TRUE
#   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 月加权-联产品处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg_coproduct(p_xcbb006,p_seq,p_sfaa042,p_flag)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          记帐本位币顺序
#                : p_sfaa042      返工工单否
#                : p_flag         设置xccc的步骤
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-08-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_coproduct(p_xcbb006,p_seq,p_sfaa042,p_flag)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE p_sfaa042       LIKE sfaa_t.sfaa042
   DEFINE p_flag          LIKE type_t.chr1
   DEFINE r_success       LIKE type_t.num5
   #DEFINE l_xcck          RECORD LIKE xcck_t.*
   DEFINE l_xcck          type_xcck  #mod zhangllc 151214 比原来多了xccktmp1 库存管理特征
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_rate          LIKE type_t.num26_10
   DEFINE l_sum           type_g_std_cost
   DEFINE l_xccc006       LIKE xccc_t.xccc006
   DEFINE l_xccc007       LIKE xccc_t.xccc007
   DEFINE l_xccc008       LIKE xccc_t.xccc008
   DEFINE l_cnt           LIKE type_t.num20
   DEFINE l_stat_begin    LIKE type_t.chr8
   DEFINE l_stat_end      LIKE type_t.chr8

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   LET l_cnt = 0
   LET l_stat_begin = TIME
   
   LET l_xccc006 = NULL
   LET l_xccc007 = NULL
   LET l_xccc008 = NULL
   
   #获取当前成本阶中的联产品入库和多产出主件入库的xcck资料
#   FOREACH s_axcp500_avg_coproduct_cs1 USING p_seq,p_xcbb006,p_sfaa042  #190411-00017#1 A mark
   FOREACH s_axcp500_avg_coproduct_cs1 USING p_seq,p_xcbb006,p_sfaa042,p_seq,p_xcbb006,p_sfaa042  #190411-00017#1 A mod
                                        INTO l_xcck.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH s_axcp500_avg_coproduct_cs1'
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_coproduct_cs1')
            
         CONTINUE FOREACH   
      END IF
      INITIALIZE l_sum.* TO NULL     #161004-00022#5 add
     #IF l_xcck.xcck202 <> 0 THEN #170105-00016#1 mark 聯產品的入庫xcck在前面就算過了
      IF l_xcck.xcck202 = 0 THEN  #170105-00016#1 add 沒金額的才要再算一次
         CALL s_axcp500_avg_coproduct_set_xcck(l_xcck.*)
              RETURNING l_success,l_sum.*
         IF NOT l_success THEN
            CONTINUE FOREACH
         END IF
      #170105-00016#1 add 金額直接給已經算好的
      ELSE
         LET l_sum.sum = l_xcck.xcck202
         LET l_sum.a   = l_xcck.xcck202a
         LET l_sum.b   = l_xcck.xcck202b
         LET l_sum.c   = l_xcck.xcck202c
         LET l_sum.d   = l_xcck.xcck202d
         LET l_sum.e   = l_xcck.xcck202e
         LET l_sum.f   = l_xcck.xcck202f
         LET l_sum.g   = l_xcck.xcck202g
         LET l_sum.h   = l_xcck.xcck202h
      #170105-00016#1 add end
      END IF
      
      CALL s_axcp500_coproduct_set_xccg(l_xcck.*,l_sum.*)
           RETURNING l_success
      IF NOT l_success THEN
         CONTINUE FOREACH
      END IF
      
#      #一颗做一次set_xccc即可
#      IF l_xcck.xcck010 = l_xccc006 AND l_xcck.xcck011 = l_xccc007 AND l_xcck.xcck017 = l_xccc008 THEN
#      
#      ELSE
#         CALL s_axcp500_avg_set_xccc(p_flag,l_xcck.xcck001,l_xcck.xcck002,l_xcck.xcck010,l_xcck.xcck011,l_xcck.xcck017)
#              RETURNING l_success
#         IF NOT l_success THEN
#            CONTINUE FOREACH
#         END IF
#         LET l_xccc006 = l_xcck.xcck010
#         LET l_xccc007 = l_xcck.xcck011
#         LET l_xccc008 = l_xcck.xcck017
#      END IF
#      
      LET l_cnt = l_cnt + 1
   END FOREACH


   LET l_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(4,l_stat_begin,l_stat_end,l_cnt)  
   
   LET r_success = TRUE
   RETURN r_success


END FUNCTION

################################################################################
# Descriptions...: 月加权-联产品处理-重设xcck_t的资料
# Memo...........:
# Usage..........: CALL s_axcp500_avg_coproduct_set_xcck(p_xcck)
#                       RETURNING r_success,r_sum
# Input parameter: p_xcck         xcck_t的资料
# Return code....: r_success      成功否标识符
#                : r_sum          联产品入库成本
# Date & Author..: 2014-08-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_coproduct_set_xcck(p_xcck)
   #DEFINE p_xcck          RECORD LIKE xcck_t.*
   DEFINE p_xcck          type_xcck  #mod zhangllc 151214 比原来多了xccktmp1 库存管理特征
   DEFINE r_success       LIKE type_t.num5
   DEFINE r_sum           type_g_std_cost
   DEFINE l_seq           LIKE xccc_t.xccc001
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_sum           RECORD
                          tot  LIKE xccc_t.xccc202,
                          a    LIKE xccc_t.xccc202a,
                          b    LIKE xccc_t.xccc202b,
                          c    LIKE xccc_t.xccc202c,
                          d    LIKE xccc_t.xccc202d,
                          e    LIKE xccc_t.xccc202e,
                          f    LIKE xccc_t.xccc202f,
                          g    LIKE xccc_t.xccc202g,
                          h    LIKE xccc_t.xccc202h
                          END RECORD
   DEFINE l_xccd002       LIKE xccd_t.xccd002
   
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET r_sum.sum = 0 LET r_sum.a = 0 LET r_sum.b = 0 LET r_sum.c = 0 LET r_sum.d = 0
   LET r_sum.e = 0   LET r_sum.f = 0 LET r_sum.g = 0 LET r_sum.h = 0

   LET l_xccd002 = ' '
   IF g_field_type = '1' THEN
      LET l_xccd002 = p_xcck.xcck002
   END IF
   CALL s_axcp500_avg_get_store_in_sum(p_xcck.xcck001,l_xccd002,p_xcck.xcck046 * p_xcck.xcck045,
                                       p_xcck.xcck047,p_xcck.xcck049,p_xcck.xccksite,p_xcck.xcck010,
                                       p_xcck.xcck006,p_xcck.xcck007,p_xcck.xcck008,p_xcck.xcck009)
          RETURNING l_sum.*  
     

   LET l_seq = p_xcck.xcck001
   CALL s_axcp500_get_round_setting(p_xcck.xcck010)
   
   LET p_xcck.xcck201   = p_xcck.xcck046 * p_xcck.xcck045      #本期异动数量                           
   LET p_xcck.xcck202a  = l_sum.a                              #本期异动金额-材料    
   LET p_xcck.xcck202b  = l_sum.b                              #本期异动金额-人工    
   LET p_xcck.xcck202c  = l_sum.c                              #本期异动金额-加工费  
   LET p_xcck.xcck202d  = l_sum.d                              #本期异动金额-制费一  
   LET p_xcck.xcck202e  = l_sum.e                              #本期异动金额-制费二  
   LET p_xcck.xcck202f  = l_sum.f                              #本期异动金额-制费三  
   LET p_xcck.xcck202g  = l_sum.g                              #本期异动金额-制费四  
   LET p_xcck.xcck202h  = l_sum.h                              #本期异动金额-制费五  
         
   #CALL s_num_round(g_unit_round_type,p_xcck.xcck201,g_unit_round_digit) RETURNING p_xcck.xcck201   #本期异动数量       
   CALL s_num_round(g_unit_round_type,p_xcck.xcck201,g_unit_round_digit) RETURNING p_xcck.xcck201   #本期异动数量        #170526-00032#1 add 
   CALL s_num_round(g_round_type,p_xcck.xcck202a,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202a    #本期异动金额-材料       
   CALL s_num_round(g_round_type,p_xcck.xcck202b,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202b    #本期异动金额-人工       
   CALL s_num_round(g_round_type,p_xcck.xcck202c,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202c    #本期异动金额-加工费     
   CALL s_num_round(g_round_type,p_xcck.xcck202d,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202d    #本期异动金额-制费一     
   CALL s_num_round(g_round_type,p_xcck.xcck202e,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202e    #本期异动金额-制费二     
   CALL s_num_round(g_round_type,p_xcck.xcck202f,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202f    #本期异动金额-制费三     
   CALL s_num_round(g_round_type,p_xcck.xcck202g,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202g    #本期异动金额-制费四     
   CALL s_num_round(g_round_type,p_xcck.xcck202h,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202h    #本期异动金额-制费五     
   
   #本期异动金额
   LET p_xcck.xcck202  = p_xcck.xcck202a + p_xcck.xcck202b + p_xcck.xcck202c +
                         p_xcck.xcck202d + p_xcck.xcck202e + p_xcck.xcck202f +
                         p_xcck.xcck202g + p_xcck.xcck202h
   CALL s_num_round(g_round_type,p_xcck.xcck202,g_curr[l_seq].digit2) RETURNING p_xcck.xcck202    
   
   #170705-00006#1 mark(S)
   #LET p_xcck.xcck282   = p_xcck.xcck202  / p_xcck.xcck201                                          #本期异动单价
   #LET p_xcck.xcck282a  = p_xcck.xcck202a / p_xcck.xcck201                                          #本期异动单价-材料
   #LET p_xcck.xcck282b  = p_xcck.xcck202b / p_xcck.xcck201                                          #本期异动单价-人工
   #LET p_xcck.xcck282c  = p_xcck.xcck202c / p_xcck.xcck201                                          #本期异动单价-加工
   #LET p_xcck.xcck282d  = p_xcck.xcck202d / p_xcck.xcck201                                          #本期异动单价-制费一
   #LET p_xcck.xcck282e  = p_xcck.xcck202e / p_xcck.xcck201                                          #本期异动单价-制费二
   #LET p_xcck.xcck282f  = p_xcck.xcck202f / p_xcck.xcck201                                          #本期异动单价-制费三
   #LET p_xcck.xcck282g  = p_xcck.xcck202g / p_xcck.xcck201                                          #本期异动单价-制费四
   #LET p_xcck.xcck282h  = p_xcck.xcck202h / p_xcck.xcck201                                          #本期异动单价-制费五
   #170705-00006#1 mark(E)
   #170705-00006#1 add(S)
   IF p_xcck.xcck201 <> 0 THEN
      LET p_xcck.xcck282   = p_xcck.xcck202  / p_xcck.xcck201                                          
      LET p_xcck.xcck282a  = p_xcck.xcck202a / p_xcck.xcck201                                          
      LET p_xcck.xcck282b  = p_xcck.xcck202b / p_xcck.xcck201                                          
      LET p_xcck.xcck282c  = p_xcck.xcck202c / p_xcck.xcck201                                         
      LET p_xcck.xcck282d  = p_xcck.xcck202d / p_xcck.xcck201                                          
      LET p_xcck.xcck282e  = p_xcck.xcck202e / p_xcck.xcck201                                          
      LET p_xcck.xcck282f  = p_xcck.xcck202f / p_xcck.xcck201                                          
      LET p_xcck.xcck282g  = p_xcck.xcck202g / p_xcck.xcck201                                          
      LET p_xcck.xcck282h  = p_xcck.xcck202h / p_xcck.xcck201   
   ELSE
      LET p_xcck.xcck282   = 0                                          
      LET p_xcck.xcck282a  = 0                                          
      LET p_xcck.xcck282b  = 0                                          
      LET p_xcck.xcck282c  = 0                                         
      LET p_xcck.xcck282d  = 0                                          
      LET p_xcck.xcck282e  = 0                                          
      LET p_xcck.xcck282f  = 0                                          
      LET p_xcck.xcck282g  = 0                                          
      LET p_xcck.xcck282h  = 0
   END IF
   #170705-00006#1 add(E)   
   
   CALL s_num_round(g_round_type,p_xcck.xcck282a,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282a     #本期异动单价-材料    
   CALL s_num_round(g_round_type,p_xcck.xcck282b,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282b     #本期异动单价-人工    
   CALL s_num_round(g_round_type,p_xcck.xcck282c,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282c     #本期异动单价-加工    
   CALL s_num_round(g_round_type,p_xcck.xcck282d,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282d     #本期异动单价-制费一  
   CALL s_num_round(g_round_type,p_xcck.xcck282e,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282e     #本期异动单价-制费二  
   CALL s_num_round(g_round_type,p_xcck.xcck282f,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282f     #本期异动单价-制费三  
   CALL s_num_round(g_round_type,p_xcck.xcck282g,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282g     #本期异动单价-制费四  
   CALL s_num_round(g_round_type,p_xcck.xcck282h,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282h     #本期异动单价-制费五  

   #本期异动单价
   LET p_xcck.xcck282  = p_xcck.xcck282a + p_xcck.xcck282b + p_xcck.xcck282c +
                         p_xcck.xcck282d + p_xcck.xcck282e + p_xcck.xcck282f +
                         p_xcck.xcck282g + p_xcck.xcck282h   
   CALL s_num_round(g_round_type,p_xcck.xcck282,g_curr[l_seq].digit1) RETURNING p_xcck.xcck282                           
                                                                        

         
   LET p_xcck.xcck901   = p_xcck.xcck201                       #结存数量                   
   LET p_xcck.xcck902   = p_xcck.xcck202                       #结存金额                   
   LET p_xcck.xcck902a  = p_xcck.xcck202a                      #结存金额-材料               
   LET p_xcck.xcck902b  = p_xcck.xcck202b                      #结存金额-人工               
   LET p_xcck.xcck902c  = p_xcck.xcck202c                      #结存金额-加工费             
   LET p_xcck.xcck902d  = p_xcck.xcck202d                      #结存金额-制费一             
   LET p_xcck.xcck902e  = p_xcck.xcck202e                      #结存金额-制费二             
   LET p_xcck.xcck902f  = p_xcck.xcck202f                      #结存金额-制费三             
   LET p_xcck.xcck902g  = p_xcck.xcck202g                      #结存金额-制费四             
   LET p_xcck.xcck902h  = p_xcck.xcck202h                      #结存金额-制费五  
   
   LET p_xcck.xcck980   = p_xcck.xcck282                       #结存单位成本         
   LET p_xcck.xcck980a  = p_xcck.xcck282a                      #结存单位成本-材料    
   LET p_xcck.xcck980b  = p_xcck.xcck282b                      #结存单位成本-人工    
   LET p_xcck.xcck980c  = p_xcck.xcck282c                      #结存单位成本-加工费  
   LET p_xcck.xcck980d  = p_xcck.xcck282d                      #结存单位成本-制费一  
   LET p_xcck.xcck980e  = p_xcck.xcck282e                      #结存单位成本-制费二  
   LET p_xcck.xcck980f  = p_xcck.xcck282f                      #结存单位成本-制费三  
   LET p_xcck.xcck980g  = p_xcck.xcck282g                      #结存单位成本-制费四  
   LET p_xcck.xcck980h  = p_xcck.xcck282h                      #结存单位成本-制费五  
      
        
   CALL s_axcp500_ins_or_upd_xcck(p_xcck.*)
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success,r_sum.*
   END IF
      
   LET r_sum.sum = p_xcck.xcck202
   LET r_sum.a   = p_xcck.xcck202a
   LET r_sum.b   = p_xcck.xcck202b
   LET r_sum.c   = p_xcck.xcck202c
   LET r_sum.d   = p_xcck.xcck202d
   LET r_sum.e   = p_xcck.xcck202e
   LET r_sum.f   = p_xcck.xcck202f
   LET r_sum.g   = p_xcck.xcck202g
   LET r_sum.h   = p_xcck.xcck202h
   
   LET r_success = TRUE
   RETURN r_success,r_sum.*
END FUNCTION

################################################################################
# Descriptions...: 月加权-重工处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg_rework(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-08-12 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_rework(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
#   DEFINE l_sfaa          RECORD LIKE sfaa_t.*  #161124-00048#20 mark
   DEFINE l_sfaa          type_g_sfaa  #170605-00013#1-add
   #170605-00013#1-s-mark 改用type方式
   ##161124-00048#20 add(s)
   #DEFINE l_sfaa RECORD  #工單單頭檔
   #    sfaaent LIKE sfaa_t.sfaaent, #企业编号
   #    sfaaownid LIKE sfaa_t.sfaaownid, #资料所有者
   #    sfaaowndp LIKE sfaa_t.sfaaowndp, #资料所有部门
   #    sfaacrtid LIKE sfaa_t.sfaacrtid, #资料录入者
   #    sfaacrtdp LIKE sfaa_t.sfaacrtdp, #资料录入部门
   #    sfaacrtdt LIKE sfaa_t.sfaacrtdt, #资料创建日
   #    sfaamodid LIKE sfaa_t.sfaamodid, #资料更改者
   #    sfaamoddt LIKE sfaa_t.sfaamoddt, #最近更改日
   #    sfaacnfid LIKE sfaa_t.sfaacnfid, #资料审核者
   #    sfaacnfdt LIKE sfaa_t.sfaacnfdt, #数据审核日
   #    sfaapstid LIKE sfaa_t.sfaapstid, #资料过账者
   #    sfaapstdt LIKE sfaa_t.sfaapstdt, #资料过账日
   #    sfaastus LIKE sfaa_t.sfaastus, #状态码
   #    sfaasite LIKE sfaa_t.sfaasite, #营运据点
   #    sfaadocno LIKE sfaa_t.sfaadocno, #单号
   #    sfaadocdt LIKE sfaa_t.sfaadocdt, #单据日期
   #    sfaa001 LIKE sfaa_t.sfaa001, #变更版本
   #    sfaa002 LIKE sfaa_t.sfaa002, #生管人员
   #    sfaa003 LIKE sfaa_t.sfaa003, #工单类型
   #    sfaa004 LIKE sfaa_t.sfaa004, #发料制度
   #    sfaa005 LIKE sfaa_t.sfaa005, #工单来源
   #    sfaa006 LIKE sfaa_t.sfaa006, #来源单号
   #    sfaa007 LIKE sfaa_t.sfaa007, #来源项次
   #    sfaa008 LIKE sfaa_t.sfaa008, #来源项序
   #    sfaa009 LIKE sfaa_t.sfaa009, #参考客户
   #    sfaa010 LIKE sfaa_t.sfaa010, #生产料号
   #    sfaa011 LIKE sfaa_t.sfaa011, #特性
   #    sfaa012 LIKE sfaa_t.sfaa012, #生产数量
   #    sfaa013 LIKE sfaa_t.sfaa013, #生产单位
   #    sfaa014 LIKE sfaa_t.sfaa014, #BOM版本
   #    sfaa015 LIKE sfaa_t.sfaa015, #BOM有效日期
   #    sfaa016 LIKE sfaa_t.sfaa016, #工艺编号
   #    sfaa017 LIKE sfaa_t.sfaa017, #部门供应商
   #    sfaa018 LIKE sfaa_t.sfaa018, #协作据点
   #    sfaa019 LIKE sfaa_t.sfaa019, #预计开工日
   #    sfaa020 LIKE sfaa_t.sfaa020, #预计完工日
   #    sfaa021 LIKE sfaa_t.sfaa021, #母工单单号
   #    sfaa022 LIKE sfaa_t.sfaa022, #参考原始单号
   #    sfaa023 LIKE sfaa_t.sfaa023, #参考原始项次
   #    sfaa024 LIKE sfaa_t.sfaa024, #参考原始项序
   #    sfaa025 LIKE sfaa_t.sfaa025, #前工单单号
   #    sfaa026 LIKE sfaa_t.sfaa026, #料表批号(PBI)
   #    sfaa027 LIKE sfaa_t.sfaa027, #No Use
   #    sfaa028 LIKE sfaa_t.sfaa028, #项目编号
   #    sfaa029 LIKE sfaa_t.sfaa029, #WBS
   #    sfaa030 LIKE sfaa_t.sfaa030, #活动
   #    sfaa031 LIKE sfaa_t.sfaa031, #理由码
   #    sfaa032 LIKE sfaa_t.sfaa032, #紧急比率
   #    sfaa033 LIKE sfaa_t.sfaa033, #优先级
   #    sfaa034 LIKE sfaa_t.sfaa034, #预计入库库位
   #    sfaa035 LIKE sfaa_t.sfaa035, #预计入库储位
   #    sfaa036 LIKE sfaa_t.sfaa036, #手册编号
   #    sfaa037 LIKE sfaa_t.sfaa037, #保税核准文号
   #    sfaa038 LIKE sfaa_t.sfaa038, #保税核销
   #    sfaa039 LIKE sfaa_t.sfaa039, #备料已生成
   #    sfaa040 LIKE sfaa_t.sfaa040, #生产工艺路线已审核
   #    sfaa041 LIKE sfaa_t.sfaa041, #冻结
   #    sfaa042 LIKE sfaa_t.sfaa042, #返工
   #    sfaa043 LIKE sfaa_t.sfaa043, #备置
   #    sfaa044 LIKE sfaa_t.sfaa044, #FQC
   #    sfaa045 LIKE sfaa_t.sfaa045, #实际开始发料日
   #    sfaa046 LIKE sfaa_t.sfaa046, #最后入库日
   #    sfaa047 LIKE sfaa_t.sfaa047, #生管结案日
   #    sfaa048 LIKE sfaa_t.sfaa048, #成本结案日
   #    sfaa049 LIKE sfaa_t.sfaa049, #已发料套数
   #    sfaa050 LIKE sfaa_t.sfaa050, #已入库合格量
   #    sfaa051 LIKE sfaa_t.sfaa051, #已入库不合格量
   #    sfaa052 LIKE sfaa_t.sfaa052, #Bouns
   #    sfaa053 LIKE sfaa_t.sfaa053, #工单转入数量
   #    sfaa054 LIKE sfaa_t.sfaa054, #工单转出数量
   #    sfaa055 LIKE sfaa_t.sfaa055, #下线数量
   #    sfaa056 LIKE sfaa_t.sfaa056, #报废数量
   #    sfaa057 LIKE sfaa_t.sfaa057, #委外类型
   #    sfaa058 LIKE sfaa_t.sfaa058, #参考数量
   #    sfaa059 LIKE sfaa_t.sfaa059, #预计入库批号
   #    sfaa060 LIKE sfaa_t.sfaa060, #参考单位
   #    sfaa061 LIKE sfaa_t.sfaa061, #工艺
   #    sfaa062 LIKE sfaa_t.sfaa062, #纳入APS计算
   #    sfaa063 LIKE sfaa_t.sfaa063, #来源分批序
   #    sfaa064 LIKE sfaa_t.sfaa064, #参考原始分批序
   #    sfaa065 LIKE sfaa_t.sfaa065, #生管结案状态
   #    sfaa066 LIKE sfaa_t.sfaa066, #多角流程编号
   #    sfaa067 LIKE sfaa_t.sfaa067, #多角流进程号
   #    sfaa068 LIKE sfaa_t.sfaa068, #成本中心
   #    sfaa069 LIKE sfaa_t.sfaa069, #可供给量
   #    sfaa070 LIKE sfaa_t.sfaa070, #原始预计完工日期
   #    sfaa071 LIKE sfaa_t.sfaa071, #齐料套数
   #    sfaa072 LIKE sfaa_t.sfaa072  #保税否
   #END RECORD
   ##161124-00048#20 add(e)
   #170605-00013#1-e-mark
   DEFINE l_close         LIKE type_t.chr1
   DEFINE l_imaa001       LIKE imaa_t.imaa001
   DEFINE l_xcck002       LIKE xcck_t.xcck002
   DEFINE l_xcck010       LIKE xcck_t.xcck010
   DEFINE l_xcck011       LIKE xcck_t.xcck011
   DEFINE l_xcck017       LIKE xcck_t.xcck017
   DEFINE l_date          LIKE type_t.dat
   
#   WHENEVER ERROR CONTINUE
#   LET r_success = FALSE
#   LET l_date = g_edate + 1
#   
#   LET g_stat_cnt = 0
#   LET g_stat_begin = TIME
#   
#   FOREACH s_axcp500_avg_rework_cs1 USING p_xcbb006
#                                     INTO l_sfaa.*,g_gywwrk   #add zhangllc 160131 add g_gywwrk
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = 'FOREACH s_axcp500_avg_rework_cs1'
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()  
#         CALL s_axcp500_ins_error('','','','',l_sfaa.sfaadocno,'','','',l_sfaa.sfaa010,'','',
#                                  '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_rework_cs1')         
#         CONTINUE FOREACH     
#      END IF
#      
#      LET l_close = 'N'  #结案否
#      IF l_sfaa.sfaa048 >= g_bdate AND l_sfaa.sfaa048 < l_date THEN
#         LET l_close = 'Y'
#      END IF      
#      
#      #在制处理
#      CALL s_axcp500_avg_rework_1(l_close,p_seq,l_sfaa.sfaasite,l_sfaa.sfaadocno,'','','','',l_sfaa.sfaa010)                     
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH
#      END IF      
#      
#      #用最新的在制数据重置xcck
#      CALL s_axcp500_avg_rework_set_xcck(p_seq,l_sfaa.sfaadocno)       
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH
#      END IF  
#
#      LET g_stat_cnt = g_stat_cnt + 1
#   END FOREACH
#   
#   LET g_stat_end = TIME
#   CALL s_axcp500_avg1_stats_cnt(5,g_stat_begin,g_stat_end,g_stat_cnt) 
#   
##   FOREACH s_axcp500_avg_rework_cs2 USING p_seq,p_xcbb006
##                                     INTO l_xcck002,l_xcck010,l_xcck011,l_xcck017
##      IF SQLCA.sqlcode THEN
##         INITIALIZE g_errparam TO NULL
##         LET g_errparam.code   = SQLCA.sqlcode
##         LET g_errparam.extend = 'FOREACH s_axcp500_avg_rework_cs2'
##         LET g_errparam.popup  = TRUE
##         CALL cl_err()  
##         CALL s_axcp500_ins_error('','','','','','','','',l_xcck010,l_xcck011,l_xcck017,
##                                  '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_rework_cs2')         
##         CONTINUE FOREACH     
##      END IF
##         
##        
##      CALL s_axcp500_avg_set_xccc('3',p_seq,l_xcck002,l_xcck010,l_xcck011,l_xcck017)
##           RETURNING l_success
##      IF NOT l_success THEN
##         CONTINUE FOREACH
##      END IF
##      
##   END FOREACH      
#   
#   #返工工单时,也可能会入联产品
#   CALL s_axcp500_avg_coproduct(p_xcbb006,1,'Y','3')
#        RETURNING l_success
#   IF NOT l_success THEN
#      RETURN r_success
#   END IF 
#   
#   LET r_success = TRUE
#   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 月加权-重工在制处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg_rework_1(p_close,p_seq,p_site,p_xcck047,p_xcck048,p_xcck049,p_xcck050,p_xcck051,p_sfaa010)
#                       RETURNING r_success
# Input parameter: p_close        工单本期结案否
#                : p_seq          记帐本位币顺序
#                : p_site         工单SITE
#                : p_xcck047      工单单号
#                : p_xcck048      重复性生产-计划编号
#                : p_xcck049      重复性生产-生产料号
#                : p_xcck050      重复性生产-生产BOM特性
#                : p_xcck051      重复性生产-生产料号产品特征
#                : p_sfaa010      主件编号
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-08-12 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_rework_1(p_close,p_seq,p_site,p_xcck047,p_xcck048,p_xcck049,p_xcck050,p_xcck051,p_sfaa010)
   DEFINE p_close         LIKE type_t.chr1
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE p_site          LIKE sfaa_t.sfaasite
   DEFINE p_xcck047       LIKE xcck_t.xcck047
   DEFINE p_xcck048       LIKE xcck_t.xcck048
   DEFINE p_xcck049       LIKE xcck_t.xcck049
   DEFINE p_xcck050       LIKE xcck_t.xcck050
   DEFINE p_xcck051       LIKE xcck_t.xcck051
   DEFINE p_sfaa010       LIKE sfaa_t.sfaa010
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

#   WHENEVER ERROR CONTINUE
#   LET r_success = FALSE
#      
#   CALL s_axcp500_wip_1(p_seq,p_site,p_xcck047,p_xcck048,p_xcck049,p_xcck050,p_xcck051,p_sfaa010)     #主件 - 投入工时/入库数量                       
#        RETURNING l_success
#   IF NOT l_success THEN
##     RETURN r_success
#   END IF
#   
#   CALL s_axcp500_wip_2()                            #元件投入 - 上期结转/材料/人工/加工/制费/调整 
#        RETURNING l_success
#   IF NOT l_success THEN
##     RETURN r_success
#   END IF
#   
#   CALL s_axcp500_wip_3()                            #写xccz_t(工单备料对应的发料明细) 同一料件替代多个料件在转出时的处理逻辑 
#        RETURNING l_success
#   IF NOT l_success THEN
##     RETURN r_success
#   END IF
#   
#   CALL s_axcp500_wip_4(p_close,0)                   #元件转出
#        RETURNING l_success
#   IF NOT l_success THEN
##     RETURN r_success
#   END IF
#   
#   CALL s_axcp500_wip_5()                            #主件转出
#        RETURNING l_success
#   IF NOT l_success THEN
##     RETURN r_success
#   END IF
#
#   CALL s_axcp500_wip_del(p_seq,p_site,p_xcck047,p_xcck048,p_xcck049,p_xcck050,p_xcck051,p_sfaa010)    #本期是否有异动,若无则DELETE
#        RETURNING l_success
#   IF NOT l_success THEN
##     RETURN r_success
#   END IF      
# 
#   LET r_success = TRUE
#   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 月加权-重工处理-重设xcck_t的资料
# Memo...........:
# Usage..........: CALL s_axcp500_avg_rework_set_xcck(p_seq,p_sfaadocno)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
#                : p_sfaadocno    工单
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-08-12 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_rework_set_xcck(p_seq,p_sfaadocno)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE p_sfaadocno     LIKE sfaa_t.sfaadocno
   DEFINE r_success       LIKE type_t.num5
   #DEFINE l_xcck          RECORD LIKE xcck_t.*
   DEFINE l_xcck          type_xcck  #mod zhangllc 151214 比原来多了xccktmp1 库存管理特征
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_sum           RECORD
                          tot  LIKE xccc_t.xccc202,
                          a    LIKE xccc_t.xccc202a,
                          b    LIKE xccc_t.xccc202b,
                          c    LIKE xccc_t.xccc202c,
                          d    LIKE xccc_t.xccc202d,
                          e    LIKE xccc_t.xccc202e,
                          f    LIKE xccc_t.xccc202f,
                          g    LIKE xccc_t.xccc202g,
                          h    LIKE xccc_t.xccc202h
                          END RECORD
   DEFINE l_seq           LIKE xccc_t.xccc001
   DEFINE l_xccd002       LIKE xccd_t.xccd002
   DEFINE l_xccc006       LIKE xccc_t.xccc006
   DEFINE l_xccc007       LIKE xccc_t.xccc007
   DEFINE l_xccc008       LIKE xccc_t.xccc008
   
#   WHENEVER ERROR CONTINUE
#   LET r_success = FALSE
#   
##  LET l_xccc006 = ''
##  LET l_xccc007 = ''
##  LET l_xccc008 = ''
#   FOREACH s_axcp500_avg_rework_set_xcck_cs1 USING p_seq,p_sfaadocno
#                                              INTO l_xcck.*
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = 'FOREACH s_axcp500_avg_rework_set_xcck_cs1'
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()   
#         CALL s_axcp500_ins_error('','','','',p_sfaadocno,'','','','','','',
#                                  '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_rework_set_xcck_cs1')         
#         CONTINUE FOREACH            
#      END IF
#      LET l_xccd002 = ' '
#      IF g_field_type = '1' THEN
#         LET l_xccd002 = l_xcck.xcck002
#      END IF
#      CALL s_axcp500_avg_get_store_in_sum(l_xcck.xcck001,l_xccd002,l_xcck.xcck046 * l_xcck.xcck045,
#                                          l_xcck.xcck047,l_xcck.xcck049,l_xcck.xccksite,l_xcck.xcck010,
#                                          l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
#             RETURNING l_sum.*  
#      
#
#      
#      LET l_seq = l_xcck.xcck001
#      CALL s_axcp500_get_round_setting(l_xcck.xcck010)    
#      
#      LET l_xcck.xcck201   = l_xcck.xcck046 * l_xcck.xcck045                                           #本期异动数量
#      LET l_xcck.xcck202   = l_sum.tot                                                                 #本期异动金额
#      LET l_xcck.xcck202a  = l_sum.a                                                                   #本期异动金额-材料
#      LET l_xcck.xcck202b  = l_sum.b                                                                   #本期异动金额-人工
#      LET l_xcck.xcck202c  = l_sum.c                                                                   #本期异动金额-加工费
#      LET l_xcck.xcck202d  = l_sum.d                                                                   #本期异动金额-制费一
#      LET l_xcck.xcck202e  = l_sum.e                                                                   #本期异动金额-制费二
#      LET l_xcck.xcck202f  = l_sum.f                                                                   #本期异动金额-制费三
#      LET l_xcck.xcck202g  = l_sum.g                                                                   #本期异动金额-制费四
#      LET l_xcck.xcck202h  = l_sum.h                                                                   #本期异动金额-制费五      
#
##     CALL s_num_round(g_unit_round_type,l_xcck.xcck201,g_unit_round_digit) RETURNING l_xcck.xcck201   #本期异动数量 
#      CALL s_num_round(g_round_type,l_xcck.xcck202a,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202a    #本期异动金额-材料       
#      CALL s_num_round(g_round_type,l_xcck.xcck202b,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202b    #本期异动金额-人工       
#      CALL s_num_round(g_round_type,l_xcck.xcck202c,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202c    #本期异动金额-加工费     
#      CALL s_num_round(g_round_type,l_xcck.xcck202d,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202d    #本期异动金额-制费一     
#      CALL s_num_round(g_round_type,l_xcck.xcck202e,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202e    #本期异动金额-制费二     
#      CALL s_num_round(g_round_type,l_xcck.xcck202f,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202f    #本期异动金额-制费三     
#      CALL s_num_round(g_round_type,l_xcck.xcck202g,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202g    #本期异动金额-制费四     
#      CALL s_num_round(g_round_type,l_xcck.xcck202h,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202h    #本期异动金额-制费五     
#      
#      #本期异动金额
#      LET l_xcck.xcck202  = l_xcck.xcck202a + l_xcck.xcck202b + l_xcck.xcck202c +
#                            l_xcck.xcck202d + l_xcck.xcck202e + l_xcck.xcck202f +
#                            l_xcck.xcck202g + l_xcck.xcck202h
#      CALL s_num_round(g_round_type,l_xcck.xcck202,g_curr[l_seq].digit2) RETURNING l_xcck.xcck202 
#      
#      LET l_xcck.xcck282   = l_xcck.xcck202  / l_xcck.xcck201                                          #本期异动单价
#      LET l_xcck.xcck282a  = l_xcck.xcck202a / l_xcck.xcck201                                          #本期异动单价-材料
#      LET l_xcck.xcck282b  = l_xcck.xcck202b / l_xcck.xcck201                                          #本期异动单价-人工
#      LET l_xcck.xcck282c  = l_xcck.xcck202c / l_xcck.xcck201                                          #本期异动单价-加工
#      LET l_xcck.xcck282d  = l_xcck.xcck202d / l_xcck.xcck201                                          #本期异动单价-制费一
#      LET l_xcck.xcck282e  = l_xcck.xcck202e / l_xcck.xcck201                                          #本期异动单价-制费二
#      LET l_xcck.xcck282f  = l_xcck.xcck202f / l_xcck.xcck201                                          #本期异动单价-制费三
#      LET l_xcck.xcck282g  = l_xcck.xcck202g / l_xcck.xcck201                                          #本期异动单价-制费四
#      LET l_xcck.xcck282h  = l_xcck.xcck202h / l_xcck.xcck201                                          #本期异动单价-制费五 
#   
#      CALL s_num_round(g_round_type,l_xcck.xcck282a,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282a     #本期异动单价-材料    
#      CALL s_num_round(g_round_type,l_xcck.xcck282b,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282b     #本期异动单价-人工    
#      CALL s_num_round(g_round_type,l_xcck.xcck282c,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282c     #本期异动单价-加工    
#      CALL s_num_round(g_round_type,l_xcck.xcck282d,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282d     #本期异动单价-制费一  
#      CALL s_num_round(g_round_type,l_xcck.xcck282e,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282e     #本期异动单价-制费二  
#      CALL s_num_round(g_round_type,l_xcck.xcck282f,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282f     #本期异动单价-制费三  
#      CALL s_num_round(g_round_type,l_xcck.xcck282g,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282g     #本期异动单价-制费四  
#      CALL s_num_round(g_round_type,l_xcck.xcck282h,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282h     #本期异动单价-制费五  
#      
#      #本期异动单价
#      LET l_xcck.xcck282  = l_xcck.xcck282a + l_xcck.xcck282b + l_xcck.xcck282c +
#                            l_xcck.xcck282d + l_xcck.xcck282e + l_xcck.xcck282f +
#                            l_xcck.xcck282g + l_xcck.xcck282h   
#      CALL s_num_round(g_round_type,l_xcck.xcck282,g_curr[l_seq].digit1) RETURNING l_xcck.xcck282                           
#           
#      LET l_xcck.xcck901   = l_xcck.xcck201                       #结存数量                   
#      LET l_xcck.xcck902   = l_xcck.xcck202                       #结存金额                   
#      LET l_xcck.xcck902a  = l_xcck.xcck202a                      #结存金额-材料               
#      LET l_xcck.xcck902b  = l_xcck.xcck202b                      #结存金额-人工               
#      LET l_xcck.xcck902c  = l_xcck.xcck202c                      #结存金额-加工费             
#      LET l_xcck.xcck902d  = l_xcck.xcck202d                      #结存金额-制费一             
#      LET l_xcck.xcck902e  = l_xcck.xcck202e                      #结存金额-制费二             
#      LET l_xcck.xcck902f  = l_xcck.xcck202f                      #结存金额-制费三             
#      LET l_xcck.xcck902g  = l_xcck.xcck202g                      #结存金额-制费四             
#      LET l_xcck.xcck902h  = l_xcck.xcck202h                      #结存金额-制费五  
#      
#      LET l_xcck.xcck980   = l_xcck.xcck282                       #结存单位成本         
#      LET l_xcck.xcck980a  = l_xcck.xcck282a                      #结存单位成本-材料    
#      LET l_xcck.xcck980b  = l_xcck.xcck282b                      #结存单位成本-人工    
#      LET l_xcck.xcck980c  = l_xcck.xcck282c                      #结存单位成本-加工费  
#      LET l_xcck.xcck980d  = l_xcck.xcck282d                      #结存单位成本-制费一  
#      LET l_xcck.xcck980e  = l_xcck.xcck282e                      #结存单位成本-制费二  
#      LET l_xcck.xcck980f  = l_xcck.xcck282f                      #结存单位成本-制费三  
#      LET l_xcck.xcck980g  = l_xcck.xcck282g                      #结存单位成本-制费四  
#      LET l_xcck.xcck980h  = l_xcck.xcck282h                      #结存单位成本-制费五  
#      
#      CALL s_axcp500_ins_or_upd_xcck(l_xcck.*)
#           RETURNING l_success
#      IF NOT l_success THEN
#         CONTINUE FOREACH
#      END IF
#      
#   END FOREACH
#      
#   LET r_success = TRUE
#   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 月加权-拆件处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg_disassemble(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-08-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_disassemble(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
#   DEFINE l_sfaa          RECORD LIKE sfaa_t.*  #161124-00048#20 mark
   DEFINE l_sfaa          type_g_sfaa  #170605-00013#1-add
   #170605-00013#1-s-mark 改用type方式
   ##161124-00048#20 add(s)
   #DEFINE l_sfaa RECORD  #工單單頭檔
   #    sfaaent LIKE sfaa_t.sfaaent, #企业编号
   #    sfaaownid LIKE sfaa_t.sfaaownid, #资料所有者
   #    sfaaowndp LIKE sfaa_t.sfaaowndp, #资料所有部门
   #    sfaacrtid LIKE sfaa_t.sfaacrtid, #资料录入者
   #    sfaacrtdp LIKE sfaa_t.sfaacrtdp, #资料录入部门
   #    sfaacrtdt LIKE sfaa_t.sfaacrtdt, #资料创建日
   #    sfaamodid LIKE sfaa_t.sfaamodid, #资料更改者
   #    sfaamoddt LIKE sfaa_t.sfaamoddt, #最近更改日
   #    sfaacnfid LIKE sfaa_t.sfaacnfid, #资料审核者
   #    sfaacnfdt LIKE sfaa_t.sfaacnfdt, #数据审核日
   #    sfaapstid LIKE sfaa_t.sfaapstid, #资料过账者
   #    sfaapstdt LIKE sfaa_t.sfaapstdt, #资料过账日
   #    sfaastus LIKE sfaa_t.sfaastus, #状态码
   #    sfaasite LIKE sfaa_t.sfaasite, #营运据点
   #    sfaadocno LIKE sfaa_t.sfaadocno, #单号
   #    sfaadocdt LIKE sfaa_t.sfaadocdt, #单据日期
   #    sfaa001 LIKE sfaa_t.sfaa001, #变更版本
   #    sfaa002 LIKE sfaa_t.sfaa002, #生管人员
   #    sfaa003 LIKE sfaa_t.sfaa003, #工单类型
   #    sfaa004 LIKE sfaa_t.sfaa004, #发料制度
   #    sfaa005 LIKE sfaa_t.sfaa005, #工单来源
   #    sfaa006 LIKE sfaa_t.sfaa006, #来源单号
   #    sfaa007 LIKE sfaa_t.sfaa007, #来源项次
   #    sfaa008 LIKE sfaa_t.sfaa008, #来源项序
   #    sfaa009 LIKE sfaa_t.sfaa009, #参考客户
   #    sfaa010 LIKE sfaa_t.sfaa010, #生产料号
   #    sfaa011 LIKE sfaa_t.sfaa011, #特性
   #    sfaa012 LIKE sfaa_t.sfaa012, #生产数量
   #    sfaa013 LIKE sfaa_t.sfaa013, #生产单位
   #    sfaa014 LIKE sfaa_t.sfaa014, #BOM版本
   #    sfaa015 LIKE sfaa_t.sfaa015, #BOM有效日期
   #    sfaa016 LIKE sfaa_t.sfaa016, #工艺编号
   #    sfaa017 LIKE sfaa_t.sfaa017, #部门供应商
   #    sfaa018 LIKE sfaa_t.sfaa018, #协作据点
   #    sfaa019 LIKE sfaa_t.sfaa019, #预计开工日
   #    sfaa020 LIKE sfaa_t.sfaa020, #预计完工日
   #    sfaa021 LIKE sfaa_t.sfaa021, #母工单单号
   #    sfaa022 LIKE sfaa_t.sfaa022, #参考原始单号
   #    sfaa023 LIKE sfaa_t.sfaa023, #参考原始项次
   #    sfaa024 LIKE sfaa_t.sfaa024, #参考原始项序
   #    sfaa025 LIKE sfaa_t.sfaa025, #前工单单号
   #    sfaa026 LIKE sfaa_t.sfaa026, #料表批号(PBI)
   #    sfaa027 LIKE sfaa_t.sfaa027, #No Use
   #    sfaa028 LIKE sfaa_t.sfaa028, #项目编号
   #    sfaa029 LIKE sfaa_t.sfaa029, #WBS
   #    sfaa030 LIKE sfaa_t.sfaa030, #活动
   #    sfaa031 LIKE sfaa_t.sfaa031, #理由码
   #    sfaa032 LIKE sfaa_t.sfaa032, #紧急比率
   #    sfaa033 LIKE sfaa_t.sfaa033, #优先级
   #    sfaa034 LIKE sfaa_t.sfaa034, #预计入库库位
   #    sfaa035 LIKE sfaa_t.sfaa035, #预计入库储位
   #    sfaa036 LIKE sfaa_t.sfaa036, #手册编号
   #    sfaa037 LIKE sfaa_t.sfaa037, #保税核准文号
   #    sfaa038 LIKE sfaa_t.sfaa038, #保税核销
   #    sfaa039 LIKE sfaa_t.sfaa039, #备料已生成
   #    sfaa040 LIKE sfaa_t.sfaa040, #生产工艺路线已审核
   #    sfaa041 LIKE sfaa_t.sfaa041, #冻结
   #    sfaa042 LIKE sfaa_t.sfaa042, #返工
   #    sfaa043 LIKE sfaa_t.sfaa043, #备置
   #    sfaa044 LIKE sfaa_t.sfaa044, #FQC
   #    sfaa045 LIKE sfaa_t.sfaa045, #实际开始发料日
   #    sfaa046 LIKE sfaa_t.sfaa046, #最后入库日
   #    sfaa047 LIKE sfaa_t.sfaa047, #生管结案日
   #    sfaa048 LIKE sfaa_t.sfaa048, #成本结案日
   #    sfaa049 LIKE sfaa_t.sfaa049, #已发料套数
   #    sfaa050 LIKE sfaa_t.sfaa050, #已入库合格量
   #    sfaa051 LIKE sfaa_t.sfaa051, #已入库不合格量
   #    sfaa052 LIKE sfaa_t.sfaa052, #Bouns
   #    sfaa053 LIKE sfaa_t.sfaa053, #工单转入数量
   #    sfaa054 LIKE sfaa_t.sfaa054, #工单转出数量
   #    sfaa055 LIKE sfaa_t.sfaa055, #下线数量
   #    sfaa056 LIKE sfaa_t.sfaa056, #报废数量
   #    sfaa057 LIKE sfaa_t.sfaa057, #委外类型
   #    sfaa058 LIKE sfaa_t.sfaa058, #参考数量
   #    sfaa059 LIKE sfaa_t.sfaa059, #预计入库批号
   #    sfaa060 LIKE sfaa_t.sfaa060, #参考单位
   #    sfaa061 LIKE sfaa_t.sfaa061, #工艺
   #    sfaa062 LIKE sfaa_t.sfaa062, #纳入APS计算
   #    sfaa063 LIKE sfaa_t.sfaa063, #来源分批序
   #    sfaa064 LIKE sfaa_t.sfaa064, #参考原始分批序
   #    sfaa065 LIKE sfaa_t.sfaa065, #生管结案状态
   #    sfaa066 LIKE sfaa_t.sfaa066, #多角流程编号
   #    sfaa067 LIKE sfaa_t.sfaa067, #多角流进程号
   #    sfaa068 LIKE sfaa_t.sfaa068, #成本中心
   #    sfaa069 LIKE sfaa_t.sfaa069, #可供给量
   #    sfaa070 LIKE sfaa_t.sfaa070, #原始预计完工日期
   #    sfaa071 LIKE sfaa_t.sfaa071, #齐料套数
   #    sfaa072 LIKE sfaa_t.sfaa072  #保税否
   #END RECORD
   ##161124-00048#20 add(e)
   #170605-00013#1-e-mark
   DEFINE l_sfaadocno     LIKE sfaa_t.sfaadocno
   DEFINE l_sfaa048       LIKE sfaa_t.sfaa048
   DEFINE l_sfaa010       LIKE sfaa_t.sfaa010
   DEFINE l_close         LIKE type_t.chr1
   DEFINE l_date          LIKE type_t.dat
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET l_date = g_edate + 1
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME
   #当期有异动的
   #FOREACH s_axcp500_avg_disassemble_cs1 USING g_xcat001,p_xcbb006,p_xcbb006  #180731-00016#1 mark
#   FOREACH s_axcp500_avg_disassemble_cs1 USING g_xcat001,p_xcbb006,p_xcbb006,p_xcbb006  #180731-00016#1  #190411-00017#1 A mark
   #FOREACH s_axcp500_avg_disassemble_cs1 USING g_xcat001,p_xcbb006,p_xcbb006,g_bdate,g_edate,p_xcbb006  #190411-00017#1 A mod #190506-00043#1 mark
   FOREACH s_axcp500_avg_disassemble_cs1 USING g_xcat001,p_xcbb006,p_xcbb006,g_bdate,p_xcbb006  #190506-00043#1 add
                                          INTO l_sfaadocno,l_sfaa048,l_sfaa010
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH s_axcp500_avg_disassemble_cs1'
         LET g_errparam.popup  = TRUE
         CALL cl_err()   
         CALL s_axcp500_ins_error('','','','',l_sfaadocno,'','','',l_sfaa010,'','',
                                  '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_disassemble_cs1')

         CONTINUE FOREACH          
      END IF

      LET l_close = 'N'  #结案否
      IF l_sfaa048 >= g_bdate AND l_sfaa048 < l_date THEN
         LET l_close = 'Y'
      END IF     
      #在制处理
      CALL s_axcp500_disassemble_1(p_seq,l_sfaadocno,l_close,l_sfaa010,' ',' ',' ')             
           RETURNING l_success
      IF NOT l_success THEN
         CONTINUE FOREACH
      END IF    

      LET g_stat_cnt = g_stat_cnt + 1
   END FOREACH
   #add zhangllc 150810 --begin
   #当期没有异动，但当期结案的
   #add zhangllc 150810 --end
   
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(6,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 取得xccc的期初余额
# Memo...........:
# Usage..........: CALL s_axcp500_avg_get_last_xccc_balance(p_xccc001,p_xccc002,p_xccc006,p_xccc007,p_xccc008)
#                       RETURNING r_xccc101,r_xccc102,r_xccc102a,r_xccc102b,r_xccc102c,r_xccc102d,r_xccc102e,r_xccc102f,r_xccc102g,r_xccc102h
# Input parameter: p_xccc001      本位币顺序
#                : p_xccc002      成本域
#                : p_xccc006      料件
#                : p_xccc007      特征
#                : p_xccc008      批次
# Return code....: r_xccc101      上期结存数量
#                : r_xccc102      上期结存金额
#                : r_xccc102a     上期结存金额-材料
#                : r_xccc102b     上期结存金额-人工
#                : r_xccc102c     上期结存金额-加工
#                : r_xccc102d     上期结存金额-制费一
#                : r_xccc102e     上期结存金额-制费二
#                : r_xccc102f     上期结存金额-制费三
#                : r_xccc102g     上期结存金额-制费四
#                : r_xccc102h     上期结存金额-制费五
# Date & Author..: 2014-11-27 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_get_last_xccc_balance(p_xccc001,p_xccc002,p_xccc006,p_xccc007,p_xccc008)
   DEFINE p_xccc001       LIKE xccc_t.xccc001
   DEFINE p_xccc002       LIKE xccc_t.xccc002
   DEFINE p_xccc006       LIKE xccc_t.xccc006
   DEFINE p_xccc007       LIKE xccc_t.xccc007
   DEFINE p_xccc008       LIKE xccc_t.xccc008
   DEFINE r_xccc101       LIKE xccc_t.xccc101
   DEFINE r_xccc102       LIKE xccc_t.xccc102
   DEFINE r_xccc102a      LIKE xccc_t.xccc102a         
   DEFINE r_xccc102b      LIKE xccc_t.xccc102b
   DEFINE r_xccc102c      LIKE xccc_t.xccc102c
   DEFINE r_xccc102d      LIKE xccc_t.xccc102d
   DEFINE r_xccc102e      LIKE xccc_t.xccc102e
   DEFINE r_xccc102f      LIKE xccc_t.xccc102f
   DEFINE r_xccc102g      LIKE xccc_t.xccc102g
   DEFINE r_xccc102h      LIKE xccc_t.xccc102h
#   DEFINE l_t_xccc        RECORD LIKE xccc_t.*  #161124-00048#20 mark
   DEFINE l_t_xccc        type_g_xccc  #170605-00013#1-add
   DEFINE l_txcca         type_g_xcca  #170605-00013#1-add
#170605-00013#1-s-mark 改用type方式
#  #161124-00048#20 add(s)
#  DEFINE l_t_xccc RECORD  #料件庫存成本期異動統計檔
#       xcccent LIKE xccc_t.xcccent, #企业编号
#       xccccomp LIKE xccc_t.xccccomp, #法人组织
#       xcccld LIKE xccc_t.xcccld, #账套
#       xccc001 LIKE xccc_t.xccc001, #账套本位币顺序
#       xccc002 LIKE xccc_t.xccc002, #成本域
#       xccc003 LIKE xccc_t.xccc003, #成本计算类型
#       xccc004 LIKE xccc_t.xccc004, #年度
#       xccc005 LIKE xccc_t.xccc005, #期别
#       xccc006 LIKE xccc_t.xccc006, #料号
#       xccc007 LIKE xccc_t.xccc007, #产品特征
#       xccc008 LIKE xccc_t.xccc008, #批号
#       xccc010 LIKE xccc_t.xccc010, #核算币种
#       xccc101 LIKE xccc_t.xccc101, #上期结存数量
#       xccc102 LIKE xccc_t.xccc102, #上期结存金额
#       xccc102a LIKE xccc_t.xccc102a, #上期结存金额-材料
#       xccc102b LIKE xccc_t.xccc102b, #上期结存金额-人工
#       xccc102c LIKE xccc_t.xccc102c, #上期结存金额-加工
#       xccc102d LIKE xccc_t.xccc102d, #上期结存金额-制费一
#       xccc102e LIKE xccc_t.xccc102e, #上期结存金额-制费二
#       xccc102f LIKE xccc_t.xccc102f, #上期结存金额-制费三
#       xccc102g LIKE xccc_t.xccc102g, #上期结存金额-制费四
#       xccc102h LIKE xccc_t.xccc102h, #上期结存金额-制费五
#       xccc201 LIKE xccc_t.xccc201, #本期采购入库数量
#       xccc202 LIKE xccc_t.xccc202, #本期采购入库金额
#       xccc202a LIKE xccc_t.xccc202a, #本期采购入库金额-材料
#       xccc202b LIKE xccc_t.xccc202b, #本期采购入库金额-人工
#       xccc202c LIKE xccc_t.xccc202c, #本期采购入库金额-加工
#       xccc202d LIKE xccc_t.xccc202d, #本期采购入库金额-制费一
#       xccc202e LIKE xccc_t.xccc202e, #本期采购入库金额-制费二
#       xccc202f LIKE xccc_t.xccc202f, #本期采购入库金额-制费三
#       xccc202g LIKE xccc_t.xccc202g, #本期采购入库金额-制费四
#       xccc202h LIKE xccc_t.xccc202h, #本期采购入库金额-制费五
#       xccc203 LIKE xccc_t.xccc203, #本期委外入库数量
#       xccc204 LIKE xccc_t.xccc204, #本期委外入库金额
#       xccc204a LIKE xccc_t.xccc204a, #本期委外入库金额-材料
#       xccc204b LIKE xccc_t.xccc204b, #本期委外入库金额-人工
#       xccc204c LIKE xccc_t.xccc204c, #本期委外入库金额-加工
#       xccc204d LIKE xccc_t.xccc204d, #本期委外入库金额-制费一
#       xccc204e LIKE xccc_t.xccc204e, #本期委外入库金额-制费二
#       xccc204f LIKE xccc_t.xccc204f, #本期委外入库金额-制费三
#       xccc204g LIKE xccc_t.xccc204g, #本期委外入库金额-制费四
#       xccc204h LIKE xccc_t.xccc204h, #本期委外入库金额-制费五
#       xccc205 LIKE xccc_t.xccc205, #本期工单入库数量
#       xccc206 LIKE xccc_t.xccc206, #本期工单入库金额
#       xccc206a LIKE xccc_t.xccc206a, #本期工单入库金额-材料
#       xccc206b LIKE xccc_t.xccc206b, #本期工单入库金额-人工
#       xccc206c LIKE xccc_t.xccc206c, #本期工单入库金额-加工
#       xccc206d LIKE xccc_t.xccc206d, #本期工单入库金额-制费一
#       xccc206e LIKE xccc_t.xccc206e, #本期工单入库金额-制费二
#       xccc206f LIKE xccc_t.xccc206f, #本期工单入库金额-制费三
#       xccc206g LIKE xccc_t.xccc206g, #本期工单入库金额-制费四
#       xccc206h LIKE xccc_t.xccc206h, #本期工单入库金额-制费五
#       xccc207 LIKE xccc_t.xccc207, #本期返工领出数量
#       xccc208 LIKE xccc_t.xccc208, #本期返工领出金额
#       xccc208a LIKE xccc_t.xccc208a, #本期返工领出金额-材料
#       xccc208b LIKE xccc_t.xccc208b, #本期返工领出金额-人工
#       xccc208c LIKE xccc_t.xccc208c, #本期返工领出金额-加工
#       xccc208d LIKE xccc_t.xccc208d, #本期返工领出金额-制费一
#       xccc208e LIKE xccc_t.xccc208e, #本期返工领出金额-制费二
#       xccc208f LIKE xccc_t.xccc208f, #本期返工领出金额-制费三
#       xccc208g LIKE xccc_t.xccc208g, #本期返工领出金额-制费四
#       xccc208h LIKE xccc_t.xccc208h, #本期返工领出金额-制费五
#       xccc209 LIKE xccc_t.xccc209, #本期返工入库数量
#       xccc210 LIKE xccc_t.xccc210, #本期返工入库金额
#       xccc210a LIKE xccc_t.xccc210a, #本期返工入库金额-材料
#       xccc210b LIKE xccc_t.xccc210b, #本期返工入库金额-人工
#       xccc210c LIKE xccc_t.xccc210c, #本期返工入库金额-加工
#       xccc210d LIKE xccc_t.xccc210d, #本期返工入库金额-制费一
#       xccc210e LIKE xccc_t.xccc210e, #本期返工入库金额-制费二
#       xccc210f LIKE xccc_t.xccc210f, #本期返工入库金额-制费三
#       xccc210g LIKE xccc_t.xccc210g, #本期返工入库金额-制费四
#       xccc210h LIKE xccc_t.xccc210h, #本期返工入库金额-制费五
#       xccc211 LIKE xccc_t.xccc211, #本期杂项入库数量
#       xccc212 LIKE xccc_t.xccc212, #本期杂项入库金额
#       xccc212a LIKE xccc_t.xccc212a, #本期杂项入库金额-材料
#       xccc212b LIKE xccc_t.xccc212b, #本期杂项入库金额-人工
#       xccc212c LIKE xccc_t.xccc212c, #本期杂项入库金额-加工
#       xccc212d LIKE xccc_t.xccc212d, #本期杂项入库金额-制费一
#       xccc212e LIKE xccc_t.xccc212e, #本期杂项入库金额-制费二
#       xccc212f LIKE xccc_t.xccc212f, #本期杂项入库金额-制费三
#       xccc212g LIKE xccc_t.xccc212g, #本期杂项入库金额-制费四
#       xccc212h LIKE xccc_t.xccc212h, #本期杂项入库金额-制费五
#       xccc213 LIKE xccc_t.xccc213, #本期调整入库数量
#       xccc214 LIKE xccc_t.xccc214, #本期调整入库金额
#       xccc214a LIKE xccc_t.xccc214a, #本期调整入库金额-材料
#       xccc214b LIKE xccc_t.xccc214b, #本期调整入库金额-人工
#       xccc214c LIKE xccc_t.xccc214c, #本期调整入库金额-加工
#       xccc214d LIKE xccc_t.xccc214d, #本期调整入库金额-制费一
#       xccc214e LIKE xccc_t.xccc214e, #本期调整入库金额-制费二
#       xccc214f LIKE xccc_t.xccc214f, #本期调整入库金额-制费三
#       xccc214g LIKE xccc_t.xccc214g, #本期调整入库金额-制费四
#       xccc214h LIKE xccc_t.xccc214h, #本期调整入库金额-制费五
#       xccc215 LIKE xccc_t.xccc215, #本期销退入库数量
#       xccc216 LIKE xccc_t.xccc216, #本期销退入库金额
#       xccc216a LIKE xccc_t.xccc216a, #本期销退入库金额-材料
#       xccc216b LIKE xccc_t.xccc216b, #本期销退入库金额-人工
#       xccc216c LIKE xccc_t.xccc216c, #本期销退入库金额-加工
#       xccc216d LIKE xccc_t.xccc216d, #本期销退入库金额-制费一
#       xccc216e LIKE xccc_t.xccc216e, #本期销退入库金额-制费二
#       xccc216f LIKE xccc_t.xccc216f, #本期销退入库金额-制费三
#       xccc216g LIKE xccc_t.xccc216g, #本期销退入库金额-制费四
#       xccc216h LIKE xccc_t.xccc216h, #本期销退入库金额-制费五
#       xccc217 LIKE xccc_t.xccc217, #本期调拨入库数量
#       xccc218 LIKE xccc_t.xccc218, #本期调拨入库金额
#       xccc218a LIKE xccc_t.xccc218a, #本期调拨入库金额-材料
#       xccc218b LIKE xccc_t.xccc218b, #本期调拨入库金额-人工
#       xccc218c LIKE xccc_t.xccc218c, #本期调拨入库金额-加工
#       xccc218d LIKE xccc_t.xccc218d, #本期调拨入库金额-制费一
#       xccc218e LIKE xccc_t.xccc218e, #本期调拨入库金额-制费二
#       xccc218f LIKE xccc_t.xccc218f, #本期调拨入库金额-制费三
#       xccc218g LIKE xccc_t.xccc218g, #本期调拨入库金额-制费四
#       xccc218h LIKE xccc_t.xccc218h, #本期调拨入库金额-制费五
#       xccc280 LIKE xccc_t.xccc280, #本期平均单价
#       xccc280a LIKE xccc_t.xccc280a, #本期平均单价-材料
#       xccc280b LIKE xccc_t.xccc280b, #本期平均单价-人工
#       xccc280c LIKE xccc_t.xccc280c, #本期平均单价-加工
#       xccc280d LIKE xccc_t.xccc280d, #本期平均单价-制费一
#       xccc280e LIKE xccc_t.xccc280e, #本期平均单价-制费二
#       xccc280f LIKE xccc_t.xccc280f, #本期平均单价-制费三
#       xccc280g LIKE xccc_t.xccc280g, #本期平均单价-制费四
#       xccc280h LIKE xccc_t.xccc280h, #本期平均单价-制费五
#       xccc301 LIKE xccc_t.xccc301, #本期工单领用数量
#       xccc302 LIKE xccc_t.xccc302, #本期工单领用金额
#       xccc302a LIKE xccc_t.xccc302a, #本期工单领用金额-材料
#       xccc302b LIKE xccc_t.xccc302b, #本期工单领用金额-人工
#       xccc302c LIKE xccc_t.xccc302c, #本期工单领用金额-加工
#       xccc302d LIKE xccc_t.xccc302d, #本期工单领用金额-制费一
#       xccc302e LIKE xccc_t.xccc302e, #本期工单领用金额-制费二
#       xccc302f LIKE xccc_t.xccc302f, #本期工单领用金额-制费三
#       xccc302g LIKE xccc_t.xccc302g, #本期工单领用金额-制费四
#       xccc302h LIKE xccc_t.xccc302h, #本期工单领用金额-制费五
#       xccc303 LIKE xccc_t.xccc303, #本期销货数量
#       xccc304 LIKE xccc_t.xccc304, #本期销货成本
#       xccc304a LIKE xccc_t.xccc304a, #本期销货成本-材料
#       xccc304b LIKE xccc_t.xccc304b, #本期销货成本-人工
#       xccc304c LIKE xccc_t.xccc304c, #本期销货成本-加工
#       xccc304d LIKE xccc_t.xccc304d, #本期销货成本-制费一
#       xccc304e LIKE xccc_t.xccc304e, #本期销货成本-制费二
#       xccc304f LIKE xccc_t.xccc304f, #本期销货成本-制费三
#       xccc304g LIKE xccc_t.xccc304g, #本期销货成本-制费四
#       xccc304h LIKE xccc_t.xccc304h, #本期销货成本-制费五
#       xccc305 LIKE xccc_t.xccc305, #本期销退数量
#       xccc306 LIKE xccc_t.xccc306, #本期销退成本
#       xccc306a LIKE xccc_t.xccc306a, #本期销退成本-材料
#       xccc306b LIKE xccc_t.xccc306b, #本期销退成本-人工
#       xccc306c LIKE xccc_t.xccc306c, #本期销退成本-加工
#       xccc306d LIKE xccc_t.xccc306d, #本期销退成本-制费一
#       xccc306e LIKE xccc_t.xccc306e, #本期销退成本-制费二
#       xccc306f LIKE xccc_t.xccc306f, #本期销退成本-制费三
#       xccc306g LIKE xccc_t.xccc306g, #本期销退成本-制费四
#       xccc306h LIKE xccc_t.xccc306h, #本期销退成本-制费五
#       xccc307 LIKE xccc_t.xccc307, #本期销售费用数量
#       xccc308 LIKE xccc_t.xccc308, #本期销售费用成本
#       xccc308a LIKE xccc_t.xccc308a, #本期销售费用成本-材料
#       xccc308b LIKE xccc_t.xccc308b, #本期销售费用成本-人工
#       xccc308c LIKE xccc_t.xccc308c, #本期销售费用成本-加工
#       xccc308d LIKE xccc_t.xccc308d, #本期销售费用成本-制费一
#       xccc308e LIKE xccc_t.xccc308e, #本期销售费用成本-制费二
#       xccc308f LIKE xccc_t.xccc308f, #本期销售费用成本-制费三
#       xccc308g LIKE xccc_t.xccc308g, #本期销售费用成本-制费四
#       xccc308h LIKE xccc_t.xccc308h, #本期销售费用成本-制费五
#       xccc309 LIKE xccc_t.xccc309, #本期杂发数量
#       xccc310 LIKE xccc_t.xccc310, #本期杂发金额
#       xccc310a LIKE xccc_t.xccc310a, #本期杂发金额-材料
#       xccc310b LIKE xccc_t.xccc310b, #本期杂发金额-人工
#       xccc310c LIKE xccc_t.xccc310c, #本期杂发金额-加工
#       xccc310d LIKE xccc_t.xccc310d, #本期杂发金额-制费一
#       xccc310e LIKE xccc_t.xccc310e, #本期杂发金额-制费二
#       xccc310f LIKE xccc_t.xccc310f, #本期杂发金额-制费三
#       xccc310g LIKE xccc_t.xccc310g, #本期杂发金额-制费四
#       xccc310h LIKE xccc_t.xccc310h, #本期杂发金额-制费五
#       xccc311 LIKE xccc_t.xccc311, #本期盘盈亏数量
#       xccc312 LIKE xccc_t.xccc312, #本期盘盈亏金额
#       xccc312a LIKE xccc_t.xccc312a, #本期盘盈亏金额-材料
#       xccc312b LIKE xccc_t.xccc312b, #本期盘盈亏金额-人工
#       xccc312c LIKE xccc_t.xccc312c, #本期盘盈亏金额-加工
#       xccc312d LIKE xccc_t.xccc312d, #本期盘盈亏金额-制费一
#       xccc312e LIKE xccc_t.xccc312e, #本期盘盈亏金额-制费二
#       xccc312f LIKE xccc_t.xccc312f, #本期盘盈亏金额-制费三
#       xccc312g LIKE xccc_t.xccc312g, #本期盘盈亏金额-制费四
#       xccc312h LIKE xccc_t.xccc312h, #本期盘盈亏金额-制费五
#       xccc313 LIKE xccc_t.xccc313, #本期调拨出库数量
#       xccc314 LIKE xccc_t.xccc314, #本期调拨出库金额
#       xccc314a LIKE xccc_t.xccc314a, #本期调拨出库金额-材料
#       xccc314b LIKE xccc_t.xccc314b, #本期调拨出库金额-人工
#       xccc314c LIKE xccc_t.xccc314c, #本期调拨出库金额-加工
#       xccc314d LIKE xccc_t.xccc314d, #本期调拨出库金额-制费一
#       xccc314e LIKE xccc_t.xccc314e, #本期调拨出库金额-制费二
#       xccc314f LIKE xccc_t.xccc314f, #本期调拨出库金额-制费三
#       xccc314g LIKE xccc_t.xccc314g, #本期调拨出库金额-制费四
#       xccc314h LIKE xccc_t.xccc314h, #本期调拨出库金额-制费五
#       xccc401 LIKE xccc_t.xccc401, #本期销货收入金额
#       xccc402 LIKE xccc_t.xccc402, #本期销退金额
#       xccc901 LIKE xccc_t.xccc901, #期末结存数量
#       xccc902 LIKE xccc_t.xccc902, #期末结存金额
#       xccc902a LIKE xccc_t.xccc902a, #期末结存金额-材料
#       xccc902b LIKE xccc_t.xccc902b, #期末结存金额-人工
#       xccc902c LIKE xccc_t.xccc902c, #期末结存金额-加工
#       xccc902d LIKE xccc_t.xccc902d, #期末结存金额-制费一
#       xccc902e LIKE xccc_t.xccc902e, #期末结存金额-制费二
#       xccc902f LIKE xccc_t.xccc902f, #期末结存金额-制费三
#       xccc902g LIKE xccc_t.xccc902g, #期末结存金额-制费四
#       xccc902h LIKE xccc_t.xccc902h, #期末结存金额-制费五
#       xccc903 LIKE xccc_t.xccc903, #期末结存调整金额
#       xccc903a LIKE xccc_t.xccc903a, #期末结存调整金额-材料
#       xccc903b LIKE xccc_t.xccc903b, #期末结存调整金额-人工
#       xccc903c LIKE xccc_t.xccc903c, #期末结存调整金额-加工
#       xccc903d LIKE xccc_t.xccc903d, #期末结存调整金额-制费一
#       xccc903e LIKE xccc_t.xccc903e, #期末结存调整金额-制费二
#       xccc903f LIKE xccc_t.xccc903f, #期末结存调整金额-制费三
#       xccc903g LIKE xccc_t.xccc903g, #期末结存调整金额-制费四
#       xccc903h LIKE xccc_t.xccc903h, #期末结存调整金额-制费五
#       xccctime LIKE xccc_t.xccctime  #最近成本计算时间
#END RECORD
#  #161124-00048#20 add(e)
##   DEFINE l_t_xcca        RECORD LIKE xcca_t.*  #161124-00048#20 mark
#  #161124-00048#20 add(s)
#  DEFINE l_txcca RECORD  #期初庫存數量成本開帳檔
#       xccaent LIKE xcca_t.xccaent, #企业编号
#       xccald LIKE xcca_t.xccald, #账套
#       xccacomp LIKE xcca_t.xccacomp, #法人组织
#       xcca001 LIKE xcca_t.xcca001, #账套本位币顺序
#       xcca002 LIKE xcca_t.xcca002, #成本域
#       xcca003 LIKE xcca_t.xcca003, #成本计算类型
#       xcca004 LIKE xcca_t.xcca004, #年度
#       xcca005 LIKE xcca_t.xcca005, #期别
#       xcca006 LIKE xcca_t.xcca006, #料号
#       xcca007 LIKE xcca_t.xcca007, #特性
#       xcca008 LIKE xcca_t.xcca008, #批号
#       xcca101 LIKE xcca_t.xcca101, #当月期末数量
#       xcca102 LIKE xcca_t.xcca102, #当月期末金额-金额合计
#       xcca102a LIKE xcca_t.xcca102a, #当月期末金额-材料
#       xcca102b LIKE xcca_t.xcca102b, #当月期末金额-人工
#       xcca102c LIKE xcca_t.xcca102c, #当月期末金额-委外加工
#       xcca102d LIKE xcca_t.xcca102d, #当月期末金额-制费一
#       xcca102e LIKE xcca_t.xcca102e, #当月期末金额-制费二
#       xcca102f LIKE xcca_t.xcca102f, #当月期末金额-制费三
#       xcca102g LIKE xcca_t.xcca102g, #当月期末金额-制费四
#       xcca102h LIKE xcca_t.xcca102h, #当月期末金额-制费五
#       xcca110 LIKE xcca_t.xcca110, #当月期末金额-平均单价
#       xcca110a LIKE xcca_t.xcca110a, #当月期末金额-材料平均单价
#       xcca110b LIKE xcca_t.xcca110b, #当月期末金额-人工平均单价
#       xcca110c LIKE xcca_t.xcca110c, #当月期末金额-委外加工平均单
#       xcca110d LIKE xcca_t.xcca110d, #当月期末金额-制费一平均单价
#       xcca110e LIKE xcca_t.xcca110e, #当月期末金额-制费二平均单价
#       xcca110f LIKE xcca_t.xcca110f, #当月期末金额-制费三平均单价
#       xcca110g LIKE xcca_t.xcca110g, #当月期末金额-制费四平均单价
#       xcca110h LIKE xcca_t.xcca110h, #当月期末金额-制费五平均单价
#       xccaownid LIKE xcca_t.xccaownid, #资料所有者
#       xccaowndp LIKE xcca_t.xccaowndp, #资料所有部门
#       xccacrtid LIKE xcca_t.xccacrtid, #资料录入者
#       xccacrtdp LIKE xcca_t.xccacrtdp, #资料录入部门
#       xccacrtdt LIKE xcca_t.xccacrtdt, #资料创建日
#       xccamodid LIKE xcca_t.xccamodid, #资料更改者
#       xccamoddt LIKE xcca_t.xccamoddt, #最近更改日
#       xccacnfid LIKE xcca_t.xccacnfid, #资料审核者
#       xccacnfdt LIKE xcca_t.xccacnfdt, #数据审核日
#       xccapstid LIKE xcca_t.xccapstid, #资料过账者
#       xccapstdt LIKE xcca_t.xccapstdt, #资料过账日
#       xccastus LIKE xcca_t.xccastus  #状态码
#END RECORD
#  #161124-00048#20 add(e)
#170605-00013#1-e-mark
   DEFINE l_flag1         LIKE type_t.chr1
   DEFINE l_flag2         LIKE type_t.chr1
   
#   WHENEVER ERROR CONTINUE
#
#   #上期结存
#   LET l_flag1 = 'N'    #开帐xcca
#   LET l_flag2 = 'N'    #上期xccc
#   SELECT 'Y',xcca_t.* INTO l_flag1,l_t_xcca.* FROM xcca_t
#    WHERE xccaent = g_enterprise
#      AND xccald  = g_ld
#      AND xcca001 = p_xccc001                #账套本位币顺序      
#      AND xcca002 = p_xccc002                #成本域           
#      AND xcca003 = g_xcat001                #成本计算类型    
#      AND xcca004 = g_last_yy                     
#      AND xcca005 = g_last_pp                     
#      AND xcca006 = p_xccc006                #料号     
#      AND xcca007 = p_xccc007                #产品特征        
#      AND xcca008 = p_xccc008                #批号
#      
#   SELECT 'Y',xccc_t.* INTO l_flag2,l_t_xccc.* FROM xccc_t
#    WHERE xcccent = g_enterprise
#      AND xcccld  = g_ld
#      AND xccc001 = p_xccc001                #账套本位币顺序      
#      AND xccc002 = p_xccc002                #成本域           
#      AND xccc003 = g_xcat001                #成本计算类型    
#      AND xccc004 = g_last_yy                     
#      AND xccc005 = g_last_pp                     
#      AND xccc006 = p_xccc006                #料号     
#      AND xccc007 = p_xccc007                #产品特征        
#      AND xccc008 = p_xccc008                #批号
#  
#   CASE
#      WHEN l_flag1 = 'Y' 
#           IF cl_null(l_t_xcca.xcca102a) THEN LET l_t_xcca.xcca102a = 0 END IF
#           IF cl_null(l_t_xcca.xcca102b) THEN LET l_t_xcca.xcca102b = 0 END IF
#           IF cl_null(l_t_xcca.xcca102c) THEN LET l_t_xcca.xcca102c = 0 END IF
#           IF cl_null(l_t_xcca.xcca102d) THEN LET l_t_xcca.xcca102d = 0 END IF
#           IF cl_null(l_t_xcca.xcca102e) THEN LET l_t_xcca.xcca102e = 0 END IF
#           IF cl_null(l_t_xcca.xcca102f) THEN LET l_t_xcca.xcca102f = 0 END IF
#           IF cl_null(l_t_xcca.xcca102g) THEN LET l_t_xcca.xcca102g = 0 END IF
#           IF cl_null(l_t_xcca.xcca102h) THEN LET l_t_xcca.xcca102h = 0 END IF
#    
#           LET l_t_xcca.xcca102 = l_t_xcca.xcca102a + l_t_xcca.xcca102b + l_t_xcca.xcca102c + l_t_xcca.xcca102d +
#                                  l_t_xcca.xcca102e + l_t_xcca.xcca102f + l_t_xcca.xcca102g + l_t_xcca.xcca102h
#
#
#           LET r_xccc101  = l_t_xcca.xcca101          #上期结存数量       
#           LET r_xccc102  = l_t_xcca.xcca102          #上期结存金额       
#           LET r_xccc102a = l_t_xcca.xcca102a         #上期结存金额-材料  
#           LET r_xccc102b = l_t_xcca.xcca102b         #上期结存金额-人工  
#           LET r_xccc102c = l_t_xcca.xcca102c         #上期结存金额-加工  
#           LET r_xccc102d = l_t_xcca.xcca102d         #上期结存金额-制费一
#           LET r_xccc102e = l_t_xcca.xcca102e         #上期结存金额-制费二
#           LET r_xccc102f = l_t_xcca.xcca102f         #上期结存金额-制费三
#           LET r_xccc102g = l_t_xcca.xcca102g         #上期结存金额-制费四
#           LET r_xccc102h = l_t_xcca.xcca102h         #上期结存金额-制费五                
#      WHEN l_flag2 = 'Y'
#           LET r_xccc101  = l_t_xccc.xccc901          #上期结存数量       
#           LET r_xccc102  = l_t_xccc.xccc902          #上期结存金额       
#           LET r_xccc102a = l_t_xccc.xccc902a         #上期结存金额-材料  
#           LET r_xccc102b = l_t_xccc.xccc902b         #上期结存金额-人工  
#           LET r_xccc102c = l_t_xccc.xccc902c         #上期结存金额-加工  
#           LET r_xccc102d = l_t_xccc.xccc902d         #上期结存金额-制费一
#           LET r_xccc102e = l_t_xccc.xccc902e         #上期结存金额-制费二
#           LET r_xccc102f = l_t_xccc.xccc902f         #上期结存金额-制费三
#           LET r_xccc102g = l_t_xccc.xccc902g         #上期结存金额-制费四
#           LET r_xccc102h = l_t_xccc.xccc902h         #上期结存金额-制费五               
#   END CASE          
#   
#   RETURN r_xccc101,r_xccc102,r_xccc102a,r_xccc102b,r_xccc102c,r_xccc102d,r_xccc102e,r_xccc102f,r_xccc102g,r_xccc102h
   
END FUNCTION

################################################################################
# Descriptions...: 月加权-取成本单价-从xcck档案
# Memo...........:
# Usage..........: CALL s_axcp500_avg_get_xcck_cost(p_xcck001,p_xcck047,p_xcck010,p_xcck011,p_xcck017,p_xccd007)
#                      RETURNING r_success,r_avg
# Input parameter: p_xcck001      记帐本位币顺序
#                : p_xccc017      工单编号
#                : p_xcck010      料件
#                : p_xcck011      特征
#                : p_xcck017      批次
#                : p_xccd007      主件编号
# Return code....: r_success      成功否标识符
#                : r_avg          成本
# Date & Author..: 2014-12-08 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_get_xcck_cost(p_xcck001,p_xcck047,p_xcck010,p_xcck011,p_xcck017,p_xccd007)
   DEFINE p_xcck001           LIKE xcck_t.xcck001
   DEFINE p_xcck047           LIKE xcck_t.xcck047
   DEFINE p_xcck010           LIKE xcck_t.xcck010
   DEFINE p_xcck011           LIKE xcck_t.xcck011
   DEFINE p_xcck017           LIKE xcck_t.xcck017
   DEFINE p_xccd007           LIKE xccd_t.xccd007
   DEFINE r_success           LIKE type_t.num5
   DEFINE l_avg               type_get_cost_rec 
   DEFINE r_avg               type_g_std_cost
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET r_avg.sum = 0 LET r_avg.a   = 0 LET r_avg.b   = 0 LET r_avg.c   = 0 
   LET r_avg.d   = 0 LET r_avg.e   = 0 LET r_avg.f   = 0
   LET r_avg.g   = 0 LET r_avg.h   = 0
   
   #carrier 目前 当站下线 没有进入至xccz中,全部在结案时转出,所以暂不处理"当站下线"
   SELECT SUM(xcck201*xcck009*-1), SUM(xcck202*xcck009*-1), SUM(xcck202a*xcck009*-1),SUM(xcck202b*xcck009*-1),
          SUM(xcck202c*xcck009*-1),SUM(xcck202d*xcck009*-1),SUM(xcck202e*xcck009*-1),
          SUM(xcck202f*xcck009*-1),SUM(xcck202g*xcck009*-1),SUM(xcck202h*xcck009*-1)   
     INTO l_avg.*          
     FROM xcck_tmp
    WHERE xcckent = g_enterprise
      AND xcckld  = g_ld
      AND xcck001 = p_xcck001
      AND xcck003 = g_xcat001
      AND xcck004 = g_yy
      AND xcck005 = g_pp
      AND xcck047 = p_xcck047
      AND xcck010 = p_xcck010
      AND xcck011 = p_xcck011
      AND xcck017 = p_xcck017
#     AND xcck020 IN ('302','303','115','501')         #生产发料/生产退料/当站下线/盘点             
      AND xcck020 IN ('302','303','114','107')                     #生产发料/生产退料        

   IF SQLCA.sqlcode OR l_avg.qty IS NULL OR l_avg.qty = 0 THEN   #无数量
      INITIALIZE g_errparam TO NULL
      #计算主件%1的过程中，无法取得元件编号=%2 的成本资料
      LET g_errparam.code   = 'axc-00518'
      LET g_errparam.extend = ''
      LET g_errparam.replace[1] = p_xcck047
      LET g_errparam.replace[2] = p_xccd007
      LET g_errparam.replace[3] = p_xcck010
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_str = cl_getmsg('axc-00518',g_lang)
      LET g_str = cl_err_replace_msg(g_str)
      CALL s_axcp500_ins_error('','','','',p_xcck047,'','','',p_xcck010,p_xcck011,
                               p_xcck017,'','axc-00518',g_str,'')      
      RETURN r_success,r_avg.*
   END IF

   
   IF cl_null(l_avg.tot) THEN LET l_avg.tot = 0 END IF
   IF cl_null(l_avg.a)   THEN LET l_avg.a   = 0 END IF
   IF cl_null(l_avg.b)   THEN LET l_avg.b   = 0 END IF
   IF cl_null(l_avg.c)   THEN LET l_avg.c   = 0 END IF
   IF cl_null(l_avg.d)   THEN LET l_avg.d   = 0 END IF
   IF cl_null(l_avg.e)   THEN LET l_avg.e   = 0 END IF
   IF cl_null(l_avg.f)   THEN LET l_avg.f   = 0 END IF
   IF cl_null(l_avg.g)   THEN LET l_avg.g   = 0 END IF
   IF cl_null(l_avg.h)   THEN LET l_avg.h   = 0 END IF
   #170705-00006#1 mark(S)
   #LET r_avg.a = l_avg.a / l_avg.qty
   #LET r_avg.b = l_avg.b / l_avg.qty
   #LET r_avg.c = l_avg.c / l_avg.qty
   #LET r_avg.d = l_avg.d / l_avg.qty
   #LET r_avg.e = l_avg.e / l_avg.qty
   #LET r_avg.f = l_avg.f / l_avg.qty
   #LET r_avg.g = l_avg.g / l_avg.qty
   #LET r_avg.h = l_avg.h / l_avg.qty
   #170705-00006#1 mark(E)
   #170705-00006#1 add(S)
   IF l_avg.qty <> 0 THEN 
      LET r_avg.a = l_avg.a / l_avg.qty
      LET r_avg.b = l_avg.b / l_avg.qty
      LET r_avg.c = l_avg.c / l_avg.qty
      LET r_avg.d = l_avg.d / l_avg.qty
      LET r_avg.e = l_avg.e / l_avg.qty
      LET r_avg.f = l_avg.f / l_avg.qty
      LET r_avg.g = l_avg.g / l_avg.qty
      LET r_avg.h = l_avg.h / l_avg.qty
   ELSE
      LET r_avg.a = 0
      LET r_avg.b = 0
      LET r_avg.c = 0
      LET r_avg.d = 0
      LET r_avg.e = 0
      LET r_avg.f = 0
      LET r_avg.g = 0
      LET r_avg.h = 0
   END IF   
   #170705-00006#1 add(E)
   LET r_avg.sum = r_avg.a + r_avg.b + r_avg.c + r_avg.d + r_avg.e + r_avg.f + r_avg.g + r_avg.h

   LET r_success = TRUE
   RETURN r_success,r_avg.*
  
END FUNCTION

################################################################################
# Descriptions...: 月加权-重复性生产-料件的在制成本计算
# Memo...........:
# Usage..........: CALL s_axcp500_avg_repeat_wip(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-12-19 By Carrier
# Modify.........: 2015-07-30 By zhangllc 因没搜到应用的地方，为方便阅读代码，暂时mark
################################################################################
PUBLIC FUNCTION s_axcp500_avg_repeat_wip(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
#   DEFINE l_srab          RECORD LIKE srab_t.*  #161124-00048#20 mark
   #161124-00048#20 add(s)
   DEFINE l_srab RECORD  #重覆性生產計畫單身檔
       srabent LIKE srab_t.srabent, #企业编号
       srabsite LIKE srab_t.srabsite, #营运据点
       srab000 LIKE srab_t.srab000, #版本
       srab001 LIKE srab_t.srab001, #生产计划
       srab002 LIKE srab_t.srab002, #年
       srab003 LIKE srab_t.srab003, #月
       srab004 LIKE srab_t.srab004, #料件编号
       srab005 LIKE srab_t.srab005, #BOM特性
       srab006 LIKE srab_t.srab006, #产品特征
       srab007 LIKE srab_t.srab007, #工艺管理
       srab008 LIKE srab_t.srab008, #工艺编号
       srab009 LIKE srab_t.srab009, #日期
       srab010 LIKE srab_t.srab010, #数量
       srab011 LIKE srab_t.srab011, #单位
       srab012 LIKE srab_t.srab012  #重复性工单号码（FOR成本计算）
END RECORD
   #161124-00048#20 add(e)
   DEFINE l_close         LIKE type_t.chr1

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   #LET g_stat_cnt = 0
   #LET g_stat_begin = TIME
   #
   #FOREACH s_axcp500_avg_repeat_wip_cs1 USING g_rec.imaa001,g_rec.xccc007
   #                                      INTO l_srab.*
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code   = SQLCA.sqlcode
   #      LET g_errparam.extend = 'FOREACH s_axcp500_avg_repeat_wip_cs1'
   #      LET g_errparam.popup  = TRUE
   #      CALL cl_err()   
   #      CONTINUE FOREACH    
   #   END IF
   #   
   #   #主件 - 投入工时/入库数量                 
   #   CALL s_axcp500_wip_1(p_seq,l_srab.srabsite,l_srab.srab012,l_srab.srab001,l_srab.srab004,l_srab.srab005,l_srab.srab006,'')     
   #        RETURNING l_success
   #   IF NOT l_success THEN
#  #       RETURN r_success
   #   END IF
   #   
   #   #元件投入 - 上期结转/材料/人工/加工/制费/调整 
   #   CALL s_axcp500_wip_2()                            
   #        RETURNING l_success
   #   IF NOT l_success THEN
#  #       RETURN r_success
   #   END IF
   #   
#  #    #元件转出
#  #    CALL s_axcp500_repeat_wip_4()                     
#  #         RETURNING l_success
#  #    IF NOT l_success THEN
#  #       RETURN r_success
#  #    END IF
   #   
   #   #主件转出
   #   CALL s_axcp500_wip_5()                            
   #        RETURNING l_success
   #   IF NOT l_success THEN
#  #       RETURN r_success
   #   END IF
   #   
   #   #本期是否有异动,若无则DELETE
   #   CALL s_axcp500_wip_del(p_seq,l_srab.srabsite,l_srab.srab012,l_srab.srab001,l_srab.srab004,l_srab.srab005,l_srab.srab006,'')    
   #        RETURNING l_success
   #   IF NOT l_success THEN
#  #       RETURN r_success
   #   END IF     
   #   
   #   LET g_stat_cnt = g_stat_cnt + 1      
   #END FOREACH
   #
   #LET g_stat_end = TIME
   #CALL s_axcp500_avg_stats_cnt(3,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 月加权-重复性生产 - 联产品处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg_repeat_coproduct(p_seq,p_flag)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
#                : p_flag         设置xccc的步骤
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-12-19 By Carrier
# Modify.........: 2015-07-30 By zhangllc 因没搜索到应用处，先暂时mark，以便程序阅读
################################################################################
PUBLIC FUNCTION s_axcp500_avg_repeat_coproduct(p_seq,p_flag)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE p_flag          LIKE type_t.chr1
   DEFINE r_success       LIKE type_t.num5
   #DEFINE l_xcck          RECORD LIKE xcck_t.*
   DEFINE l_xcck          type_xcck  #mod zhangllc 151214 比原来多了xccktmp1 库存管理特征
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_rate          LIKE type_t.num26_10
   DEFINE l_sum           type_g_std_cost
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   #FOREACH s_axcp500_avg_repeat_coproduct_cs1 USING p_seq,g_rec.xcbb006
   #                                            INTO l_xcck.*
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code   = SQLCA.sqlcode
   #      LET g_errparam.extend = 'FOREACH s_axcp500_avg_repeat_coproduct_cs1'
   #      LET g_errparam.popup  = TRUE
   #      CALL cl_err()
   #      CALL s_axcp500_ins_error('','','','','','','','','','','',
   #                               '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_repeat_coproduct_cs1')
   #         
   #      CONTINUE FOREACH   
   #   END IF
   #   
   #   CALL s_axcp500_avg_coproduct_set_xcck(l_xcck.*)
   #        RETURNING l_success,l_sum.*
   #   IF NOT l_success THEN
   #      CONTINUE FOREACH
   #   END IF
   #   
   #   CALL s_axcp500_coproduct_set_xccg(l_xcck.*,l_sum.*)
   #        RETURNING l_success
   #   IF NOT l_success THEN
   #      CONTINUE FOREACH
   #   END IF
   #   
   #   CALL s_axcp500_avg_set_xccc(p_flag,l_xcck.xcck001,l_xcck.xcck002,l_xcck.xcck010,l_xcck.xcck011,l_xcck.xcck017)
   #        RETURNING l_success
   #   IF NOT l_success THEN
   #      CONTINUE FOREACH
   #   END IF
   #
   #END FOREACH
   
   LET r_success = TRUE
   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 效能统计开始
# Memo...........:
# Usage..........: CALL s_axcp500_avg_stats_begin()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2015-01-23 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_stats_begin()
#   WHENEVER ERROR CONTINUE
#
#   LET g_stat[1].desc = 's_axcp500_avg_wip'
#   LET g_stat[1].cnt  = 0
#   LET g_stat[1].cost_mins = 0   
#   
#   LET g_stat[2].desc = 's_axcp500_avg_sub_element_wip'
#   LET g_stat[2].cnt  = 0
#   LET g_stat[2].cost_mins = 0   
#
#   LET g_stat[3].desc = 's_axcp500_avg_repeat_wip'
#   LET g_stat[3].cnt  = 0
#   LET g_stat[3].cost_mins = 0   
#
#   LET g_stat[4].desc = 's_axcp500_avg_sub_element_repeat_wip'
#   LET g_stat[4].cnt  = 0
#   LET g_stat[4].cost_mins = 0   
#
#   LET g_stat[5].desc = 's_axcp500_avg_cal_inaj'
#   LET g_stat[5].cnt  = 0
#   LET g_stat[5].cost_mins = 0   
#
#   LET g_stat[6].desc = 's_axcp500_avg_set_xccc'
#   LET g_stat[6].cnt  = 0
#   LET g_stat[6].cost_mins = 0   
#
#   LET g_stat[7].desc = 's_axcp500_avg_coproduct'
#   LET g_stat[7].cnt  = 0
#   LET g_stat[7].cost_mins = 0   
#
#   LET g_stat[8].desc = 's_axcp500_avg_rework'
#   LET g_stat[8].cnt  = 0
#   LET g_stat[8].cost_mins = 0   
#
#   LET g_stat[9].desc = 's_axcp500_avg_disassemble'
#   LET g_stat[9].cnt  = 0
#   LET g_stat[9].cost_mins = 0   
#
#   LET g_stat[10].desc = 's_axcp500_avg_sub_element'
#   LET g_stat[10].cnt  = 0
#   LET g_stat[10].cost_mins = 0   
#   
#
#   LET g_stat[11].desc = 's_axcp500_wip_1'
#   LET g_stat[11].cnt  = 0
#   LET g_stat[11].cost_mins = 0    
#
#   LET g_stat[12].desc = 's_axcp500_wip_2_1'
#   LET g_stat[12].cnt  = 0
#   LET g_stat[12].cost_mins = 0 
#   
#   LET g_stat[13].desc = 's_axcp500_wip_2_2'
#   LET g_stat[13].cnt  = 0
#   LET g_stat[13].cost_mins = 0    
#   
#   LET g_stat[14].desc = 's_axcp500_wip_2_3'
#   LET g_stat[14].cnt  = 0
#   LET g_stat[14].cost_mins = 0    
#   
#   LET g_stat[15].desc = 's_axcp500_wip_2_4'
#   LET g_stat[15].cnt  = 0
#   LET g_stat[15].cost_mins = 0    
#   
#   LET g_stat[16].desc = 's_axcp500_wip_3'
#   LET g_stat[16].cnt  = 0
#   LET g_stat[16].cost_mins = 0    
#   
#   LET g_stat[17].desc = 's_axcp500_wip_4'
#   LET g_stat[17].cnt  = 0
#   LET g_stat[17].cost_mins = 0    
#   
#   LET g_stat[18].desc = 's_axcp500_wip_5'
#   LET g_stat[18].cnt  = 0
#   LET g_stat[18].cost_mins = 0    


END FUNCTION

################################################################################
# Descriptions...: 效能统计
# Memo...........:
# Usage..........: CALL s_axcp500_avg_stats_cnt(p_no,p_begin,p_end,p_cnt)
#                       RETURNING NULL
# Input parameter: p_no           操作步骤
#                : p_begin        开始时间
#                : p_end          结束时间
#                : p_cnt          本次循环的笔数
# Return code....: NULL
# Date & Author..: 2015-01-23 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_stats_cnt(p_no,p_begin,p_end,p_cnt)
   DEFINE p_no            LIKE type_t.num5
   DEFINE p_begin         LIKE type_t.chr8
   DEFINE p_end           LIKE type_t.chr8
   DEFINE p_cnt           LIKE type_t.num10
   DEFINE l_hrs           LIKE type_t.num5
   DEFINE l_mins          LIKE type_t.num5
   DEFINE l_seconds       LIKE type_t.num5
   DEFINE l_b1            LIKE type_t.num5
   DEFINE l_b2            LIKE type_t.num5
   DEFINE l_b3            LIKE type_t.num5
   DEFINE l_e1            LIKE type_t.num5
   DEFINE l_e2            LIKE type_t.num5
   DEFINE l_e3            LIKE type_t.num5
   DEFINE l_sum           LIKE type_t.num5
   
#   WHENEVER ERROR CONTINUE
#   LET l_b1 = p_begin[1,2]
#   LET l_b2 = p_begin[4,5]
#   LET l_b3 = p_begin[7,8]
#   
#   LET l_e1 = p_end[1,2]
#   LET l_e2 = p_end[4,5]
#   LET l_e3 = p_end[7,8]
#   
#   LET l_hrs = (l_e1 - l_b1 ) * 60 * 60
#   
#   LET l_mins = (l_e2 - l_b2) * 60
#   
#   LET l_seconds = l_e3 - l_b3
#   
#   LET l_sum = l_hrs + l_mins + l_seconds
#   
#   CASE p_no
#        WHEN 1  LET g_stat[01].cost_mins = g_stat[01].cost_mins + l_sum
#                LET g_stat[01].cnt       = g_stat[01].cnt  + p_cnt
#        WHEN 2  LET g_stat[02].cost_mins = g_stat[02].cost_mins + l_sum
#                LET g_stat[02].cnt       = g_stat[02].cnt  + p_cnt
#        WHEN 3  LET g_stat[03].cost_mins = g_stat[03].cost_mins + l_sum
#                LET g_stat[03].cnt       = g_stat[03].cnt  + p_cnt
#        WHEN 4  LET g_stat[04].cost_mins = g_stat[04].cost_mins + l_sum
#                LET g_stat[04].cnt       = g_stat[04].cnt  + p_cnt
#        WHEN 5  LET g_stat[05].cost_mins = g_stat[05].cost_mins + l_sum
#                LET g_stat[05].cnt       = g_stat[05].cnt  + p_cnt
#        WHEN 6  LET g_stat[06].cost_mins = g_stat[06].cost_mins + l_sum
#                LET g_stat[06].cnt       = g_stat[06].cnt  + p_cnt
#        WHEN 7  LET g_stat[07].cost_mins = g_stat[07].cost_mins + l_sum
#                LET g_stat[07].cnt       = g_stat[07].cnt  + p_cnt
#        WHEN 8  LET g_stat[08].cost_mins = g_stat[08].cost_mins + l_sum
#                LET g_stat[08].cnt       = g_stat[08].cnt  + p_cnt
#        WHEN 9  LET g_stat[09].cost_mins = g_stat[09].cost_mins + l_sum
#                LET g_stat[09].cnt       = g_stat[09].cnt  + p_cnt
#        WHEN 10 LET g_stat[10].cost_mins = g_stat[10].cost_mins + l_sum
#                LET g_stat[10].cnt       = g_stat[10].cnt  + p_cnt
#        WHEN 11 LET g_stat[11].cost_mins = g_stat[11].cost_mins + l_sum
#                LET g_stat[11].cnt       = g_stat[11].cnt  + p_cnt
#        WHEN 12 LET g_stat[12].cost_mins = g_stat[12].cost_mins + l_sum
#                LET g_stat[12].cnt       = g_stat[12].cnt  + p_cnt
#        WHEN 13 LET g_stat[13].cost_mins = g_stat[13].cost_mins + l_sum
#                LET g_stat[13].cnt       = g_stat[13].cnt  + p_cnt
#        WHEN 14 LET g_stat[14].cost_mins = g_stat[14].cost_mins + l_sum
#                LET g_stat[14].cnt       = g_stat[14].cnt  + p_cnt
#        WHEN 15 LET g_stat[15].cost_mins = g_stat[15].cost_mins + l_sum
#                LET g_stat[15].cnt       = g_stat[15].cnt  + p_cnt
#        WHEN 16 LET g_stat[16].cost_mins = g_stat[16].cost_mins + l_sum
#                LET g_stat[16].cnt       = g_stat[16].cnt  + p_cnt
#        WHEN 17 LET g_stat[17].cost_mins = g_stat[17].cost_mins + l_sum
#                LET g_stat[17].cnt       = g_stat[17].cnt  + p_cnt
#        WHEN 18 LET g_stat[18].cost_mins = g_stat[18].cost_mins + l_sum
#                LET g_stat[18].cnt       = g_stat[18].cnt  + p_cnt
#   
#   END CASE
   
END FUNCTION

################################################################################
# Descriptions...: 统计资料输出
# Memo...........:
# Usage..........: CALL s_axcp500_avg_stats_output()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2015-01-23 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_stats_output()
   DEFINE l_time      DATETIME YEAR TO SECOND

#   LET l_time = cl_get_current()
#
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[01].cost_mins,g_stat[01].cnt,'STATS:','1','s_axcp500_avg_wip',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[02].cost_mins,g_stat[02].cnt,'STATS:','2','s_axcp500_avg_sub_element_wip',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[03].cost_mins,g_stat[03].cnt,'STATS:','3','s_axcp500_avg_repeat_wip',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[04].cost_mins,g_stat[04].cnt,'STATS:','4','s_axcp500_avg_sub_element_repeat_wip',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[05].cost_mins,g_stat[05].cnt,'STATS:','5','s_axcp500_avg_cal_inaj',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[06].cost_mins,g_stat[06].cnt,'STATS:','6','s_axcp500_avg_set_xccc',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[07].cost_mins,g_stat[07].cnt,'STATS:','7','s_axcp500_avg_coproduct',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[08].cost_mins,g_stat[08].cnt,'STATS:','8','s_axcp500_avg_rework',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[09].cost_mins,g_stat[09].cnt,'STATS:','9','s_axcp500_avg_disassemble',g_user,l_time)
#
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[10].cost_mins,g_stat[10].cnt,'STATS:','10','s_axcp500_avg_sub_element',g_user,l_time)
# 
# 
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[11].cost_mins,g_stat[11].cnt,'STATS:','11','s_axcp500_wip_1',g_user,l_time)
#   
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[12].cost_mins,g_stat[12].cnt,'STATS:','12','s_axcp500_wip_2_1',g_user,l_time)
#   
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[13].cost_mins,g_stat[13].cnt,'STATS:','13','s_axcp500_wip_2_2',g_user,l_time)
#   
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[14].cost_mins,g_stat[14].cnt,'STATS:','14','s_axcp500_wip_2_3',g_user,l_time)
#   
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[15].cost_mins,g_stat[15].cnt,'STATS:','15','s_axcp500_wip_2_4',g_user,l_time)
#   
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[16].cost_mins,g_stat[16].cnt,'STATS:','16','s_axcp500_wip_3',g_user,l_time)
#   
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[17].cost_mins,g_stat[17].cnt,'STATS:','17','s_axcp500_wip_4',g_user,l_time)
#   
#   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
#          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[18].cost_mins,g_stat[18].cnt,'STATS:','18','s_axcp500_wip_5',g_user,l_time)
   
END FUNCTION

################################################################################
# Descriptions...: 初始化g_xccc变量 - 全部初始化
# Memo...........:
# Usage..........: CALL s_axcp500_avg_init_xccc0()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2015-01-27 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_init_xccc0()

#   WHENEVER ERROR CONTINUE
#   
#   INITIALIZE g_xccc.* TO NULL
#       
#   LET g_xccc.xccc101  = 0                   #上期结存数量        
#   LET g_xccc.xccc102  = 0                   #上期结存金额        
#   LET g_xccc.xccc102a = 0                   #上期结存金额-材料   
#   LET g_xccc.xccc102b = 0                   #上期结存金额-人工   
#   LET g_xccc.xccc102c = 0                   #上期结存金额-加工   
#   LET g_xccc.xccc102d = 0                   #上期结存金额-制费一 
#   LET g_xccc.xccc102e = 0                   #上期结存金额-制费二 
#   LET g_xccc.xccc102f = 0                   #上期结存金额-制费三 
#   LET g_xccc.xccc102g = 0                   #上期结存金额-制费四 
#   LET g_xccc.xccc102h = 0                   #上期结存金额-制费五 
#
#   LET g_xccc.xccc201  = 0                   #本期采购入库数量        
#   LET g_xccc.xccc202  = 0                   #本期采购入库金额        
#   LET g_xccc.xccc202a = 0                   #本期采购入库金额-材料   
#   LET g_xccc.xccc202b = 0                   #本期采购入库金额-人工   
#   LET g_xccc.xccc202c = 0                   #本期采购入库金额-加工   
#   LET g_xccc.xccc202d = 0                   #本期采购入库金额-制费一 
#   LET g_xccc.xccc202e = 0                   #本期采购入库金额-制费二 
#   LET g_xccc.xccc202f = 0                   #本期采购入库金额-制费三 
#   LET g_xccc.xccc202g = 0                   #本期采购入库金额-制费四 
#   LET g_xccc.xccc202h = 0                   #本期采购入库金额-制费五 
#   
#   LET g_xccc.xccc203  = 0                   #本期委外入库数量        
#   LET g_xccc.xccc204  = 0                   #本期委外入库金额        
#   LET g_xccc.xccc204a = 0                   #本期委外入库金额-材料   
#   LET g_xccc.xccc204b = 0                   #本期委外入库金额-人工   
#   LET g_xccc.xccc204c = 0                   #本期委外入库金额-加工   
#   LET g_xccc.xccc204d = 0                   #本期委外入库金额-制费一 
#   LET g_xccc.xccc204e = 0                   #本期委外入库金额-制费二 
#   LET g_xccc.xccc204f = 0                   #本期委外入库金额-制费三 
#   LET g_xccc.xccc204g = 0                   #本期委外入库金额-制费四 
#   LET g_xccc.xccc204h = 0                   #本期委外入库金额-制费五 
#   
#   LET g_xccc.xccc205  = 0                   #本期工单入库数量        
#   LET g_xccc.xccc206  = 0                   #本期工单入库金额        
#   LET g_xccc.xccc206a = 0                   #本期工单入库金额-材料  
#   LET g_xccc.xccc206b = 0                   #本期工单入库金额-人工  
#   LET g_xccc.xccc206c = 0                   #本期工单入库金额-加工  
#   LET g_xccc.xccc206d = 0                   #本期工单入库金额-制费一
#   LET g_xccc.xccc206e = 0                   #本期工单入库金额-制费二
#   LET g_xccc.xccc206f = 0                   #本期工单入库金额-制费三
#   LET g_xccc.xccc206g = 0                   #本期工单入库金额-制费四
#   LET g_xccc.xccc206h = 0                   #本期工单入库金额-制费五
#   
#   LET g_xccc.xccc207  = 0                   #本期重工领出数量       
#   LET g_xccc.xccc208  = 0                   #本期重工领出金额       
#   LET g_xccc.xccc208a = 0                   #本期重工领出金额-材料  
#   LET g_xccc.xccc208b = 0                   #本期重工领出金额-人工  
#   LET g_xccc.xccc208c = 0                   #本期重工领出金额-加工  
#   LET g_xccc.xccc208d = 0                   #本期重工领出金额-制费一
#   LET g_xccc.xccc208e = 0                   #本期重工领出金额-制费二
#   LET g_xccc.xccc208f = 0                   #本期重工领出金额-制费三
#   LET g_xccc.xccc208g = 0                   #本期重工领出金额-制费四
#   LET g_xccc.xccc208h = 0                   #本期重工领出金额-制费五
#   
#   LET g_xccc.xccc209  = 0                   #本期重工入库数量       
#   LET g_xccc.xccc210  = 0                   #本期重工入库金额       
#   LET g_xccc.xccc210a = 0                   #本期重工入库金额-材料  
#   LET g_xccc.xccc210b = 0                   #本期重工入库金额-人工  
#   LET g_xccc.xccc210c = 0                   #本期重工入库金额-加工  
#   LET g_xccc.xccc210d = 0                   #本期重工入库金额-制费一
#   LET g_xccc.xccc210e = 0                   #本期重工入库金额-制费二
#   LET g_xccc.xccc210f = 0                   #本期重工入库金额-制费三
#   LET g_xccc.xccc210g = 0                   #本期重工入库金额-制费四
#   LET g_xccc.xccc210h = 0                   #本期重工入库金额-制费五
#   
#   LET g_xccc.xccc211  = 0                   #本期杂项入库数量       
#   LET g_xccc.xccc212  = 0                   #本期杂项入库金额       
#   LET g_xccc.xccc212a = 0                   #本期杂项入库金额-材料  
#   LET g_xccc.xccc212b = 0                   #本期杂项入库金额-人工  
#   LET g_xccc.xccc212c = 0                   #本期杂项入库金额-加工  
#   LET g_xccc.xccc212d = 0                   #本期杂项入库金额-制费一
#   LET g_xccc.xccc212e = 0                   #本期杂项入库金额-制费二
#   LET g_xccc.xccc212f = 0                   #本期杂项入库金额-制费三
#   LET g_xccc.xccc212g = 0                   #本期杂项入库金额-制费四
#   LET g_xccc.xccc212h = 0                   #本期杂项入库金额-制费五
#   
#   LET g_xccc.xccc213  = 0                   #本期调整入库数量       
#   LET g_xccc.xccc214  = 0                   #本期调整入库金额       
#   LET g_xccc.xccc214a = 0                   #本期调整入库金额-材料  
#   LET g_xccc.xccc214b = 0                   #本期调整入库金额-人工  
#   LET g_xccc.xccc214c = 0                   #本期调整入库金额-加工  
#   LET g_xccc.xccc214d = 0                   #本期调整入库金额-制费一
#   LET g_xccc.xccc214e = 0                   #本期调整入库金额-制费二
#   LET g_xccc.xccc214f = 0                   #本期调整入库金额-制费三
#   LET g_xccc.xccc214g = 0                   #本期调整入库金额-制费四
#   LET g_xccc.xccc214h = 0                   #本期调整入库金额-制费五
#   
#   LET g_xccc.xccc215  = 0                   #本期销退入库数量       
#   LET g_xccc.xccc216  = 0                   #本期销退入库金额       
#   LET g_xccc.xccc216a = 0                   #本期销退入库金额-材料  
#   LET g_xccc.xccc216b = 0                   #本期销退入库金额-人工  
#   LET g_xccc.xccc216c = 0                   #本期销退入库金额-加工  
#   LET g_xccc.xccc216d = 0                   #本期销退入库金额-制费一
#   LET g_xccc.xccc216e = 0                   #本期销退入库金额-制费二
#   LET g_xccc.xccc216f = 0                   #本期销退入库金额-制费三
#   LET g_xccc.xccc216g = 0                   #本期销退入库金额-制费四
#   LET g_xccc.xccc216h = 0                   #本期销退入库金额-制费五
#   
#   LET g_xccc.xccc217  = 0                   #本期其他入库数量       
#   LET g_xccc.xccc218  = 0                   #本期其他入库金额       
#   LET g_xccc.xccc218a = 0                   #本期其他入库金额-材料  
#   LET g_xccc.xccc218b = 0                   #本期其他入库金额-人工  
#   LET g_xccc.xccc218c = 0                   #本期其他入库金额-加工  
#   LET g_xccc.xccc218d = 0                   #本期其他入库金额-制费一
#   LET g_xccc.xccc218e = 0                   #本期其他入库金额-制费二
#   LET g_xccc.xccc218f = 0                   #本期其他入库金额-制费三
#   LET g_xccc.xccc218g = 0                   #本期其他入库金额-制费四 
#   LET g_xccc.xccc218h = 0                   #本期其他入库金额-制费五 
#   
#   LET g_xccc.xccc280  = 0                   #本期平均单价            
#   LET g_xccc.xccc280a = 0                   #本期平均单价-材料       
#   LET g_xccc.xccc280b = 0                   #本期平均单价-人工       
#   LET g_xccc.xccc280c = 0                   #本期平均单价-加工       
#   LET g_xccc.xccc280d = 0                   #本期平均单价-制费一     
#   LET g_xccc.xccc280e = 0                   #本期平均单价-制费二     
#   LET g_xccc.xccc280f = 0                   #本期平均单价-制费三     
#   LET g_xccc.xccc280g = 0                   #本期平均单价-制费四     
#   LET g_xccc.xccc280h = 0                   #本期平均单价-制费五     
#   
#   LET g_xccc.xccc301  = 0                   #本期工单领用数量        
#   LET g_xccc.xccc302  = 0                   #本期工单领用金额        
#   LET g_xccc.xccc302a = 0                   #本期工单领用金额-材料   
#   LET g_xccc.xccc302b = 0                   #本期工单领用金额-人工   
#   LET g_xccc.xccc302c = 0                   #本期工单领用金额-加工   
#   LET g_xccc.xccc302d = 0                   #本期工单领用金额-制费一 
#   LET g_xccc.xccc302e = 0                   #本期工单领用金额-制费二 
#   LET g_xccc.xccc302f = 0                   #本期工单领用金额-制费三 
#   LET g_xccc.xccc302g = 0                   #本期工单领用金额-制费四 
#   LET g_xccc.xccc302h = 0                   #本期工单领用金额-制费五 
#   
#   LET g_xccc.xccc303  = 0                   #本期销货数量            
#   LET g_xccc.xccc304  = 0                   #本期销货成本            
#   LET g_xccc.xccc304a = 0                   #本期销货成本-材料       
#   LET g_xccc.xccc304b = 0                   #本期销货成本-人工       
#   LET g_xccc.xccc304c = 0                   #本期销货成本-加工       
#   LET g_xccc.xccc304d = 0                   #本期销货成本-制费一     
#   LET g_xccc.xccc304e = 0                   #本期销货成本-制费二     
#   LET g_xccc.xccc304f = 0                   #本期销货成本-制费三     
#   LET g_xccc.xccc304g = 0                   #本期销货成本-制费四     
#   LET g_xccc.xccc304h = 0                   #本期销货成本-制费五   
#     
#   LET g_xccc.xccc305  = 0                   #本期销退数量            
#   LET g_xccc.xccc306  = 0                   #本期销退成本            
#   LET g_xccc.xccc306a = 0                   #本期销退成本-材料       
#   LET g_xccc.xccc306b = 0                   #本期销退成本-人工       
#   LET g_xccc.xccc306c = 0                   #本期销退成本-加工       
#   LET g_xccc.xccc306d = 0                   #本期销退成本-制费一     
#   LET g_xccc.xccc306e = 0                   #本期销退成本-制费二     
#   LET g_xccc.xccc306f = 0                   #本期销退成本-制费三     
#   LET g_xccc.xccc306g = 0                   #本期销退成本-制费四    
#   LET g_xccc.xccc306h = 0                   #本期销退成本-制费五   
#    
#   LET g_xccc.xccc307  = 0                   #本期销售费用数量       
#   LET g_xccc.xccc308  = 0                   #本期销售费用成本       
#   LET g_xccc.xccc308a = 0                   #本期销售费用成本-材料  
#   LET g_xccc.xccc308b = 0                   #本期销售费用成本-人工  
#   LET g_xccc.xccc308c = 0                   #本期销售费用成本-加工  
#   LET g_xccc.xccc308d = 0                   #本期销售费用成本-制费一
#   LET g_xccc.xccc308e = 0                   #本期销售费用成本-制费二
#   LET g_xccc.xccc308f = 0                   #本期销售费用成本-制费三
#   LET g_xccc.xccc308g = 0                   #本期销售费用成本-制费四
#   LET g_xccc.xccc308h = 0                   #本期销售费用成本-制费五
#   
#   LET g_xccc.xccc309  = 0                   #本期杂发数量           
#   LET g_xccc.xccc310  = 0                   #本期杂发金额           
#   LET g_xccc.xccc310a = 0                   #本期杂发金额-材料      
#   LET g_xccc.xccc310b = 0                   #本期杂发金额-人工      
#   LET g_xccc.xccc310c = 0                   #本期杂发金额-加工      
#   LET g_xccc.xccc310d = 0                   #本期杂发金额-制费一    
#   LET g_xccc.xccc310e = 0                   #本期杂发金额-制费二    
#   LET g_xccc.xccc310f = 0                   #本期杂发金额-制费三    
#   LET g_xccc.xccc310g = 0                   #本期杂发金额-制费四    
#   LET g_xccc.xccc310h = 0                   #本期杂发金额-制费五 
#      
#   LET g_xccc.xccc311  = 0                   #本期盘盈亏数量         
#   LET g_xccc.xccc312  = 0                   #本期盘盈亏金额         
#   LET g_xccc.xccc312a = 0                   #本期盘盈亏金额-材料    
#   LET g_xccc.xccc312b = 0                   #本期盘盈亏金额-人工    
#   LET g_xccc.xccc312c = 0                   #本期盘盈亏金额-加工    
#   LET g_xccc.xccc312d = 0                   #本期盘盈亏金额-制费一  
#   LET g_xccc.xccc312e = 0                   #本期盘盈亏金额-制费二  
#   LET g_xccc.xccc312f = 0                   #本期盘盈亏金额-制费三  
#   LET g_xccc.xccc312g = 0                   #本期盘盈亏金额-制费四  
#   LET g_xccc.xccc312h = 0                   #本期盘盈亏金额-制费五  
#   
#   LET g_xccc.xccc313  = 0                   #本期其他出库数量       
#   LET g_xccc.xccc314  = 0                   #本期其他出库金额       
#   LET g_xccc.xccc314a = 0                   #本期其他出库金额-材料  
#   LET g_xccc.xccc314b = 0                   #本期其他出库金额-人工  
#   LET g_xccc.xccc314c = 0                   #本期其他出库金额-加工  
#   LET g_xccc.xccc314d = 0                   #本期其他出库金额-制费一
#   LET g_xccc.xccc314e = 0                   #本期其他出库金额-制费二
#   LET g_xccc.xccc314f = 0                   #本期其他出库金额-制费三
#   LET g_xccc.xccc314g = 0                   #本期其他出库金额-制费四
#   LET g_xccc.xccc314h = 0                   #本期其他出库金额-制费五
#   
#   LET g_xccc.xccc401  = 0                   #本期销货收入金额       
#   LET g_xccc.xccc402  = 0                   #本期销退金额   
#           
#   LET g_xccc.xccc901  = 0                   #期末结存数量           
#   LET g_xccc.xccc902  = 0                   #期末结存金额           
#   LET g_xccc.xccc902a = 0                   #期末结存金额-材料      
#   LET g_xccc.xccc902b = 0                   #期末结存金额-人工      
#   LET g_xccc.xccc902c = 0                   #期末结存金额-加工      
#   LET g_xccc.xccc902d = 0                   #期末结存金额-制费一    
#   LET g_xccc.xccc902e = 0                   #期末结存金额-制费二    
#   LET g_xccc.xccc902f = 0                   #期末结存金额-制费三    
#   LET g_xccc.xccc902g = 0                   #期末结存金额-制费四    
#   LET g_xccc.xccc902h = 0                   #期末结存金额-制费五    
#   
#   LET g_xccc.xccc903  = 0                   #期末结存调整金额       
#   LET g_xccc.xccc903a = 0                   #期末结存调整金额-材料  
#   LET g_xccc.xccc903b = 0                   #期末结存调整金额-人工  
#   LET g_xccc.xccc903c = 0                   #期末结存调整金额-加工  
#   LET g_xccc.xccc903d = 0                   #期末结存调整金额-制费一
#   LET g_xccc.xccc903e = 0                   #期末结存调整金额-制费二
#   LET g_xccc.xccc903f = 0                   #期末结存调整金额-制费三
#   LET g_xccc.xccc903g = 0                   #期末结存调整金额-制费四
#   LET g_xccc.xccc903h = 0                   #期末结存调整金额-制费五

END FUNCTION

################################################################################
# Descriptions...: 初始化g_xccc变量 - 第一阶段
# Memo...........:
# Usage..........: CALL s_axcp500_avg_init_xccc1()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2015-01-27 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_init_xccc1()

#   WHENEVER ERROR CONTINUE
#
#   LET g_xccc.xccc201  = 0                   #本期采购入库数量        
#   LET g_xccc.xccc202  = 0                   #本期采购入库金额        
#   LET g_xccc.xccc202a = 0                   #本期采购入库金额-材料   
#   LET g_xccc.xccc202b = 0                   #本期采购入库金额-人工   
#   LET g_xccc.xccc202c = 0                   #本期采购入库金额-加工   
#   LET g_xccc.xccc202d = 0                   #本期采购入库金额-制费一 
#   LET g_xccc.xccc202e = 0                   #本期采购入库金额-制费二 
#   LET g_xccc.xccc202f = 0                   #本期采购入库金额-制费三 
#   LET g_xccc.xccc202g = 0                   #本期采购入库金额-制费四 
#   LET g_xccc.xccc202h = 0                   #本期采购入库金额-制费五 
#   
#   LET g_xccc.xccc203  = 0                   #本期委外入库数量        
#   LET g_xccc.xccc204  = 0                   #本期委外入库金额        
#   LET g_xccc.xccc204a = 0                   #本期委外入库金额-材料   
#   LET g_xccc.xccc204b = 0                   #本期委外入库金额-人工   
#   LET g_xccc.xccc204c = 0                   #本期委外入库金额-加工   
#   LET g_xccc.xccc204d = 0                   #本期委外入库金额-制费一 
#   LET g_xccc.xccc204e = 0                   #本期委外入库金额-制费二 
#   LET g_xccc.xccc204f = 0                   #本期委外入库金额-制费三 
#   LET g_xccc.xccc204g = 0                   #本期委外入库金额-制费四 
#   LET g_xccc.xccc204h = 0                   #本期委外入库金额-制费五 
#   
#   LET g_xccc.xccc205  = 0                   #本期工单入库数量        
#   LET g_xccc.xccc206  = 0                   #本期工单入库金额        
#   LET g_xccc.xccc206a = 0                   #本期工单入库金额-材料  
#   LET g_xccc.xccc206b = 0                   #本期工单入库金额-人工  
#   LET g_xccc.xccc206c = 0                   #本期工单入库金额-加工  
#   LET g_xccc.xccc206d = 0                   #本期工单入库金额-制费一
#   LET g_xccc.xccc206e = 0                   #本期工单入库金额-制费二
#   LET g_xccc.xccc206f = 0                   #本期工单入库金额-制费三
#   LET g_xccc.xccc206g = 0                   #本期工单入库金额-制费四
#   LET g_xccc.xccc206h = 0                   #本期工单入库金额-制费五
#   
#   LET g_xccc.xccc211  = 0                   #本期杂项入库数量       
#   LET g_xccc.xccc212  = 0                   #本期杂项入库金额       
#   LET g_xccc.xccc212a = 0                   #本期杂项入库金额-材料  
#   LET g_xccc.xccc212b = 0                   #本期杂项入库金额-人工  
#   LET g_xccc.xccc212c = 0                   #本期杂项入库金额-加工  
#   LET g_xccc.xccc212d = 0                   #本期杂项入库金额-制费一
#   LET g_xccc.xccc212e = 0                   #本期杂项入库金额-制费二
#   LET g_xccc.xccc212f = 0                   #本期杂项入库金额-制费三
#   LET g_xccc.xccc212g = 0                   #本期杂项入库金额-制费四
#   LET g_xccc.xccc212h = 0                   #本期杂项入库金额-制费五
#   
#   LET g_xccc.xccc217  = 0                   #本期其他入库数量       
#   LET g_xccc.xccc218  = 0                   #本期其他入库金额       
#   LET g_xccc.xccc218a = 0                   #本期其他入库金额-材料  
#   LET g_xccc.xccc218b = 0                   #本期其他入库金额-人工  
#   LET g_xccc.xccc218c = 0                   #本期其他入库金额-加工  
#   LET g_xccc.xccc218d = 0                   #本期其他入库金额-制费一
#   LET g_xccc.xccc218e = 0                   #本期其他入库金额-制费二
#   LET g_xccc.xccc218f = 0                   #本期其他入库金额-制费三
#   LET g_xccc.xccc218g = 0                   #本期其他入库金额-制费四 
#   LET g_xccc.xccc218h = 0                   #本期其他入库金额-制费五 
   
   
END FUNCTION

################################################################################
# Descriptions...: 初始化g_xccc变量 - 第三阶段
# Memo...........:
# Usage..........: CALL s_axcp500_avg_init_xccc3()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2015-01-27 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_init_xccc3()
#   LET g_xccc.xccc209  = 0                   #本期重工入库数量       
#   LET g_xccc.xccc210  = 0                   #本期重工入库金额       
#   LET g_xccc.xccc210a = 0                   #本期重工入库金额-材料  
#   LET g_xccc.xccc210b = 0                   #本期重工入库金额-人工  
#   LET g_xccc.xccc210c = 0                   #本期重工入库金额-加工  
#   LET g_xccc.xccc210d = 0                   #本期重工入库金额-制费一
#   LET g_xccc.xccc210e = 0                   #本期重工入库金额-制费二
#   LET g_xccc.xccc210f = 0                   #本期重工入库金额-制费三
#   LET g_xccc.xccc210g = 0                   #本期重工入库金额-制费四
#   LET g_xccc.xccc210h = 0                   #本期重工入库金额-制费五

END FUNCTION

################################################################################
# Descriptions...: 取得月加权平均单价
# Memo...........:
# Usage..........: CALL s_axcp500_avg_get_avg_cost_xccq(p_seq)
#                       RETURNING NULL
# Input parameter: p_seq          本位币顺序
# Return code....: NULL
# Date & Author..: 2015-12-15 By zhangllc 151215
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_get_avg_cost_xccq(p_seq)
   DEFINE p_seq           LIKE xccq_t.xccq001
   DEFINE l_qty           LIKE xccq_t.xccq201

   CALL s_axcp500_set_xccq_null_to_zero(g_xccq.*)
        RETURNING g_xccq.*
   
   #参与第一轮月平均的有 期初/201/203/205/211/213/217/207/209/215
   #总数量              = 期初           + 采购入库       + 委外入库       + 工单入库
   LET l_qty            = g_xccq.xccq101 + g_xccq.xccq201 + g_xccq.xccq203 + g_xccq.xccq205 +
   #                      杂项入库       + 调整入库       + 其他入库      
                          g_xccq.xccq211 + g_xccq.xccq213 + g_xccq.xccq217 + 
   #                      重工领出       + 重工入库       + 销退入库
                          g_xccq.xccq207 + g_xccq.xccq209 + g_xccq.xccq215
   
   IF l_qty = 0 THEN
      #总数量              = 期初           + 采购入库       + 委外入库       + 工单入库
      LET l_qty            = g_xccq.xccq101 + g_xccq.xccq201 + g_xccq.xccq203 + g_xccq.xccq205 +
      #                      杂项入库       + 调整入库       + 其他入库       
                             g_xccq.xccq211 + g_xccq.xccq213 + g_xccq.xccq217 + 
      #                      重工入库       + 销退入库
                             g_xccq.xccq209 + g_xccq.xccq215

      #本期平均单价        = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280   = g_xccq.xccq102 + g_xccq.xccq202 + g_xccq.xccq204 + g_xccq.xccq206 +
      #                      杂项入库        + 调整入库        + 其他入库       
                             g_xccq.xccq212 + g_xccq.xccq214 + g_xccq.xccq218 + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210 + g_xccq.xccq216
      #LET g_xccq.xccq280   = g_xccq.xccq280 / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280   = g_xccq.xccq280 / l_qty
      ELSE
         LET g_xccq.xccq280   = 0
      END IF   
      #170705-00006#1 add(E)
      
      #本期平均单价-材料   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280a  = g_xccq.xccq102a + g_xccq.xccq202a + g_xccq.xccq204a + g_xccq.xccq206a +
      #                      杂项入库        + 调整入库        + 其他入库       
                             g_xccq.xccq212a + g_xccq.xccq214a + g_xccq.xccq218a + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210a + g_xccq.xccq216a
      #LET g_xccq.xccq280a  = g_xccq.xccq280a / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280a   = g_xccq.xccq280a / l_qty
      ELSE
         LET g_xccq.xccq280a   = 0
      END IF   
      #170705-00006#1 add(E)
      
   
      #本期平均单价-人工   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280b  = g_xccq.xccq102b + g_xccq.xccq202b + g_xccq.xccq204b + g_xccq.xccq206b +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212b + g_xccq.xccq214b + g_xccq.xccq218b + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210b + g_xccq.xccq216b
      #LET g_xccq.xccq280b  = g_xccq.xccq280b / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280b   = g_xccq.xccq280b / l_qty
      ELSE
         LET g_xccq.xccq280b   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-加工   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280c  = g_xccq.xccq102c + g_xccq.xccq202c + g_xccq.xccq204c + g_xccq.xccq206c +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212c + g_xccq.xccq214c + g_xccq.xccq218c + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210c + g_xccq.xccq216c
      #LET g_xccq.xccq280c  = g_xccq.xccq280c / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280c   = g_xccq.xccq280c / l_qty
      ELSE
         LET g_xccq.xccq280c   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费一 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280d  = g_xccq.xccq102d + g_xccq.xccq202d + g_xccq.xccq204d + g_xccq.xccq206d +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212d + g_xccq.xccq214d + g_xccq.xccq218d + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210d + g_xccq.xccq216d
      #LET g_xccq.xccq280d  = g_xccq.xccq280d / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280d   = g_xccq.xccq280d / l_qty
      ELSE
         LET g_xccq.xccq280d   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费二 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280e  = g_xccq.xccq102e + g_xccq.xccq202e + g_xccq.xccq204e + g_xccq.xccq206e +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212e + g_xccq.xccq214e + g_xccq.xccq218e + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210e + g_xccq.xccq216e
      #LET g_xccq.xccq280e  = g_xccq.xccq280e / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280e   = g_xccq.xccq280e / l_qty
      ELSE
         LET g_xccq.xccq280e   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费三 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280f  = g_xccq.xccq102f + g_xccq.xccq202f + g_xccq.xccq204f + g_xccq.xccq206f +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212f + g_xccq.xccq214f + g_xccq.xccq218f + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210f + g_xccq.xccq216f
      #LET g_xccq.xccq280f  = g_xccq.xccq280f / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280f   = g_xccq.xccq280f / l_qty
      ELSE
         LET g_xccq.xccq280f   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费四 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280g  = g_xccq.xccq102g + g_xccq.xccq202g + g_xccq.xccq204g + g_xccq.xccq206g +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212g + g_xccq.xccq214g + g_xccq.xccq218g + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210g + g_xccq.xccq216g
      #LET g_xccq.xccq280g  = g_xccq.xccq280g / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280g   = g_xccq.xccq280g / l_qty
      ELSE
         LET g_xccq.xccq280g   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费五 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280h  = g_xccq.xccq102h + g_xccq.xccq202h + g_xccq.xccq204h + g_xccq.xccq206h +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212h + g_xccq.xccq214h + g_xccq.xccq218h + 
      #                      重工入库        + 销退入库
                             g_xccq.xccq210h + g_xccq.xccq216h
      #LET g_xccq.xccq280h  = g_xccq.xccq280h / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280h   = g_xccq.xccq280h / l_qty
      ELSE
         LET g_xccq.xccq280h   = 0
      END IF   
      #170705-00006#1 add(E)
      
      CALL s_num_round(g_round_type,g_xccq.xccq280,g_curr[p_seq].digit1)  RETURNING g_xccq.xccq280
      CALL s_num_round(g_round_type,g_xccq.xccq280a,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280a    #本期平均单价-材料      
      CALL s_num_round(g_round_type,g_xccq.xccq280b,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280b    #本期平均单价-人工      
      CALL s_num_round(g_round_type,g_xccq.xccq280c,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280c    #本期平均单价-加工费    
      CALL s_num_round(g_round_type,g_xccq.xccq280d,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280d    #本期平均单价-制费一    
      CALL s_num_round(g_round_type,g_xccq.xccq280e,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280e    #本期平均单价-制费二    
      CALL s_num_round(g_round_type,g_xccq.xccq280f,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280f    #本期平均单价-制费三    
      CALL s_num_round(g_round_type,g_xccq.xccq280g,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280g    #本期平均单价-制费四    
      CALL s_num_round(g_round_type,g_xccq.xccq280h,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280h    #本期平均单价-制费五    

      #修正
      LET g_xccq.xccq280a  = g_xccq.xccq280 - ( g_xccq.xccq280b + g_xccq.xccq280c +
                             g_xccq.xccq280d + g_xccq.xccq280e + g_xccq.xccq280f +
                             g_xccq.xccq280g + g_xccq.xccq280h )
                            
         
   ELSE
      
      #本期平均单价        = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280   = g_xccq.xccq102 + g_xccq.xccq202 + g_xccq.xccq204 + g_xccq.xccq206 +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212 + g_xccq.xccq214 + g_xccq.xccq218 + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208 + g_xccq.xccq210 + g_xccq.xccq216
      #LET g_xccq.xccq280   = g_xccq.xccq280 / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280   = g_xccq.xccq280 / l_qty
      ELSE
         LET g_xccq.xccq280   = 0
      END IF   
      #170705-00006#1 add(E)
      
      #本期平均单价-材料   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280a  = g_xccq.xccq102a + g_xccq.xccq202a + g_xccq.xccq204a + g_xccq.xccq206a +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212a + g_xccq.xccq214a + g_xccq.xccq218a + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208a + g_xccq.xccq210a + g_xccq.xccq216a
      #LET g_xccq.xccq280a  = g_xccq.xccq280a / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280a   = g_xccq.xccq280a / l_qty
      ELSE
         LET g_xccq.xccq280a   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-人工   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280b  = g_xccq.xccq102b + g_xccq.xccq202b + g_xccq.xccq204b + g_xccq.xccq206b +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212b + g_xccq.xccq214b + g_xccq.xccq218b + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208b + g_xccq.xccq210b + g_xccq.xccq216b
      #LET g_xccq.xccq280b  = g_xccq.xccq280b / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280b   = g_xccq.xccq280b / l_qty
      ELSE
         LET g_xccq.xccq280b   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-加工   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280c  = g_xccq.xccq102c + g_xccq.xccq202c + g_xccq.xccq204c + g_xccq.xccq206c +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212c + g_xccq.xccq214c + g_xccq.xccq218c + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208c + g_xccq.xccq210c + g_xccq.xccq216c
      #LET g_xccq.xccq280c  = g_xccq.xccq280c / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280c   = g_xccq.xccq280c / l_qty
      ELSE
         LET g_xccq.xccq280c   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费一 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280d  = g_xccq.xccq102d + g_xccq.xccq202d + g_xccq.xccq204d + g_xccq.xccq206d +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212d + g_xccq.xccq214d + g_xccq.xccq218d + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208d + g_xccq.xccq210d + g_xccq.xccq216d
      #LET g_xccq.xccq280d  = g_xccq.xccq280d / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280d   = g_xccq.xccq280d / l_qty
      ELSE
         LET g_xccq.xccq280d   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费二 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280e  = g_xccq.xccq102e + g_xccq.xccq202e + g_xccq.xccq204e + g_xccq.xccq206e +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212e + g_xccq.xccq214e + g_xccq.xccq218e + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208e + g_xccq.xccq210e + g_xccq.xccq216e
      #LET g_xccq.xccq280e  = g_xccq.xccq280e / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280e   = g_xccq.xccq280e / l_qty
      ELSE
         LET g_xccq.xccq280e   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费三 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280f  = g_xccq.xccq102f + g_xccq.xccq202f + g_xccq.xccq204f + g_xccq.xccq206f +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212f + g_xccq.xccq214f + g_xccq.xccq218f +  
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208f + g_xccq.xccq210f + g_xccq.xccq216f
      #LET g_xccq.xccq280f  = g_xccq.xccq280f / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280f   = g_xccq.xccq280f / l_qty
      ELSE
         LET g_xccq.xccq280f   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费四 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280g  = g_xccq.xccq102g + g_xccq.xccq202g + g_xccq.xccq204g + g_xccq.xccq206g +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212g + g_xccq.xccq214g + g_xccq.xccq218g + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208g + g_xccq.xccq210g + g_xccq.xccq216g
      #LET g_xccq.xccq280g  = g_xccq.xccq280g / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280g   = g_xccq.xccq280g / l_qty
      ELSE
         LET g_xccq.xccq280g   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费五 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccq.xccq280h  = g_xccq.xccq102h + g_xccq.xccq202h + g_xccq.xccq204h + g_xccq.xccq206h +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccq.xccq212h + g_xccq.xccq214h + g_xccq.xccq218h + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccq.xccq208h + g_xccq.xccq210h + g_xccq.xccq216h
      #LET g_xccq.xccq280h  = g_xccq.xccq280h / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccq.xccq280h   = g_xccq.xccq280h / l_qty
      ELSE
         LET g_xccq.xccq280h   = 0
      END IF   
      #170705-00006#1 add(E)
      
      
      CALL s_num_round(g_round_type,g_xccq.xccq280 ,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280     #本期平均单价         
      CALL s_num_round(g_round_type,g_xccq.xccq280a,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280a    #本期平均单价-材料      
      CALL s_num_round(g_round_type,g_xccq.xccq280b,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280b    #本期平均单价-人工      
      CALL s_num_round(g_round_type,g_xccq.xccq280c,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280c    #本期平均单价-加工费    
      CALL s_num_round(g_round_type,g_xccq.xccq280d,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280d    #本期平均单价-制费一    
      CALL s_num_round(g_round_type,g_xccq.xccq280e,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280e    #本期平均单价-制费二    
      CALL s_num_round(g_round_type,g_xccq.xccq280f,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280f    #本期平均单价-制费三    
      CALL s_num_round(g_round_type,g_xccq.xccq280g,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280g    #本期平均单价-制费四    
      CALL s_num_round(g_round_type,g_xccq.xccq280h,g_curr[p_seq].digit1) RETURNING g_xccq.xccq280h    #本期平均单价-制费五    

      #修正
      LET g_xccq.xccq280a  = g_xccq.xccq280 - ( g_xccq.xccq280b + g_xccq.xccq280c +
                             g_xccq.xccq280d + g_xccq.xccq280e + g_xccq.xccq280f +
                             g_xccq.xccq280g + g_xccq.xccq280h )

   END IF   
   
END FUNCTION

################################################################################
# Descriptions...: 取得月加权平均单价
# Memo...........:
# Usage..........: CALL s_axcp500_avg_get_avg_cost(p_seq)
#                       RETURNING NULL
# Input parameter: p_seq          本位币顺序
# Return code....: NULL
# Date & Author..: 2015-01-27 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_get_avg_cost(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE l_qty           LIKE xccc_t.xccc201

   CALL s_axcp500_set_xccc_null_to_zero(g_xccc.*)
        RETURNING g_xccc.*
   
   #参与第一轮月平均的有 期初/201/203/205/211/213/217/207/209/215
   #总数量              = 期初           + 采购入库       + 委外入库       + 工单入库
   LET l_qty            = g_xccc.xccc101 + g_xccc.xccc201 + g_xccc.xccc203 + g_xccc.xccc205 +
   #                      杂项入库       + 调整入库       + 其他入库      
                          g_xccc.xccc211 + g_xccc.xccc213 + g_xccc.xccc217 + 
   #                      重工领出       + 重工入库       + 销退入库
                          g_xccc.xccc207 + g_xccc.xccc209 + g_xccc.xccc215
   
   IF l_qty = 0 THEN
      #总数量              = 期初           + 采购入库       + 委外入库       + 工单入库
      LET l_qty            = g_xccc.xccc101 + g_xccc.xccc201 + g_xccc.xccc203 + g_xccc.xccc205 +
      #                      杂项入库       + 调整入库       + 其他入库       
                             g_xccc.xccc211 + g_xccc.xccc213 + g_xccc.xccc217 + 
      #                      重工入库       + 销退入库
                             g_xccc.xccc209 + g_xccc.xccc215

      #本期平均单价        = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280   = g_xccc.xccc102 + g_xccc.xccc202 + g_xccc.xccc204 + g_xccc.xccc206 +
      #                      杂项入库        + 调整入库        + 其他入库       
                             g_xccc.xccc212 + g_xccc.xccc214 + g_xccc.xccc218 + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210 + g_xccc.xccc216
      #LET g_xccc.xccc280   = g_xccc.xccc280 / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280   = g_xccc.xccc280 / l_qty
      ELSE
         LET g_xccc.xccc280   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-材料   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280a  = g_xccc.xccc102a + g_xccc.xccc202a + g_xccc.xccc204a + g_xccc.xccc206a +
      #                      杂项入库        + 调整入库        + 其他入库       
                             g_xccc.xccc212a + g_xccc.xccc214a + g_xccc.xccc218a + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210a + g_xccc.xccc216a
      #LET g_xccc.xccc280a  = g_xccc.xccc280a / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280a   = g_xccc.xccc280a / l_qty
      ELSE
         LET g_xccc.xccc280a   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-人工   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280b  = g_xccc.xccc102b + g_xccc.xccc202b + g_xccc.xccc204b + g_xccc.xccc206b +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212b + g_xccc.xccc214b + g_xccc.xccc218b + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210b + g_xccc.xccc216b
      #LET g_xccc.xccc280b  = g_xccc.xccc280b / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280b   = g_xccc.xccc280b / l_qty
      ELSE
         LET g_xccc.xccc280b   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-加工   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280c  = g_xccc.xccc102c + g_xccc.xccc202c + g_xccc.xccc204c + g_xccc.xccc206c +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212c + g_xccc.xccc214c + g_xccc.xccc218c + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210c + g_xccc.xccc216c
      #LET g_xccc.xccc280c  = g_xccc.xccc280c / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280c   = g_xccc.xccc280c / l_qty
      ELSE
         LET g_xccc.xccc280c   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费一 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280d  = g_xccc.xccc102d + g_xccc.xccc202d + g_xccc.xccc204d + g_xccc.xccc206d +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212d + g_xccc.xccc214d + g_xccc.xccc218d + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210d + g_xccc.xccc216d
      #LET g_xccc.xccc280d  = g_xccc.xccc280d / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280d   = g_xccc.xccc280d / l_qty
      ELSE
         LET g_xccc.xccc280d   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费二 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280e  = g_xccc.xccc102e + g_xccc.xccc202e + g_xccc.xccc204e + g_xccc.xccc206e +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212e + g_xccc.xccc214e + g_xccc.xccc218e + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210e + g_xccc.xccc216e
      #LET g_xccc.xccc280e  = g_xccc.xccc280e / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280e   = g_xccc.xccc280e / l_qty
      ELSE
         LET g_xccc.xccc280e   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费三 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280f  = g_xccc.xccc102f + g_xccc.xccc202f + g_xccc.xccc204f + g_xccc.xccc206f +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212f + g_xccc.xccc214f + g_xccc.xccc218f + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210f + g_xccc.xccc216f
      #LET g_xccc.xccc280f  = g_xccc.xccc280f / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280f   = g_xccc.xccc280f / l_qty
      ELSE
         LET g_xccc.xccc280f   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费四 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280g  = g_xccc.xccc102g + g_xccc.xccc202g + g_xccc.xccc204g + g_xccc.xccc206g +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212g + g_xccc.xccc214g + g_xccc.xccc218g + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210g + g_xccc.xccc216g
      #LET g_xccc.xccc280g  = g_xccc.xccc280g / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280g   = g_xccc.xccc280g / l_qty
      ELSE
         LET g_xccc.xccc280g   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费五 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280h  = g_xccc.xccc102h + g_xccc.xccc202h + g_xccc.xccc204h + g_xccc.xccc206h +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212h + g_xccc.xccc214h + g_xccc.xccc218h + 
      #                      重工入库        + 销退入库
                             g_xccc.xccc210h + g_xccc.xccc216h
      #LET g_xccc.xccc280h  = g_xccc.xccc280h / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280h   = g_xccc.xccc280h / l_qty
      ELSE
         LET g_xccc.xccc280h   = 0
      END IF   
      #170705-00006#1 add(E)
      
      CALL s_num_round(g_round_type,g_xccc.xccc280,g_curr[p_seq].digit1)  RETURNING g_xccc.xccc280
      CALL s_num_round(g_round_type,g_xccc.xccc280a,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280a    #本期平均单价-材料      
      CALL s_num_round(g_round_type,g_xccc.xccc280b,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280b    #本期平均单价-人工      
      CALL s_num_round(g_round_type,g_xccc.xccc280c,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280c    #本期平均单价-加工费    
      CALL s_num_round(g_round_type,g_xccc.xccc280d,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280d    #本期平均单价-制费一    
      CALL s_num_round(g_round_type,g_xccc.xccc280e,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280e    #本期平均单价-制费二    
      CALL s_num_round(g_round_type,g_xccc.xccc280f,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280f    #本期平均单价-制费三    
      CALL s_num_round(g_round_type,g_xccc.xccc280g,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280g    #本期平均单价-制费四    
      CALL s_num_round(g_round_type,g_xccc.xccc280h,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280h    #本期平均单价-制费五    

      #修正
      LET g_xccc.xccc280a  = g_xccc.xccc280 - ( g_xccc.xccc280b + g_xccc.xccc280c +
                             g_xccc.xccc280d + g_xccc.xccc280e + g_xccc.xccc280f +
                             g_xccc.xccc280g + g_xccc.xccc280h )
                            
         
   ELSE
      
      #本期平均单价        = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280   = g_xccc.xccc102 + g_xccc.xccc202 + g_xccc.xccc204 + g_xccc.xccc206 +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212 + g_xccc.xccc214 + g_xccc.xccc218 + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208 + g_xccc.xccc210 + g_xccc.xccc216
      #LET g_xccc.xccc280   = g_xccc.xccc280 / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280   = g_xccc.xccc280 / l_qty
      ELSE
         LET g_xccc.xccc280   = 0
      END IF   
      #170705-00006#1 add(E)
      
      #本期平均单价-材料   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280a  = g_xccc.xccc102a + g_xccc.xccc202a + g_xccc.xccc204a + g_xccc.xccc206a +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212a + g_xccc.xccc214a + g_xccc.xccc218a + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208a + g_xccc.xccc210a + g_xccc.xccc216a
      #LET g_xccc.xccc280a  = g_xccc.xccc280a / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280a   = g_xccc.xccc280a / l_qty
      ELSE
         LET g_xccc.xccc280a   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-人工   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280b  = g_xccc.xccc102b + g_xccc.xccc202b + g_xccc.xccc204b + g_xccc.xccc206b +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212b + g_xccc.xccc214b + g_xccc.xccc218b + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208b + g_xccc.xccc210b + g_xccc.xccc216b
      #LET g_xccc.xccc280b  = g_xccc.xccc280b / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280b   = g_xccc.xccc280b / l_qty
      ELSE
         LET g_xccc.xccc280b   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-加工   = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280c  = g_xccc.xccc102c + g_xccc.xccc202c + g_xccc.xccc204c + g_xccc.xccc206c +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212c + g_xccc.xccc214c + g_xccc.xccc218c + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208c + g_xccc.xccc210c + g_xccc.xccc216c
      #LET g_xccc.xccc280c  = g_xccc.xccc280c / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280c   = g_xccc.xccc280c / l_qty
      ELSE
         LET g_xccc.xccc280c   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费一 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280d  = g_xccc.xccc102d + g_xccc.xccc202d + g_xccc.xccc204d + g_xccc.xccc206d +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212d + g_xccc.xccc214d + g_xccc.xccc218d + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208d + g_xccc.xccc210d + g_xccc.xccc216d
      #LET g_xccc.xccc280d  = g_xccc.xccc280d / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280d   = g_xccc.xccc280d / l_qty
      ELSE
         LET g_xccc.xccc280d   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费二 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280e  = g_xccc.xccc102e + g_xccc.xccc202e + g_xccc.xccc204e + g_xccc.xccc206e +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212e + g_xccc.xccc214e + g_xccc.xccc218e + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208e + g_xccc.xccc210e + g_xccc.xccc216e
      #LET g_xccc.xccc280e  = g_xccc.xccc280e / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280e   = g_xccc.xccc280e / l_qty
      ELSE
         LET g_xccc.xccc280e   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费三 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280f  = g_xccc.xccc102f + g_xccc.xccc202f + g_xccc.xccc204f + g_xccc.xccc206f +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212f + g_xccc.xccc214f + g_xccc.xccc218f +  
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208f + g_xccc.xccc210f + g_xccc.xccc216f
      #LET g_xccc.xccc280f  = g_xccc.xccc280f / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280f   = g_xccc.xccc280f / l_qty
      ELSE
         LET g_xccc.xccc280f   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费四 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280g  = g_xccc.xccc102g + g_xccc.xccc202g + g_xccc.xccc204g + g_xccc.xccc206g +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212g + g_xccc.xccc214g + g_xccc.xccc218g + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208g + g_xccc.xccc210g + g_xccc.xccc216g
      #LET g_xccc.xccc280g  = g_xccc.xccc280g / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280g   = g_xccc.xccc280g / l_qty
      ELSE
         LET g_xccc.xccc280g   = 0
      END IF   
      #170705-00006#1 add(E)
   
      #本期平均单价-制费五 = 期初            + 采购入库        + 委外入库        + 工单入库
      LET g_xccc.xccc280h  = g_xccc.xccc102h + g_xccc.xccc202h + g_xccc.xccc204h + g_xccc.xccc206h +
      #                      杂项入库        + 调整入库        + 其他入库        
                             g_xccc.xccc212h + g_xccc.xccc214h + g_xccc.xccc218h + 
      #                      重工领出        + 重工入库        + 销退入库
                             g_xccc.xccc208h + g_xccc.xccc210h + g_xccc.xccc216h
      #LET g_xccc.xccc280h  = g_xccc.xccc280h / l_qty #170705-00006#1 mark
      #170705-00006#1 add(S)
      IF l_qty <> 0 THEN
         LET g_xccc.xccc280h   = g_xccc.xccc280h / l_qty
      ELSE
         LET g_xccc.xccc280h   = 0
      END IF   
      #170705-00006#1 add(E)
      
      
      CALL s_num_round(g_round_type,g_xccc.xccc280 ,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280     #本期平均单价         
      CALL s_num_round(g_round_type,g_xccc.xccc280a,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280a    #本期平均单价-材料      
      CALL s_num_round(g_round_type,g_xccc.xccc280b,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280b    #本期平均单价-人工      
      CALL s_num_round(g_round_type,g_xccc.xccc280c,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280c    #本期平均单价-加工费    
      CALL s_num_round(g_round_type,g_xccc.xccc280d,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280d    #本期平均单价-制费一    
      CALL s_num_round(g_round_type,g_xccc.xccc280e,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280e    #本期平均单价-制费二    
      CALL s_num_round(g_round_type,g_xccc.xccc280f,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280f    #本期平均单价-制费三    
      CALL s_num_round(g_round_type,g_xccc.xccc280g,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280g    #本期平均单价-制费四    
      CALL s_num_round(g_round_type,g_xccc.xccc280h,g_curr[p_seq].digit1) RETURNING g_xccc.xccc280h    #本期平均单价-制费五    

      #修正
      LET g_xccc.xccc280a  = g_xccc.xccc280 - ( g_xccc.xccc280b + g_xccc.xccc280c +
                             g_xccc.xccc280d + g_xccc.xccc280e + g_xccc.xccc280f +
                             g_xccc.xccc280g + g_xccc.xccc280h )

   END IF   
   
END FUNCTION

################################################################################
# Descriptions...: 初始化g_xccc变量 - 第二阶段
# Memo...........:
# Usage..........: CALL s_axcp500_avg_init_xccc2()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2015-01-27 By Carrier
# Modify.........: zhangllc mark 未使用
################################################################################
PUBLIC FUNCTION s_axcp500_avg_init_xccc2()

#   LET g_xccc.xccc207  = 0                   #本期重工领出数量       
#   LET g_xccc.xccc208  = 0                   #本期重工领出金额       
#   LET g_xccc.xccc208a = 0                   #本期重工领出金额-材料  
#   LET g_xccc.xccc208b = 0                   #本期重工领出金额-人工  
#   LET g_xccc.xccc208c = 0                   #本期重工领出金额-加工  
#   LET g_xccc.xccc208d = 0                   #本期重工领出金额-制费一
#   LET g_xccc.xccc208e = 0                   #本期重工领出金额-制费二
#   LET g_xccc.xccc208f = 0                   #本期重工领出金额-制费三
#   LET g_xccc.xccc208g = 0                   #本期重工领出金额-制费四
#   LET g_xccc.xccc208h = 0                   #本期重工领出金额-制费五
#   
#   LET g_xccc.xccc215  = 0                   #本期销退入库数量       
#   LET g_xccc.xccc216  = 0                   #本期销退入库金额       
#   LET g_xccc.xccc216a = 0                   #本期销退入库金额-材料  
#   LET g_xccc.xccc216b = 0                   #本期销退入库金额-人工  
#   LET g_xccc.xccc216c = 0                   #本期销退入库金额-加工  
#   LET g_xccc.xccc216d = 0                   #本期销退入库金额-制费一
#   LET g_xccc.xccc216e = 0                   #本期销退入库金额-制费二
#   LET g_xccc.xccc216f = 0                   #本期销退入库金额-制费三
#   LET g_xccc.xccc216g = 0                   #本期销退入库金额-制费四
#   LET g_xccc.xccc216h = 0                   #本期销退入库金额-制费五

END FUNCTION

################################################################################
# Descriptions...: 整批运行在制的SQL汇总
# Memo...........:
# Usage..........: CALL s_axcp500_avg_def_batch_wip_cursor()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success
# Date & Author..: 2015-01-27 By Carrier
# Modify.........: 151211 zhangllc 搜没有用到的地方，先mark掉
################################################################################
PUBLIC FUNCTION s_axcp500_avg_def_batch_wip_cursor()
   DEFINE r_success       LIKE type_t.num5
   
#   WHENEVER ERROR CONTINUE
#   
#   LET r_success = FALSE
#   
#   #找出所有的在制工单信息(一般/重工)
#   #carrier:多产出主件时，是不是不能用sfaa010来串了？
#   LET g_sql = "SELECT sfaa_tmp.* FROM sfaa_tmp,imaa_t ",
#               " WHERE sfaaent = imaaent AND sfaaent = ",g_enterprise,
#               "   AND sfaa010 = imaa001 ",                           #料件
##              "   AND sfaa003 <> '4' ",                              #研发工单
#--             "   AND (sfaa042 IS NULL OR sfaa042 = 'N') ",          #重工否=N
#               "   AND sfaastus IN ('Y','F','C','E','M') "            #单据状态
#   
#   PREPARE s_axcp500_avg_def_batch_wip_cursor_p1 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg_def_batch_wip_cursor_p1"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      RETURN r_success
#   END IF   
#   
#   DECLARE s_axcp500_avg_batch_wip_1_cs1 CURSOR FOR s_axcp500_avg_def_batch_wip_cursor_p1
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "DECLARE s_axcp500_avg_batch_wip_1_cs1"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      RETURN r_success
#   END IF
#
#
#   LET r_success = TRUE
#   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 结转上期余额
# Memo...........:
# Usage..........: CALL s_axcp500_avg_get_previous_balance(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-01-30 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg_get_previous_balance(p_seq)
   DEFINE p_seq               LIKE xccc_t.xccc001
   DEFINE r_success           LIKE type_t.num5
   DEFINE l_date              DATETIME YEAR TO SECOND
   DEFINE p_round             LIKE type_t.chr20

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_current()

   #其他档案在优化版中处理
   #5.xcch_t          
   #PGS-(D)-03080 add -S-
   #PGS-(D)-03080 add -E-
   LET g_sql = " INSERT INTO xcch_t a ",     
   #PGS-(D)-03080 add -S-
   #PGS-(D)-03080 add -E-
              #"         SELECT xcchent,xcchcomp,xcchld,xcch001,xcch002,xcch003,",g_yy,",",g_pp,",xcch006,xcch007,",                     #161114-00003#1 mark
              #"         SELECT /*+ PARALLEL(4) */ xcchent,xcchcomp,xcchld,xcch001,xcch002,xcch003,",g_yy,",",g_pp,",xcch006,xcch007,",  #161114-00003#1 add      #170110-00028#1            
               "         SELECT xcchent,xcchcomp,xcchld,xcch001,xcch002,xcch003,",g_yy,",",g_pp,",xcch006,xcch007,",   #170110-00028#1            
               "                xcch008,xcch009,xcch010,xcch011,",
               "                nvl(xcch901,0), nvl(xcch902,0), nvl(xcch902a,0),nvl(xcch902b,0),nvl(xcch902c,0),",
               "                nvl(xcch902d,0),nvl(xcch902e,0),nvl(xcch902f,0),nvl(xcch902g,0),nvl(xcch902h,0),",           #上期
               "                0,                     0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0,0,   ",                        #本期投入工时/本期投入数量/下阶投入金额/
               "                0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,0,0,0,0,0,                        ",                        #本期转出/差异转出
               "                nvl(xcch901,0), nvl(xcch902,0), nvl(xcch902a,0),nvl(xcch902b,0),nvl(xcch902c,0),",
               "                nvl(xcch902d,0),nvl(xcch902e,0),nvl(xcch902f,0),nvl(xcch902g,0),nvl(xcch902h,0),",           #期末结存
               "                ?",                       
               #PGS-(D)-03080 add -S-
               #PGS-(D)-03080 add -E-
               "            FROM xcch_t b,imaa_t ",   
               #PGS-(D)-03080 add -S-
               #PGS-(D)-03080 add -E-
               "           WHERE b.xcchent =  ",g_enterprise,
               "             AND b.xcchld  = '",g_ld,"'",
               "             AND b.xcch001 = '",p_seq,"'",
               "             AND b.xcch003 = '",g_xcat001,"'",
               "             AND b.xcch004 =  ",g_last_yy,
               "             AND b.xcch005 =  ",g_last_pp,
               "             AND (b.xcch901  <> 0 OR b.xcch902  <> 0 OR b.xcch902a <> 0 OR b.xcch902b <> 0 OR b.xcch902c <> 0 OR ",
               "                  b.xcch902d <> 0 OR b.xcch902e <> 0 OR b.xcch902f <> 0 OR b.xcch902g <> 0 OR b.xcch902h <> 0 )",               
               "             AND imaaent = b.xcchent ",
               "             AND imaa001 = b.xcch007 ",
               "             AND ",g_wc
   PREPARE s_axcp500_avg_get_previous_balance_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_previous_balance_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_get_previous_balance_p7 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_get_previous_balance_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   
   #6.xcci_t  
   #PGS-(D)-03080 add -S-
   #PGS-(D)-03080 add -E-
   LET g_sql = " INSERT INTO xcci_t a", 
   #PGS-(D)-03080 add -S-
   #PGS-(D)-03080 add -E-
              #"         SELECT b.xccient,b.xccicomp,b.xccild,b.xcci001,b.xcci002,b.xcci003,",g_yy,",",g_pp,",b.xcci006,b.xcci007,",                    #161114-00003#1 mark
              #"         SELECT /*+ PARALLEL(4) */ b.xccient,b.xccicomp,b.xccild,b.xcci001,b.xcci002,b.xcci003,",g_yy,",",g_pp,",b.xcci006,b.xcci007,", #161114-00003#1 add      #170110-00028#1             
               "         SELECT b.xccient,b.xccicomp,b.xccild,b.xcci001,b.xcci002,b.xcci003,",g_yy,",",g_pp,",b.xcci006,b.xcci007,",  #170110-00028#1             
               "                b.xcci008,b.xcci009, b.xcci010,",
               "                nvl(b.xcci901,0), nvl(b.xcci902,0), nvl(b.xcci902a,0),nvl(b.xcci902b,0),nvl(b.xcci902c,0),",
               "                nvl(b.xcci902d,0),nvl(b.xcci902e,0),nvl(b.xcci902f,0),nvl(b.xcci902g,0),nvl(b.xcci902h,0),", #上期
               "                0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,                            ", #本期投入/本期转出/差异转出
               "                nvl(b.xcci901,0), nvl(b.xcci902,0), nvl(b.xcci902a,0),nvl(b.xcci902b,0),nvl(b.xcci902c,0),",
               "                nvl(b.xcci902d,0),nvl(b.xcci902e,0),nvl(b.xcci902f,0),nvl(b.xcci902g,0),nvl(b.xcci902h,0),", #期末结存
               "                ?",                 
               #PGS-(D)-03080 add -S-
               #PGS-(D)-03080 add -E-
               "            FROM xcci_t b,xcch_t,imaa_t ",
               #PGS-(D)-03080 add -S-
               #PGS-(D)-03080 add -E-
               "           WHERE b.xccient =  ",g_enterprise,
               "             AND b.xccild  = '",g_ld,"'",
               "             AND b.xcci001 = '",p_seq,"'",
               "             AND b.xcci003 = '",g_xcat001,"'",
               "             AND b.xcci004 =  ",g_last_yy,
               "             AND b.xcci005 =  ",g_last_pp,
               #180705-00009#1---mod---s
               #"             AND (b.xcci901  <> 0 OR b.xcci902  <> 0 OR b.xcci902a <> 0 OR b.xcci902b <> 0 OR b.xcci902c <> 0 OR ",
               #"                  b.xcci902d <> 0 OR b.xcci902e <> 0 OR b.xcci902f <> 0 OR b.xcci902g <> 0 OR b.xcci902h <> 0 )",               
               "             AND (xcch901  <> 0 OR xcch902  <> 0 OR xcch902a <> 0 OR xcch902b <> 0 OR xcch902c <> 0 OR ",
               "                  xcch902d <> 0 OR xcch902e <> 0 OR xcch902f <> 0 OR xcch902g <> 0 OR xcch902h <> 0 )",                
               #180705-00009#1---mod---e
               "             AND b.xccient = xcchent ",
               "             AND b.xccild  = xcchld ",
               "             AND b.xcci001 = xcch001 ",
               "             AND b.xcci003 = xcch003 ",
               "             AND b.xcci004 = xcch004 ",
               "             AND b.xcci005 = xcch005 ",
               "             AND b.xcci006 = xcch006 ",
               "             AND imaaent   = xcchent ",
               "             AND imaa001   = xcch007 ",
               "             AND ",g_wc
   PREPARE s_axcp500_avg_get_previous_balance_p8 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_previous_balance_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_get_previous_balance_p8 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_get_previous_balance_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF     
      
   #180731-00016#1---add---s
   #xccb_t->xcch_t    
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcch_t a ",
               " USING (SELECT xccbent,xccbld,xccbcomp,xccb001,xccb002,xccb003,",g_yy," xccb004,",g_pp," xccb005,",
               "               xccb006,sfaa010 xccb007,' ' xccb008,' ' xccb009,'",g_curr[p_seq].curr,"' xccb010,",
               "               0 xccb101,SUM(xccb102) xccb102,SUM(xccb102a) xccb102a,SUM(xccb102b) xccb102b,SUM(xccb102c) xccb102c,SUM(xccb102d) xccb102d,",
               "               SUM(xccb102e) xccb102e,SUM(xccb102f) xccb102f,SUM(xccb102g) xccb102g,SUM(xccb102h) xccb102h",
               "          FROM xccb_t,sfaa_t,imaa_t",               
               "         WHERE xccbent = sfaaent AND xccb006 = sfaadocno ",
               "           AND xccbent = imaaent AND xccb007 = imaa001 ",
               "           AND xccbent =  ",g_enterprise,
               "           AND xccbld  = '",g_ld,"'",
               "           AND xccb001 = '",p_seq,"'",
               "           AND xccb003 = '",g_xcat001,"'",
               "           AND xccb004 =  ",g_last_yy,
               "           AND xccb005 =  ",g_last_pp,
               "           AND sfaa003 = '3' ",
               "           AND ",g_wc,
               "         GROUP BY xccbent,xccbld,xccbcomp,xccb001,xccb002,xccb003,xccb006,sfaa010",
               "       ) b" ,              
               "    ON (a.xcchent = b.xccbent ",
               "   AND a.xcchld  = b.xccbld  ",
               "   AND a.xcch001 = b.xccb001 ",
               "   AND a.xcch002 = b.xccb002 ",
               "   AND a.xcch003 = b.xccb003 ",
               "   AND a.xcch004 = b.xccb004 ",
               "   AND a.xcch005 = b.xccb005 ",
               "   AND a.xcch006 = b.xccb006 ",
               "   AND a.xcch007 = b.xccb007 ",
               "   AND a.xcch008 = b.xccb008 ",
               "   AND a.xcch009 = b.xccb009)",          
               "  WHEN MATCHED THEN ",
               "       UPDATE SET a.xcch101  = nvl(b.xccb101 ,0) ,   ",
               "                  a.xcch102  = nvl(b.xccb102 ,0) ,   ",
               "                  a.xcch102a = nvl(b.xccb102a,0) ,   ",
               "                  a.xcch102b = nvl(b.xccb102b,0) ,   ",
               "                  a.xcch102c = nvl(b.xccb102c,0) ,   ",
               "                  a.xcch102d = nvl(b.xccb102d,0) ,   ",
               "                  a.xcch102e = nvl(b.xccb102e,0) ,   ",
               "                  a.xcch102f = nvl(b.xccb102f,0) ,   ",
               "                  a.xcch102g = nvl(b.xccb102g,0) ,   ",
               "                  a.xcch102h = nvl(b.xccb102h,0) ,   ",
               "                  a.xcch901  = nvl(b.xccb101 ,0) ,   ",
               "                  a.xcch902  = nvl(b.xccb102 ,0) ,   ",
               "                  a.xcch902a = nvl(b.xccb102a,0) ,   ",
               "                  a.xcch902b = nvl(b.xccb102b,0) ,   ",
               "                  a.xcch902c = nvl(b.xccb102c,0) ,   ",
               "                  a.xcch902d = nvl(b.xccb102d,0) ,   ",
               "                  a.xcch902e = nvl(b.xccb102e,0) ,   ",
               "                  a.xcch902f = nvl(b.xccb102f,0) ,   ",
               "                  a.xcch902g = nvl(b.xccb102g,0) ,   ",
               "                  a.xcch902h = nvl(b.xccb102h,0)     ",                
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccbent,b.xccbcomp,b.xccbld,b.xccb001,b.xccb002,     ",
               "                     b.xccb003,b.xccb004,b.xccb005,b.xccb006,b.xccb007,     ",
               "                     b.xccb008,b.xccb009,' ',b.xccb010,                         ",
               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #101.期初
               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
               "                     0,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,                                     ",    #204.本期下阶投入金额
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #901.期末结存
               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
               "                     ?  )    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_get_previous_balance_p9 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_previous_balance_p9"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_get_previous_balance_p9 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_get_previous_balance_p9"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #xccb_t->xcci_t   
   #190411-00017#1 A mark-S   
#   LET g_sql = " MERGE INTO xcci_t a ",
#               " USING (SELECT xccbent,xccbld,xccbcomp,xccb001,xccb002,xccb003,",g_yy," xccb004,",g_pp," xccb005,",
#               "               xccb006,xccb007,xccb008,xccb009,'",g_curr[p_seq].curr,"' xccb010,xccb101,xccb102,xccb102a,",
#               "               xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h",
#               "          FROM xccb_t,sfaa_t,imaa_t",               
#               "         WHERE xccbent = sfaaent AND xccb006 = sfaadocno ",
#               "           AND xccbent = imaaent AND xccb007 = imaa001 ",
#               "           AND xccbent =  ",g_enterprise,
#               "           AND xccbld  = '",g_ld,"'",
#               "           AND xccb001 = '",p_seq,"'",
#               "           AND xccb003 = '",g_xcat001,"'",
#               "           AND xccb004 =  ",g_last_yy,
#               "           AND xccb005 =  ",g_last_pp,
#               "           AND sfaa003 = '3' ",
#               "           AND ",g_wc, 
#               #181010-00003#1 add-S
#               "         UNION ",
#               "        SELECT xccbent,xccbld,xccbcomp,xccb001,xccb002,xccb003,",g_yy," xccb004,",g_pp," xccb005,",
#               "               xccb006,xccb007,xccb008,xccb009,'",g_curr[p_seq].curr,"' xccb010,xccb101,xccb102,xccb102a,",
#               "               xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h",
#               "          FROM xccb_t,sfaa_t",               
#               "         WHERE xccbent = sfaaent AND xccb006 = sfaadocno ",
#               "           AND xccb007 = 'DL+OH+SUB' ",  #将人工制费的期初开账资料也要加入
#               "           AND xccbent =  ",g_enterprise,
#               "           AND xccbld  = '",g_ld,"'",
#               "           AND xccb001 = '",p_seq,"'",
#               "           AND xccb003 = '",g_xcat001,"'",
#               "           AND xccb004 =  ",g_last_yy,
#               "           AND xccb005 =  ",g_last_pp,
#               "           AND sfaa003 = '3' ",
##               "           AND ",g_wc,    #181101-00027#1 mark
#               #181010-00003#1 add-E
#               "       ) b",               
#               "    ON (a.xccient = b.xccbent ",
#               "   AND a.xccild  = b.xccbld  ",
#               "   AND a.xcci001 = b.xccb001 ",
#               "   AND a.xcci002 = b.xccb002 ",
#               "   AND a.xcci003 = b.xccb003 ",
#               "   AND a.xcci004 = b.xccb004 ",
#               "   AND a.xcci005 = b.xccb005 ",
#               "   AND a.xcci006 = b.xccb006 ",
#               "   AND a.xcci007 = b.xccb007 ",
#               "   AND a.xcci008 = b.xccb008 ",
#               "   AND a.xcci009 = b.xccb009)",          
#               "  WHEN MATCHED THEN ",
#               "       UPDATE SET a.xcci101  = nvl(b.xccb101 ,0) ,   ",
#               "                  a.xcci102  = nvl(b.xccb102 ,0) ,   ",
#               "                  a.xcci102a = nvl(b.xccb102a,0) ,   ",
#               "                  a.xcci102b = nvl(b.xccb102b,0) ,   ",
#               "                  a.xcci102c = nvl(b.xccb102c,0) ,   ",
#               "                  a.xcci102d = nvl(b.xccb102d,0) ,   ",
#               "                  a.xcci102e = nvl(b.xccb102e,0) ,   ",
#               "                  a.xcci102f = nvl(b.xccb102f,0) ,   ",
#               "                  a.xcci102g = nvl(b.xccb102g,0) ,   ",
#               "                  a.xcci102h = nvl(b.xccb102h,0) ,   ",
#               "                  a.xcci901  = nvl(b.xccb101 ,0) ,   ",
#               "                  a.xcci902  = nvl(b.xccb102 ,0) ,   ",
#               "                  a.xcci902a = nvl(b.xccb102a,0) ,   ",
#               "                  a.xcci902b = nvl(b.xccb102b,0) ,   ",
#               "                  a.xcci902c = nvl(b.xccb102c,0) ,   ",
#               "                  a.xcci902d = nvl(b.xccb102d,0) ,   ",
#               "                  a.xcci902e = nvl(b.xccb102e,0) ,   ",
#               "                  a.xcci902f = nvl(b.xccb102f,0) ,   ",
#               "                  a.xcci902g = nvl(b.xccb102g,0) ,   ",
#               "                  a.xcci902h = nvl(b.xccb102h,0)     ",                
#               "  WHEN NOT MATCHED THEN                      ",
#               "       INSERT VALUES(b.xccbent,b.xccbcomp,b.xccbld,b.xccb001,b.xccb002,    ",
#               "                     b.xccb003,b.xccb004,b.xccb005,b.xccb006,b.xccb007,       ",
#               "                     b.xccb008,b.xccb009,b.xccb010,                        ",
#               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #101.期初
#               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
#               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #901.期末结存
#               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
#               "                     ?  )    " 
   #190411-00017#1 A mark-E
   #190411-00017#1 A add-S 
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcci_t a ",
               " USING (SELECT xccbent,xccbld,xccbcomp,xccb001,xccb002,xccb003,",g_yy," xccb004,",g_pp," xccb005,",
               "               xccb006,xccb007,xccb008,xccb009,'",g_curr[p_seq].curr,"' xccb010,xccb101,xccb102,xccb102a,",
               "               xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h",
               "          FROM xccb_t,imaa_t",               
               "         WHERE xccbent = imaaent AND xccb007 = imaa001 ",
               "           AND xccbent =  ",g_enterprise,
               "           AND EXISTS(SELECT 1 FROM sfaa_t WHERE sfaaent = xccbent AND sfaadocno = xccb006 AND sfaa003 = '3') ",
               "           AND xccbld  = '",g_ld,"'",
               "           AND xccb001 = '",p_seq,"'",
               "           AND xccb003 = '",g_xcat001,"'",
               "           AND xccb004 =  ",g_last_yy,
               "           AND xccb005 =  ",g_last_pp,
               "           AND ",g_wc, 
               "         UNION ",
               "        SELECT xccbent,xccbld,xccbcomp,xccb001,xccb002,xccb003,",g_yy," xccb004,",g_pp," xccb005,",
               "               xccb006,xccb007,xccb008,xccb009,'",g_curr[p_seq].curr,"' xccb010,xccb101,xccb102,xccb102a,",
               "               xccb102b,xccb102c,xccb102d,xccb102e,xccb102f,xccb102g,xccb102h",
               "          FROM xccb_t ",               
               "         WHERE xccb007 = 'DL+OH+SUB' ",  #将人工制费的期初开账资料也要加入
               "           AND xccbent =  ",g_enterprise,
               "           AND xccbld  = '",g_ld,"'",
               "           AND xccb001 = '",p_seq,"'",
               "           AND xccb003 = '",g_xcat001,"'",
               "           AND xccb004 =  ",g_last_yy,
               "           AND xccb005 =  ",g_last_pp,
               "           AND EXISTS(SELECT 1 FROM sfaa_t WHERE sfaaent = xccbent AND sfaadocno = xccb006 AND sfaa003 = '3') ",
               "       ) b",               
               "    ON (a.xccient = b.xccbent ",
               "   AND a.xccild  = b.xccbld  ",
               "   AND a.xcci001 = b.xccb001 ",
               "   AND a.xcci002 = b.xccb002 ",
               "   AND a.xcci003 = b.xccb003 ",
               "   AND a.xcci004 = b.xccb004 ",
               "   AND a.xcci005 = b.xccb005 ",
               "   AND a.xcci006 = b.xccb006 ",
               "   AND a.xcci007 = b.xccb007 ",
               "   AND a.xcci008 = b.xccb008 ",
               "   AND a.xcci009 = b.xccb009)",          
               "  WHEN MATCHED THEN ",
               "       UPDATE SET a.xcci101  = nvl(b.xccb101 ,0) ,   ",
               "                  a.xcci102  = nvl(b.xccb102 ,0) ,   ",
               "                  a.xcci102a = nvl(b.xccb102a,0) ,   ",
               "                  a.xcci102b = nvl(b.xccb102b,0) ,   ",
               "                  a.xcci102c = nvl(b.xccb102c,0) ,   ",
               "                  a.xcci102d = nvl(b.xccb102d,0) ,   ",
               "                  a.xcci102e = nvl(b.xccb102e,0) ,   ",
               "                  a.xcci102f = nvl(b.xccb102f,0) ,   ",
               "                  a.xcci102g = nvl(b.xccb102g,0) ,   ",
               "                  a.xcci102h = nvl(b.xccb102h,0) ,   ",
               "                  a.xcci901  = nvl(b.xccb101 ,0) ,   ",
               "                  a.xcci902  = nvl(b.xccb102 ,0) ,   ",
               "                  a.xcci902a = nvl(b.xccb102a,0) ,   ",
               "                  a.xcci902b = nvl(b.xccb102b,0) ,   ",
               "                  a.xcci902c = nvl(b.xccb102c,0) ,   ",
               "                  a.xcci902d = nvl(b.xccb102d,0) ,   ",
               "                  a.xcci902e = nvl(b.xccb102e,0) ,   ",
               "                  a.xcci902f = nvl(b.xccb102f,0) ,   ",
               "                  a.xcci902g = nvl(b.xccb102g,0) ,   ",
               "                  a.xcci902h = nvl(b.xccb102h,0)     ",                
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccbent,b.xccbcomp,b.xccbld,b.xccb001,b.xccb002,    ",
               "                     b.xccb003,b.xccb004,b.xccb005,b.xccb006,b.xccb007,       ",
               "                     b.xccb008,b.xccb009,b.xccb010,                        ",
               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #101.期初
               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #901.期末结存
               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
               "                     ?  )    "
   #PGS(D)-00824 --- end ---
   #190411-00017#1 A add-E
   PREPARE s_axcp500_avg_get_previous_balance_p10 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_previous_balance_p10"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_get_previous_balance_p10 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_get_previous_balance_p10"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF 
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   
   #180731-00016#1---add---e
      
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: s_axcp500_avg cursor 定义汇总 
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_def_cursor()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_def_cursor()
   DEFINE r_success       LIKE type_t.num5
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   #取成本阶
   DECLARE s_axcp500_avg1_cs1 CURSOR FOR
    SELECT DISTINCT xcbb006 FROM s_axcp500_tmp
     ORDER BY xcbb006 DESC
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DECLARE s_axcp500_avg1_cs1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF     
   
   #no use mark zhangllc 160528
   ##BY成本阶取料件
   #LET g_sql = " SELECT UNIQUE imaa001,xccc007,xcbb006,imac003,imaa004,imaa011,imae013,xccc002,xccc008,xccc003,imag014,imaa006 ",
   #            "   FROM s_axcp500_tmp ",
   #            "  WHERE xcbb006  = ? ",
   #            "    AND xcbb006  <> 99 ",
   #            " UNION ",
   #            " SELECT UNIQUE imaa001,xccc007,xcbb006,imac003,imaa004,imaa011,imae013,xccc002,xccc008,xccc003,imag014,imaa006 ",
   #            "   FROM s_axcp500_tmp,inaj_tmp ",
   #            "  WHERE inajent  = ",g_enterprise,
   #            "    AND inaj005  = imaa001 ",
   #            "    AND inaj006  = xccc007 ",
   #            "    AND inaj010  = xccc008 ",
   #            "    AND inaj999  = xccc002 ",
   #            "    AND xcbb006 = 99     ",
   #            "    AND xcbb006 = ? ",
   #            "  ORDER BY xcbb006 DESC,imaa011 DESC,imac003,imaa001,xccc007,xccc002,xccc008 "          
   #  
   #PREPARE s_axcp500_avg1_cal_p1 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg1_cal_p1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg1_cs2 CURSOR FOR s_axcp500_avg1_cal_p1
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg1_cs2"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF


   #在制计算时,选取工单的SQL-- 找一般在制的工单SQL (FOR :s_axcp500_avg_wip)
   #mod zhangllc 150730 --begin 需考虑到产品特征，一个料号不同产品特征可能是不同成本阶，如果不考虑产品特征，会误将非此成本阶的工单也抓出来
   #                       （一张工单的主件，相同料号不同特征的成本阶应该一样的，不一样就代表成本阶设置的有问题了）
   #LET g_sql = "SELECT UNIQUE sfaa_tmp.* FROM sfaa_tmp,s_axcp500_tmp ",
   #            " WHERE sfaaent = ",g_enterprise,
   #            "   AND sfaa010 = imaa001 ",                           #料件
   #            "   AND xcbb006 = ?       ",                           #成本阶
   #           #"   AND sfaa003 <> '4' ",                              #研发工单
   #            "   AND (sfaa042 IS NULL OR sfaa042 = 'N') "           #重工否=N
   #LET g_sql = "SELECT UNIQUE sfaa_tmp.* FROM sfaa_tmp,s_axcp500_tmp,sfac_tmp2 ", #161124-00048#20 mark
   #190411-00017#1 A mark-S
#   #161124-00048#20 add(s)
#   LET g_sql = "SELECT UNIQUE sfaaent,sfaaownid,sfaaowndp,sfaacrtid,sfaacrtdp,",
#               "              sfaacrtdt,sfaamodid,sfaamoddt,sfaacnfid,sfaacnfdt,",
#               "              sfaapstid,sfaapstdt,sfaastus,sfaasite,sfaadocno,",
#               "              sfaadocdt,sfaa001,sfaa002,sfaa003,sfaa004,",
#               "              sfaa005,sfaa006,sfaa007,sfaa008,sfaa009,",
#               "              sfaa010,sfaa011,sfaa012,sfaa013,sfaa014,",
#               "              sfaa015,sfaa016,sfaa017,sfaa018,sfaa019,",
#               "              sfaa020,sfaa021,sfaa022,sfaa023,sfaa024,",
#               "              sfaa025,sfaa026,sfaa027,sfaa028,sfaa029,",
#               "              sfaa030,sfaa031,sfaa032,sfaa033,sfaa034,",
#               "              sfaa035,sfaa036,sfaa037,sfaa038,sfaa039,",
#               "              sfaa040,sfaa041,sfaa042,sfaa043,sfaa044,",
#               "              sfaa045,sfaa046,sfaa047,sfaa048,sfaa049,",
#               "              sfaa050,sfaa051,sfaa052,sfaa053,sfaa054,",
#               "              sfaa055,sfaa056,sfaa057,sfaa058,sfaa059,",
#               "              sfaa060,sfaa061,sfaa062,sfaa063,sfaa064,",
#               "              sfaa065,sfaa066,sfaa067,sfaa068,sfaa069,",
#               "              sfaa070,sfaa071,sfaa072,isgywwrk ",                
#               "  FROM sfaa_tmp,s_axcp500_tmp,sfac_tmp2 ",   
#   #161124-00048#20 add(e)
#               " WHERE sfaaent = ",g_enterprise,
#               "   AND sfaa010 = imaa001 ",                           #料件 
#               #180620-00028#1---mod---s
#               #"   AND sfaadocno = sfacdocno AND clevel = xcbb006 ",
#               #"   AND xcbb006 = ?       ",                           #成本阶
#               "   AND sfaadocno = sfacdocno ",
#               "   AND clevel = ?       ",                           #成本阶
#               #180620-00028#1---mod---s               
#              #"   AND sfaa003 <> '4' ",                              #研发工单
#               "   AND sfaa003 <> '3' ",                              #拆件工单   #add zhangllc 160219
#               "   AND (sfaa042 IS NULL OR sfaa042 = 'N') "           #重工否=N
#   #mod zhangllc 150730 --end
   #190411-00017#1 A mark-E
   #190411-00017#1 A add-S
   #190513-00024#1 mark-S
#   LET g_sql = "SELECT UNIQUE sfaaent,sfaaownid,sfaaowndp,sfaacrtid,sfaacrtdp,",
#               "              sfaacrtdt,sfaamodid,sfaamoddt,sfaacnfid,sfaacnfdt,",
#               "              sfaapstid,sfaapstdt,sfaastus,sfaasite,sfaadocno,",
#               "              sfaadocdt,sfaa001,sfaa002,sfaa003,sfaa004,",
#               "              sfaa005,sfaa006,sfaa007,sfaa008,sfaa009,",
#               "              sfaa010,sfaa011,sfaa012,sfaa013,sfaa014,",
#               "              sfaa015,sfaa016,sfaa017,sfaa018,sfaa019,",
#               "              sfaa020,sfaa021,sfaa022,sfaa023,sfaa024,",
#               "              sfaa025,sfaa026,sfaa027,sfaa028,sfaa029,",
#               "              sfaa030,sfaa031,sfaa032,sfaa033,sfaa034,",
#               "              sfaa035,sfaa036,sfaa037,sfaa038,sfaa039,",
#               "              sfaa040,sfaa041,sfaa042,sfaa043,sfaa044,",
#               "              sfaa045,sfaa046,sfaa047,sfaa048,sfaa049,",
#               "              sfaa050,sfaa051,sfaa052,sfaa053,sfaa054,",
#               "              sfaa055,sfaa056,sfaa057,sfaa058,sfaa059,",
#               "              sfaa060,sfaa061,sfaa062,sfaa063,sfaa064,",
#               "              sfaa065,sfaa066,sfaa067,sfaa068,sfaa069,",
#               "              sfaa070,sfaa071,sfaa072,isgywwrk ",      
   #190513-00024#1 mark-E
   #190513-00024#1 add-S  
   LET g_sql = " SELECT UNIQUE sfaaent,sfaasite,sfaadocno,sfaadocdt,sfaa003,sfaa010,sfaa011,sfaa012, ",
               "               sfaa013,sfaa028,sfaa042,sfaa048,sfaa057,isgywwrk ",               
   #190513-00024#1 add-E               
               "  FROM z",
               " WHERE sfaaent = ",g_enterprise,
               "   AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE sfaa010 = imaa001) ",
               "   AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE clevel = ? AND sfaadocno = sfacdocno) ",
               "   AND sfaa003 <> '3' ",                              #拆件工单   
               "   AND (sfaa042 IS NULL OR sfaa042 = 'N') "           #重工否=N
   #190411-00017#1 A add-E
   PREPARE s_axcp500_avg1_cal_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_cal_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   
   
   DECLARE s_axcp500_avg1_wip_cs1 CURSOR FOR s_axcp500_avg1_cal_p2
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DECLARE s_axcp500_avg1_wip_cs1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   #200120-00015#1---add---s
   LET g_sql = "SELECT COUNT(1) ",
               "  FROM xccp_t",
               " WHERE xccpent = ",g_enterprise,
               "   AND xccpld  = '",g_ld,"'",
               "   AND xccp001 = ? ",               #记帐本位币顺序
               "   AND xccp003 = '",g_xcat001,"'",
               "   AND xccp004 = ",g_yy,
               "   AND xccp005 = ",g_pp,
               "   AND xccp007 = ? ",               #工单单号
               "   AND xccpstus = 'Y'"
   PREPARE s_axcp500_avg1_chk_xccp_p FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_chk_xccp_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   
   #200120-00015#1---add---e
   
   #200903-00086#1---mark---s
   ##160726-00001#11 add --(S)--
   ##SET取替代轉出量
   #LET g_sql = " SELECT DISTINCT sfbadocno,sfba034,qty16 ",
   #            "   FROM wip4_tmp6 ",
   #            "  WHERE qty8 > qty16 "
   #            
   #PREPARE s_axcp500_avg1_getsetout_p11 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p11"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg1_getsetout_cs1 CURSOR FOR s_axcp500_avg1_getsetout_p11
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg1_getsetout_cs1"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF            
   #
   #LET g_sql = " SELECT sfba027,qty7 ",
   #            "   FROM wip4_tmp6 ",
   #            "  WHERE sfbadocno = ? AND sfba034 = ? ",
   #            "  ORDER BY qty7 desc" 
   #            
   #PREPARE s_axcp500_avg1_getsetout_p12 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p12"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF   
   #
   #DECLARE s_axcp500_avg1_getsetout_cs2 CURSOR FOR s_axcp500_avg1_getsetout_p12
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DECLARE s_axcp500_avg1_getsetout_cs2"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
   #   RETURN r_success
   #END IF            
   ##160726-00001#11 add --(E)--
   #200903-00086#1---mark---e
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 效能统计开始
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_stats_begin()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_stats_begin()
   WHENEVER ERROR CONTINUE

   LET g_stat[1].desc = 'Total_Process_Seoncds'
   LET g_stat[1].cnt  = 0
   LET g_stat[1].cost_mins = 0    

   LET g_stat[3].desc = 's_axcp500_avg1_wip'
   LET g_stat[3].cnt  = 0
   LET g_stat[3].cost_mins = 0   

   LET g_stat[4].desc = 's_axcp500_avg1_coproduct'
   LET g_stat[4].cnt  = 0
   LET g_stat[4].cost_mins = 0   

   LET g_stat[5].desc = 's_axcp500_avg1_rework'
   LET g_stat[5].cnt  = 0
   LET g_stat[5].cost_mins = 0   

   LET g_stat[6].desc = 's_axcp500_avg1_disassemble'
   LET g_stat[6].cnt  = 0
   LET g_stat[6].cost_mins = 0   

   LET g_stat[7].desc = 's_axcp500_avg1_set_xccc'
   LET g_stat[7].cnt  = 0
   LET g_stat[7].cost_mins = 0   

   LET g_stat[8].desc = 's_axcp500_wip_1'
   LET g_stat[8].cnt  = 0
   LET g_stat[8].cost_mins = 0   

   LET g_stat[9].desc = 's_axcp500_wip_2_1'
   LET g_stat[9].cnt  = 0
   LET g_stat[9].cost_mins = 0   

   LET g_stat[10].desc = 's_axcp500_wip_2_2'
   LET g_stat[10].cnt  = 0
   LET g_stat[10].cost_mins = 0   
   

   LET g_stat[11].desc = 's_axcp500_wip_2_3'
   LET g_stat[11].cnt  = 0
   LET g_stat[11].cost_mins = 0    

   LET g_stat[12].desc = 's_axcp500_wip_2_4'
   LET g_stat[12].cnt  = 0
   LET g_stat[12].cost_mins = 0 
   
   LET g_stat[13].desc = 's_axcp500_wip_3'
   LET g_stat[13].cnt  = 0
   LET g_stat[13].cost_mins = 0    
   
   LET g_stat[14].desc = 's_axcp500_wip_4'
   LET g_stat[14].cnt  = 0
   LET g_stat[14].cost_mins = 0    
   
   LET g_stat[15].desc = 's_axcp500_wip_5'
   LET g_stat[15].cnt  = 0
   LET g_stat[15].cost_mins = 0    

   LET g_stat[16].desc = 's_axcp500_avg1_set_xcck_1'
   LET g_stat[16].cnt  = 0
   LET g_stat[16].cost_mins = 0   
   
   LET g_stat[17].desc = 's_axcp500_avg1_set_xcck_2'
   LET g_stat[17].cnt  = 0
   LET g_stat[17].cost_mins = 0  

   LET g_stat[18].desc = 's_axcp500_avg1_set_xcck_3'
   LET g_stat[18].cnt  = 0
   LET g_stat[18].cost_mins = 0 
   
   LET g_stat[19].desc = 's_axcp500_avg1_set_xcck_5'
   LET g_stat[19].cnt  = 0
   LET g_stat[19].cost_mins = 0 
   
   LET g_stat[20].desc = 's_axcp500_avg1_set_xccc_1'
   LET g_stat[20].cnt  = 0
   LET g_stat[20].cost_mins = 0    

   LET g_stat[21].desc = 's_axcp500_avg1_set_xccc_2'
   LET g_stat[21].cnt  = 0
   LET g_stat[21].cost_mins = 0  
   
   LET g_stat[22].desc = 's_axcp500_avg1_set_xccc_3'
   LET g_stat[22].cnt  = 0
   LET g_stat[22].cost_mins = 0    
   
   LET g_stat[23].desc = 's_axcp500_avg1_set_xccc_4'
   LET g_stat[23].cnt  = 0
   LET g_stat[23].cost_mins = 0    
   
   LET g_stat[24].desc = 's_axcp500_avg1_set_xccc_5'
   LET g_stat[24].cnt  = 0
   LET g_stat[24].cost_mins = 0    

END FUNCTION

################################################################################
# Descriptions...: 效能统计
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_stats_cnt(p_no,p_begin,p_end,p_cnt)
#                       RETURNING NULL
# Input parameter: p_no           操作步骤
#                : p_begin        开始时间
#                : p_end          结束时间
#                : p_cnt          本次循环的笔数
# Return code....: NULL
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_stats_cnt(p_no,p_begin,p_end,p_cnt)
   DEFINE p_no            LIKE type_t.num5
   DEFINE p_begin         LIKE type_t.chr8
   DEFINE p_end           LIKE type_t.chr8
   DEFINE p_cnt           LIKE type_t.num10
   DEFINE l_hrs           LIKE type_t.num5
   DEFINE l_mins          LIKE type_t.num5
   DEFINE l_seconds       LIKE type_t.num5
   DEFINE l_b1            LIKE type_t.num5
   DEFINE l_b2            LIKE type_t.num5
   DEFINE l_b3            LIKE type_t.num5
   DEFINE l_e1            LIKE type_t.num5
   DEFINE l_e2            LIKE type_t.num5
   DEFINE l_e3            LIKE type_t.num5
   DEFINE l_sum           LIKE type_t.num10
   
   WHENEVER ERROR CONTINUE
   LET l_b1 = p_begin[1,2]
   LET l_b2 = p_begin[4,5]
   LET l_b3 = p_begin[7,8]
   
   LET l_e1 = p_end[1,2]
   LET l_e2 = p_end[4,5]
   LET l_e3 = p_end[7,8]
   
   LET l_hrs = (l_e1 - l_b1 ) * 60 * 60
   
   LET l_mins = (l_e2 - l_b2) * 60
   
   LET l_seconds = l_e3 - l_b3
   
   LET l_sum = l_hrs + l_mins + l_seconds
   
   CASE p_no
        WHEN 1  LET g_stat[01].cost_mins = g_stat[01].cost_mins + l_sum
                LET g_stat[01].cnt       = g_stat[01].cnt  + p_cnt
        WHEN 2  LET g_stat[02].cost_mins = g_stat[02].cost_mins + l_sum
                LET g_stat[02].cnt       = g_stat[02].cnt  + p_cnt
        WHEN 3  LET g_stat[03].cost_mins = g_stat[03].cost_mins + l_sum
                LET g_stat[03].cnt       = g_stat[03].cnt  + p_cnt
        WHEN 4  LET g_stat[04].cost_mins = g_stat[04].cost_mins + l_sum
                LET g_stat[04].cnt       = g_stat[04].cnt  + p_cnt
        WHEN 5  LET g_stat[05].cost_mins = g_stat[05].cost_mins + l_sum
                LET g_stat[05].cnt       = g_stat[05].cnt  + p_cnt
        WHEN 6  LET g_stat[06].cost_mins = g_stat[06].cost_mins + l_sum
                LET g_stat[06].cnt       = g_stat[06].cnt  + p_cnt
        WHEN 7  LET g_stat[07].cost_mins = g_stat[07].cost_mins + l_sum
                LET g_stat[07].cnt       = g_stat[07].cnt  + p_cnt
        WHEN 8  LET g_stat[08].cost_mins = g_stat[08].cost_mins + l_sum
                LET g_stat[08].cnt       = g_stat[08].cnt  + p_cnt
        WHEN 9  LET g_stat[09].cost_mins = g_stat[09].cost_mins + l_sum
                LET g_stat[09].cnt       = g_stat[09].cnt  + p_cnt
        WHEN 10 LET g_stat[10].cost_mins = g_stat[10].cost_mins + l_sum
                LET g_stat[10].cnt       = g_stat[10].cnt  + p_cnt
        WHEN 11 LET g_stat[11].cost_mins = g_stat[11].cost_mins + l_sum
                LET g_stat[11].cnt       = g_stat[11].cnt  + p_cnt
        WHEN 12 LET g_stat[12].cost_mins = g_stat[12].cost_mins + l_sum
                LET g_stat[12].cnt       = g_stat[12].cnt  + p_cnt
        WHEN 13 LET g_stat[13].cost_mins = g_stat[13].cost_mins + l_sum
                LET g_stat[13].cnt       = g_stat[13].cnt  + p_cnt
        WHEN 14 LET g_stat[14].cost_mins = g_stat[14].cost_mins + l_sum
                LET g_stat[14].cnt       = g_stat[14].cnt  + p_cnt
        WHEN 15 LET g_stat[15].cost_mins = g_stat[15].cost_mins + l_sum
                LET g_stat[15].cnt       = g_stat[15].cnt  + p_cnt
        WHEN 16 LET g_stat[16].cost_mins = g_stat[16].cost_mins + l_sum
                LET g_stat[16].cnt       = g_stat[16].cnt  + p_cnt
        WHEN 17 LET g_stat[17].cost_mins = g_stat[17].cost_mins + l_sum
                LET g_stat[17].cnt       = g_stat[17].cnt  + p_cnt
        WHEN 18 LET g_stat[18].cost_mins = g_stat[18].cost_mins + l_sum
                LET g_stat[18].cnt       = g_stat[18].cnt  + p_cnt
        WHEN 19 LET g_stat[19].cost_mins = g_stat[19].cost_mins + l_sum
                LET g_stat[19].cnt       = g_stat[19].cnt  + p_cnt
        WHEN 20 LET g_stat[20].cost_mins = g_stat[20].cost_mins + l_sum
                LET g_stat[20].cnt       = g_stat[20].cnt  + p_cnt
        WHEN 21 LET g_stat[21].cost_mins = g_stat[21].cost_mins + l_sum
                LET g_stat[21].cnt       = g_stat[21].cnt  + p_cnt
        WHEN 22 LET g_stat[22].cost_mins = g_stat[22].cost_mins + l_sum
                LET g_stat[22].cnt       = g_stat[22].cnt  + p_cnt
        WHEN 23 LET g_stat[23].cost_mins = g_stat[23].cost_mins + l_sum
                LET g_stat[23].cnt       = g_stat[23].cnt  + p_cnt
        WHEN 24 LET g_stat[24].cost_mins = g_stat[24].cost_mins + l_sum
                LET g_stat[24].cnt       = g_stat[24].cnt  + p_cnt

   END CASE
   
END FUNCTION

################################################################################
# Descriptions...: 统计资料输出
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_stats_output()
#                       RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_stats_output()
   DEFINE l_time      DATETIME YEAR TO SECOND

   LET l_time = cl_get_current()

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[01].cost_mins,g_stat[01].cnt,'STATS1:','1','Total_Process_Seoncds',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[03].cost_mins,g_stat[03].cnt,'STATS1:','3','s_axcp500_avg1_wip',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[04].cost_mins,g_stat[04].cnt,'STATS1:','4','s_axcp500_avg1_coproduct',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[05].cost_mins,g_stat[05].cnt,'STATS1:','5','s_axcp500_avg1_rework',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[06].cost_mins,g_stat[06].cnt,'STATS1:','6','s_axcp500_avg1_disassemble',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[07].cost_mins,g_stat[07].cnt,'STATS1:','7','s_axcp500_avg1_set_xccc',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[08].cost_mins,g_stat[08].cnt,'STATS1:','8','s_axcp500_wip_1',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[09].cost_mins,g_stat[09].cnt,'STATS1:','9','s_axcp500_wip_2_1',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[10].cost_mins,g_stat[10].cnt,'STATS1:','10','s_axcp500_wip_2_2',g_user,l_time)
 
 
   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[11].cost_mins,g_stat[11].cnt,'STATS1:','11','s_axcp500_wip_2_3',g_user,l_time)
   
   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[12].cost_mins,g_stat[12].cnt,'STATS1:','12','s_axcp500_wip_2_4',g_user,l_time)
   
   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[13].cost_mins,g_stat[13].cnt,'STATS1:','13','s_axcp500_wip_3',g_user,l_time)
   
   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[14].cost_mins,g_stat[14].cnt,'STATS1:','14','s_axcp500_wip_4',g_user,l_time)
   
   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[15].cost_mins,g_stat[15].cnt,'STATS1:','15','s_axcp500_wip_5',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[16].cost_mins,g_stat[16].cnt,'STATS1:','16','s_axcp500_avg1_set_xccc_1',g_user,l_time)


   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[16].cost_mins,g_stat[16].cnt,'STATS1:','16','s_axcp500_avg1_set_xcck_1',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[17].cost_mins,g_stat[17].cnt,'STATS1:','17','s_axcp500_avg1_set_xcck_2',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[18].cost_mins,g_stat[18].cnt,'STATS1:','18','s_axcp500_avg1_set_xcck_3',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[19].cost_mins,g_stat[19].cnt,'STATS1:','19','s_axcp500_avg1_set_xcck_5',g_user,l_time)


   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[20].cost_mins,g_stat[20].cnt,'STATS1:','20','s_axcp500_avg1_set_xccc_1',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[21].cost_mins,g_stat[21].cnt,'STATS1:','21','s_axcp500_avg1_set_xccc_2',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[22].cost_mins,g_stat[22].cnt,'STATS1:','22','s_axcp500_avg1_set_xccc_3',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[23].cost_mins,g_stat[23].cnt,'STATS1:','23','s_axcp500_avg1_set_xccc_4',g_user,l_time)

   INSERT INTO xccy_t(xccyent,xccycomp,xccyld,xccy003,xccy004,xccy005,xccy007,xccy008,xccy010,xccy021,xccy022,xccycrtid,xccycrtdt)
          VALUES(g_enterprise,g_comp,g_ld,g_xcat001,g_yy,g_pp,g_stat[24].cost_mins,g_stat[24].cnt,'STATS1:','24','s_axcp500_avg1_set_xccc_5',g_user,l_time)

   
END FUNCTION

################################################################################
# Descriptions...: 月加权成本计算入口 - 效能优化版
# Memo...........:
# Usage..........: CALL s_axcp500_avg1()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1()
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_done          LIKE type_t.chr1
   DEFINE l_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE l_cnt           LIKE type_t.num10
   DEFINE l_date          LIKE type_t.dat
   DEFINE l_xcckcrtdt     LIKE xcck_t.xcckcrtdt #170825-00011#1 add
   #170617-00245#1 add(s)
   DEFINE l_str  STRING
   DEFINE l_str1 STRING
   DEFINE l_str2 STRING
   DEFINE l_str3 STRING
   DEFINE i               LIKE type_t.num10
   #170617-00245#1 add(e)
   DEFINE l_date2          DATETIME YEAR TO SECOND
   DEFINE l_fin_9024       LIKE type_t.chr1  #190411-00017#1 D add
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   LET l_date2 = cl_get_current()    #181213-00042#1 add
   
   LET l_date = g_edate + 1
#   CALL s_axcp500_avg_batch_wip_1('1')   
#        RETURNING l_success
#   IF NOT l_success THEN
#      RETURN r_success
#   END IF 
   
   MESSAGE "def_cursor"
   #月加权的CURSOR 定义
   #使用到其中的s_axcp500_avg_coproduct_cs1
   #           s_axcp500_avg_rework_cs1
   #           s_axcp500_avg_disassemble_cs1
   #           s_axcp500_avg_cal_p20
   #           s_axcp500_avg_cal_p23
   CALL s_axcp500_avg_def_cursor()
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF 
      
   #月加权的CURSOR 定义 - 优化版
   CALL s_axcp500_avg1_def_cursor()
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF 
   
   INITIALIZE g_xccd.* TO NULL
   INITIALIZE g_xcch.* TO NULL
   
   #开始性能统计
   CALL s_axcp500_avg1_stats_begin()  
   IF g_bgjob <> "Y" THEN   
      LET g_stat_msg.msg1  = cl_getmsg('axc-00625',g_dlang)   #读取  料件编号:
      LET g_stat_msg.msg2  = cl_getmsg('axc-00629',g_dlang)   #成本阶:
      LET g_stat_msg.msg3  = cl_getmsg('axc-00641',g_dlang)   #整批处理xcck_t第一部:产生所有的xcck_t资料及撷取除"在制入项成本"外的其他入项成本
      LET g_stat_msg.msg4  = cl_getmsg('axc-00644',g_dlang)   #一般在制處理 wip
      LET g_stat_msg.msg5  = cl_getmsg('axc-00642',g_dlang)   #整批次處理xcck_t第二部,產生xcck_t的"在制入項成本"
      LET g_stat_msg.msg6  = cl_getmsg('axc-00645',g_dlang)   #聯產品處理 coproduct
      LET g_stat_msg.msg7  = cl_getmsg('axc-00646',g_dlang)   #重工在制處理 rework
      LET g_stat_msg.msg8  = cl_getmsg('axc-00647',g_dlang)   #拆件在制處理 disassemble
      LET g_stat_msg.msg9  = cl_getmsg('axc-00648',g_dlang)   #整批处理xccc_t第一部:产生所有的xccc_t资料及撷取"采购/杂项入库/调整入库/其他入库"的入项成本
      LET g_stat_msg.msg10 = cl_getmsg('axc-00649',g_dlang)   #整批处理xccc_t第二部:产生"在制入项成本"
      LET g_stat_msg.msg11 = cl_getmsg('axc-00650',g_dlang)   #整批次處理xcck_t第三部,产生"重工领用/销退"
      LET g_stat_msg.msg12 = cl_getmsg('axc-00651',g_dlang)   #整批处理xccc_t第三部:产生"重工领用/销退"
      LET g_stat_msg.msg13 = cl_getmsg('axc-00652',g_dlang)   #整批处理xccc_t第四部:产生"重工入库"
      LET g_stat_msg.msg14 = cl_getmsg('axc-00653',g_dlang)   #整批次處理xcck_t第五部,产生出项
      LET g_stat_msg.msg15 = cl_getmsg('axc-00654',g_dlang)   #整批处理xccc_t第五部:产生出项
      LET g_stat_msg.msg16 = cl_getmsg('axc-00655',g_dlang)   #写正式TABLE
      
   END IF
   
   MESSAGE "set_xcck_1"
   #xcck_t的整批处理-1 :产生本期所有的xcck_t,除了"在制入库"外的入项成本全部收集好
   IF g_bgjob <> "Y" THEN      
      #170617-00245#1 add(s)
      LET i = 60
      LET l_str = g_stat_msg.msg3
      LET l_str2 = l_str
      WHILE l_str2.getLength()>60
         LET l_str1 = l_str.subString(1,i)
         LET l_str2 = l_str.subString(i+1,l_str.getLength())
         LET l_str = l_str1,'\n',l_str2
         LET i = i+60+2   #加上\n的两个字符
      END WHILE  
      CALL cl_progress_no_window_ing(l_str)
      #170617-00245#1 add(e)
      #CALL cl_progress_no_window_ing(g_stat_msg.msg3)   #170617-00245#1 mark
   END IF    
   
   
   CALL s_axcp500_avg1_set_xcck_1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   IF cl_db_generate_analyze("xcck_tmp") THEN END IF #191126-00022#1 add
   
   MESSAGE "set_xccc_1"
   #xccc_t的整批处理-1 :产生本期所有的xccc_t,201/211/213/217 入项成本全部收集好
   IF g_bgjob <> "Y" THEN      
      #170617-00245#1 add(s)
      LET i = 60
      LET l_str = g_stat_msg.msg9
      LET l_str2 = l_str
      WHILE l_str2.getLength()>60
         LET l_str1 = l_str.subString(1,i)
         LET l_str2 = l_str.subString(i+1,l_str.getLength())
         LET l_str = l_str1,'\n',l_str2
         LET i = i+60+2   #加上\n的两个字符
      END WHILE  
      CALL cl_progress_no_window_ing(l_str)
      #170617-00245#1 add(e)
      #CALL cl_progress_no_window_ing(g_stat_msg.msg9)   #170617-00245#1 mark
   END IF
   CALL s_axcp500_avg1_set_xccc_1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   IF g_sys_6021 = 'Y' THEN　#add zhangllc 160526 SBS1
      MESSAGE "set_xccq_1"
      #add zhangllc 151215 --begin
      CALL s_axcp500_avg1_set_xccq_1('1')
           RETURNING l_success
      IF NOT l_success THEN
         RETURN r_success
      END IF
      #add zhangllc 151215 --end
   END IF 　#add zhangllc 160526 SBS1
   
   MESSAGE "avg1_wip_part1"
   #一般在制前置处理
   CALL s_axcp500_avg1_wip_part1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF

   MESSAGE "avg1_repeat_wip_part1"
   #重复性工单前置处理
   CALL s_axcp500_avg1_repeat_wip_part1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF


   MESSAGE "level~"
   #主运算逻辑
   DISPLAY "主运算逻辑 START :",cl_get_current()  #201216-00043#1 add
   FOREACH s_axcp500_avg1_cs1 INTO l_xcbb006
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH s_axcp500_avg1_cs1"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CONTINUE FOREACH
      END IF

      IF cl_null(l_xcbb006) THEN
         CONTINUE FOREACH
      END IF
      
      #161124-00016#1-add-s
      IF cl_db_generate_analyze("xcce_tmp") THEN END IF
      IF cl_db_generate_analyze("xccd_tmp") THEN END IF
      #161124-00016#1-add-e
      
      IF l_xcbb006 <> '99' THEN
         #一般在制处理
#        IF g_bgjob <> "Y" THEN      
#           LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg4 CLIPPED
#           CALL cl_progress_no_window_ing(g_mesg)
#        END IF
         MESSAGE "level~",l_xcbb006,":avg1_wip"
         CALL s_axcp500_avg1_wip(l_xcbb006,'1')
              RETURNING l_success
         IF NOT l_success THEN
         
         END IF   
                   
         #重复性生产
         MESSAGE "level~",l_xcbb006,":repeat_wip"
         CALL s_axcp500_avg1_repeat_wip(l_xcbb006,'1')
              RETURNING l_success
         IF NOT l_success THEN
         
         END IF         
      END IF
      
      #xcck_t的整批处理-2:产生在制入项成本(203.委外入库 205.一般工单入库)
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg5 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str)         
         #170617-00245#1 add(e)
         #CALL cl_progress_no_window_ing(g_mesg)  #170617-00245#1 mark
      END IF  
      MESSAGE "level~",l_xcbb006,":set_xcck_2"
      CALL s_axcp500_avg1_set_xcck_2(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN
      
      END IF 
      
      IF cl_db_generate_analyze("xcck_tmp") THEN END IF  #191126-00022#1 add
      
      #xccc_t的整批处理-2 :更新203.委外入库 205.一般入库
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg10 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str)          
         #170617-00245#1 add(e)
         #CALL cl_progress_no_window_ing(g_mesg)    #170617-00245#1 mark
      END IF
      MESSAGE "level~",l_xcbb006,":set_xccc_2"
      CALL s_axcp500_avg1_set_xccc_2(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN
 
      END IF
      
      IF g_sys_6021 = 'Y' THEN　#add zhangllc 160526 SBS1
         MESSAGE "level~",l_xcbb006,":set_xccq_2"
         #add zhangllc 151215 --begin
         CALL s_axcp500_avg1_set_xccq_2(l_xcbb006,'1')
              RETURNING l_success
         #add zhangllc 151215 --end
      END IF 　#add zhangllc 160526 SBS1
         
      #180905-00006#1-----add-------s
      #xcck_t的整批处理-2_2: 215.销退
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg11 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str)          
         #170617-00245#1 add(e)
         #CALL cl_progress_no_window_ing(g_mesg)    #170617-00245#1 mark
      END IF  
      MESSAGE "level~",l_xcbb006,":set_xcck_3"
      CALL s_axcp500_avg1_set_xcck_2_2(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN
      
      END IF 
      
      IF cl_db_generate_analyze("xcck_tmp") THEN END IF  #191126-00022#1 add
      
      #xccc_t的整批处理-2_2: 215.销退
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg12 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str) 
         #170617-00245#1 add(e)         
         #CALL cl_progress_no_window_ing(g_mesg)    #170617-00245#1 mark
      END IF      
      MESSAGE "level~",l_xcbb006,":set_xccc_3"
      CALL s_axcp500_avg1_set_xccc_2_2(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN

      END IF

#190802-00007#1-s add

   #IF g_sys_6016 = 'Y' AND g_sys_6025 = '1' THEN #191202-00037#1 add #200604-00021#1 mark
   IF g_sys_6025 = '1' THEN  #200604-00021#1
      #xcck_t的整批处理-2_3: 213.當站下線
      IF g_bgjob <> "Y" THEN
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg11 CLIPPED
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE
         CALL cl_progress_no_window_ing(l_str)
      END IF
      MESSAGE "level~",l_xcbb006,":set_xcck_2_3"
      CALL s_axcp500_avg1_set_xcck_2_3(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN

      END IF
   END IF #191202-00037#1 add
      #xccc_t的整批处理-2_3: 213.當站下線
      IF g_bgjob <> "Y" THEN
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg12 CLIPPED
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE
         CALL cl_progress_no_window_ing(l_str)
      END IF
      MESSAGE "level~",l_xcbb006,":set_xccc_2_3"
      CALL s_axcp500_avg1_set_xccc_2_3(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN

      END IF
#190802-00007#1-e add

      IF g_sys_6021 = 'Y' THEN　#add zhangllc 160526 SBS1
         MESSAGE "level~",l_xcbb006,":set_xccq_3"
         #add zhangllc 151215 --begin
         CALL s_axcp500_avg1_set_xccq_2_2(l_xcbb006,'1')
              RETURNING l_success
         #add zhangllc 151215 --end
      END IF 　#add zhangllc 160526 SBS1
      #180905-00006#1-----add-------e
      
      #xcck_t的整批处理-3:产生207.重工领用 215.销退
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg11 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str)          
         #170617-00245#1 add(e)
         #CALL cl_progress_no_window_ing(g_mesg)    #170617-00245#1 mark
      END IF 
      MESSAGE "level~",l_xcbb006,":set_xcck_3"
      CALL s_axcp500_avg1_set_xcck_3(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN
      
      END IF 
      
      IF cl_db_generate_analyze("xcck_tmp") THEN END IF  #191126-00022#1 add
      
      #xccc_t的整批处理-3 :更新207.重工领出 215.销退
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg12 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str) 
         #170617-00245#1 add(e)         
         #CALL cl_progress_no_window_ing(g_mesg)    #170617-00245#1 mark
      END IF      
      MESSAGE "level~",l_xcbb006,":set_xccc_3"
      CALL s_axcp500_avg1_set_xccc_3(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN
 
      END IF
      
      IF g_sys_6021 = 'Y' THEN　#add zhangllc 160526 SBS1
         MESSAGE "level~",l_xcbb006,":set_xccq_3"
         #add zhangllc 151215 --begin
         CALL s_axcp500_avg1_set_xccq_3(l_xcbb006,'1')
              RETURNING l_success
         #add zhangllc 151215 --end
      END IF 　#add zhangllc 160526 SBS1

      
      #计算 （1）联产品  （2）重工 （3）拆件 
#     IF l_xcbb006 <> 99 THEN  #160906-00036#1
      #联产品处理
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg6 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str) 
         #170617-00245#1 add(e)         
         #CALL cl_progress_no_window_ing(g_mesg)    #170617-00245#1 mark
      END IF      
      MESSAGE "level~",l_xcbb006,":avg_coproduct"
      CALL s_axcp500_avg_coproduct(l_xcbb006,1,'N','2')
        RETURNING l_success
      IF NOT l_success THEN
            
      END IF 
      
      IF cl_db_generate_analyze("xcck_tmp") THEN END IF  #191126-00022#1 add
         
      #重工处理
#     IF g_bgjob <> "Y" THEN      
#        LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg7 CLIPPED
#        CALL cl_progress_no_window_ing(g_mesg)
#     END IF      
      MESSAGE "level~",l_xcbb006,":avg1_rework"
      CALL s_axcp500_avg1_rework(l_xcbb006,1)
        RETURNING l_success
      IF NOT l_success THEN
             
      END IF   
      
     #160923-00003#1-s-mark 此段mark，移至做完重工工單後，再做折件工單
     ##拆件处理
     #IF g_bgjob <> "Y" THEN      
     #   LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg8 CLIPPED
     #   CALL cl_progress_no_window_ing(g_mesg)
     #END IF      
     #MESSAGE "level~",l_xcbb006,":avg_disassemble"
     #CALL s_axcp500_avg_disassemble(l_xcbb006,1)
     #  RETURNING l_success         
     #IF NOT l_success THEN
     #       
     #END IF   
     #160923-00003#1-e-mark
      #xccc_t的整批处理-4 :产生"209.重工入库"
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg13 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str)          
         #170617-00245#1 add(e)
         #CALL cl_progress_no_window_ing(g_mesg)   #170617-00245#1 mark
      END IF      
      MESSAGE "level~",l_xcbb006,":set_xccc_4"
      CALL s_axcp500_avg1_set_xccc_4(l_xcbb006,'1')
        RETURNING l_success
      IF NOT l_success THEN
 
      END IF
      
      #170612-00014#1---add---s
      #在抓xcck_t算拆件投入前，拆件工單的xcck202的金额要重新根据xccc280*数量重新计算
      #第六區，ent=1111、site=NJQC9001
      #同階的工單算法，一般工單 -> 重工工單 -> 拆件工單，所以拆件工單的投入金額，應該是axcq500期初+本期入+重工領+重工入的單價去算出投入金額，但現在是用一般入庫的金額去做計算。
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xcck_tmp ",
                  "      USING xccc_tmp ",
                  "          ON ( xcckent = xcccent ",
                  "         AND   xcckld  = xcccld  ",
                  "         AND   xcck001 = xccc001 ",
                  "         AND   xcck002 = xccc002 ",
                  "         AND   xcck003 = xccc003 ",
                  "         AND   xcck004 = xccc004 ",
                  "         AND   xcck005 = xccc005 ",
                  "         AND   xcck010 = xccc006 ",
                  "         AND   xcck011 = xccc007 ",
                  "         AND   xcck017 = xccc008 ",
                  "         AND   xcck055 = '207'  "  
#200212-00020#1 mark -S
#      IF g_sys_6016 = 'Y' THEN
#         LET g_sql = g_sql CLIPPED,
#                  "   AND xcck020 IN ('302','303','501','114','107') "               #生产发料/生产退料/盘点 
#      ELSE
#200212-00020#1 mark -E
         LET g_sql = g_sql CLIPPED,
                  "   AND xcck020 IN ('302','303','115','501','114','107') "         #生产发料/生产退料/当站下线/盘点 
#      END IF  #200212-00020#1 mark
      LET g_sql = g_sql CLIPPED,
                  "         AND   xcck047 IN (SELECT sfaadocno FROM sfaa_t WHERE sfaaent = ",g_enterprise," AND sfaa003 ='3' )",
#                  "         AND  (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",l_xcbb006,") )", #190411-00017#1 B mark
                  "         AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",l_xcbb006,"))",   #190411-00017#1 B mod
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xcck202  = nvl(xcck201 * xccc280 ,0),  ",
                  "                xcck202a = nvl(xcck201 * xccc280a,0),  ",
                  "                xcck202b = nvl(xcck201 * xccc280b,0),  ",
                  "                xcck202c = nvl(xcck201 * xccc280c,0),  ",
                  "                xcck202d = nvl(xcck201 * xccc280d,0),  ",
                  "                xcck202e = nvl(xcck201 * xccc280e,0),  ",
                  "                xcck202f = nvl(xcck201 * xccc280f,0),  ",
                  "                xcck202g = nvl(xcck201 * xccc280g,0),  ",
                  "                xcck202h = nvl(xcck201 * xccc280h,0)  "
                  #190115-00064#1---add---s
                 ,"              , xcck282  = nvl(xccc280 ,0),  ",
                  "                xcck282a = nvl(xccc280a,0),  ",
                  "                xcck282b = nvl(xccc280b,0),  ",
                  "                xcck282c = nvl(xccc280c,0),  ",
                  "                xcck282d = nvl(xccc280d,0),  ",
                  "                xcck282e = nvl(xccc280e,0),  ",
                  "                xcck282f = nvl(xccc280f,0),  ",
                  "                xcck282g = nvl(xccc280g,0),  ",
                  "                xcck282h = nvl(xccc280h,0)  "
                  #190115-00064#1---add---e
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_p2 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_p2"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_p2')         
      END IF
      
      EXECUTE s_axcp500_avg1_p2 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_p2"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_p2')         
      END IF   
      #170612-00014#1---add---e
      #170615-00011#1---add---s
      #延續170612-00014問題,處理xcck_t完須做取位並做xcck202和xcck202a~h的尾差處理
      #xcck202a~xcck202h进行取位
      CASE g_round_type
           WHEN '1'   #四舍五入
                LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                            "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), ",
                            "                    xcck202e = round(xcck202e,? ), xcck202f = round(xcck202f,? ), ",
                            "                    xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? )  ",
#                            " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",l_xcbb006,")"    #190411-00017#1 B mark
                            " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",l_xcbb006,")"   #190411-00017#1 B mod
      
                            
           WHEN '3'   #无条件截位
                LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                            "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), ",
                            "                    xcck202e = trunc(xcck202e,? ), xcck202f = trunc(xcck202f,? ), ",
                            "                    xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? )  ",
#                            " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",l_xcbb006,")"  #190411-00017#1 B mark
                            " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",l_xcbb006,")"   #190411-00017#1 B mod
                            
           #180802-00015#1 add-S
           WHEN '2'  #四舍六入五成双          
           #201119-00005#1 add--s           
               LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                          THEN ROUND(xcck202,?) ",
                            "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                            "                                                     END) ",
                            "                                      ELSE ROUND(xcck202,?)",
                            "                                END ),",
                            "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                         THEN ROUND(xcck202a,?) ",
                            "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                            "                                                    END) ",
                            "                                     ELSE ROUND(xcck202a,?)",
                            "                                END ),",
                            "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                         THEN ROUND(xcck202b,?) ",
                            "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                            "                                                    END) ",
                            "                                     ELSE ROUND(xcck202b,?)",
                            "                                END ),",
                            "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                         THEN ROUND(xcck202c,?) ",
                            "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                            "                                                    END) ",
                            "                                     ELSE ROUND(xcck202c,?)",
                            "                                END ),",
                            "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                         THEN ROUND(xcck202d,?) ",
                            "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                            "                                                    END) ",
                            "                                     ELSE ROUND(xcck202d,?)",
                            "                                END ),",
                            "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                         THEN ROUND(xcck202e,?) ",
                            "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                            "                                                    END) ",
                            "                                     ELSE ROUND(xcck202e,?)",
                            "                                END ),",
                            "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                         THEN ROUND(xcck202f,?) ",
                            "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                            "                                                    END) ",
                            "                                     ELSE ROUND(xcck202f,?)",
                            "                                END ),",
                            "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                         THEN ROUND(xcck202g,?) ",
                            "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                            "                                                    END) ",
                            "                                     ELSE ROUND(xcck202g,?)",
                            "                                END ),",
                            "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                            "                                                         THEN ROUND(xcck202h,?) ",
                            "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                            "                                                    END) ",
                            "                                     ELSE ROUND(xcck202h,?)",
                            "                                END )",  #190411-00017#1 B add ,
                            " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",l_xcbb006,")"   #190411-00017#1 B mod 
           #201119-00005#1 add--e            
           WHEN '4'  #无条件进位
                LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                            "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                            "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                            "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                            "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                            "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                            "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                            "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                            "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?) ", #190411-00017#1 B add ,
                            " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",l_xcbb006,")"   #190411-00017#1 B mod
           #180802-00015#1 add-E      
      END CASE                         
      PREPARE s_axcp500_avg1_p3 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_p3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_p3')         
      END IF
      
      #180802-00015#1 mark-S
      #EXECUTE s_axcp500_avg1_p3 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
      #                                g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
      #                                g_curr[1].digit2
      #180802-00015#1 mark-E
      #180802-00015#1 add-S
      CASE g_round_type
         WHEN '1'
            EXECUTE s_axcp500_avg1_p3 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2
         WHEN '2'
            EXECUTE s_axcp500_avg1_p3 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2
         WHEN '3'
            EXECUTE s_axcp500_avg1_p3 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                            g_curr[1].digit2
         WHEN '4'
            EXECUTE s_axcp500_avg1_p3 USING g_curr[1].digit2,g_curr[1].digit2,   #xcck202
                                            g_curr[1].digit2,g_curr[1].digit2,   #xcck202a
                                            g_curr[1].digit2,g_curr[1].digit2,   #xcck202b
                                            g_curr[1].digit2,g_curr[1].digit2,   #xcck202c
                                            g_curr[1].digit2,g_curr[1].digit2,   #xcck202d
                                            g_curr[1].digit2,g_curr[1].digit2,   #xcck202e
                                            g_curr[1].digit2,g_curr[1].digit2,   #xcck202f
                                            g_curr[1].digit2,g_curr[1].digit2,   #xcck202g
                                            g_curr[1].digit2,g_curr[1].digit2    #xcck202h
      END CASE
      #180802-00015#1 add-E
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_p3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_p3')         
      END IF      
                     
      #修正xcck202的值-先修至xcck202a,若xcck202a为零,则修正xcck202b......
      UPDATE xcck_tmp SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)   
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE imaa001=xcck010
                        AND xcbb006 = l_xcbb006)
         AND xcck202a >= xcck202b AND xcck202a >= xcck202c
         AND xcck202a >= xcck202d AND xcck202a >= xcck202e
         AND xcck202a >= xcck202f AND xcck202a >= xcck202g
         AND xcck202a >= xcck202h    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')         
      END IF   
         
      UPDATE xcck_tmp SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE imaa001=xcck010
                        AND xcbb006 = l_xcbb006) 
         AND xcck202b >= xcck202c
         AND xcck202b >= xcck202d AND xcck202b >= xcck202e
         AND xcck202b >= xcck202f AND xcck202b >= xcck202g
         AND xcck202b >= xcck202h    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')         
      END IF   
      UPDATE xcck_tmp SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0 #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE imaa001=xcck010 
                        AND xcbb006 = l_xcbb006) 
         AND xcck202c >= xcck202d AND xcck202c >= xcck202e
         AND xcck202c >= xcck202f AND xcck202c >= xcck202g
         AND xcck202c >= xcck202h  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
      END IF   
      UPDATE xcck_tmp SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE imaa001=xcck010
                        AND xcbb006 = l_xcbb006) 
         AND xcck202d >= xcck202e
         AND xcck202d >= xcck202f AND xcck202d >= xcck202g
         AND xcck202d >= xcck202h      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
      END IF   
      UPDATE xcck_tmp SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h) <> 0 #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE imaa001=xcck010 
                        AND xcbb006 = l_xcbb006) 
         AND xcck202e >= xcck202f AND xcck202e >= xcck202g
         AND xcck202e >= xcck202h    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         
      END IF   
      UPDATE xcck_tmp SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE imaa001=xcck010 
                        AND xcbb006 = l_xcbb006) 
         AND xcck202f >= xcck202g
         AND xcck202f >= xcck202h   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')         
      END IF   
      UPDATE xcck_tmp SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE imaa001=xcck010
                        AND xcbb006 = l_xcbb006) 
         AND xcck202g >= xcck202h      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')         
      END IF   
      UPDATE xcck_tmp SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g) <> 0 #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE imaa001=xcck010 
                        AND xcbb006 = l_xcbb006)       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')         
      END IF   
      #170615-00011#1---add---e
      #171107-00005#1---add---s
      #207.重工领出
      #PGS(D)---start---
      LET g_sql = " MERGE INTO xccc_tmp ",
                  "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
                  "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
                  "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
                  "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
                  "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
                  "                     SUM(xcck202h*xcck009) xcck202h ",
                  "                FROM xcck_tmp     ",                         
                  "                WHERE xcck055 = '207' ",
                  "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
                  "                         xcck004,xcck005,xcck010,xcck011,xcck017",
                  "                ) b ",
                  "          ON ( xcccent = b.xcckent  ",
                  "         AND   xcccld  = b.xcckld   ",
                  "         AND   xccc001 = b.xcck001  ",
                  "         AND   xccc002 = b.xcck002  ",
                  "         AND   xccc003 = b.xcck003  ",
                  "         AND   xccc004 = b.xcck004  ",
                  "         AND   xccc005 = b.xcck005  ",
                  "         AND   xccc006 = b.xcck010  ",
                  "         AND   xccc007 = b.xcck011  ",
                  "         AND   xccc008 = b.xcck017  ",
                  "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",l_xcbb006,") )", 
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xccc207  = nvl(b.xcck201 ,0) ,  ",
                  "                xccc208  = nvl(b.xcck202 ,0) ,  ",
                  "                xccc208a = nvl(b.xcck202a,0) ,  ",
                  "                xccc208b = nvl(b.xcck202b,0) ,  ",
                  "                xccc208c = nvl(b.xcck202c,0) ,  ",
                  "                xccc208d = nvl(b.xcck202d,0) ,  ",
                  "                xccc208e = nvl(b.xcck202e,0) ,  ",
                  "                xccc208f = nvl(b.xcck202f,0) ,  ",
                  "                xccc208g = nvl(b.xcck202g,0) ,  ",
                  "                xccc208h = nvl(b.xcck202h,0)    "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_p4 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_p4"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_p4')         
      END IF     
      EXECUTE s_axcp500_avg1_p4 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_p4"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_p4')         
      END IF     
      #171107-00005#1---add---e 
      #160923-00003#1-s-add 
      #拆件处理
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg8 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str)          
         #170617-00245#1 add(e)
         #CALL cl_progress_no_window_ing(g_mesg)   #170617-00245#1 mark
      END IF      
      MESSAGE "level~",l_xcbb006,":avg_disassemble"
      CALL s_axcp500_avg_disassemble(l_xcbb006,1)
        RETURNING l_success         
      IF NOT l_success THEN
             
      END IF   
     #160923-00003#1-e-add         
      IF g_sys_6021 = 'Y' THEN　#add zhangllc 160526 SBS1
         #add zhangllc 151215 --begin
         MESSAGE "level~",l_xcbb006,":set_xccq_4"
         CALL s_axcp500_avg1_set_xccq_4(l_xcbb006,'1')
           RETURNING l_success
         #add zhangllc 151215 --end
      END IF 　#add zhangllc 160526 SBS1
      
     
     #161004-00022#7-s-mark
     ##若本期没有异动,则删除
     #MESSAGE "level~",l_xcbb006,":wip_del"
     #CALL s_axcp500_avg1_wip_del(l_xcbb006,'1')
     #  RETURNING l_success   
     #161004-00022#7-s-mark
#     END IF  #160906-00036#1
      #200202-00005#1---add---s
      CALL s_axcp500_avg1_wip_del(l_xcbb006,'1')
        RETURNING l_success 
      #200202-00005#1---add---e
      
      #xcck_t的整批处理-5:产生所有出项
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg14 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str)
         #170617-00245#1 add(e)         
         #CALL cl_progress_no_window_ing(g_mesg)   #170617-00245#1 mark
      END IF
      MESSAGE "level~",l_xcbb006,":set_xcck_5"
      CALL s_axcp500_avg1_set_xcck_5(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN
      
      END IF 
      
      #xccc_t的整批处理-5 :产生所有出项
      IF g_bgjob <> "Y" THEN      
         LET g_mesg = g_stat_msg.msg2 CLIPPED,l_xcbb006 USING "<<&",g_stat_msg.msg15 CLIPPED
         #170617-00245#1 add(s)
         LET i = 60
         LET l_str = g_mesg
         LET l_str2 = l_str
         WHILE l_str2.getLength()>60 
            LET l_str1 = l_str.subString(1,i)
            LET l_str2 = l_str.subString(i+1,l_str.getLength())
            LET l_str = l_str1,'\n',l_str2
            LET i = i+60+2   #加上\n的两个字符
         END WHILE  
         CALL cl_progress_no_window_ing(l_str)          
         #170617-00245#1 add(e)
         #CALL cl_progress_no_window_ing(g_mesg)    #170617-00245#1 mark
      END IF
      MESSAGE "level~",l_xcbb006,":set_xccc_5"
      CALL s_axcp500_avg1_set_xccc_5(l_xcbb006,'1')
           RETURNING l_success
      IF NOT l_success THEN
 
      END IF
      
      IF g_sys_6021 = 'Y' THEN　#add zhangllc 160526 SBS1
         MESSAGE "level~",l_xcbb006,":set_xccq_5"
         #add zhangllc 151215 --begin
         CALL s_axcp500_avg1_set_xccq_5(l_xcbb006,'1')
              RETURNING l_success
         #add zhangllc 151215 --end
      END IF 　#add zhangllc 160526 SBS1
                  
##wujie 160522 --begin 尝试改进效能，删掉已经在计算中被用过的工单，减少对sfaa_tmp操作的耗时
#      DELETE FROM sfaa_tmp WHERE EXISTS (SELECT 1 FROM xccd_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno )
##wujie 160522 --end
   END FOREACH
   
   
   #181213-00042#1---add---s
   #结余调整
   UPDATE xccc_tmp SET xccc903  = (xccc102 + xccc202 + xccc204 + xccc206 + xccc208 + xccc210 + xccc212 + xccc214 +
                                  xccc216 + xccc218 + xccc302 + xccc304 + xccc306 + xccc308 + xccc310 + xccc312 +
                                  xccc314 ) * -1 + xccc902 ,
                       xccc903a = (xccc102a + xccc202a + xccc204a + xccc206a + xccc208a + xccc210a + xccc212a + xccc214a +
                                  xccc216a + xccc218a + xccc302a + xccc304a + xccc306a + xccc308a + xccc310a + xccc312a +
                                  xccc314a ) * -1 + xccc902a ,
                       xccc903b = (xccc102b + xccc202b + xccc204b + xccc206b + xccc208b + xccc210b + xccc212b + xccc214b +
                                  xccc216b + xccc218b + xccc302b + xccc304b + xccc306b + xccc308b + xccc310b + xccc312b +
                                  xccc314b) * -1  + xccc902b ,
                       xccc903c = (xccc102c + xccc202c + xccc204c + xccc206c + xccc208c + xccc210c + xccc212c + xccc214c +
                                  xccc216c + xccc218c + xccc302c + xccc304c + xccc306c + xccc308c + xccc310c + xccc312c +
                                  xccc314c) * -1  + xccc902c ,
                       xccc903d = (xccc102d + xccc202d + xccc204d + xccc206d + xccc208d + xccc210d + xccc212d + xccc214d +
                                  xccc216d + xccc218d + xccc302d + xccc304d + xccc306d + xccc308d + xccc310d + xccc312d +
                                  xccc314d) * -1  + xccc902d ,
                       xccc903e = (xccc102e + xccc202e + xccc204e + xccc206e + xccc208e + xccc210e + xccc212e + xccc214e +
                                  xccc216e + xccc218e + xccc302e + xccc304e + xccc306e + xccc308e + xccc310e + xccc312e +
                                  xccc314e) * -1  + xccc902e ,
                       xccc903f = (xccc102f + xccc202f + xccc204f + xccc206f + xccc208f + xccc210f + xccc212f + xccc214f +
                                  xccc216f + xccc218f + xccc302f + xccc304f + xccc306f + xccc308f + xccc310f + xccc312f +
                                  xccc314f) * -1  + xccc902f ,
                       xccc903g = (xccc102g + xccc202g + xccc204g + xccc206g + xccc208g + xccc210g + xccc212g + xccc214g +
                                  xccc216g + xccc218g + xccc302g + xccc304g + xccc306g + xccc308g + xccc310g + xccc312g +
                                  xccc314g) * -1  + xccc902g ,
                       xccc903h = (xccc102h + xccc202h + xccc204h + xccc206h + xccc208h + xccc210h + xccc212h + xccc214h +
                                  xccc216h + xccc218h + xccc302h + xccc304h + xccc306h + xccc308h + xccc310h + xccc312h +
                                  xccc314h) * -1  + xccc902h                                       
   #更新xccc903的值
   UPDATE xccc_tmp SET xccc903 = xccc903a + xccc903b + xccc903c + xccc903d + xccc903e + xccc903f + xccc903g + xccc903h ,
                       xccctime = l_date2                                  
   #181213-00042#1---add---e
   #190411-00017#1 D add-S
   #依參數判斷結存調整是否產生
   #為Y：原程序邏輯
   #為N：期末數量不為零的 結存調整不產生, 轉到下期期初
   #     期末數量為零的結存調整,才依標準產生
   LET l_fin_9024 = cl_get_para(g_enterprise,g_comp,'S-FIN-9024')
   IF l_fin_9024 = 'N' THEN   
      #期末数量不为0
      UPDATE xccc_tmp SET xccc902  = xccc902 - xccc903 ,
                          xccc902a = xccc902a - xccc903a ,
                          xccc902b = xccc902b - xccc903b ,
                          xccc902c = xccc902c - xccc903c ,
                          xccc902d = xccc902d - xccc903d ,
                          xccc902e = xccc902e - xccc903e ,
                          xccc902f = xccc902f - xccc903f ,
                          xccc902g = xccc902g - xccc903g ,
                          xccc902h = xccc902h - xccc903h ,
                          xccc903 = 0,
                          xccc903a = 0,
                          xccc903b = 0,
                          xccc903c = 0,
                          xccc903d = 0,
                          xccc903e = 0,
                          xccc903f = 0,
                          xccc903g = 0,
                          xccc903h = 0
       WHERE xccc901 <> 0                    
   END IF
   #190411-00017#1 D add-E
   
   IF g_sys_6013 = 'Y' THEN #180422-00001#1 add
      #add zhangllc SBS9--s 增加存储，xccd主件的特征，若工单只有一个产出的，可写进去，若有多个的，写MISC
      #将只有一笔的sfac006，更新到xccd008中
      UPDATE xccd_tmp
         SET xccd008 =  (SELECT sfac006 FROM ( SELECT sfacent,sfacdocno, sfacseq,sfac001,sfac006,(SELECT count(*) FROM sfac_t b WHERE a.sfacent = b.sfacent AND a.sfacdocno=b.sfacdocno) cnt
                                                 FROM sfac_t a
                                                WHERE sfacent=g_enterprise
                                              ) c
                          WHERE c.sfacent = xccdent AND c.sfacdocno=xccd006 AND c.cnt = 1
                         )
                        #------#180411-00001#1 add str 
                          WHERE EXISTS (SELECT 1  FROM ( SELECT sfacent,sfacdocno, sfacseq,sfac001,sfac006,(SELECT count(*) FROM sfac_t b WHERE a.sfacent = b.sfacent AND a.sfacdocno=b.sfacdocno) cnt
                                                 FROM sfac_t a
                                                WHERE sfacent=g_enterprise
                                              ) c
                                WHERE c.sfacent = xccdent AND c.sfacdocno=xccd006 AND c.cnt = 1)
                        #------#180411-00001#1 add end 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xccd_tmp SET xccd008=sfac006"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd008=sfac006')         
      END IF
  END IF #180422-00001#1 add      
  #161215-00011#3-s-mark 
  ##将有多笔的,更新xccd008值为'MULT'
  #UPDATE xccd_tmp
  #   SET xccd008 = 'MULT'
  # WHERE EXISTS (SELECT  1 FROM ( SELECT sfacent,sfacdocno,sfacseq,sfac001,sfac006,(SELECT count(*) FROM sfac_t b WHERE a.sfacent = b.sfacent AND a.sfacdocno=b.sfacdocno) cnt
  #                                  FROM sfac_t a
  #                                 WHERE sfacent=g_enterprise
  #                               ) c
  #                WHERE c.sfacent = xccdent AND c.sfacdocno=xccd006 AND c.cnt > 1
  #               )
  #IF SQLCA.sqlcode THEN
  #   INITIALIZE g_errparam TO NULL
  #   LET g_errparam.code   = SQLCA.sqlcode
  #   LET g_errparam.extend = "UPDATE xccd_tmp SET xccd008=MULT"
  #   LET g_errparam.popup  = TRUE
  #   CALL cl_err()
  #   CALL s_axcp500_ins_error('','','','','','','','','','','',
  #                            '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd008=MULT')         
  #END IF
  ##add zhangllc SBS9--e
  #161215-00011#3-e-mark 
   MESSAGE "deal diff"
   #若工单结案,则xccd901期末结存数量也要转出至xccd301本期转出数量,成本已经转出,但是数量没有转出
   UPDATE xccd_tmp SET xccd303 = xccd303 - xccd901  #差异转出数量
    WHERE EXISTS ( SELECT 1 FROM sfaa_tmp
                    WHERE xccdent = sfaaent  #add 150916
                      AND xccd006 = sfaadocno
                      AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck282"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd303 = xccd303 - xccd901')         
   END IF               
                      
   UPDATE xccd_tmp SET xccd901 = 0
    WHERE EXISTS ( SELECT 1 FROM sfaa_tmp
                    WHERE xccdent = sfaaent  #add 150916
                      AND xccd006 = sfaadocno
                      AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd901 = 0')         
 
   END IF                         

   #add zhangllc 160224 -s xcck055=2011,2012统一更新为201
   UPDATE xcck_tmp SET xcck055  = '201' 
    WHERE xcck055 in ('2011','2012')
   #add zhangllc 160224 -e
   
   #写正式TABLE
   IF g_bgjob <> "Y" THEN      
      LET g_mesg = g_stat_msg.msg16 CLIPPED
      CALL cl_progress_no_window_ing(g_mesg)
   END IF  
   
   MESSAGE "ins xcck_t"
   #将xcck_tmp 写入xcck
   LET l_xcckcrtdt = cl_get_current() #170825-00011#1 add
   #mod zhangllc 151214 --begin
   #INSERT INTO xcck_t SELECT * FROM xcck_tmp
   INSERT INTO xcck_t(xcckent  ,xccksite ,xcckcomp ,xcckld   ,xcck001  ,xcck002  ,xcck003  ,xcck004  ,xcck005  ,
                      xcck006  ,xcck007  ,xcck008  ,xcck009  ,xcck010  ,xcck011  ,xcck012  ,xcck013  ,xcck014  ,xcck015  ,
                      xcck016  ,xcck017  ,xcck020  ,xcck021  ,xcck022  ,xcck023  ,xcck024  ,xcck025  ,xcck026  ,xcck027  ,
                      xcck028  ,xcck029  ,xcck030  ,xcck031  ,xcck032  ,xcck033  ,xcck034  ,xcck040  ,xcck041  ,xcck042  ,
                      xcck043  ,xcck044  ,xcck045  ,xcck046  ,xcck047  ,xcck048  ,xcck049  ,xcck050  ,xcck051  ,xcck055  ,
                      xcck201  ,xcck202  ,xcck202a ,xcck202b ,xcck202c ,xcck202d ,xcck202e ,xcck202f ,xcck202g ,xcck202h ,
                      xcck282  ,xcck282a ,xcck282b ,xcck282c ,xcck282d ,xcck282e ,xcck282f ,xcck282g ,xcck282h ,
                      xcck301  ,xcck302  ,xcck302a ,xcck302b ,xcck302c ,xcck302d ,xcck302e ,xcck302f ,xcck302g ,xcck302h ,
                      xcck901  ,xcck902  ,xcck902a ,xcck902b ,xcck902c ,xcck902d ,xcck902e ,xcck902f ,xcck902g ,xcck902h ,
                      xcck980  ,xcck980a ,xcck980b ,xcck980c ,xcck980d ,xcck980e ,xcck980f ,xcck980g ,xcck980h ,
                      xcck903  ,xcck903a ,xcck903b ,xcck903c ,xcck903d ,xcck903e ,xcck903f ,xcck903g ,xcck903h ,
                      xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,xcckcrtdt,xcckmodid,xcckmoddt,xcckstus ,
                      xcckud001,xcckud002,xcckud003,xcckud004,xcckud005,xcckud006,xcckud007,xcckud008,xcckud009,xcckud010,
                      xcckud011,xcckud012,xcckud013,xcckud014,xcckud015,xcckud016,xcckud017,xcckud018,xcckud019,xcckud020,
                      xcckud021,xcckud022,xcckud023,xcckud024,xcckud025,xcckud026,xcckud027,xcckud028,xcckud029,xcckud030 )
     SELECT xcckent  ,xccksite ,xcckcomp ,xcckld   ,xcck001  ,xcck002  ,xcck003  ,xcck004  ,xcck005  ,
            xcck006  ,xcck007  ,xcck008  ,xcck009  ,xcck010  ,xcck011  ,xcck012  ,xcck013  ,xcck014  ,xcck015  ,
            xcck016  ,xcck017  ,xcck020  ,xcck021  ,xcck022  ,xcck023  ,xcck024  ,xcck025  ,xcck026  ,xcck027  ,
            xcck028  ,xcck029  ,xcck030  ,xcck031  ,xcck032  ,xcck033  ,xcck034  ,xcck040  ,xcck041  ,xcck042  ,
            xcck043  ,xcck044  ,xcck045  ,xcck046  ,xcck047  ,xcck048  ,xcck049  ,xcck050  ,xcck051  ,xcck055  ,
            xcck201  ,xcck202  ,xcck202a ,xcck202b ,xcck202c ,xcck202d ,xcck202e ,xcck202f ,xcck202g ,xcck202h ,
            xcck282  ,xcck282a ,xcck282b ,xcck282c ,xcck282d ,xcck282e ,xcck282f ,xcck282g ,xcck282h ,
            xcck301  ,xcck302  ,xcck302a ,xcck302b ,xcck302c ,xcck302d ,xcck302e ,xcck302f ,xcck302g ,xcck302h ,
            xcck901  ,xcck902  ,xcck902a ,xcck902b ,xcck902c ,xcck902d ,xcck902e ,xcck902f ,xcck902g ,xcck902h ,
            xcck980  ,xcck980a ,xcck980b ,xcck980c ,xcck980d ,xcck980e ,xcck980f ,xcck980g ,xcck980h ,
            xcck903  ,xcck903a ,xcck903b ,xcck903c ,xcck903d ,xcck903e ,xcck903f ,xcck903g ,xcck903h ,
            #xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,xcckcrtdt,xcckmodid,xcckmoddt,xcckstus ,  #170825-00011#1 mark
            xcckownid,xcckowndp,xcckcrtid,xcckcrtdp,l_xcckcrtdt,xcckmodid,xcckmoddt,xcckstus , #170825-00011#1 add
            xcckud001,xcckud002,xcckud003,xcckud004,xcckud005,xcckud006,xcckud007,xcckud008,xcckud009,xcckud010,
            xcckud011,xcckud012,xcckud013,xcckud014,xcckud015,xcckud016,xcckud017,xcckud018,xcckud019,xcckud020,
            xcckud021,xcckud022,xcckud023,xcckud024,xcckud025,xcckud026,xcckud027,xcckud028,xcckud029,xcckud030
       FROM xcck_tmp
   #mod zhangllc 151214 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xcck_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','','',
                               SQLCA.sqlcode,'','ins xcck')      

 
   END IF
   
   IF g_sys_6021 = 'Y' THEN　#add zhangllc 160526 SBS1
      MESSAGE "ins xccq_t"
      #add zhangllc 151215 --begin
      #将xccq_tmp 写入xccq
#      INSERT INTO xccq_t SELECT * FROM xccq_tmp  #161124-00048#20 mark
      #161124-00048#20 add(s)
      INSERT INTO xccq_t(xccqent,xccqcomp,xccqld,xccqsite,xccq001,xccq002,xccq003,xccq004,xccq005,xccq006,xccq007,
                         xccq008,xccq009,xccq010,xccq011,xccq012,xccq101,xccq102,xccq102a,xccq102b,xccq102c,xccq102d,
                         xccq102e,xccq102f,xccq102g,xccq102h,xccq201,xccq202,xccq202a,xccq202b,xccq202c,xccq202d,xccq202e,
                         xccq202f,xccq202g,xccq202h,xccq203,xccq204,xccq204a,xccq204b,xccq204c,xccq204d,xccq204e,xccq204f,
                         xccq204g,xccq204h,xccq205,xccq206,xccq206a,xccq206b,xccq206c,xccq206d,xccq206e,xccq206f,xccq206g,
                         xccq206h,xccq207,xccq208,xccq208a,xccq208b,xccq208c,xccq208d,xccq208e,xccq208f,xccq208g,xccq208h,
                         xccq209,xccq210,xccq210a,xccq210b,xccq210c,xccq210d,xccq210e,xccq210f,xccq210g,xccq210h,xccq211,
                         xccq212,xccq212a,xccq212b,xccq212c,xccq212d,xccq212e,xccq212f,xccq212g,xccq212h,xccq213,xccq214,
                         xccq214a,xccq214b,xccq214c,xccq214d,xccq214e,xccq214f,xccq214g,xccq214h,xccq215,xccq216,xccq216a,
                         xccq216b,xccq216c,xccq216d,xccq216e,xccq216f,xccq216g,xccq216h,xccq217,xccq218,xccq218a,xccq218b,
                         xccq218c,xccq218d,xccq218e,xccq218f,xccq218g,xccq218h,xccq280,xccq280a,xccq280b,xccq280c,xccq280d,
                         xccq280e,xccq280f,xccq280g,xccq280h,xccq301,xccq302,xccq302a,xccq302b,xccq302c,xccq302d,xccq302e,
                         xccq302f,xccq302g,xccq302h,xccq303,xccq304,xccq304a,xccq304b,xccq304c,xccq304d,xccq304e,xccq304f,
                         xccq304g,xccq304h,xccq305,xccq306,xccq306a,xccq306b,xccq306c,xccq306d,xccq306e,xccq306f,xccq306g,
                         xccq306h,xccq307,xccq308,xccq308a,xccq308b,xccq308c,xccq308d,xccq308e,xccq308f,xccq308g,xccq308h,
                         xccq309,xccq310,xccq310a,xccq310b,xccq310c,xccq310d,xccq310e,xccq310f,xccq310g,xccq310h,xccq311,
                         xccq312,xccq312a,xccq312b,xccq312c,xccq312d,xccq312e,xccq312f,xccq312g,xccq312h,xccq313,xccq314,
                         xccq314a,xccq314b,xccq314c,xccq314d,xccq314e,xccq314f,xccq314g,xccq314h,xccq401,xccq402,xccq901,
                         xccq902,xccq902a,xccq902b,xccq902c,xccq902d,xccq902e,xccq902f,xccq902g,xccq902h,xccq903,xccq903a,
                         xccq903b,xccq903c,xccq903d,xccq903e,xccq903f,xccq903g,xccq903h,xccqtime) 
                  SELECT xccqent,xccqcomp,xccqld,xccqsite,xccq001,xccq002,xccq003,xccq004,xccq005,xccq006,xccq007,
                         xccq008,xccq009,xccq010,xccq011,xccq012,xccq101,xccq102,xccq102a,xccq102b,xccq102c,xccq102d,
                         xccq102e,xccq102f,xccq102g,xccq102h,xccq201,xccq202,xccq202a,xccq202b,xccq202c,xccq202d,xccq202e,
                         xccq202f,xccq202g,xccq202h,xccq203,xccq204,xccq204a,xccq204b,xccq204c,xccq204d,xccq204e,xccq204f,
                         xccq204g,xccq204h,xccq205,xccq206,xccq206a,xccq206b,xccq206c,xccq206d,xccq206e,xccq206f,xccq206g,
                         xccq206h,xccq207,xccq208,xccq208a,xccq208b,xccq208c,xccq208d,xccq208e,xccq208f,xccq208g,xccq208h,
                         xccq209,xccq210,xccq210a,xccq210b,xccq210c,xccq210d,xccq210e,xccq210f,xccq210g,xccq210h,xccq211,
                         xccq212,xccq212a,xccq212b,xccq212c,xccq212d,xccq212e,xccq212f,xccq212g,xccq212h,xccq213,xccq214,
                         xccq214a,xccq214b,xccq214c,xccq214d,xccq214e,xccq214f,xccq214g,xccq214h,xccq215,xccq216,xccq216a,
                         xccq216b,xccq216c,xccq216d,xccq216e,xccq216f,xccq216g,xccq216h,xccq217,xccq218,xccq218a,xccq218b,
                         xccq218c,xccq218d,xccq218e,xccq218f,xccq218g,xccq218h,xccq280,xccq280a,xccq280b,xccq280c,xccq280d,
                         xccq280e,xccq280f,xccq280g,xccq280h,xccq301,xccq302,xccq302a,xccq302b,xccq302c,xccq302d,xccq302e,
                         xccq302f,xccq302g,xccq302h,xccq303,xccq304,xccq304a,xccq304b,xccq304c,xccq304d,xccq304e,xccq304f,
                         xccq304g,xccq304h,xccq305,xccq306,xccq306a,xccq306b,xccq306c,xccq306d,xccq306e,xccq306f,xccq306g,
                         xccq306h,xccq307,xccq308,xccq308a,xccq308b,xccq308c,xccq308d,xccq308e,xccq308f,xccq308g,xccq308h,
                         xccq309,xccq310,xccq310a,xccq310b,xccq310c,xccq310d,xccq310e,xccq310f,xccq310g,xccq310h,xccq311,
                         xccq312,xccq312a,xccq312b,xccq312c,xccq312d,xccq312e,xccq312f,xccq312g,xccq312h,xccq313,xccq314,
                         xccq314a,xccq314b,xccq314c,xccq314d,xccq314e,xccq314f,xccq314g,xccq314h,xccq401,xccq402,xccq901,
                         xccq902,xccq902a,xccq902b,xccq902c,xccq902d,xccq902e,xccq902f,xccq902g,xccq902h,xccq903,xccq903a,
                         xccq903b,xccq903c,xccq903d,xccq903e,xccq903f,xccq903g,xccq903h,xccqtime 
                    FROM xccq_tmp
      #161124-00048#20 add(e)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'ins xccq_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',
                                  SQLCA.sqlcode,'','ins xccq')      

      
      END IF  
      #add zhangllc 151215 --e
   END IF 　#add zhangllc 160526 SBS1
   
   MESSAGE "ins xccc_t"
   #将xccc_tmp 写入xccc
#   INSERT INTO xccc_t SELECT * FROM xccc_tmp #161124-00048#20 mark
   #161124-00048#20 add(s)
   INSERT INTO xccc_t(xcccent,xccccomp,xcccld,xccc001,xccc002,xccc003,xccc004,xccc005,xccc006,xccc007,
                      xccc008,xccc010,xccc101,xccc102,xccc102a,xccc102b,xccc102c,xccc102d,xccc102e,xccc102f,
                      xccc102g,xccc102h,xccc201,xccc202,xccc202a,xccc202b,xccc202c,xccc202d,xccc202e,xccc202f,
                      xccc202g,xccc202h,xccc203,xccc204,xccc204a,xccc204b,xccc204c,xccc204d,xccc204e,xccc204f,
                      xccc204g,xccc204h,xccc205,xccc206,xccc206a,xccc206b,xccc206c,xccc206d,xccc206e,xccc206f,
                      xccc206g,xccc206h,xccc207,xccc208,xccc208a,xccc208b,xccc208c,xccc208d,xccc208e,xccc208f,
                      xccc208g,xccc208h,xccc209,xccc210,xccc210a,xccc210b,xccc210c,xccc210d,xccc210e,xccc210f,
                      xccc210g,xccc210h,xccc211,xccc212,xccc212a,xccc212b,xccc212c,xccc212d,xccc212e,xccc212f,
                      xccc212g,xccc212h,xccc213,xccc214,xccc214a,xccc214b,xccc214c,xccc214d,xccc214e,xccc214f,
                      xccc214g,xccc214h,xccc215,xccc216,xccc216a,xccc216b,xccc216c,xccc216d,xccc216e,xccc216f,
                      xccc216g,xccc216h,xccc217,xccc218,xccc218a,xccc218b,xccc218c,xccc218d,xccc218e,xccc218f,
                      xccc218g,xccc218h,xccc280,xccc280a,xccc280b,xccc280c,xccc280d,xccc280e,xccc280f,xccc280g,
                      xccc280h,xccc301,xccc302,xccc302a,xccc302b,xccc302c,xccc302d,xccc302e,xccc302f,xccc302g,
                      xccc302h,xccc303,xccc304,xccc304a,xccc304b,xccc304c,xccc304d,xccc304e,xccc304f,xccc304g,
                      xccc304h,xccc305,xccc306,xccc306a,xccc306b,xccc306c,xccc306d,xccc306e,xccc306f,xccc306g,
                      xccc306h,xccc307,xccc308,xccc308a,xccc308b,xccc308c,xccc308d,xccc308e,xccc308f,xccc308g,
                      xccc308h,xccc309,xccc310,xccc310a,xccc310b,xccc310c,xccc310d,xccc310e,xccc310f,xccc310g,
                      xccc310h,xccc311,xccc312,xccc312a,xccc312b,xccc312c,xccc312d,xccc312e,xccc312f,xccc312g,
                      xccc312h,xccc313,xccc314,xccc314a,xccc314b,xccc314c,xccc314d,xccc314e,xccc314f,xccc314g,
                      xccc314h,xccc401,xccc402,xccc901,xccc902,xccc902a,xccc902b,xccc902c,xccc902d,xccc902e,
                      xccc902f,xccc902g,xccc902h,xccc903,xccc903a,xccc903b,xccc903c,xccc903d,xccc903e,xccc903f,
                      xccc903g,xccc903h,xccctime) 
               SELECT xcccent,xccccomp,xcccld,xccc001,xccc002,xccc003,xccc004,xccc005,xccc006,xccc007,
                      xccc008,xccc010,xccc101,xccc102,xccc102a,xccc102b,xccc102c,xccc102d,xccc102e,xccc102f,
                      xccc102g,xccc102h,xccc201,xccc202,xccc202a,xccc202b,xccc202c,xccc202d,xccc202e,xccc202f,
                      xccc202g,xccc202h,xccc203,xccc204,xccc204a,xccc204b,xccc204c,xccc204d,xccc204e,xccc204f,
                      xccc204g,xccc204h,xccc205,xccc206,xccc206a,xccc206b,xccc206c,xccc206d,xccc206e,xccc206f,
                      xccc206g,xccc206h,xccc207,xccc208,xccc208a,xccc208b,xccc208c,xccc208d,xccc208e,xccc208f,
                      xccc208g,xccc208h,xccc209,xccc210,xccc210a,xccc210b,xccc210c,xccc210d,xccc210e,xccc210f,
                      xccc210g,xccc210h,xccc211,xccc212,xccc212a,xccc212b,xccc212c,xccc212d,xccc212e,xccc212f,
                      xccc212g,xccc212h,xccc213,xccc214,xccc214a,xccc214b,xccc214c,xccc214d,xccc214e,xccc214f,
                      xccc214g,xccc214h,xccc215,xccc216,xccc216a,xccc216b,xccc216c,xccc216d,xccc216e,xccc216f,
                      xccc216g,xccc216h,xccc217,xccc218,xccc218a,xccc218b,xccc218c,xccc218d,xccc218e,xccc218f,
                      xccc218g,xccc218h,xccc280,xccc280a,xccc280b,xccc280c,xccc280d,xccc280e,xccc280f,xccc280g,
                      xccc280h,xccc301,xccc302,xccc302a,xccc302b,xccc302c,xccc302d,xccc302e,xccc302f,xccc302g,
                      xccc302h,xccc303,xccc304,xccc304a,xccc304b,xccc304c,xccc304d,xccc304e,xccc304f,xccc304g,
                      xccc304h,xccc305,xccc306,xccc306a,xccc306b,xccc306c,xccc306d,xccc306e,xccc306f,xccc306g,
                      xccc306h,xccc307,xccc308,xccc308a,xccc308b,xccc308c,xccc308d,xccc308e,xccc308f,xccc308g,
                      xccc308h,xccc309,xccc310,xccc310a,xccc310b,xccc310c,xccc310d,xccc310e,xccc310f,xccc310g,
                      xccc310h,xccc311,xccc312,xccc312a,xccc312b,xccc312c,xccc312d,xccc312e,xccc312f,xccc312g,
                      xccc312h,xccc313,xccc314,xccc314a,xccc314b,xccc314c,xccc314d,xccc314e,xccc314f,xccc314g,
                      xccc314h,xccc401,xccc402,xccc901,xccc902,xccc902a,xccc902b,xccc902c,xccc902d,xccc902e,
                      xccc902f,xccc902g,xccc902h,xccc903,xccc903a,xccc903b,xccc903c,xccc903d,xccc903e,xccc903f,
                      xccc903g,xccc903h,xccctime FROM xccc_tmp
   #161124-00048#20 add(e)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xccc_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','','',
                               SQLCA.sqlcode,'','ins xccc')      
 
   END IF   
   
   MESSAGE "ins xccd_t"
   #将xccd_tmp 写入xccd
#   INSERT INTO xccd_t SELECT * FROM xccd_tmp #161124-00048#20 mark
   #161124-00048#20 add(s)
   INSERT INTO xccd_t(xccdent,xccdcomp,xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006,xccd007,
                      xccd008,xccd009,xccd010,xccd011,xccd012,xccd013,xccd014,xccd101,xccd102,xccd102a,
                      xccd102b,xccd102c,xccd102d,xccd102e,xccd102f,xccd102g,xccd102h,xccd200,xccd201,
                      xccd202,xccd202a,xccd202b,xccd202c,xccd202d,xccd202e,xccd202f,xccd202g,xccd202h,
                      xccd204,xccd204a,xccd204b,xccd204c,xccd204d,xccd204e,xccd204f,xccd204g,xccd204h,
                      xccd301,xccd302,xccd302a,xccd302b,xccd302c,xccd302d,xccd302e,xccd302f,xccd302g,
                      xccd302h,xccd303,xccd304,xccd304a,xccd304b,xccd304c,xccd304d,xccd304e,xccd304f,
                      xccd304g,xccd304h,xccd901,xccd902,xccd902a,xccd902b,xccd902c,xccd902d,xccd902e,
                      xccd902f,xccd902g,xccd902h,xccdtime) 
               SELECT xccdent,xccdcomp,xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006,xccd007,
                      xccd008,xccd009,xccd010,xccd011,xccd012,xccd013,xccd014,xccd101,xccd102,xccd102a,
                      xccd102b,xccd102c,xccd102d,xccd102e,xccd102f,xccd102g,xccd102h,xccd200,xccd201,
                      xccd202,xccd202a,xccd202b,xccd202c,xccd202d,xccd202e,xccd202f,xccd202g,xccd202h,
                      xccd204,xccd204a,xccd204b,xccd204c,xccd204d,xccd204e,xccd204f,xccd204g,xccd204h,
                      xccd301,xccd302,xccd302a,xccd302b,xccd302c,xccd302d,xccd302e,xccd302f,xccd302g,
                      xccd302h,xccd303,xccd304,xccd304a,xccd304b,xccd304c,xccd304d,xccd304e,xccd304f,
                      xccd304g,xccd304h,xccd901,xccd902,xccd902a,xccd902b,xccd902c,xccd902d,xccd902e,
                      xccd902f,xccd902g,xccd902h,xccdtime FROM xccd_tmp
   #161124-00048#20 add(e)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xccd_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','','',
                               SQLCA.sqlcode,'','ins xccd')      
 
   END IF   
   
   MESSAGE "ins xcce_t"
   #将xcce_tmp 写入xcce
#   INSERT INTO xcce_t SELECT * FROM xcce_tmp  #161124-00048#20 mark
   #161124-00048#20 add(s)
   INSERT INTO xcce_t(xcceent,xccecomp,xcceld,xcce001,xcce002,xcce003,xcce004,xcce005,xcce006,xcce007,
                      xcce008,xcce009,xcce010,xcce101,xcce102,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,
                      xcce102f,xcce102g,xcce102h,xcce201,xcce202,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,
                      xcce202f,xcce202g,xcce202h,xcce205,xcce206,xcce206a,xcce206b,xcce206c,xcce206d,xcce206e,
                      xcce206f,xcce206g,xcce206h,xcce207,xcce208,xcce208a,xcce208b,xcce208c,xcce208d,xcce208e,
                      xcce208f,xcce208g,xcce208h,xcce209,xcce210,xcce210a,xcce210b,xcce210c,xcce210d,xcce210e,
                      xcce210f,xcce210g,xcce210h,xcce301,xcce302,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,
                      xcce302f,xcce302g,xcce302h,xcce303,xcce304,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,
                      xcce304f,xcce304g,xcce304h,xcce307,xcce308,xcce308a,xcce308b,xcce308c,xcce308d,xcce308e,
                      xcce308f,xcce308g,xcce308h,xcce901,xcce902,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,
                      xcce902f,xcce902g,xcce902h,xccetime) 
              SELECT xcceent,xccecomp,xcceld,xcce001,xcce002,xcce003,xcce004,xcce005,xcce006,xcce007,
                      xcce008,xcce009,xcce010,xcce101,xcce102,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,
                      xcce102f,xcce102g,xcce102h,xcce201,xcce202,xcce202a,xcce202b,xcce202c,xcce202d,xcce202e,
                      xcce202f,xcce202g,xcce202h,xcce205,xcce206,xcce206a,xcce206b,xcce206c,xcce206d,xcce206e,
                      xcce206f,xcce206g,xcce206h,xcce207,xcce208,xcce208a,xcce208b,xcce208c,xcce208d,xcce208e,
                      xcce208f,xcce208g,xcce208h,xcce209,xcce210,xcce210a,xcce210b,xcce210c,xcce210d,xcce210e,
                      xcce210f,xcce210g,xcce210h,xcce301,xcce302,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,
                      xcce302f,xcce302g,xcce302h,xcce303,xcce304,xcce304a,xcce304b,xcce304c,xcce304d,xcce304e,
                      xcce304f,xcce304g,xcce304h,xcce307,xcce308,xcce308a,xcce308b,xcce308c,xcce308d,xcce308e,
                      xcce308f,xcce308g,xcce308h,xcce901,xcce902,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,
                      xcce902f,xcce902g,xcce902h,xccetime FROM xcce_tmp
   #161124-00048#20 add(e)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xcce_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','','',
                               SQLCA.sqlcode,'','ins xcce')      
 
   END IF   
   
   MESSAGE "ins xccz_t"
   #将xccz_tmp 写入xccz
#   INSERT INTO xccz_t SELECT * FROM xccz_tmp  #161124-00048#20 mark
   #161124-00048#20 add(s)
   INSERT INTO xccz_t(xcczent,xcczcomp,xcczld,xccz001,xccz002,xccz003,xccz004,xccz005,xccz006,xccz007,
                      xccz008,xccz009,xccz010,xccz011,xccz101,xccz201,xccz205,xccz207,xccz209,xccz301,
                      xccz303,xccz307,xccz901) 
               SELECT xcczent,xcczcomp,xcczld,xccz001,xccz002,xccz003,xccz004,xccz005,xccz006,xccz007,
                      xccz008,xccz009,xccz010,xccz011,xccz101,xccz201,xccz205,xccz207,xccz209,xccz301,
                      xccz303,xccz307,xccz901 FROM xccz_tmp
                     #------#180411-00001#1 add str
                      WHERE EXISTS (SELECT 1 FROM xccd_tmp WHERE xccdent=xcczent  AND xccdld  = xcczld
                                             AND xccd003 = xccz003 AND xccd004 = xccz004
                                             AND xccd005 = xccz005 AND xccd006 = xccz006)
                     #------#180411-00001#1 add end 
   #161124-00048#20 add(e)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xccz_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','','',
                               SQLCA.sqlcode,'','ins xccz')      
 
   END IF   
   
   MESSAGE "ins xccg_t"
   #将xccg_tmp 写入xccg
#   INSERT INTO xccg_t SELECT * FROM xccg_tmp  #161124-00048#20 mark
   #161124-00048#20 add(s)
   INSERT INTO xccg_t(xccgent,xccgcomp,xccgld,xccg001,xccg002,xccg003,xccg004,xccg005,xccg006,xccg007,
                      xccg008,xccg009,xccg010,xccg101,xccg102,xccg102a,xccg102b,xccg102c,xccg102d,xccg102e,
                      xccg102f,xccg102g,xccg102h,xccg301,xccg302,xccg302a,xccg302b,xccg302c,xccg302d,xccg302e,
                      xccg302f,xccg302g,xccg302h,xccg901,xccg902,xccg902a,xccg902b,xccg902c,xccg902d,xccg902e,
                      xccg902f,xccg902g,xccg902h,xccgtime) 
               SELECT xccgent,xccgcomp,xccgld,xccg001,xccg002,xccg003,xccg004,xccg005,xccg006,xccg007,
                      xccg008,xccg009,xccg010,xccg101,xccg102,xccg102a,xccg102b,xccg102c,xccg102d,xccg102e,
                      xccg102f,xccg102g,xccg102h,xccg301,xccg302,xccg302a,xccg302b,xccg302c,xccg302d,xccg302e,
                      xccg302f,xccg302g,xccg302h,xccg901,xccg902,xccg902a,xccg902b,xccg902c,xccg902d,xccg902e,
                      xccg902f,xccg902g,xccg902h,xccgtime FROM xccg_tmp
   #161124-00048#20 add(e)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xccg_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','','',
                               SQLCA.sqlcode,'','ins xccg')      

 
   END IF   
   
   #add zhangllc 151215 --begin
   #CALL s_axcp500_avg1_set_xccq()
   #add zhangllc 151215 --end
   
   #161121-00018#5---add---s
   MESSAGE "ins xcha_t"
   #将xccg_tmp 写入xccg
   INSERT INTO xcha_t SELECT * FROM xcha_tmp
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xcha_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','','',
                               SQLCA.sqlcode,'','ins xcha')      
 
   END IF 

   MESSAGE "ins xchb_t"
   #将xchb_tmp 写入xchb
   UPDATE xchb_tmp SET xchb009 = NVL(xchb009,' '),
                       xchb010 = NVL(xchb010,' '),
                       xchb011 = NVL(xchb011,' '),
                       xchb014 = NVL(xchb014,' '),
                       xchb015 = NVL(xchb015,' ')
   #PGS-(D)-03080-----s
   #PGS-(D)-03080-----e   
   INSERT INTO xchb_t SELECT * FROM xchb_tmp
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins xchb_t'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','','',
                               SQLCA.sqlcode,'','ins xchb')      

   END IF  
   #161121-00018#5---add---e
   

   DROP TABLE xcck_tmp; #ODI-ORA#

   DROP TABLE sfaa_tmp; #ODI-ORA#

   DROP TABLE inaj_tmp; #ODI-ORA#

   DROP TABLE sfba_tmp; #ODI-ORA#

   DROP TABLE xccq_tmp;  #add zhangllc 151215 #ODI-ORA#

   DROP TABLE xccc_tmp; #ODI-ORA#

   DROP TABLE xccd_tmp; #ODI-ORA#

   DROP TABLE xcce_tmp; #ODI-ORA#

   DROP TABLE xccz_tmp; #ODI-ORA#

   DROP TABLE xccg_tmp; #ODI-ORA#

   DROP TABLE s_axcp500_tmp; #ODI-ORA#

   DROP TABLE s_axcp500_tmp0; #ODI-ORA#

   DROP TABLE s_axcp500_wip_tmp1; #ODI-ORA#

   DROP TABLE wip4_tmp1; #ODI-ORA#

   DROP TABLE wip4_tmp2; #ODI-ORA#

   DROP TABLE wip4_tmp3; #ODI-ORA#

   DROP TABLE wip4_tmp4;   #DL+OH+SUB #ODI-ORA#

   DROP TABLE wip4_tmp5;   #ADJUST  add zhangllc 160526 SBS1 #ODI-ORA#

   DROP TABLE wip4_tmp6;   #SET取替代用   #160726-00001#11 add #ODI-ORA#

   DROP TABLE srda_tmp; #ODI-ORA#

   DROP TABLE repeat_wip_tmp1; #ODI-ORA#

   DROP TABLE rept_wip_tmp01;         #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01 #ODI-ORA#

   DROP TABLE rept_wip_tmp02;         #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02     #ODI-ORA#

   DROP TABLE rept_wip_tmp03;         #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03 #ODI-ORA#

   DROP TABLE rept_wip_tmp04;   #DL+OH+SUB  #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04 #ODI-ORA#

   DROP TABLE rept_wip_tmp05;   #ADJUST  add zhangllc 160526 SBS1   #160727-00019#29  Mod  repeat_wip4_tmp5 --> rept_wip_tmp05 #ODI-ORA#

   DROP TABLE sale_return_tmp; #ODI-ORA#
   #161121-00018#5---add---s

   DROP TABLE xcha_tmp;    #ODI-ORA#

   DROP TABLE xchb_tmp;    #ODI-ORA#
   #161121-00018#5---add---e
   

   DROP TABLE ap_sum_tmp;   #180420-00005#1 add #ODI-ORA#
   
   #201027-00001#1---add---s
   DROP TABLE sfcb_tmp;  
   #201027-00001#1---add---e
   LET g_tot_end = TIME
   CALL s_axcp500_avg1_stats_cnt(1,g_tot_begin,g_tot_end,0)     
   CALL s_axcp500_avg1_stats_output()

   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 整批写xcck
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xcck_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-09 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xcck_1(p_seq)
   DEFINE p_seq           LIKE xcck_t.xcck001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_inaj022       LIKE inaj_t.inaj022
   DEFINE l_inaj203       LIKE inaj_t.inaj203
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_exrate        LIKE type_t.num26_10
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_glav001       LIKE glav_t.glav001
   #160518-00033#2---add---s
   DEFINE l_sql           STRING
   DEFINE l_xcckent       LIKE xcck_t.xcckent
   DEFINE l_xcckld        LIKE xcck_t.xcckld
   DEFINE l_xcck001       LIKE xcck_t.xcck001
   DEFINE l_xcck002       LIKE xcck_t.xcck002
   DEFINE l_xcck003       LIKE xcck_t.xcck003
   DEFINE l_xcck004       LIKE xcck_t.xcck004
   DEFINE l_xcck005       LIKE xcck_t.xcck005
   DEFINE l_xcck006       LIKE xcck_t.xcck006
   DEFINE l_xcck007       LIKE xcck_t.xcck007
   DEFINE l_xcck008       LIKE xcck_t.xcck008
   DEFINE l_xcck009       LIKE xcck_t.xcck009
   DEFINE l_imaa006       LIKE imaa_t.imaa006
   DEFINE l_xcck201       LIKE xcck_t.xcck201
   #160518-00033#2---add---s
   
   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_current()
   LET g_stat_begin = TIME
   

   DROP TABLE s_curr_tmp; #ODI-ORA#

   CREATE TEMP TABLE s_curr_tmp(
   ex_date     LIKE xcck_t.xcck013,    #日期
   curr1       LIKE ooaj_t.ooaj002,    #来源币种
   curr2       LIKE ooaj_t.ooaj002,    #目的币种
   exrate      LIKE type_t.num26_10    #转换率
   );
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create s_curr_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','create s_curr_tmp')         
#     RETURN r_success
   END IF
   
   DECLARE s_axcp500_avg_sel_curr_cs1 CURSOR FOR
    SELECT UNIQUE inaj022,inaj203 FROM inaj_tmp
    
   MESSAGE "set_xcck_1:curr rate"
   FOREACH s_axcp500_avg_sel_curr_cs1 INTO l_inaj022,l_inaj203
      LET l_exrate = 1
      IF l_inaj203 <> g_curr[p_seq].curr THEN
         CALL s_aooi160_get_exrate('2',g_ld,l_inaj022,l_inaj203,g_curr[p_seq].curr,0,g_curr[p_seq].type2)
              RETURNING l_exrate
         IF cl_null(l_exrate) OR l_exrate=0 THEN LET l_exrate = 1 END IF
      END IF     
      
      INSERT INTO s_curr_tmp VALUES(l_inaj022,l_inaj203,g_curr[p_seq].curr,l_exrate)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'INSERT INTO s_curr_tmp'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','INSERT INTO s_curr_tmp')         
#        RETURN r_success
      END IF      
   END FOREACH

   MESSAGE "set_xcck_1:ins xcck_tmp"
#PGS-(D)-03080-----s
#PGS-(D)-03080-----e
  #inaj_t的资料丢入xcck_tmp
  #LET g_sql = " INSERT INTO xcck_tmp SELECT ",g_enterprise,",inajsite,'",g_comp,"','",g_ld,"','",p_seq,"',",                     #161114-00003#1 mark
   #                                                             xcckent         xccksite   xcckcomp     xcckld     xcck001    
   #LET g_sql = " INSERT INTO xcck_tmp SELECT /*+ PARALLEL(4) */ ",g_enterprise,",inajsite,'",g_comp,"','",g_ld,"','",p_seq,"',",  #161114-00003#1 add    #170110-00028#1  
   LET g_sql = " INSERT INTO xcck_tmp SELECT DISTINCT ",g_enterprise,",inajsite,'",g_comp,"','",g_ld,"','",p_seq,"',",   #170110-00028#1  #180802-00015#1 add DISTINCT  
   #                    xcck002    xcck003      xcck004  xcck005  xcck006 xcck007 xcck008 xcck009 xcck010 xcck011
               "        inaj999,'",g_xcat001,"',",g_yy,",",g_pp,",inaj001,inaj002,inaj003,inaj004,inaj005,inaj006,",
   #                    xcck012 xcck013 xcck014 xcck015 xcck016
               "        inaj015,inaj022,inaj024,inaj008,inaj009,",
   #                    xcck017 xcck020  xcck021          xcck022          xcck023
               "        inaj010,inaj036, nvl(inaj016,' '),nvl(inaj018,' '),nvl(pmaa090,' '),",
   #                    xcck024          xcck025          xcck026          xcck027          xcck028
               #"        nvl(pmaa241,' '),nvl(inaj037,' '),nvl(pmaa092,' '),nvl(pmaa231,' '),nvl(imaa108,' '),",
               "        nvl(pmaa241,' '),nvl(inaj037,' '),nvl(pmaa092,' '),nvl(pmaa231,' '),nvl(inaj211,' '),", #mod zhangllc 151204
   #                    xcck029          xcck030          xcck031         xcck032 xcck033
               "        nvl(imaa126,' '),nvl(inaj038,' '),nvl(inaj039,' '),' ',' ',",
   #                 xcck034 xcck040  xcck041               xcck042 xcck043            
               "        ' ',inaj203,'",g_curr[p_seq].curr,"',exrate,inaj012,",
   #                    xcck044 xcck045 xcck046 xcck047 xcck048
              #"        nvl(imag014,imaa006),inaj014,inaj011,inaj020,inaj040,",          
              #"        imaa006,inaj014,inaj011,inaj020,inaj040,",    #160518-00033#2  mark
               #"        imaa006,(inaj048/inaj049),inaj011,inaj020,inaj040,",    #160518-00033#2  add  #170705-00006#1 mark
               "        imaa006,( CASE inaj049 WHEN 0 THEN 0 ELSE inaj048/inaj049 END),inaj011,inaj020,inaj040,", #170705-00006#1 add  
   #                    xcck049 xcck050 xcck051
               "        inaj041,inaj042,inaj043,",
   #             xcck055
               " decode(inaj036,'101','211','102','2011','103','203','104','203','105','203',",  #mod zhangllc 151203 '201'->'2011'
               #"                '106','203','107','3012','108','2011','109','203','110','205',",  #mod zhangllc 151203 '201'->'2011'  #170608-00060#1 mark
               "                '106','3012','107','3012','108','2011','109','203','110','205',",  #mod zhangllc 151203 '201'->'2011'  #170608-00060#1 add
               "                '111','205','112','205','113','3012','114','3012','201','303',",
               "                '302','3012','303','3012',",
               "                '301X','309X',"  #161109-00032#3
   #当站下线影响成本否            
   IF g_sys_6016 = 'Y' THEN
      #LET g_sql = g_sql CLIPPED,"'115','217',"
      LET g_sql = g_sql CLIPPED,"'115','213',"  #Mod zhangllc 151208
   ELSE
      LET g_sql = g_sql CLIPPED,"'115','3011',"
   END IF
     
   #销退影响成本否:1.销退不影响成本 2.部分影响 3.全部影响
   IF g_sys_6006 = '1' THEN
      LET g_sql = g_sql CLIPPED,"'202','305',"
   ELSE
      LET g_sql = g_sql CLIPPED,"'202','215',"
   END IF
   
   #杂发补单价否:1.杂发不补单价 其他.杂发补单价
   IF g_sys_6004 = '1' THEN
      LET g_sql = g_sql CLIPPED,"'301','3092',"   
   ELSE
      LET g_sql = g_sql CLIPPED,"'301','3091',"   
   END IF

   LET g_sql = g_sql CLIPPED,
   #                            xcck055                                xcck201  #此处单位不按基础单位取位，为了减少单位误差，若需截位，在本dql执行后再执行个截位的sql就可以了，可以参数成本金额的截位方式
              #"                '304','3092','401','217','501','311'), inaj014 * inaj011, ",            #本期异动数量   #160518-00033#2  mark
               #"                '304','3092','401','217','501','311'), inaj048/inaj049 * inaj011, ",    #本期异动数量    #160518-00033#2  add #170705-00006#1 mark
#               "                '304','3092','401','217','501','311'), ( CASE inaj049 * inaj011 WHEN 0 THEN 0 ELSE inaj048/inaj049 * inaj011 END), ", #170705-00006#1 add  #181203-00024#1 mark
               #181203-00024#1 mod-S
               "                '304','3092','401','217','501','311'), ",
               "        (CASE WHEN a.ooca004 = '1'  THEN round(COALESCE((CASE inaj049 * inaj011 WHEN 0 THEN 0 ELSE inaj048/inaj049 * inaj011 END),0),a.ooca002)
                              WHEN a.ooca004 = '2'  THEN (CASE WHEN MOD(round(COALESCE((CASE inaj049 * inaj011 WHEN 0 THEN 0 ELSE inaj048/inaj049 * inaj011 END),0),a.ooca002),(2/power(10,a.ooca002)))=0 
                                                               THEN round(COALESCE((CASE inaj049 * inaj011 WHEN 0 THEN 0 ELSE inaj048/inaj049 * inaj011 END),0),a.ooca002) 
                                                               ELSE round(COALESCE((CASE inaj049 * inaj011 WHEN 0 THEN 0 ELSE inaj048/inaj049 * inaj011 END),0),a.ooca002)-(1/power(10,a.ooca002))
                                                          END )
                              WHEN a.ooca004 = '3'  THEN trunc(COALESCE((CASE inaj049 * inaj011 WHEN 0 THEN 0 ELSE inaj048/inaj049 * inaj011 END),0),a.ooca002)
                              WHEN a.ooca004 = '4'  THEN ceil(COALESCE((CASE inaj049 * inaj011 WHEN 0 THEN 0 ELSE inaj048/inaj049 * inaj011 END),0)*power(10,a.ooca002))/power(10,a.ooca002) 
                        END),",      
               #181203-00024#1 mod-E
   #                    xcck202/a-h         xcck282/a-h         xcck301 xcck302/a-h
               "        0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",         #本期异动成本/平均单价/已耗
   #                    xcck901 xcck902/a-h   xcck980/a-h         xcck903/a-h            
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, ",         #结存/结存单价/结存调整
   #                    xcckownid     xcckowndp    xcckcrtid   xcckcrtdp xcckcrtdt xcckmodid xcckmoddt xcckstus
               "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"','','','','Y', ",
   #                    xcckud001-xcckud030
               "        '','','','','','','','','','','','','','','', ",                        #自定义字段
               "        '','','','','','','','','','','','','','','',  ",
               "        '',",   #160509-00004#76 
               "        inaj007 ",   #add zhangllc 151214
               "    FROM ooef_t,inaj_tmp LEFT OUTER JOIN pmaa_t ON pmaaent = inajent AND pmaa001 = inaj018 ",
               "                         LEFT OUTER JOIN imaa_t ON imaaent = inajent AND imaa001 = inaj005 ",
               "                         LEFT OUTER JOIN ooca_t a ON a.oocaent = inajent AND a.ooca001 = imaa006 ",  #181203-00024#1 add
               #"                        LEFT OUTER JOIN imag_t ON imagent = inajent AND imag001 = inaj005 AND imagsite = '",g_comp,"'",  #mark zhangllc 160527 已不适用，mark节约效能
               "                         LEFT OUTER JOIN s_curr_tmp ON ex_date = inaj022 AND curr1 = inaj203 AND curr2 = '",g_curr[p_seq].curr,"'",
               "   WHERE ooef001 = inajsite ",
               "     AND ooefent = ",g_enterprise,
               "     AND ooef017 = '",g_comp,"'"
               #"     AND inaj011 * inaj014 <> 0 "  #20151101 DSC.liquor mark 倉退純金額折讓數量會是0
               
#PGS-(D)-03080-----s
#PGS-(D)-03080-----e
#PGS-(D)-03080-----s
#PGS-(D)-03080-----e
   PREPARE s_axcp500_avg1_set_xcck_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xcck_p1 
   
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_p1')         
#     RETURN r_success
   END IF                 
   #190411-00017#1 C mark-S
#   #160518-00033#2---add---s  此段为xcck201按成本单位取位
#   LET l_sql = " SELECT DISTINCT xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck006,xcck007,xcck008,xcck009, ",
#               "        (SELECT imaa006 FROM imaa_t WHERE imaaent = xcckent AND imaa001 = xcck010) imaa006,",
#               "        xcck201 ",
#               "   FROM xcck_tmp ",
#               "     WHERE xcck043 <> xcck044"          #161114-00003#1 add               
#   PREPARE s_axcp500_avg1_upd_xcck201_p FROM l_sql
#   DECLARE s_axcp500_avg1_upd_xcck201_c CURSOR FOR s_axcp500_avg1_upd_xcck201_p
#   FOREACH s_axcp500_avg1_upd_xcck201_c INTO l_xcckent,l_xcckld,l_xcck001,l_xcck002,l_xcck003,l_xcck004,l_xcck005,
#                                             l_xcck006,l_xcck007,l_xcck008,l_xcck009,l_imaa006,l_xcck201
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = 'FOREACH s_axcp500_get_xccc_from_xcck_cs1'
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
#         CALL s_axcp500_ins_error('','','','','','','','','','','',
#                                  '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg1_upd_xcck201_c')
#      END IF
#      IF NOT cl_null(l_imaa006) AND NOT cl_null(l_xcck201) THEN
#         CALL s_aooi250_take_decimals(l_imaa006,l_xcck201) RETURNING l_success,l_xcck201
#      END IF
#      UPDATE xcck_tmp
#         SET xcck201 = l_xcck201
#       WHERE xcckent = l_xcckent
#         AND xcckld = l_xcckld
#         AND xcck001 = l_xcck001
#         AND xcck002 = l_xcck002
#         AND xcck003 = l_xcck003
#         AND xcck004 = l_xcck004
#         AND xcck005 = l_xcck005
#         AND xcck006 = l_xcck006
#         AND xcck007 = l_xcck007
#         AND xcck008 = l_xcck008
#         AND xcck009 = l_xcck009
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code   = SQLCA.sqlcode
#            LET g_errparam.extend = "UPDATE xcck_tmp SET xcck055 = '2012'"
#            LET g_errparam.popup  = TRUE
#            CALL s_axcp500_ins_error('','','','','','','','','','','',
#                                     '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck201 = l_xcck201')
#            CALL cl_err()
#         END IF
#   END FOREACH
#   #160518-00033#2---add---e
   #190411-00017#1 C mark-E
   #190411-00017#1 C add-S
   #xcck043交易單位 <> xcck044成本單位
   #PGS(D)-00824 ---start---
   LET l_sql = " MERGE INTO xcck_tmp a",
               " USING (SELECT xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck006,xcck007,xcck008,xcck009,",
               "               (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xcck201,0),6),ooca002) " ,
               "                     WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xcck201,0),6),ooca002),(2/power(10,ooca002)))=0 ",
               "                                                 THEN round(round(COALESCE(xcck201,0),6),ooca002) ",
               "                                                 ELSE round(round(COALESCE(xcck201,0),6),ooca002)-(-1/power(10,ooca002)) ",
               "                                             END )",
               "                     WHEN ooca004 = 3 THEN trunc(round(COALESCE(xcck201,0),6),ooca002)",
               "                     WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xcck201,0),6)*power(10,ooca002))/power(10,ooca002)",
               "                 END ) xcck201 ",
               "         FROM xcck_tmp,imaa_t ",
               "         LEFT JOIN ooca_t ON oocaent = imaaent AND ooca001 = imaa006 ",
               "        WHERE xcck043 <> xcck044 AND xcckent = imaaent AND xcck010 = imaa001) b",
               "    ON (a.xcckent=b.xcckent AND a.xcckld=b.xcckld AND a.xcck001=b.xcck001 AND a.xcck002=b.xcck002 ",
               "    AND a.xcck003=b.xcck003 AND a.xcck004=b.xcck004 AND a.xcck005=b.xcck005 AND a.xcck006=b.xcck006 ",
               "    AND a.xcck007=b.xcck007 AND a.xcck008=b.xcck008 AND a.xcck009=b.xcck009)",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcck201 = b.xcck201 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_upd_xcck201_p FROM l_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_upd_xcck201_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg1_upd_xcck201_p
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_upd_xcck201_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF       
   #190411-00017#1 C add-E

   #160721-00012#1---add---s
   #检查当期除了销退外是否还有别的库存异动，如果无其他库存异动，
   #且g_sys_6006='2'部分影响时，该销退作为入项成本计算，影响成本
   #销退影响成本否:1.销退不影响成本 2.部分影响 3.全部影响
   IF g_sys_6006 = '2' THEN
      UPDATE xcck_tmp SET xcck055 = '305'
       WHERE xcckent = g_enterprise
         AND xcckld  = g_ld
         AND xcck001 = p_seq
         AND xcck003 = g_xcat001
         AND xcck004 = g_yy
         AND xcck005 = g_pp
         AND xcck055 = '215' 
         AND EXISTS(SELECT 1 FROM inaj_tmp
                     #180129-00022#1--mod--s
                     #WHERE inajent = xcckent AND inajsite= xccksite
                     #  AND inaj001 = xcck006 AND inaj002 = xcck007
                     #  AND inaj003 = xcck008 AND inaj004 = xcck009
                      WHERE inajent = xcckent AND inajsite= xccksite
                        AND inaj005 = xcck010 AND inaj006 = xcck011
                        AND inaj010 = xcck017 
                        AND inaj004 = '1'  #200523-00002#1 add 
                     #180129-00022#1--mod--s  
                        AND inaj036 <> '202')         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck055 = '305'"
         LET g_errparam.popup  = TRUE
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck055 = 305')         
         CALL cl_err()
      END IF
   END IF      
   #160721-00012#1---add---e
   
   MESSAGE "set_xcck_1:update xcck055=201"
   #add zhangllc 151203 --begin
   #若'采购入库' & inaj200 = 'Y',则xcck055 = '2012'
   UPDATE xcck_tmp SET xcck055 = '2012' 
    WHERE xcckent = g_enterprise
      AND xcckld  = g_ld
      AND xcck001 = p_seq
      AND xcck003 = g_xcat001
      AND xcck004 = g_yy
      AND xcck005 = g_pp
      AND xcck055 = '2011'
      AND EXISTS (SELECT 1 FROM inaj_tmp
                   WHERE inajent = xcckent AND inajsite= xccksite
                     AND inaj001 = xcck006 AND inaj002 = xcck007
                     AND inaj003 = xcck008 AND inaj004 = xcck009
                     AND inaj200 = 'Y')
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck055 = '2012'"
      LET g_errparam.popup  = TRUE
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck055 = 2012')         
      CALL cl_err()
#     RETURN r_success
   END IF  
   #add zhangllc 151203 --end
   
   #mark zhangllc 151204
   ##add zhangllc 150809 for xcck028
   #IF NOT cl_null(g_ent_0001) THEN
   #   UPDATE xcck_tmp
   #      SET xcck028 = (SELECT rtaw001 FROM rtaw_t,imaa_t  #品类
   #                      WHERE rtawent = imaaent
   #                        AND rtaw002 = imaa009     #最尾階產品品類
   #                        AND rtaw003 = g_ent_0001  #品類層級
   #                        AND rtawent = g_enterprise
   #                        AND imaa001 = xcck010)
   #    WHERE xcckent = g_enterprise
   #      AND xcckld  = g_ld
   #      AND xcck001 = p_seq
   #      AND xcck003 = g_xcat001
   #      AND xcck004 = g_yy
   #      AND xcck005 = g_pp
   #      AND EXISTS  (SELECT 1 FROM rtaw_t,imaa_t  #流通业自己的设定作业中抓不到，仍原来的imaa108
   #                    WHERE rtawent = imaaent
   #                      AND rtaw002 = imaa009  #最尾階產品品類
   #                      AND rtaw003 = '2'      #品類層級
   #                      AND rtawent = 99
   #                      AND imaa001 = xcck010 AND rtaw001 IS NOT NULL)
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code   = SQLCA.sqlcode
   #      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck028 = rtaw001"
   #      LET g_errparam.popup  = TRUE
   #      CALL cl_err()
   #      CALL s_axcp500_ins_error('','','','','','','','','','','',
   #                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck028 = rtaw001')         
   #   END IF 
   #END IF
   ##add zhangllc 150809 end
   #mark zhangllc 151204 end
   
   MESSAGE "set_xcck_1:update xcck028=''"
   #add zhangllc 151204
   UPDATE xcck_tmp SET xcck028 = ' '  #品类
    WHERE xcck028 IS NULL
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck028 null to space"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck028 null to space')         
   END IF 
   #add zhangllc 151204 end
   
   MESSAGE "set_xcck_1:update xcck055=209"
   #返工工单时,入库要置为'209'
   UPDATE xcck_tmp SET xcck055 = '209' 
    WHERE xcckent = g_enterprise
      AND xcckld  = g_ld
      AND xcck001 = p_seq
      AND xcck003 = g_xcat001
      AND xcck004 = g_yy
      AND xcck005 = g_pp
      AND xcck020 IN ('110','111','112','103','104','105')
      AND EXISTS ( SELECT 1 FROM sfaa_tmp
                    WHERE sfaaent = g_enterprise  #add 150916
                      AND sfaadocno = xcck047 AND sfaa042 = 'Y' )
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck055 = '209'"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck055 = 209')         
#     RETURN r_success
   END IF  
            
   #领用大于等于阶XCBB06的工单领用,要设为207.重工发料
#   UPDATE xcck_tmp d SET d.xcck055 = '207' 
#    WHERE d.xcckent = g_enterprise
#      AND d.xcckld  = g_ld
#      AND d.xcck001 = p_seq
#      AND d.xcck003 = g_xcat001
#      AND d.xcck004 = g_yy
#      AND d.xcck005 = g_pp
#      AND d.xcck020 IN ('302','303')   
#      AND EXISTS(
#                  SELECT c.xcck010,a.xcbb006,sfaadocno,sfaa010,b.xcbb006 FROM xcck_tmp c,sfaa_tmp,xcbb_t a,xcbb_t b
#                   WHERE a.xcbbent  = b.xcbbent  AND a.xcbbent  = c.xcckent
#                     AND a.xcbbcomp = b.xcbbcomp AND a.xcbbcomp = g_comp
#                     AND a.xcbb001  = b.xcbb001  AND a.xcbb001  = c.xcck004
#                     AND a.xcbb002  = b.xcbb002  AND a.xcbb002  = c.xcck005
#                     AND a.xcbb003  = c.xcck010  AND b.xcbb003  = sfaa010
#                     AND sfaadocno  = c.xcck047
#                     AND c.xcck020 IN ('302','303')
#                     AND a.xcbb006 <= b.xcbb006
#                     AND d.xcck047  = c.xcck047
#                     AND d.xcck010  = c.xcck010 )
#
   #mod 150730 zhangllc --begin 需考虑特征
   #LET g_sql = " UPDATE xcck_tmp d SET d.xcck055 = '207'  ",  #重工领出
   #            "  WHERE d.xcck001 = '",p_seq,"' ",
   #            "    AND d.xcck020 IN ('302','303','114','107')   ",
   #            "    AND EXISTS(                      ",
   #            "                SELECT c.xcck010,a.xcbb006,sfaadocno,sfaa010,b.xcbb006 ",
   #            "                  FROM xcck_tmp c,sfaa_tmp,xcbb_t a,xcbb_t b ",  #c元件 a元件 b主件
   #            "                 WHERE a.xcbbent  = b.xcbbent  AND a.xcbbent  = c.xcckent ",
   #            "                   AND a.xcbbcomp = b.xcbbcomp AND a.xcbbcomp = '",g_comp,"'",
   #            "                   AND a.xcbb001  = b.xcbb001  AND a.xcbb001  = c.xcck004 ", #年
   #            "                   AND a.xcbb002  = b.xcbb002  AND a.xcbb002  = c.xcck005 ", #期
   #            "                   AND a.xcbb003  = c.xcck010  AND b.xcbb003  = sfaa010   ", #料
   #            "                   AND a.xcbb004  = c.xcck011  ",
   #            "                   AND sfaadocno  = c.xcck047    ", #工单号
   #            "                   AND c.xcck020 IN ('302','303','114','107')",  #生产发料/生产退料/回收入库/委外回收入库(针对元件的异动)
   #            "                   AND a.xcbb006 <= b.xcbb006    ",
   #            "                   AND d.xcck047  = c.xcck047    ",
   #            "                   AND d.xcck010  = c.xcck010 )  "
   
   MESSAGE "set_xcck_1:update xcck055=207"
   #LET g_sql = " UPDATE xcck_tmp d SET d.xcck055 = '207'  ",  #重工领出   #PGS-(D)-03080 mark
   LET g_sql = " UPDATE xcck_tmp d SET xcck055 = '207'  ",  #重工领出   #PGS-(D)-03080
               "  WHERE d.xcck001 = '",p_seq,"' ",
               "    AND d.xcck020 IN ('302','303','114','107')   ",
               "    AND EXISTS(                      ",              
              #"                SELECT c.xcck010,a.xcbb006,sfaadocno,sfaa010,clevel ",                    #161114-00003#1 mark
              #"                SELECT /*+ PARALLEL(4) */ c.xcck010,a.xcbb006,sfaadocno,sfaa010,clevel ", #161114-00003#1 add    #170110-00028#1             
               "                SELECT c.xcck010,a.xcbb006,sfaadocno,sfaa010,clevel ", #161114-00003#1 add    #170110-00028#1             
               #"                  FROM xcck_tmp c,xcbb_t a,sfaa_tmp,sfac_tmp2 ",  #a元件 xcck/c元件 sfaa/sfac主件 xcck/d需更新的表   #PGS-(D)-03080 mark
               "                  FROM xcck_tmp c,xcbb_t a,sfaa_tmp,sfac_tmp2 ",  #a元件 xcck/c元件 sfaa/sfac主件 xcck/d需更新的表   #PGS-(D)-03080
                                  # 元件
               "                 WHERE a.xcbbent  = c.xcckent ",
               "                   AND a.xcbbcomp = '",g_comp,"'",
               "                   AND a.xcbb001  = c.xcck004 ", #年
               "                   AND a.xcbb002  = c.xcck005 ", #期
               "                   AND a.xcbb003  = c.xcck010 ", #料
              #"                   AND a.xcbb004  = c.xcck011 ", #特征           #161114-00003#1 mark   #不需要產品特徵階次
               "                   AND c.xcck020 IN ('302','303','114','107')",  #生产发料/生产退料/回收入库/委外回收入库(针对元件的异动)
               #add zhangllc 160529 SBS3--s key值关联，走index
               "                   AND d.xcckent  = c.xcckent ",
               "                   AND d.xcckld   = c.xcckld ",
               "                   AND d.xcck001  = c.xcck001 ",
               "                   AND d.xcck002  = c.xcck002 ",
               "                   AND d.xcck003  = c.xcck003 ",
               "                   AND d.xcck004  = c.xcck004 ",
               "                   AND d.xcck005  = c.xcck005 ",
               "                   AND d.xcck006  = c.xcck006 ",
               "                   AND d.xcck007  = c.xcck007 ",
               "                   AND d.xcck008  = c.xcck008 ",
               "                   AND d.xcck009  = c.xcck009 ",
               #add zhangllc 160529 SBS3--e
               "                   AND d.xcck047  = c.xcck047 ", #工单号
               "                   AND d.xcck010  = c.xcck010 ", #料号
               "                   AND d.xcck011  = c.xcck011 ", #特征
                                  # 主件
               "                   AND sfaaent    = ",g_enterprise,  #add 150916
               "                   AND sfaadocno  = sfacdocno ",
                                  # 主件元件关联
               "                   AND sfaadocno  = c.xcck047 ", #工单号
               "                   AND a.xcbb006 <= clevel)    "  #元件成本阶 主件成本阶
   #mod 150730 zhangllc --end
   PREPARE s_axcp500_avg1_set_xcck_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_p5')
#     RETURN r_success
   END IF


   EXECUTE s_axcp500_avg1_set_xcck_p5
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_p5')
#     RETURN r_success
   END IF
      
#   #工单发料,若发的是"主件"及"入库料件",则xcck055 = '207重工发料'
#   UPDATE xcck_tmp SET xcck055 = '207' 
#    WHERE xcckent = g_enterprise
#      AND xcckld  = g_ld
#      AND xcck001 = p_seq
#      AND xcck003 = g_xcat001
#      AND xcck004 = g_yy
#      AND xcck005 = g_pp
#      AND xcck020 IN ('302','303')
#      AND EXISTS ( SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xcck047 AND sfaa010 = xcck010)
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck055 = '207' - 1"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck055 = 207 - 1')         
#      RETURN r_success
#   END IF
#   
#   UPDATE xcck_tmp SET xcck055 = '207' 
#    WHERE xcckent = g_enterprise
#      AND xcckld  = g_ld
#      AND xcck001 = p_seq
#      AND xcck003 = g_xcat001
#      AND xcck004 = g_yy
#      AND xcck005 = g_pp
#      AND xcck020 IN ('302','303')
#      AND EXISTS ( SELECT 1 FROM sfac_t WHERE sfacent = g_enterprise AND sfacdocno = xcck047 
#                                          AND sfac001 = xcck010 AND sfac002 IN ('1','2'))
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck055 = '207' - 2"
#      LET g_errparam.popup  = TRUE
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck055 = 207 - 2')         
#      CALL cl_err()
#      RETURN r_success
#   END IF 

   MESSAGE "set_xcck_1:update xcck055=3131"
   #若'调拨' & inaj004 = -1.出项,则xcck055 = '3131'
   UPDATE xcck_tmp SET xcck055 = '3131' 
    WHERE xcckent = g_enterprise
      AND xcckld  = g_ld
      AND xcck001 = p_seq
      AND xcck003 = g_xcat001
      AND xcck004 = g_yy
      AND xcck005 = g_pp
      AND xcck020 = '401'
      AND xcck009 = -1
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck055 = '3131'"
      LET g_errparam.popup  = TRUE
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck055 = 3131')         
      CALL cl_err()
#     RETURN r_success
   END IF   
   
   #add zhangllc 151029 --begin
   #销售出货中样品出货，xcck055为307销售费用
   IF g_sys_6019 = 'Y' THEN   #样品单独列示
   
   MESSAGE "set_xcck_1:update xcck055=307"
   
      UPDATE xcck_tmp SET xcck055 = '307' 
       WHERE xcckent = g_enterprise
         AND xcckld  = g_ld
         AND xcck001 = p_seq
         AND xcck003 = g_xcat001
         AND xcck004 = g_yy
         AND xcck005 = g_pp
         #190612-00014#1---mod---s
         #AND xcck020 = '201' 
         #AND xcck055 = '303'
         AND (xcck020 = '201' OR xcck020 = '202')
         AND (xcck055 = '303' OR xcck055 = '305')
         #190612-00014#1---mod---s
         AND EXISTS ( SELECT 1 FROM xmdl_tmp  #为样品出货的，xmdl_tmp中存储为样品出货的单据
                       WHERE xmdldocno = xcck006
                         AND xmdlseq   = xcck007 )
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck055 = '307'"
         LET g_errparam.popup  = TRUE
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck055 = 307')         
         CALL cl_err()
      END IF   
   END IF
   #add zhangllc 151029 --end
   
   #若参数S-FIN-6005 = '1' 销退来源=1.原始出货月成本
   #产生sale_return_tmp的值
   MESSAGE "set_xcck_1:sale_return_tmp"
   IF g_sys_6005 = '1' THEN
      #将销退单与出货单对应 ,并且取得对应的成本单价
      
      #1.取得会计周期参照表号
      SELECT glaa003 INTO l_glav001 FROM glaa_t
       WHERE glaaent = g_enterprise
         AND glaald  = g_ld
      
      #2.产生销退-销售对应表 及 取得原始出货月成本
      TRUNCATE TABLE sale_return_tmp;
      
      INSERT INTO sale_return_tmp 
             #      销退单  项次     项序    出入库码 出货单  出货单过账日期
             SELECT xcck006,xcck007,xcck008,xcck009,xmdl001,xmdk001,
             #      本位币顺序 成本域 料号    特征    批号     成本类型 年度    期别
                    xcck001,xcck002,xcck010,xcck011,xcck017,xcck055,glav002,glav006,
             #      单位成本
#                    xccc280,xccc280a,xccc280b,xccc280c,xccc280d,xccc280e,xccc280f,xccc280g,xccc280h   #180831-00062#1 mark
                    NVL(xccc280,0),NVL(xccc280a,0),NVL(xccc280b,0),NVL(xccc280c,0),NVL(xccc280d,0),NVL(xccc280e,0),NVL(xccc280f,0),NVL(xccc280g,0),NVL(xccc280h,0)   #180831-00062#1 mod
               FROM xcck_tmp LEFT OUTER JOIN xmdl_t  #出货/签收/销退单单身明细档
                                  ON xmdlent   = g_enterprise
                                 AND xmdldocno = xcck006
                                 AND xmdlseq   = xcck007
                             LEFT OUTER JOIN xmdk_t #出货/签收/销退单单头档 
                                  ON xmdkent   = g_enterprise
                                 AND xmdkdocno = xmdl001
                             LEFT OUTER JOIN glav_t #会计周期资料档
                                  ON glavent = g_enterprise
                                 AND glav001 = l_glav001 #会计周期参照表号
                                 AND glav004 = xmdk001   #扣帐日期
                             LEFT OUTER JOIN xccc_t
                                  ON xcccent = g_enterprise
                                 AND xcccld  = g_ld
                                 AND xccc001 = xcck001
                                 AND xccc002 = xcck002
                                 AND xccc003 = g_xcat001
                                 AND xccc004 = glav002 #年
                                 AND xccc005 = glav006 #期
                                 AND xccc006 = xcck010
                                 AND xccc007 = xcck011
                                 AND xccc008 = xcck017
              WHERE xcck020 = '202'       #销退
                AND xcck001 = p_seq       #帐套本位币顺序
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "INSERT INTO sale_return_tmp"
         LET g_errparam.popup  = TRUE
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','INSERT INTO sale_return_tmp')         
         CALL cl_err()
#        RETURN r_success
      END IF 
 
      #200605-00043#2 add(s)
      #销退单价为0 抓成本开账成本单价
      LET g_sql = "MERGE INTO sale_return_tmp a ",
                  "   USING (SELECT xcca001,xcca002,xcca006,xcca007,xcca008,",
                  "                 xcca110,xcca110a,xcca110b,xcca110c,xcca110d,xcca110e,xcca110f,xcca110g,xcca110h ",
                  "            FROM xcca_t ",
                  "           WHERE xccaent = ",g_enterprise," AND xccald = '",g_ld,"'",
                  "             AND xcca003 = '", g_xcat001,"' AND xcca004 = ",g_last_yy,
                  "             AND xcca005 = ",g_last_pp," ) b",
                  "      ON (    a.xcck001 = b.xcca001 AND a.xcck002 = b.xcca002 ",
                  "          AND a.xcck010 = b.xcca006 AND a.xcck011 = b.xcca007 ",
                  "          AND a.xcck017 = b.xcca008 ) ",
                  "    WHEN MATCHED THEN ",
                  "   UPDATE SET a.xccc280  = b.xcca110, ",
                  "              a.xccc280a = b.xcca110a, ",
                  "              a.xccc280b = b.xcca110b, ",
                  "              a.xccc280c = b.xcca110c, ",
                  "              a.xccc280d = b.xcca110d, ",
                  "              a.xccc280e = b.xcca110e, ",
                  "              a.xccc280f = b.xcca110f, ",
                  "              a.xccc280g = b.xcca110g, ",
                  "              a.xccc280h = b.xcca110h ",
                  "    WHERE a.xccc280 = 0 "
      PREPARE s_axcp500_avg1_set_sale_return_p1 FROM g_sql
      EXECUTE s_axcp500_avg1_set_sale_return_p1
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_sale_return_p1"
         LET g_errparam.popup  = TRUE
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_sale_return_p1')         
         CALL cl_err()
      END IF 
      #开账抓不到 则抓上月成本单价
      LET g_sql = "MERGE INTO sale_return_tmp a ",
                 "   USING (SELECT xccc001,xccc002,xccc006,xccc007,xccc008,",
                 "                 xccc280,xccc280a,xccc280b,xccc280c,xccc280d,xccc280e,xccc280f,xccc280g,xccc280h ",
                 "            FROM xccc_t ",
                 "           WHERE xcccent = ",g_enterprise," AND xcccld = '",g_ld,"'",
                 "             AND xccc003 = '", g_xcat001,"' AND xccc004 = ",g_last_yy,
                 "             AND xccc005 = ",g_last_pp," ) b ",
                 "      ON (    a.xcck001 = b.xccc001 AND a.xcck002 = b.xccc002 ",
                 "          AND a.xcck010 = b.xccc006 AND a.xcck011 = b.xccc007 ",
                 "          AND a.xcck017 = b.xccc008 ) ",
                 "    WHEN MATCHED THEN ",
                 "   UPDATE SET a.xccc280  = b.xccc280, ",
                 "              a.xccc280a = b.xccc280a, ",
                 "              a.xccc280b = b.xccc280b, ",
                 "              a.xccc280c = b.xccc280c, ",
                 "              a.xccc280d = b.xccc280d, ",
                 "              a.xccc280e = b.xccc280e, ",
                 "              a.xccc280f = b.xccc280f, ",
                 "              a.xccc280g = b.xccc280g, ",
                 "              a.xccc280h = b.xccc280h ",
                 "    WHERE a.xccc280 = 0 "
      PREPARE s_axcp500_avg1_set_sale_return_p2 FROM g_sql
      EXECUTE s_axcp500_avg1_set_sale_return_p2   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_sale_return_p2"
         LET g_errparam.popup  = TRUE
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_sale_return_p2')         
         CALL cl_err()
      END IF      
      #200605-00043#2 add(e)
 
      #3.若成本为空时,置为0
      #170317-00006#1 add start -----
      #在這邊先給 0 表示要取當期成本價
      #s_year、s_pp 等於當期取當期成本價
      #s_year、s_pp 為空表示沒有對應出貨單取當期成本價
      #170317-00006#1 add end   -----
      UPDATE sale_return_tmp SET xccc280  = nvl(xccc280 ,0),
                                 xccc280a = nvl(xccc280a,0),
                                 xccc280b = nvl(xccc280b,0),
                                 xccc280c = nvl(xccc280c,0),
                                 xccc280d = nvl(xccc280d,0),
                                 xccc280e = nvl(xccc280e,0),
                                 xccc280f = nvl(xccc280f,0),
                                 xccc280g = nvl(xccc280g,0),
                                 xccc280h = nvl(xccc280h,0)
                           #170317-00006#1 add start -----
                           WHERE (s_year = g_yy OR s_year IS NULL)
                             AND (s_pp = g_pp OR s_pp IS NULL)
                           #170317-00006#1 add end   -----                                 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE sale_return_tmp SET xccc280"
         LET g_errparam.popup  = TRUE
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE sale_return_tmp SET xccc280')         
         CALL cl_err()
#        RETURN r_success
      END IF 

   ELSE
      TRUNCATE TABLE sale_return_tmp;
      
      INSERT INTO sale_return_tmp 
             #      销退单  项次     项序    出入库码 出货单  出货单过账日期
             #SELECT xcck006,xcck007,xcck008,xcck009,''    ,'',     #PGS-(D)-03080 mark
             SELECT xcck006,xcck007,xcck008,xcck009,''    ,NULL,     #PGS-(D)-03080
             #      本位币顺序 成本域 料号    特征    批号     成本类型 年度    期别
                    xcck001,xcck002,xcck010,xcck011,xcck017,xcck055, 0,     0,
             #      单位成本
                    0,0,0,0,0,0,0,0,0
               FROM xcck_tmp
              WHERE xcck020 = '202'       #销退
                AND xcck001 = p_seq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "INSERT INTO sale_return_tmp"
         LET g_errparam.popup  = TRUE
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','INSERT INTO sale_return_tmp')         
         CALL cl_err()
#        RETURN r_success
      END IF 

   END IF   
   
   
   MESSAGE "set_xcck_1:upd xcck202a:xcck055=201 "

   #入项成本更新
   #xcck055 = 201.采购入库
   CASE p_seq
        WHEN '1' #AP立帐
                 #mod zhangllc 150906考虑部分流通业暂估按不含税金额立的
                 #如果成本计算是按含税金额计算的，那么就不要抓应付立账上的金额
                 #如果成本计算是按未税金额计算的，那么就抓应付立账的，抓不到再抓入库
                 IF g_cost_taxed = 'N' THEN #Add zhangllc 150810
#wujie 160519 --begin60529
                   #161024-00006#1-s-mark
                   #LET g_sql =
                   ##"UPDATE xcck_tmp SET xcck202a = (SELECT SUM(apcb118) FROM apca_t,apcb_t",   #160823-00040#1 mark
                   #"UPDATE xcck_tmp SET xcck202a = (SELECT SUM(apcb113) FROM apca_t,apcb_t",   #160823-00040#1
                   #"                                 WHERE apcaent   = apcbent AND apcaent = '",g_enterprise,"'",
                   #"                                   AND apcald    = apcbld  AND apcald  = '",g_ld,"'",
                   #"                                   AND apcadocno = apcbdocno",
                   #"                                   AND apcastus  = 'Y'",
                   #"                                   AND apcb023   = 'N'",  #排除冲暂估的 # mod 1
                   #"                                   AND apcb001 in ('1','11','20','21')", #来源类型是入库\验退\仓退单(现发现aapt210和aapt300栏位选项不一致，先把1也写进去)
                   #"                                   AND apcb002   = xcck006",
                   #"                                   AND apcb003   = xcck007",
                   #"                                   AND apcadocdt BETWEEN '",g_bdate,"' AND '",g_edate,"')",                   #
                   #"                   ,xcck042 =  (SELECT apcb102 FROM (",
                   #"                                SELECT * FROM apca_t,apcb_t",      
                   #"                                 WHERE apcaent   = apcbent AND apcaent = '",g_enterprise,"'",
                   #"                                   AND apcald    = apcbld  AND apcald  = '",g_ld,"'",
                   #"                                   AND apcadocno = apcbdocno",
                   #"                                   AND apcastus  = 'Y'",
                   #"                                   AND apcb023   = 'N'",                  #排除冲暂估的 # mod 1
                   #"                                   AND apcb001 in ('1','11','20','21')",  #来源类型是入库\验退\仓退单(现发现aapt210>和aapt300栏位选项不一致，先把1也写进去)
                   #"                                   AND apcb002   = xcck006",
                   #"                                   AND apcb003   = xcck007",
                   #"                                   AND apcadocdt BETWEEN '",g_bdate,"' AND '",g_edate,"'",
                   #"                                 ORDER BY apcadocdt DESC) tsed",
                   #"                                 WHERE rownum = 1)",                  
                   #   " WHERE xcck055 = '2011' "#mod zhangllc 151203 '201'->'2011'
                   #
                   #PREPARE s_axcp500_avg_upd_xcck1 FROM g_sql
                   #
                   #IF SQLCA.sqlcode THEN
                   #   INITIALIZE g_errparam TO NULL
                   #   LET g_errparam.code   = SQLCA.sqlcode
                   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_upd_xcck1"
                   #   LET g_errparam.popup  = TRUE
                   #   CALL cl_err()
                   #   RETURN r_success
                   #END IF
                   #EXECUTE s_axcp500_avg_upd_xcck1
                   #161024-00006#1-e-mark                     
#                    UPDATE xcck_tmp SET xcck202a = (SELECT SUM(apcb118) FROM apca_t,apcb_t
#                                                     WHERE apcaent   = apcbent AND apcaent = g_enterprise
#                                                       AND apcald    = apcbld  AND apcald  = g_ld
#                                                       AND apcadocno = apcbdocno
#                                                       AND apcastus  = 'Y'
#                                                       AND apcb023   = 'N'  #排除冲暂估的 # mod 1
#                                                       AND apcb001 in ('1','11','20','21') #来源类型是入库\验退\仓退单(现发现aapt210和aapt300栏位选项不一致，先把1也写进去)
#                                                       AND apcb002   = xcck006
#                                                       AND apcb003   = xcck007
#                                                       AND apcadocdt BETWEEN g_bdate AND g_edate )
#                                      #151029 Sarah add -----(S) 汇率
#                                       ,xcck042 =  (SELECT apcb102 FROM (
#                                                    SELECT * FROM apca_t,apcb_t
#                                                     WHERE apcaent   = apcbent AND apcaent = g_enterprise
#                                                       AND apcald    = apcbld  AND apcald  = g_ld
#                                                       AND apcadocno = apcbdocno
#                                                       AND apcastus  = 'Y'
#                                                       AND apcb023   = 'N'  #排除冲暂估的 # mod 1
#                                                       AND apcb001 in ('1','11','20','21') #来源类型是入库\验退\仓退单(现发现aapt210>和aapt300栏位选项不一致，先把1也写进去)
#                                                       AND apcb002   = xcck006
#                                                       AND apcb003   = xcck007
#                                                       AND apcadocdt BETWEEN g_bdate AND g_edate 
#                                                     ORDER BY apcadocdt DESC)
#                                                     WHERE rownum = 1 )
#                                      #151029 Sarah add -----(E)
#
#                     WHERE xcck055 = '2011' #mod zhangllc 151203 '201'->'2011'
#wujie 160519 --end
                 #Add zhangllc 150810 --begin
               
                 #mark zhangllc 150906 --begin
                 #ELSE 
                 #   UPDATE xcck_tmp SET xcck202a = (SELECT SUM(apcb115) FROM apca_t,apcb_t
                 #                                    WHERE apcaent   = apcbent AND apcaent = g_enterprise
                 #                                      AND apcald    = apcbld  AND apcald  = g_ld
                 #                                      AND apcadocno = apcbdocno
                 #                                      AND apcastus  = 'Y'
                 #                                      AND apcb023   = 'N'  #排除冲暂估的 # mod 1
                 #                                      AND apcb001 in ('1','11','20','21') #来源类型是入库\验退\仓退单(现发现aapt210和aapt300栏位选项不一致，先把1也写进去)
                 #                                      AND apcb002   = xcck006
                 #                                      AND apcb003   = xcck007
                 #                                      AND apcadocdt BETWEEN g_bdate AND g_edate )
                 #    WHERE xcck055 = '2011' #mod zhangllc 151203 '201'->'2011'
                 ##mark zhangllc 150906 --end
                 #160829-00020#1---add---s
                 #161024-00006#1-s-add


                   #LET g_sql = "UPDATE xcck_tmp SET xcck202a = (SELECT SUM(apcb113) FROM apca_t,apcb_t",      #160823-00040#1 #161114-00003#1 mark
                    #LET g_sql = "UPDATE xcck_tmp SET xcck202a = (SELECT /*+ PARALLEL(4) */ SUM(apcb113) FROM apca_t,apcb_t",   #161114-00003#1 add     #170110-00028#1                 
                    LET g_sql = "UPDATE xcck_tmp SET xcck202a = (SELECT SUM(apcb113) FROM apca_t,apcb_t",   #161114-00003#1 add     #170110-00028#1                 
                                "                                 WHERE apcaent   = apcbent AND apcaent = ",g_enterprise,
                                "                                   AND apcald    = apcbld  AND apcald  = '",g_ld,"'",
                                "                                   AND apcadocno = apcbdocno",
                                "                                   AND apcastus  = 'Y' ",
                                "                                   AND apcb023   = 'N' ",  #排除冲暂估的 # mod 1
                                "                                   AND apcb001 IN ('1','11','20','21')", #来源类型是入库\验退\仓退单(现发现aapt210和aapt300栏位选项不一致，先把1也写进去)
                                "                                   AND apcb002   = xcck006",
                                "                                   AND apcb003   = xcck007",
                                "                                   AND apcadocdt BETWEEN '",g_bdate,"' AND '",g_edate,"')",
                                " WHERE xcck055 = '2011' "
                    PREPARE s_axcp500_avg_upd_xcck1 FROM g_sql
                    
                    IF SQLCA.sqlcode THEN
                       INITIALIZE g_errparam TO NULL
                       LET g_errparam.code   = SQLCA.sqlcode
                       LET g_errparam.extend = "PREPARE s_axcp500_avg_upd_xcck1"
                       LET g_errparam.popup  = TRUE
                       CALL cl_err()
                       RETURN r_success
                    END IF
                    EXECUTE s_axcp500_avg_upd_xcck1
                    

                    CREATE INDEX xcck_tmp_i06 ON xcck_tmp(xcck006,xcck007) #161114-00003#1 add #ODI-ORA#
                    IF cl_db_generate_analyze("xcck_tmp") THEN END IF   #181207-00006#1 add
                    #PGS(D)-00824 ---start---
                    LET g_sql = "MERGE INTO xcck_tmp ", 
#                                "     USING ( SELECT apcb002,apcb003,apcb102,rank() OVER(PARTITION BY apcb002,apcb003 order by apcadocdt DESC) as rank ",  #170617-00032#1 remark   #180904-00049#1 mark
                                #"     USING ( SELECT apcb002,apcb003,apcb102,rank() OVER(PARTITION BY apcb002,apcb003 order by apcadocdt,apcadocno DESC) as rank ",  #180904-00049#1 mod 添加单据编号作为排序依据，可能会出现同一天的多张单号 #200227-00009#1 mark
                                "     USING ( SELECT apcb002,apcb003,apcb102,row_number() OVER(PARTITION BY apcb002,apcb003 order by apcadocdt,apcadocno DESC) as rank ",  #200227-00009#1
                                #"     USING ( SELECT DISTINCT apcb002,apcb003,apcb102 ",                #161114-00003#1 add #170617-00032#1 mark
                                "               FROM apca_t,apcb_t ",
                                "              WHERE apcaent   = apcbent AND apcaent = ",g_enterprise,
                                "                AND apcald    = apcbld  AND apcald  = '",g_ld,"'",
                                "                AND apcadocno = apcbdocno",
                                "                AND apcastus  = 'Y'",
                                "                AND apcb023   = 'N'",                  #排除沖暫估                               
                               #161114-00003#1-s-mark
                               #"                AND apcb001 IN ('1','11','20','21')",                                     #來源類型是入庫\驗退\倉退單(現發現aapt210>和aapt300欄位選項不一致，先把1也寫進去)
                               #"                AND apcadocdt BETWEEN '",g_bdate,"' AND '",g_edate,"'",                   
                               #161114-00003#1-e-mark
                               #161114-00003#1-s-add
                                "                AND (apcb001 ='1' OR apcb001 = '11' OR apcb001='20' OR apcb001 = '21')",  #來源類型是入庫\驗退\倉退單(現發現aapt210>和aapt300欄位選項不一致，先把1也寫進去) 
                                "                AND apcadocdt >='",g_bdate,"' AND apcadocdt <='",g_edate,"'", 
                               #161114-00003#1-e-add 
                                "            )",                               
                                "        ON (xcck006 = apcb002 AND xcck007 = apcb003 AND rank = 1) ", #161114-00003#1 mark  #170617-00032#1 remark
                                #"        ON (xcck006 = apcb002 AND xcck007 = apcb003 ) ",             #161114-00003#1 add  #170617-00032#1 mark                               
                                " WHEN MATCHED THEN   ",         
                                " UPDATE SET xcck042 = apcb102 ",
                                "  WHERE xcck055 = '2011' "
                    #PGS(D)-00824 --- end ---
                    PREPARE s_axcp500_avg_upd_xcck2 FROM g_sql
                    
                    IF SQLCA.sqlcode THEN
                       INITIALIZE g_errparam TO NULL
                       LET g_errparam.code   = SQLCA.sqlcode
                       LET g_errparam.extend = "PREPARE s_axcp500_avg_upd_xcck2"
                       LET g_errparam.popup  = TRUE
                       CALL cl_err()
                       RETURN r_success
                    END IF
                    EXECUTE s_axcp500_avg_upd_xcck2
                   #161024-00006#1-e-add
                 ELSE 
                    UPDATE xcck_tmp SET xcck202a = (SELECT SUM(apcb115) FROM apca_t,apcb_t
                                                     WHERE apcaent   = apcbent AND apcaent = g_enterprise
                                                       AND apcald    = apcbld  AND apcald  = g_ld
                                                       AND apcadocno = apcbdocno
                                                       AND apcastus  = 'Y'
                                                       AND apcb023   = 'N'  #排除冲暂估的 # mod 1
                                                       AND apcb001 in ('1','11','20','21') #来源类型是入库\验退\仓退单(现发现aapt210和aapt300栏位选项不一致，先把1也写进去)
                                                       AND apcb002   = xcck006
                                                       AND apcb003   = xcck007
                                                       AND apcadocdt BETWEEN g_bdate AND g_edate )
                     WHERE xcck055 = '2011'                  
                 #160829-00020#1---add---e
                 END IF
                 #Add zhangllc 150810 --end
                 IF SQLCA.sqlcode THEN
                    INITIALIZE g_errparam TO NULL
                    LET g_errparam.code   = SQLCA.sqlcode
                    LET g_errparam.extend = "UPDATE xcck_tmp:201-1"
                    LET g_errparam.popup  = TRUE
                    CALL s_axcp500_ins_error('','','','','','','','','','','',
                                             '',SQLCA.sqlcode,'','UPDATE xcck_tmp:201-1')         
                    CALL cl_err()
                    RETURN r_success
                 END IF
                 
                 #入库单金额
                 IF g_cost_taxed = 'N' THEN
                    UPDATE xcck_tmp SET xcck202a = (SELECT pmdt038 * exrate FROM pmds_t,pmdt_t,s_curr_tmp
                                                     WHERE pmdsent   = pmdtent   AND pmdtent   = g_enterprise
                                                       AND pmdsdocno = pmdtdocno AND pmdtdocno = xcck006
                                                       AND pmdtseq   = xcck007 
                                                       AND ex_date   = xcck013
                                                       AND curr1     = pmds037
                                                       AND curr2     = g_curr[p_seq].curr )
                     WHERE xcck055  = '2011'    #mod zhangllc 151203 '201'->'2011'
                       #160826-00022#2-s
                       ##160823-00028#1-s
                       ##AND (xcck202a = 0 OR xcck202a IS NULL)               
                       # AND xcck202a IS NULL
                       ##160823-00028#1-e
                       AND (xcck202a = 0 OR xcck202a IS NULL)
                       #AND NOT EXISTS (SELECT 1 FROM xcck_tmp,apca_t,apcb_t WHERE xcck055 = '2011'   #160829-00020#1 mark
                       AND NOT EXISTS (SELECT 1 FROM apca_t,apcb_t WHERE xcck055 = '2011'   #160829-00020#1 add
                                  AND apcaent   = apcbent AND apcaent = g_enterprise
                                  AND apcald    = apcbld  AND apcald  = g_ld
                                  AND apcadocno = apcbdocno
                                  AND apcastus  = 'Y'
                                  AND apcb023   = 'N'
                                  AND apcb001 in ('1','11','20','21')
                                  AND apcb002   = xcck006
                                  AND apcb003   = xcck007
                                  AND apcadocdt BETWEEN g_bdate AND g_edate)
                       #160826-00022#2-e
                 ELSE
                    UPDATE xcck_tmp SET xcck202a = (SELECT pmdt039 * exrate FROM pmds_t,pmdt_t,s_curr_tmp
                                                     WHERE pmdsent   = pmdtent   AND pmdtent   = g_enterprise
                                                       AND pmdsdocno = pmdtdocno AND pmdtdocno = xcck006
                                                       AND pmdtseq   = xcck007 
                                                       AND ex_date   = xcck013
                                                       AND curr1     = pmds037
                                                       AND curr2     = g_curr[p_seq].curr )
                     WHERE xcck055  = '2011'   #mod zhangllc 151203 '201'->'2011' 
                       #160826-00022#2-s
                       ##160823-00028#1-s
                       ##AND (xcck202a = 0 OR xcck202a IS NULL)               
                       # AND xcck202a IS NULL
                       ##160823-00028#1-e
                       AND (xcck202a = 0 OR xcck202a IS NULL)               
                       #AND NOT EXISTS (SELECT 1 FROM xcck_tmp,apca_t,apcb_t WHERE xcck055 = '2011'    #160829-00020#1 mark
                       AND NOT EXISTS (SELECT 1 FROM apca_t,apcb_t WHERE xcck055 = '2011'              #160829-00020#1 add
                                  AND apcaent   = apcbent AND apcaent = g_enterprise
                                  AND apcald    = apcbld  AND apcald  = g_ld
                                  AND apcadocno = apcbdocno
                                  AND apcastus  = 'Y'
                                  AND apcb023   = 'N'
                                  AND apcb001 in ('1','11','20','21')
                                  AND apcb002   = xcck006
                                  AND apcb003   = xcck007
                                  AND apcadocdt BETWEEN g_bdate AND g_edate)
                       #160826-00022#2-e
                 
                 END IF
                 IF SQLCA.sqlcode THEN
                    INITIALIZE g_errparam TO NULL
                    LET g_errparam.code   = SQLCA.sqlcode
                    LET g_errparam.extend = "UPDATE xcck_tmp:201-2"
                    LET g_errparam.popup  = TRUE
                    CALL s_axcp500_ins_error('','','','','','','','','','','',
                                             '',SQLCA.sqlcode,'','UPDATE xcck_tmp:201-2')         
                    CALL cl_err()
                    RETURN r_success
                 END IF   
                 #add zhangllc 150810 --begin
                 #根据项次总数量和项序数量计算比率进行分配采购金额
                 CALL s_axcp500_avg_get_ap_sum(p_seq) RETURNING l_success
                 IF NOT l_success THEN
                    RETURN r_success
                 END IF
                 #add zhangllc 150810 --end
                 
                 #add zhangllc 151203 --begin
                 #取结算底稿单的金额stdf_t
                 IF g_cost_taxed = 'N' THEN
                    UPDATE xcck_tmp SET xcck202a = (SELECT stdf018 * exrate FROM stdf_t,s_curr_tmp,ooef_t  #170120-00013#1
                                                     WHERE stdfent = g_enterprise
                                                       AND stdf006 = xcck006 AND stdf007 = xcck007 
                                                       AND stdf037 = xcck008 AND stdf038 = xcck009
                                                       AND ooefent = stdfent AND ooef001=stdfsite AND ooef017 = g_comp  #170120-00013#1s
                                                       AND ex_date = xcck013
                                                       AND curr1   = stdf014
                                                       AND curr2   = g_curr[p_seq].curr )
                     WHERE xcck055  = '2012' 
                       AND (xcck202a = 0 OR xcck202a IS NULL)               
                 ELSE
                    UPDATE xcck_tmp SET xcck202a = (SELECT stdf019 * exrate FROM stdf_t,s_curr_tmp,ooef_t  #170120-00013#1
                                                     WHERE stdfent = g_enterprise
                                                       AND stdf006 = xcck006 AND stdf007 = xcck007 
                                                       AND stdf037 = xcck008 AND stdf038 = xcck009
                                                       AND ooefent = stdfent AND ooef001=stdfsite AND ooef017 = g_comp  #170120-00013#1
                                                       AND ex_date = xcck013
                                                       AND curr1   = stdf014
                                                       AND curr2   = g_curr[p_seq].curr )
                     WHERE xcck055  = '2012' 
                       AND (xcck202a = 0 OR xcck202a IS NULL)       
                 END IF
                 IF SQLCA.sqlcode THEN
                    INITIALIZE g_errparam TO NULL
                    LET g_errparam.code   = SQLCA.sqlcode
                    LET g_errparam.extend = "UPDATE xcck_tmp:2012"
                    LET g_errparam.popup  = TRUE
                    CALL s_axcp500_ins_error('','','','','','','','','','','',
                                             '',SQLCA.sqlcode,'','UPDATE xcck_tmp:2012')
                    CALL cl_err()
                    RETURN r_success
                 END IF
                 #add zhangllc 151203 --end
        WHEN '2'
        
        WHEN '3'
   END CASE
   
   #采购的xcck202赋值
   UPDATE xcck_tmp SET xcck202 = xcck202a
    #WHERE xcck055  = '201'   
    WHERE xcck055 in ('2011','2012')    #mod zhangllc 151203
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202 = xcck202a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202 = xcck202a')         
#     RETURN r_success
   END IF
   
   #采购的平均单价重置
   #UPDATE xcck_tmp SET xcck282 = xcck202 / xcck201, xcck282a = xcck202a / xcck201 #170705-00006#1 mark
   UPDATE xcck_tmp SET xcck282 = ( CASE xcck201 WHEN 0 THEN 0 ELSE xcck202 / xcck201 END),  xcck282a = ( CASE xcck201 WHEN 0 THEN 0 ELSE xcck202a / xcck201 END) #170705-00006#1 add
    #WHERE xcck055  = '201' 
    WHERE xcck055 in ('2011','2012')    #mod zhangllc 151203     
      AND xcck201 <> 0
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck282 = xcck202 / xcck201"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck282 = xcck202 / xcck201')         
#     RETURN r_success
   END IF 
   
   #add 151205 增加以下sql的执行效能

   CREATE INDEX xcck_tmp_i03 ON xcck_tmp(xcck055,xcck020) #ODI-ORA#
   #IF cl_db_generate_analyze("xcck_tmp") THEN END IF
   #add 151205 end
   
   MESSAGE "set_xcck_1:upd xcck202:xcck055=211/115/401/*301 "
   #xcck055 = 211.杂收入库 OR xcck020 = 115.当站下线 OR xcck020 = 401.调拨 OR xcck020 = 301.杂项出库 & g_sys_6004 杂项补单价='2'
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp ",
               "      USING xccw_t ",
               "          ON ( xcckent = xccwent ",
               "         AND   xcckld  = xccwld  ",
               "         AND   xcck001 = xccw001 ",
               "         AND   xcck002 = xccw002 ",
               "         AND   xcck003 = xccw003 ",
               "         AND   xcck004 = xccw004 ",
               "         AND   xcck005 = xccw005 ",
               "         AND   xcck006 = xccw006 ",
               "         AND   xcck007 = xccw007 ",
               "         AND   xcck008 = xccw008 ",
               "         AND   xcck009 = xccw009 "
   #180125-00005#1 add-S 当站下线：人工设定时，取axct314的资料，如果是系统设定，则抓xccc的资料
   IF g_sys_6025 = '1' THEN
      IF g_sys_6004 = '2' THEN
         LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '401' OR xcck020 = '301' OR xcck020 = '301X') ) "    #161109-00032#3 
      ELSE
         LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '401' ) ) "   
      END IF
   ELSE
   #180125-00005#1 add-E
   IF g_sys_6004 = '2' THEN
      #LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '115' OR xcck020 = '401' OR xcck020 = '301') ) "    #161109-00032#3 
      LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '115' OR xcck020 = '401' OR xcck020 = '301' OR xcck020 = '301X') ) "    #161109-00032#3 
   ELSE
      LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '115' OR xcck020 = '401' ) ) "   
   END IF
   END IF   #180125-00005#1 add
   LET g_sql = g_sql CLIPPED,
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcck202  = nvl(xccw202 ,0) ,  ",
               "                xcck202a = nvl(xccw202a,0) ,  ",
               "                xcck202b = nvl(xccw202b,0) ,  ",
               "                xcck202c = nvl(xccw202c,0) ,  ",
               "                xcck202d = nvl(xccw202d,0) ,  ",
               "                xcck202e = nvl(xccw202e,0) ,  ",
               "                xcck202f = nvl(xccw202f,0) ,  ",
               "                xcck202g = nvl(xccw202g,0) ,  ",
               "                xcck202h = nvl(xccw202h,0) ,  ",   
               "                xcck282  = nvl(xccw282 ,0) ,  ",
               "                xcck282a = nvl(xccw282a,0) ,  ",
               "                xcck282b = nvl(xccw282b,0) ,  ",
               "                xcck282c = nvl(xccw282c,0) ,  ",
               "                xcck282d = nvl(xccw282d,0) ,  ",
               "                xcck282e = nvl(xccw282e,0) ,  ",
               "                xcck282f = nvl(xccw282f,0) ,  ",
               "                xcck282g = nvl(xccw282g,0) ,  ",
               "                xcck282h = nvl(xccw282h,0)    "   

   
#   LET g_sql = " UPDATE xcck_tmp a SET (a.xcck202,a.xcck202a,a.xcck202b,a.xcck202c,a.xcck202d,a.xcck202e,a.xcck202f,a.xcck202g,a.xcck202h) =  ",
#               "                     ( SELECT SUM(b.xccw202 ),SUM(b.xccw202a),SUM(b.xccw202b),SUM(b.xccw202c),SUM(b.xccw202d),",
#               "                              SUM(b.xccw202e),SUM(b.xccw202f),SUM(b.xccw202g),SUM(b.xccw202h) ",
#               "                        FROM xccw_t b ",
#               "                       WHERE b.xccwent = a.xcckent ",
#               "                         AND b.xccwld  = a.xcckld  ",
#               "                         AND b.xccw001 = a.xcck001 ",
#               "                         AND b.xccw002 = a.xcck002 ",
#               "                         AND b.xccw003 = a.xcck003 ",
#               "                         AND b.xccw004 = a.xcck004 ",
#               "                         AND b.xccw005 = a.xcck005 ",
#               "                         AND b.xccw006 = a.xcck006 ",
#               "                         AND b.xccw007 = a.xcck007 ",
#               "                         AND b.xccw008 = a.xcck008 ",
#               "                         AND b.xccw009 = a.xcck009 ) "
#   IF g_sys_6004 = '2' THEN
#      LET g_sql = g_sql CLIPPED," WHERE a.xcck055 = '211' OR a.xcck020 = '115' OR a.xcck020 = '401' OR a.xcck020 = '301' "   
#   ELSE
#      LET g_sql = g_sql CLIPPED," WHERE a.xcck055 = '211' OR a.xcck020 = '115' OR a.xcck020 = '401' "   
#   END IF

   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_p2')         
#     RETURN r_success
   END IF

   EXECUTE s_axcp500_avg1_set_xcck_p2
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_p2')         
#     RETURN r_success
   END IF   
   #add zhangllc 150817 --begin
   #杂收，或杂发如果是人工设定的，取不到axct312，取杂收杂发单上的单价和金额(单价用金额反算，考虑异动单位不一定是成本算的基础单位)
   #取inbc，取不到取inbb
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp ",
               "      USING inbc_t ",
               "          ON ( xcckent = inbcent ",
               "         AND   xcck006 = inbcdocno ",
               "         AND   xcck007 = inbcseq ",
               "         AND   xcck008 = inbcseq1 "
   IF g_sys_6004 = '2' THEN
      #LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '301') ) "    #161109-00032#3 
      LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '301' OR xcck020 = '301X') ) "    #161109-00032#3 
   ELSE
      LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' ) ) "   
   END IF
   LET g_sql = g_sql CLIPPED,
   #mod zhangllc 150906 杂收发可能录入负数，所以增加“*xcck009”
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcck202  = nvl(inbc207,0)*xcck009 ,  ",
               "                xcck202a = nvl(inbc207,0)*xcck009 ,  ",
               "                xcck202b = 0 ,  ",
               "                xcck202c = 0 ,  ",
               "                xcck202d = 0 ,  ",
               "                xcck202e = 0 ,  ",
               "                xcck202f = 0 ,  ",
               "                xcck202g = 0 ,  ",
               "                xcck202h = 0 ,  ",   
               #"                xcck282  = nvl(inbc207,0)/xcck201*xcck009,  ",  #170705-00006#1 mark
               #"                xcck282a = nvl(inbc207,0)/xcck201*xcck009,  ",  #170705-00006#1 mark
               "                xcck282  = ( CASE xcck201*xcck009 WHEN 0 THEN 0 ELSE nvl(inbc207,0)/xcck201*xcck009 END),  ", #170705-00006#1 add
               "                xcck282a = ( CASE xcck201*xcck009 WHEN 0 THEN 0 ELSE nvl(inbc207,0)/xcck201*xcck009 END),  ", #170705-00006#1 add
               "                xcck282b = 0 ,  ",
               "                xcck282c = 0 ,  ",
               "                xcck282d = 0 ,  ",
               "                xcck282e = 0 ,  ",
               "                xcck282f = 0 ,  ",
               "                xcck282g = 0 ,  ",
               "                xcck282h = 0    ",
               "      WHERE   xcck202 = 0 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_p21 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_p21"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_p21')
   END IF
   EXECUTE s_axcp500_avg1_set_xcck_p21
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_p21"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_p21')
   END IF
   
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp ",
               "      USING inbb_t ",
               "          ON ( xcckent = inbbent ",
               "         AND   xcck006 = inbbdocno ",
               "         AND   xcck007 = inbbseq "
   IF g_sys_6004 = '2' THEN
      #LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '301') ) "    #161109-00032#3 
      LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' OR xcck020 = '301' OR xcck020 = '301X') ) "    #161109-00032#3 
   ELSE
      LET g_sql = g_sql CLIPPED," AND (xcck055 = '211' ) ) "   
   END IF
   LET g_sql = g_sql CLIPPED,
   #mod zhangllc 150906 杂收发可能录入负数，所以增加“*xcck009”
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcck202  = nvl(inbb208,0)*xcck009 ,  ",
               "                xcck202a = nvl(inbb208,0)*xcck009 ,  ",
               "                xcck202b = 0 ,  ",
               "                xcck202c = 0 ,  ",
               "                xcck202d = 0 ,  ",
               "                xcck202e = 0 ,  ",
               "                xcck202f = 0 ,  ",
               "                xcck202g = 0 ,  ",
               "                xcck202h = 0 ,  ",   
               #"                xcck282  = nvl(inbb208,0)/xcck201*xcck009,  ", #170705-00006#1 mark
               #"                xcck282a = nvl(inbb208,0)/xcck201*xcck009,  ", #170705-00006#1 mark
               "                xcck282  = ( CASE xcck201*xcck009 WHEN 0 THEN 0 ELSE nvl(inbb208,0)/xcck201*xcck009 END),  ", #170705-00006#1 add
               "                xcck282a = ( CASE xcck201*xcck009 WHEN 0 THEN 0 ELSE nvl(inbb208,0)/xcck201*xcck009 END),  ", #170705-00006#1 add
               "                xcck282b = 0 ,  ",
               "                xcck282c = 0 ,  ",
               "                xcck282d = 0 ,  ",
               "                xcck282e = 0 ,  ",
               "                xcck282f = 0 ,  ",
               "                xcck282g = 0 ,  ",
               "                xcck282h = 0    ",
               "      WHERE   xcck202 = 0 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_p22 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_p22"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_p22')
   END IF
   EXECUTE s_axcp500_avg1_set_xcck_p22
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_p22"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_p22')
   END IF
   #add zhangllc 150817 --end
   
   LET g_sql = "UPDATE xcck_tmp SET xcck202  = nvl(xcck202 ,0),xcck202a = nvl(xcck202a,0),xcck202b = nvl(xcck202b,0),xcck202c = nvl(xcck202c,0),",
               "                    xcck202d = nvl(xcck202d,0),xcck202e = nvl(xcck202e,0),xcck202f = nvl(xcck202f,0),",
               "                    xcck202g = nvl(xcck202g,0),xcck202h = nvl(xcck202h,0) "
   PREPARE s_axcp500_avg1_set_xcck_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_p4')         
#     RETURN r_success
   END IF

   EXECUTE s_axcp500_avg1_set_xcck_p4
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_p4')         
#     RETURN r_success
   END IF

   #add zhangllc SBS8--s xcck202小数取位
   #xcck202a~xcck202h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                         "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), ",
                         "                    xcck202e = round(xcck202e,? ), xcck202f = round(xcck202f,? ), ",
                         "                    xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? )  "
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                         "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), ",
                         "                    xcck202e = trunc(xcck202e,? ), xcck202f = trunc(xcck202f,? ), ",
                         "                    xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202,?) ",
                         "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202,?)",
                         "                                END ),",
                         "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a,?) ",
                         "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                                END ),",
                         "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b,?) ",
                         "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b,?)",
                         "                                END ),",
                         "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c,?) ",
                         "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c,?)",
                         "                                END ),",
                         "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d,?) ",
                         "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d,?)",
                         "                                END ),",
                         "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e,?) ",
                         "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e,?)",
                         "                                END ),",
                         "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f,?) ",
                         "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f,?)",
                         "                                END ),",
                         "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g,?) ",
                         "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g,?)",
                         "                                END ),",
                         "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h,?) ",
                         "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h,?)",
                         "                                END )"
        #201119-00005#1 add--e        
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                         "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                         "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                         "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                         "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                         "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                         "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                         "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                         "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?) "
        #180802-00015#1 add-E
   END CASE
   PREPARE s_axcp500_avg1_set_xcck_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p3')         
#     RETURN r_success
   END IF
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcck_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p3')         
#     RETURN r_success
   END IF      
   #add zhangllc SBS8--e


   MESSAGE "set_xcck_1:balance "
   #修正xcck202的值-先修至xcck202a,若xcck202a为零,则修正xcck202b......
   UPDATE xcck_tmp SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)   
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #170222-00055#1---add---s
      AND xcck202a >= xcck202b AND xcck202a >= xcck202c
      AND xcck202a >= xcck202d AND xcck202a >= xcck202e
      AND xcck202a >= xcck202f AND xcck202a >= xcck202g
      AND xcck202a >= xcck202h
      #170222-00055#1---add---e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')         
#     RETURN r_success
   END IF   
      
   UPDATE xcck_tmp SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #170222-00055#1---add---s
      AND xcck202b >= xcck202c
      AND xcck202b >= xcck202d AND xcck202b >= xcck202e
      AND xcck202b >= xcck202f AND xcck202b >= xcck202g
      AND xcck202b >= xcck202h
      #170222-00055#1---add---e   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #170222-00055#1---add---s
      AND xcck202c >= xcck202d AND xcck202c >= xcck202e
      AND xcck202c >= xcck202f AND xcck202c >= xcck202g
      AND xcck202c >= xcck202h
      #170222-00055#1---add---e    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #170222-00055#1---add---s
      AND xcck202d >= xcck202e
      AND xcck202d >= xcck202f AND xcck202d >= xcck202g
      AND xcck202d >= xcck202h
      #170222-00055#1---add---e  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #170222-00055#1---add---s
      AND xcck202e >= xcck202f AND xcck202e >= xcck202g
      AND xcck202e >= xcck202h
      #170222-00055#1---add---e    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #170222-00055#1---add---s
      AND xcck202f >= xcck202g
      AND xcck202f >= xcck202h
      #170222-00055#1---add---e   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #170222-00055#1---add---s
      AND xcck202g >= xcck202h
      #170222-00055#1---add---e   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')         
#     RETURN r_success
   END IF   
   
   MESSAGE "set_xcck_1:round "
   #计算平均单价
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcck_tmp SET xcck282  = round(xcck282 ,?),xcck282a = round(xcck282a,?), ",
                         "                    xcck282b = round(xcck282b,?), ",
                         "                    xcck282c = round(xcck282c,?),xcck282d = round(xcck282d,?), ",
                         "                    xcck282e = round(xcck282e,?),xcck282f = round(xcck282f,?), ",
                         "                    xcck282g = round(xcck282g,?),xcck282h = round(xcck282h,?)  ",
                         " WHERE xcck201 <> 0 "

        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcck_tmp SET xcck282  = trunc(xcck282 ,?),xcck282a = trunc(xcck282a,?), ",
                         "                    xcck282b = trunc(xcck282b,?), ",
                         "                    xcck282c = trunc(xcck282c,?),xcck282d = trunc(xcck282d,?), ",
                         "                    xcck282e = trunc(xcck282e,?),xcck282f = trunc(xcck282f,?), ",
                         "                    xcck282g = trunc(xcck282g,?),xcck282h = trunc(xcck282h,?)  ",
                         " WHERE xcck201 <> 0 "       
       #180802-00015#1 add-S
       WHEN '2'  #四舍六入五成双
       #201119-00005#1 add--s           
            LET g_sql = "UPDATE xcck_tmp SET xcck282  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                          THEN ROUND(xcck282,?) ",
                        "                                                          ELSE ROUND(xcck282,?)-(1/power(10,?)) ",
                        "                                                     END) ",
                        "                                      ELSE ROUND(xcck282,?)",
                        "                                END ),",
                        "                    xcck282a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                         THEN ROUND(xcck282a,?) ",
                        "                                                         ELSE ROUND(xcck282a,?)-(1/power(10,?)) ",
                        "                                                    END) ",
                        "                                     ELSE ROUND(xcck282a,?)",
                        "                                END ),",
                        "                    xcck282b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                         THEN ROUND(xcck282b,?) ",
                        "                                                         ELSE ROUND(xcck282b,?)-(1/power(10,?)) ",
                        "                                                    END) ",
                        "                                     ELSE ROUND(xcck282b,?)",
                        "                                END ),",
                        "                    xcck282c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                         THEN ROUND(xcck282c,?) ",
                        "                                                         ELSE ROUND(xcck282c,?)-(1/power(10,?)) ",
                        "                                                    END) ",
                        "                                     ELSE ROUND(xcck282c,?)",
                        "                                END ),",
                        "                    xcck282d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                         THEN ROUND(xcck282d,?) ",
                        "                                                         ELSE ROUND(xcck282d,?)-(1/power(10,?)) ",
                        "                                                    END) ",
                        "                                     ELSE ROUND(xcck282d,?)",
                        "                                END ),",
                        "                    xcck282e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                         THEN ROUND(xcck282e,?) ",
                        "                                                         ELSE ROUND(xcck282e,?)-(1/power(10,?)) ",
                        "                                                    END) ",
                        "                                     ELSE ROUND(xcck282e,?)",
                        "                                END ),",
                        "                    xcck282f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                         THEN ROUND(xcck282f,?) ",
                        "                                                         ELSE ROUND(xcck282f,?)-(1/power(10,?)) ",
                        "                                                    END) ",
                        "                                     ELSE ROUND(xcck282f,?)",
                        "                                END ),",
                        "                    xcck282g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                         THEN ROUND(xcck282g,?) ",
                        "                                                         ELSE ROUND(xcck282g,?)-(1/power(10,?)) ",
                        "                                                    END) ",
                        "                                     ELSE ROUND(xcck282g,?)",
                        "                                END ),",
                        "                    xcck282h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                        "                                                         THEN ROUND(xcck282h,?) ",
                        "                                                         ELSE ROUND(xcck282h,?)-(1/power(10,?)) ",
                        "                                                    END) ",
                        "                                     ELSE ROUND(xcck282h,?)",
                        "                                END )",
                        " WHERE xcck201 <> 0 "
       #201119-00005#1 add--e       
       WHEN '4'  #无条件进位
            LET g_sql = "UPDATE xcck_tmp SET xcck282  = ceil(xcck282 *power(10,?))/power(10,?),",
                        "                    xcck282a = ceil(xcck282a*power(10,?))/power(10,?),",
                        "                    xcck282b = ceil(xcck282b*power(10,?))/power(10,?),",
                        "                    xcck282c = ceil(xcck282c*power(10,?))/power(10,?),",
                        "                    xcck282d = ceil(xcck282d*power(10,?))/power(10,?),",
                        "                    xcck282e = ceil(xcck282e*power(10,?))/power(10,?),",
                        "                    xcck282f = ceil(xcck282f*power(10,?))/power(10,?),",
                        "                    xcck282g = ceil(xcck282g*power(10,?))/power(10,?),",
                        "                    xcck282h = ceil(xcck282h*power(10,?))/power(10,?) ",
                        " WHERE xcck201 <> 0 "
       #180802-00015#1 add-E                               
   END CASE                               
   PREPARE s_axcp500_avg1_set_xcck_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_p3')         
#     RETURN r_success
   END IF
   
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcck_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                            g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                            g_curr[p_seq].digit1
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                  g_curr[p_seq].digit1
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282a
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282b
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282c
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282d
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282e
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282f
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282g
                                                  g_curr[p_seq].digit1,g_curr[p_seq].digit1    #xcck282h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_p3')         
#     RETURN r_success
   END IF        
   
#   #更新xcck280的值班
#   UPDATE xcck_tmp SET xcck282a   = xcck282 - (xcck282b + xcck282c + xcck282d + xcck282e + xcck282f + xcck282g + xcck282h) ,
#                       xcckcrtdt = l_date                      
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck282"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck282')         
##     RETURN r_success
#   END IF     

  #160816-00015#2-s-add
  MESSAGE "set_xcck_p6:upd xcck033=galb005 "
  #PGS(D)-00824 ---start---
  LET g_sql = "MERGE INTO xcck_tmp a ",
              "     USING (        ",
              #190411-00017#1 B mark-S
#              "             SELECT xcckent,xcckld,xcck001,xcck003,xcck004,  ",
#              "                    xcck005,xcck006,xcck007,xcck008,xcck009, ",
#              "                    CASE ooeg008 WHEN '1' THEN glab005 WHEN '2' THEN glab006 ",
#              "                                 WHEN '3' THEN glab007 WHEN '4' THEN glab009 END galb005 ",
#              "               FROM xcck_tmp,ooeg_t,glab_t ",
#              "              WHERE xcckent = ooegent AND xcck025 = ooeg001 ",
#              "                AND xcckent = glabent AND xcckld = glabld AND glab001 = '11' ",
#              "                AND glab002 = '216' AND glab003 = xcck021 ",
#              "                AND xcckent = ",g_enterprise," AND xcckld = '",g_ld,"' AND xcck001 = '",p_seq,"' ",
#              "                AND xcck003 = '",g_xcat001,"' AND xcck004 = ",g_yy," AND xcck005 = ",g_pp,
#              #"                AND xcck020 IN ('101','301')) b ",   #161109-00032#3
#              "                AND xcck020 IN ('101','301','301X')) b ",   #161109-00032#3
              #190411-00017#1 B mark-E
              #190411-00017#1 B add-S
              "             SELECT xcckent,xcckld,xcck001,xcck003,xcck004,  ",
              "                    xcck005,xcck006,xcck007,xcck008,xcck009, ",
              "                    CASE ooeg008 WHEN '1' THEN glab005 WHEN '2' THEN glab006 ",
              "                                 WHEN '3' THEN glab007 WHEN '4' THEN glab009 END galb005 ",
              "               FROM xcck_tmp,ooeg_t,glab_t ",
              "              WHERE xcckent = ooegent AND xcck025 = ooeg001 ",
              "                AND xcckent = glabent AND xcckld = glabld AND glab001 = '11' ",
              "                AND glab002 = '216' AND glab003 = xcck021 ",
              "                AND xcckent = ",g_enterprise," AND xcckld = '",g_ld,"' AND xcck001 = '",p_seq,"' ",
              "                AND xcck003 = '",g_xcat001,"' AND xcck004 = ",g_yy," AND xcck005 = ",g_pp,
              "                AND xcck020 = '101' ",   
              "              UNION ALL ",
              "             SELECT xcckent,xcckld,xcck001,xcck003,xcck004,  ",
              "                    xcck005,xcck006,xcck007,xcck008,xcck009, ",
              "                    CASE ooeg008 WHEN '1' THEN glab005 WHEN '2' THEN glab006 ",
              "                                 WHEN '3' THEN glab007 WHEN '4' THEN glab009 END galb005 ",
              "               FROM xcck_tmp,ooeg_t,glab_t ",
              "              WHERE xcckent = ooegent AND xcck025 = ooeg001 ",
              "                AND xcckent = glabent AND xcckld = glabld AND glab001 = '11' ",
              "                AND glab002 = '216' AND glab003 = xcck021 ",
              "                AND xcckent = ",g_enterprise," AND xcckld = '",g_ld,"' AND xcck001 = '",p_seq,"' ",
              "                AND xcck003 = '",g_xcat001,"' AND xcck004 = ",g_yy," AND xcck005 = ",g_pp,
              "                AND xcck020 = '301' ", 
              "              UNION ALL ",
              "             SELECT xcckent,xcckld,xcck001,xcck003,xcck004,  ",
              "                    xcck005,xcck006,xcck007,xcck008,xcck009, ",
              "                    CASE ooeg008 WHEN '1' THEN glab005 WHEN '2' THEN glab006 ",
              "                                 WHEN '3' THEN glab007 WHEN '4' THEN glab009 END galb005 ",
              "               FROM xcck_tmp,ooeg_t,glab_t ",
              "              WHERE xcckent = ooegent AND xcck025 = ooeg001 ",
              "                AND xcckent = glabent AND xcckld = glabld AND glab001 = '11' ",
              "                AND glab002 = '216' AND glab003 = xcck021 ",
              "                AND xcckent = ",g_enterprise," AND xcckld = '",g_ld,"' AND xcck001 = '",p_seq,"' ",
              "                AND xcck003 = '",g_xcat001,"' AND xcck004 = ",g_yy," AND xcck005 = ",g_pp,
              "                AND xcck020 = '301X') b ", 
              #190411-00017#1 B add-E
              "       ON (a.xcckent = b.xcckent AND a.xcckld = b.xcckld AND ",
              "           a.xcck001 = b.xcck001 AND a.xcck003 = b.xcck003 AND ",
              "           a.xcck004 = b.xcck004 AND a.xcck005 = b.xcck005 AND ",
              "           a.xcck006 = b.xcck006 AND a.xcck007 = b.xcck007 AND ",
              "           a.xcck008 = b.xcck008 AND a.xcck009 = b.xcck009 ) ",
              " WHEN MATCHED THEN ",
              "   UPDATE SET a.xcck033 = b.galb005 ",
              "    WHERE trim(a.xcck033) IS NULL "
  #PGS(D)-00824 --- end ---
  PREPARE s_axcp500_avg1_set_xcck_p6 FROM g_sql
  IF SQLCA.sqlcode THEN
     INITIALIZE g_errparam TO NULL
     LET g_errparam.code   = SQLCA.sqlcode
     LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_p6"
     LET g_errparam.popup  = TRUE
     CALL cl_err()
     CALL s_axcp500_ins_error('','','','','','','','','','','',
                              '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_p6')         
  END IF               
  EXECUTE s_axcp500_avg1_set_xcck_p6
  IF SQLCA.sqlcode THEN
     INITIALIZE g_errparam TO NULL
     LET g_errparam.code   = SQLCA.sqlcode
     LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_p6"
     LET g_errparam.popup  = TRUE
     CALL cl_err()
  END IF                 
  #160816-00015#2-e-add  
   
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(16,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 整批写xcck - 入库类型
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xcck_2(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xcck_2(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xcck_t.xcck001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_xccd002       LIKE xccd_t.xccd002
   DEFINE l_xcck          type_g_xcck1 #170605-00013#1-add
   #170605-00013#1-s-mark 改用type方式
   #DEFINE l_xcck          RECORD 
   #                       xccksite    LIKE xcck_t.xccksite,
   #                       xcck002     LIKE xcck_t.xcck002,
   #                       xcck006     LIKE xcck_t.xcck006,
   #                       xcck007     LIKE xcck_t.xcck007,
   #                       xcck008     LIKE xcck_t.xcck008,
   #                       xcck009     LIKE xcck_t.xcck009,
   #                       xcck010     LIKE xcck_t.xcck010,
   #                       xcck047     LIKE xcck_t.xcck047,
   #                       xcck049     LIKE xcck_t.xcck049,
   #                       xcck201     LIKE xcck_t.xcck201   
   #                       END RECORD
   #170605-00013#1-e-mark
   DEFINE l_sum           RECORD
                          sum  LIKE xccc_t.xccc202,
                          a    LIKE xccc_t.xccc202a,
                          b    LIKE xccc_t.xccc202b,
                          c    LIKE xccc_t.xccc202c,
                          d    LIKE xccc_t.xccc202d,
                          e    LIKE xccc_t.xccc202e,
                          f    LIKE xccc_t.xccc202f,
                          g    LIKE xccc_t.xccc202g,
                          h    LIKE xccc_t.xccc202h
                          END RECORD                          
   DEFINE l_date          DATETIME YEAR TO SECOND

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME
   
   LET l_date = cl_get_current()
   
   MESSAGE "set_xcck_2:xccd302->xcck202"  
   #190411-00017#1 A mark-S
#   DECLARE s_axcp500_avg1_set_xcck_2_cs1 CURSOR FOR 
#    #      site組織  成本域  參考單號 項次    項序     出入庫碼 料號    特性    重複性生產-生產料號 本期異動數量
#    #SELECT xccksite,xcck002,xcck006,xcck007,xcck008,xcck009,xcck010,xcck047,xcck049,xcck201 FROM xcck_tmp,s_axcp500_tmp          #170603-00020#1 mark
#    #181026-00070#1---mod---s
#    #SELECT DISTINCT xccksite,xcck002,xcck006,xcck007,xcck008,xcck009,xcck010,xcck047,xcck049,xcck201 FROM xcck_tmp,s_axcp500_tmp  #170603-00020#1 add
#    SELECT DISTINCT xccksite,xcck002,xcck006,xcck007,xcck008,xcck009,xcck010,xcck047,xcck049,xcck201
#      FROM xcck_tmp,s_axcp500_tmp,sfac_tmp2
#    #181026-00070#1---mod---e 
#     WHERE xcck055 IN ('203','205')  #委外入库,工单入库
#       AND xcck020 <> '109'   #排除委外倉退  #170329-00068#1
#       AND xcck010 = imaa001
#       AND xcck011 = xccc007    #add zhangllc 150730
#       #181026-00070#1---mod---s
#       #AND xcbb006 = p_xcbb006
#       AND xcck047 = sfacdocno
#       AND clevel = p_xcbb006
#       #181026-00070#1---mod---e       
#     ORDER BY xcck047,xcck201   #161115-00004#1 add 同一張工單數量小的先算，大的後算，調尾差才會調到最大筆
   #190411-00017#1 A mark-E
   #190411-00017#1 A add-S
   DECLARE s_axcp500_avg1_set_xcck_2_cs1 CURSOR FOR 
    #      site組織  成本域  參考單號 項次    項序     出入庫碼 料號    特性    重複性生產-生產料號 本期異動數量
    SELECT DISTINCT xccksite,xcck002,xcck006,xcck007,xcck008,xcck009,xcck010,xcck047,xcck049,xcck201
      FROM xcck_tmp
     WHERE xcck055 IN ('203','205')  #委外入库,工单入库
       AND xcck020 <> '109'   #排除委外倉退
       AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcck011 = xccc007)
       AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xcck047 = sfacdocno AND clevel = p_xcbb006)  
     ORDER BY xcck047,xcck201
   #190411-00017#1 A add-E
   FOREACH s_axcp500_avg1_set_xcck_2_cs1 INTO l_xcck.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH s_axcp500_avg1_set_xcck_2_cs1'
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg1_set_xcck_2_cs1')
            
         CONTINUE FOREACH   
      END IF
      
      MESSAGE "set_xcck_2:xccd302->xcck202:",l_xcck.xcck047
      
      LET l_xccd002 = ' '
      IF g_field_type = '1' THEN
         LET l_xccd002 = l_xcck.xcck002
      END IF   
      CALL s_axcp500_avg_get_store_in_sum(p_seq,l_xccd002,l_xcck.xcck201,l_xcck.xcck047,l_xcck.xcck049,l_xcck.xccksite,
                                          l_xcck.xcck010,l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
           RETURNING l_sum.*  
 
      UPDATE xcck_tmp SET xcck202  = l_sum.sum, xcck202a = l_sum.a, xcck202b = l_sum.b,
                          xcck202c = l_sum.c,   xcck202d = l_sum.d, xcck202e = l_sum.e,
                          xcck202f = l_sum.f,   xcck202g = l_sum.g, xcck202h = l_sum.h
       WHERE xcckent = g_enterprise
         AND xcckld  = g_ld
         AND xcck001 = p_seq
         AND xcck002 = l_xcck.xcck002
         AND xcck003 = g_xcat001
         AND xcck004 = g_yy
         AND xcck005 = g_pp
         AND xcck006 = l_xcck.xcck006
         AND xcck007 = l_xcck.xcck007
         AND xcck008 = l_xcck.xcck008
         AND xcck009 = l_xcck.xcck009         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck203/xcck205 sum"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck203/xcck205 sum')         
#        RETURN r_success
      END IF   
   
      LET g_stat_cnt = g_stat_cnt + 1
   
   END FOREACH
   
   #xcck202a~xcck202h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                         "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), ",
                         "                    xcck202e = round(xcck202e,? ), xcck202f = round(xcck202f,? ), ",
                         "                    xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? )  ",
                         #mod zhangllc 150730 --begin
                         #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"
                         #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #170112-00041#1
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #170112-00041#1  #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")"  #170112-00041#1  #190411-00017#1 B mod
                         #mod zhangllc 150730 --end

                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                         "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), ",
                         "                    xcck202e = trunc(xcck202e,? ), xcck202f = trunc(xcck202f,? ), ",
                         "                    xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? )  ",
                         #mod zhangllc 150730 --begin
                         #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"
                         #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007  FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #170112-00041#1
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #170112-00041#1  #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")"  #170112-00041#1  #190411-00017#1 B mod
                         #mod zhangllc 150730 --end

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202,?) ",
                         "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202,?)",
                         "                                END ),",
                         "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a,?) ",
                         "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                                END ),",
                         "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b,?) ",
                         "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b,?)",
                         "                                END ),",
                         "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c,?) ",
                         "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c,?)",
                         "                                END ),",
                         "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d,?) ",
                         "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d,?)",
                         "                                END ),",
                         "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e,?) ",
                         "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e,?)",
                         "                                END ),",
                         "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f,?) ",
                         "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f,?)",
                         "                                END ),",
                         "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g,?) ",
                         "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g,?)",
                         "                                END ),",
                         "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h,?) ",
                         "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h,?)",
                         "                                END )",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")"  #170112-00041#1  #190411-00017#1 B mod
        #201119-00005#1 add--e        
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                         "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                         "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                         "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                         "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                         "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                         "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                         "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                         "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?) ",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")"  #170112-00041#1  #190411-00017#1 B mod
        #180802-00015#1 add-E
                         
   END CASE                         
   PREPARE s_axcp500_avg1_set_xcck_2_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_2_p1')         
#     RETURN r_success
   END IF

   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcck_2_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_2_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_2_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_2_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_2_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_2_p1')         
#     RETURN r_success
   END IF      

   #修正xcck202的值-先修至xcck202a,若xcck202a为零,则修正xcck202b......
   UPDATE xcck_tmp SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)   
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011   #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006)
      #mod zhangllc 150730 --end    
      #170222-00055#1---add---s
      AND xcck202a >= xcck202b AND xcck202a >= xcck202c
      AND xcck202a >= xcck202d AND xcck202a >= xcck202e
      AND xcck202a >= xcck202f AND xcck202a >= xcck202g
      AND xcck202a >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')         
#     RETURN r_success
   END IF   


   UPDATE xcck_tmp SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
      #170222-00055#1---add---s
      AND xcck202b >= xcck202c
      AND xcck202b >= xcck202d AND xcck202b >= xcck202e
      AND xcck202b >= xcck202f AND xcck202b >= xcck202g
      AND xcck202b >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #170222-00055#1---add---s
      AND xcck202c >= xcck202d AND xcck202c >= xcck202e
      AND xcck202c >= xcck202f AND xcck202c >= xcck202g
      AND xcck202c >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
#     RETURN r_success
   END IF

   UPDATE xcck_tmp SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
      #170222-00055#1---add---s
      AND xcck202d >= xcck202e
      AND xcck202d >= xcck202f AND xcck202d >= xcck202g
      AND xcck202d >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #170222-00055#1---add---s
      AND xcck202e >= xcck202f AND xcck202e >= xcck202g
      AND xcck202e >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end    
      #170222-00055#1---add---s
      AND xcck202f >= xcck202g
      AND xcck202f >= xcck202h
      #170222-00055#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #170222-00055#1---add---s
      AND xcck202g >= xcck202h
      #170222-00055#1---add---e        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')         
#     RETURN r_success
   END IF   
    
   #计算平均单价
   CASE g_round_type
        WHEN '1'   #四舍五入

             LET g_sql = "UPDATE xcck_tmp SET xcck282  = round(xcck202 /xcck201,?),xcck282a = round(xcck202a/xcck201,?),xcck282b = round(xcck202b/xcck201,?), ",
                         "                    xcck282c = round(xcck202c/xcck201,?),xcck282d = round(xcck202d/xcck201,?), ",
                         "                    xcck282e = round(xcck202e/xcck201,?),xcck282f = round(xcck202f/xcck201,?), ",
                         "                    xcck282g = round(xcck202g/xcck201,?),xcck282h = round(xcck202h/xcck201,?)  ",

            
                         #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add     #170112-00041#1                      
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #170112-00041#1  #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #170112-00041#1  #190411-00017#1 B mod                     
                         #mod zhangllc 150730 --end
                         "   AND xcck201 <> 0 ",
                         "   AND xcck055 IN ('203','205') "

        WHEN '3'   #无条件截位

             LET g_sql = "UPDATE xcck_tmp SET xcck282  = trunc(xcck202 /xcck201,?),xcck282a = trunc(xcck202a/xcck201,?),xcck282b = trunc(xcck202b/xcck201,?), ",
                         "                    xcck282c = trunc(xcck202c/xcck201,?),xcck282d = trunc(xcck202d/xcck201,?), ",
                         "                    xcck282e = trunc(xcck202e/xcck201,?),xcck282f = trunc(xcck202f/xcck201,?), ",
                         "                    xcck282g = trunc(xcck202g/xcck201,?),xcck282h = trunc(xcck202h/xcck201,?)  ",
             
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add  #170112-00041#1                        
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #170112-00041#1     #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #170112-00041#1  #190411-00017#1 B mod                   
                        #mod zhangllc 150730 --end
                         "   AND xcck201 <> 0 ",
                         "   AND xcck055 IN ('203','205') "

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck282  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202/xcck201,?) ",
                         "                                                          ELSE ROUND(xcck202/xcck201,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202/xcck201,?)",
                         "                                END ),",
                         "                    xcck282a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202a/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a/xcck201,?)",
                         "                                END ),",
                         "                    xcck282b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202b/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b/xcck201,?)",
                         "                                END ),",
                         "                    xcck282c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202c/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c/xcck201,?)",
                         "                                END ),",
                         "                    xcck282d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202d/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d/xcck201,?)",
                         "                                END ),",
                         "                    xcck282e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202e/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e/xcck201,?)",
                         "                                END ),",
                         "                    xcck282f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202f/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f/xcck201,?)",
                         "                                END ),",
                         "                    xcck282g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202g/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g/xcck201,?)",
                         "                                END ),",
                         "                    xcck282h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202h/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h/xcck201,?)",
                         "                                END )",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",   #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                         "   AND xcck201 <> 0 ",
                         "   AND xcck055 IN ('203','205') "
        #201119-00005#1 add--e        
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck282  = ceil(xcck202 /xcck201*power(10,?))/power(10,?),",
                         "                    xcck282a = ceil(xcck202a/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282b = ceil(xcck202b/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282c = ceil(xcck202c/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282d = ceil(xcck202d/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282e = ceil(xcck202e/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282f = ceil(xcck202f/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282g = ceil(xcck202g/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282h = ceil(xcck202h/xcck201*power(10,?))/power(10,?) ",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",   #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                         "   AND xcck201 <> 0 ",
                         "   AND xcck055 IN ('203','205') "
        #180802-00015#1 add-E                         
                         
   END CASE                               
   PREPARE s_axcp500_avg1_set_xcck_2_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_2_p2')         
#     RETURN r_success
   END IF

   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcck_2_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
   #180802-00015#1 mark-E
   
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_2_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_2_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_2_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_2_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282a
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282b
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282c
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282d
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282e
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282f
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282g
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1    #xcck282h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_2_p2')         
#     RETURN r_success
   END IF        


   #更新xcck280的值班
   UPDATE xcck_tmp SET xcck282a   = xcck282 - (xcck282b + xcck282c + xcck282d + xcck282e + xcck282f + xcck282g + xcck282h) ,
                       xcckcrtdt = l_date
    #mod zhangllc 150730 --begin
    #WHERE xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end    
      AND xcck055 IN ('203','205')    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202')         
#     RETURN r_success
   END IF      
   
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(17,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 整批写xcck - 215.销退
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xcck_2_2(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2018-09-05 By 02295
# Modify.........: 180905-00006#1
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xcck_2_2(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xcck_t.xcck001
   DEFINE r_success       LIKE type_t.num5                       
   DEFINE l_date          DATETIME YEAR TO SECOND

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET l_date = cl_get_current()

   #215.销退  
   #180308-00016#1---add---s
   #当期初数量+本期入库数量+返工领出数量+返工入库数量<0时,销退的数量则算成当期影响成本,xcck055='215'
   #IF g_sys_6006 = '2' THEN  #200416-00033#1 mark
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO sale_return_tmp a",
                  " USING (SELECT xccc001,xccc002,xccc006,xccc007,xccc008 ",
                  "          FROM ( SELECT xccc001,xccc002,xccc006,xccc007,xccc008, ",
                  "                       xccc101,xccc201,xccc203,xccc205,xccc211,xccc213,xccc215,xccc217,",
                  "                       SUM(xcck201*xcck009) a",
                  "                  FROM xccc_tmp,xcck_tmp",
                  "                 WHERE xcckent = xcccent ",
                  "                   AND xcckld  = xcccld  ",
                  "                   AND xcck001 = xccc001 ",
                  "                   AND xcck002 = xccc002 ",
                  "                   AND xcck003 = xccc003 ",
                  "                   AND xcck004 = xccc004 ",
                  "                   AND xcck005 = xccc005 ",
                  "                   AND xcck010 = xccc006 ",
                  "                   AND xcck011 = xccc007 ",
                  "                   AND xcck017 = xccc008 ",
                  "                   AND xcck055 IN('207','209')",
                  "                 GROUP by xccc001,xccc002,xccc006,xccc007,xccc008,",
                  "                          xccc101,xccc201,xccc203,xccc205,xccc211,xccc213,xccc215,xccc217) ",
                  #"         WHERE xccc101+xccc201+xccc203+xccc205+xccc211+xccc213+xccc215+xccc217+a<=0) b",  #210115-00025#1 mark
                  "         WHERE xccc101+xccc201+xccc203+xccc205+xccc211+xccc213+xccc215+xccc217+a<0) b",    #210115-00025#1
                  "          ON ( a.xcck001 = b.xccc001 ",
                  "         AND   a.xcck002 = b.xccc002 ",
                  "         AND   a.xcck010 = b.xccc006 ",
                  "         AND   a.xcck011 = b.xccc007 ",
                  "         AND   a.xcck017 = b.xccc008 )",
                  "  WHEN MATCHED THEN    ",
                  "  UPDATE SET a.xcck055 = '215'",
                  "       WHERE a.xcck055 = '305' "
      #PGS(D)-00824 --- end ---    
      PREPARE s_axcp500_avg1_set_xcck_3_p2_3 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p2_3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p2_3')         
      END IF


      EXECUTE s_axcp500_avg1_set_xcck_3_p2_3 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p2_3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p2_3')         
      END IF   
   #END IF  #200416-00033#1 mark   
   #180308-00016#1---add---e   
   
   #sale_return_tmp 中凡成本为零时,用目前的xccc280来更新
   #g_sys_6005 = '2.当前月成本"时,全部更新
   #g_sys_6005 = '1.原始出货月成本"时,若取不到成本时,才要更新
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO sale_return_tmp a",
               "      USING xccc_tmp b ",
               "         ON (xcck001 = xccc001 ",
               "        AND  xcck002 = xccc002 ",
               "        AND  xcck010 = xccc006 ",
               "        AND  xcck011 = xccc007 ",
               "        AND  xcck017 = xccc008 ",
               "        AND  xcck055 = '215'   ", 
               #mod zhangllc 150730 --begin
               #"        AND  xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"        AND  (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               "        AND  (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1 #190411-00017#1 B mark
               "        AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",  #190411-00017#1 B mod
               #mod zhangllc 150730 --end            
               "  WHEN MATCHED THEN ",
               "       UPDATE SET a.xccc280  = b.xccc280, ",
               "                  a.xccc280a = b.xccc280a, ",
               "                  a.xccc280b = b.xccc280b, ",
               "                  a.xccc280c = b.xccc280c, ",
               "                  a.xccc280d = b.xccc280d, ",
               "                  a.xccc280e = b.xccc280e, ",
               "                  a.xccc280f = b.xccc280f, ",
               "                  a.xccc280g = b.xccc280g, ",
               "                  a.xccc280h = b.xccc280h  ",
               "        WHERE a.xccc280 = 0 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_3_p2_1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p2_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p2_1')         
#     RETURN r_success
   END IF


   EXECUTE s_axcp500_avg1_set_xcck_3_p2_1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p2_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p2_1')         
#     RETURN r_success
   END IF                

   
   #用sale_return_tmp中每笔明细单据的单位成本更新xcck_tmp
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp a ",
               "      USING sale_return_tmp b ",
               "          ON ( a.xcck001 = b.xcck001 ",
               "         AND   a.xcck002 = b.xcck002 ",
               "         AND   a.xcck006 = b.xcck006 ",
               "         AND   a.xcck007 = b.xcck007 ",
               "         AND   a.xcck008 = b.xcck008 ",
               "         AND   a.xcck009 = b.xcck009 ",               
               #"        AND   a.xcck055 = '215' ",   #190103-00040#1 mark
               "         AND   b.xcck055 = '215' ",   #190103-00040#1
               #mod zhangllc 150730 --begin
               #"         AND   a.xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND  (a.xcck010,a.xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
#               "         AND  (a.xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1   #190411-00017#1 B mark
               "         AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE a.xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",  #190411-00017#1 B mod
               #mod zhangllc 150730 --end 
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcck202  = nvl(xcck201 * b.xccc280 ,0),  ",
               "                a.xcck202a = nvl(xcck201 * b.xccc280a,0),  ",
               "                a.xcck202b = nvl(xcck201 * b.xccc280b,0),  ",
               "                a.xcck202c = nvl(xcck201 * b.xccc280c,0),  ",
               "                a.xcck202d = nvl(xcck201 * b.xccc280d,0),  ",
               "                a.xcck202e = nvl(xcck201 * b.xccc280e,0),  ",
               "                a.xcck202f = nvl(xcck201 * b.xccc280f,0),  ",
               "                a.xcck202g = nvl(xcck201 * b.xccc280g,0),  ",
               "                a.xcck202h = nvl(xcck201 * b.xccc280h,0)   "
               #180706-00041#1---add---s               
               ,"              ,a.xcck282  = NVL(b.xccc280 ,0),  ",
               "                a.xcck282a = NVL(b.xccc280a,0),  ",
               "                a.xcck282b = NVL(b.xccc280b,0),  ",
               "                a.xcck282c = NVL(b.xccc280c,0),  ",
               "                a.xcck282d = NVL(b.xccc280d,0),  ",
               "                a.xcck282e = NVL(b.xccc280e,0),  ",
               "                a.xcck282f = NVL(b.xccc280f,0),  ",
               "                a.xcck282g = NVL(b.xccc280g,0),  ",
               "                a.xcck282h = NVL(b.xccc280h,0)   "   
               #180706-00041#1---add---e
               ,"              ,a.xcck055 = '215' "   #190103-00040#1 add #200416-00033#1 mark  #200807-00025#1 remark
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_3_p2_2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p2_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p2_2')         
#     RETURN r_success
   END IF


   EXECUTE s_axcp500_avg1_set_xcck_3_p2_2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p2_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p2_2')         
#     RETURN r_success
   END IF 
      
   #xcck202a~xcck202h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                         "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), ",
                         "                    xcck202e = round(xcck202e,? ), xcck202f = round(xcck202f,? ), ",
                         "                    xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? )  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add   #170112-00041#1                      
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #170112-00041#1   #190411-00017#1 B mark
                        "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                   
                        #mod zhangllc 150730 --end
                         "   AND xcck055 IN ('215') "

                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                         "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), ",
                         "                    xcck202e = trunc(xcck202e,? ), xcck202f = trunc(xcck202f,? ), ",
                         "                    xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? )  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add  #170112-00041#1
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add  #170112-00041#1  #190411-00017#1 B mark
                        "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                        #mod zhangllc 150730 --end
                         "   AND xcck055 IN ('215') "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202,?) ",
                         "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202,?)",
                         "                                END ),",
                         "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a,?) ",
                         "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                                END ),",
                         "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b,?) ",
                         "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b,?)",
                         "                                END ),",
                         "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c,?) ",
                         "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c,?)",
                         "                                END ),",
                         "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d,?) ",
                         "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d,?)",
                         "                                END ),",
                         "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e,?) ",
                         "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e,?)",
                         "                                END ),",
                         "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f,?) ",
                         "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f,?)",
                         "                                END ),",
                         "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g,?) ",
                         "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g,?)",
                         "                                END ),",
                         "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h,?) ",
                         "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h,?)",
                         "                                END )",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",     #190411-00017#1 B mark
                        "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                  
                         "   AND xcck055 IN ('215') " 
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                         "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                         "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                         "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                         "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                         "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                         "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                         "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                         "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?) ",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",     #190411-00017#1 B mark
                        "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                  
                         "   AND xcck055 IN ('215') "      
        #180802-00015#1 add-E
                         
   END CASE                         
   PREPARE s_axcp500_avg1_set_xcck_2_2_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p3')         
   END IF


   #181016-00001#1---add---s
   #EXECUTE s_axcp500_avg1_set_xcck_2_2_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
   #                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
   #                                           g_curr[p_seq].digit2
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_2_2_p3 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_2_2_p3 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_2_2_p3 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_2_2_p3 USING g_curr[1].digit2,g_curr[1].digit2,   #xcck202
                                                      g_curr[1].digit2,g_curr[1].digit2,   #xcck202a
                                                      g_curr[1].digit2,g_curr[1].digit2,   #xcck202b
                                                      g_curr[1].digit2,g_curr[1].digit2,   #xcck202c
                                                      g_curr[1].digit2,g_curr[1].digit2,   #xcck202d
                                                      g_curr[1].digit2,g_curr[1].digit2,   #xcck202e
                                                      g_curr[1].digit2,g_curr[1].digit2,   #xcck202f
                                                      g_curr[1].digit2,g_curr[1].digit2,   #xcck202g
                                                      g_curr[1].digit2,g_curr[1].digit2    #xcck202h
   END CASE   
   #181016-00001#1---add---e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_2_2_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_2_2_p3')         
   END IF      


   #修正xcck202的值-先修至xcck202a,若xcck202a为零,则修正xcck202b......
   UPDATE xcck_tmp SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)   
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 
                     AND xcbb006 = p_xcbb006)       
      AND xcck055 IN ('215')
      AND xcck202a >= xcck202b AND xcck202a >= xcck202c
      AND xcck202a >= xcck202d AND xcck202a >= xcck202e
      AND xcck202a >= xcck202f AND xcck202a >= xcck202g
      AND xcck202a >= xcck202h      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')         
   END IF   


   UPDATE xcck_tmp SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010
                     AND xcbb006 = p_xcbb006)        
      AND xcck055 IN ('215') 
      AND xcck202b >= xcck202c
      AND xcck202b >= xcck202d AND xcck202b >= xcck202e
      AND xcck202b >= xcck202f AND xcck202b >= xcck202g
      AND xcck202b >= xcck202h      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')         
   END IF   
   UPDATE xcck_tmp SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 
                     AND xcbb006 = p_xcbb006)       
      AND xcck055 IN ('215')
      AND xcck202c >= xcck202d AND xcck202c >= xcck202e
      AND xcck202c >= xcck202f AND xcck202c >= xcck202g
      AND xcck202c >= xcck202h      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
   END IF  


   UPDATE xcck_tmp SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 
                     AND xcbb006 = p_xcbb006)        
      AND xcck055 IN ('215')
      AND xcck202d >= xcck202e
      AND xcck202d >= xcck202f AND xcck202d >= xcck202g
      AND xcck202d >= xcck202h     
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
   END IF   
   UPDATE xcck_tmp SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010
                     AND xcbb006 = p_xcbb006)    
      AND xcck055 IN ('215') 
      AND xcck202e >= xcck202f AND xcck202e >= xcck202g
      AND xcck202e >= xcck202h     
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         

   END IF 


   UPDATE xcck_tmp SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 
                     AND xcbb006 = p_xcbb006)
      AND xcck055 IN ('215')
      AND xcck202f >= xcck202g
      AND xcck202f >= xcck202h        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')         
   END IF   
   UPDATE xcck_tmp SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 
                     AND xcbb006 = p_xcbb006)       
      AND xcck055 IN ('215') 
      AND xcck202g >= xcck202h    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')         
   END IF   
   UPDATE xcck_tmp SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 
                     AND xcbb006 = p_xcbb006) 
      AND xcck055 IN ('215')  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')         
   END IF   
   
   LET r_success = TRUE
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 整批写xcck - 207.重工领用 215.销退
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xcck_3(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xcck_3(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xcck_t.xcck001
   DEFINE r_success       LIKE type_t.num5                       
   DEFINE l_date          DATETIME YEAR TO SECOND

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET l_date = cl_get_current()
   
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME
   
   #add zhangllc 160529--s SBS3

   CREATE INDEX xcck_tmp_i05 ON xcck_tmp (xcckent, xcckld,xcck001, xcck003,xcck004, xcck005,xcck010,xcck011,xcck017 ) #ODI-ORA#
   IF cl_db_generate_analyze("xcck_tmp") THEN END IF
   #add zhangllc 160529--e
   
   #207.重工领用
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp ",
               "      USING xccc_tmp ",
               "          ON ( xcckent = xcccent ",
               "         AND   xcckld  = xcccld  ",
               "         AND   xcck001 = xccc001 ",
               "         AND   xcck002 = xccc002 ",
               "         AND   xcck003 = xccc003 ",
               "         AND   xcck004 = xccc004 ",
               "         AND   xcck005 = xccc005 ",
               "         AND   xcck010 = xccc006 ",
               "         AND   xcck011 = xccc007 ",
               "         AND   xcck017 = xccc008 ",
               "         AND   xcck055 = '207' ",
               #mod zhangllc 150730 --begin
               #"         AND   xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               "         AND   (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1  #190411-00017#1 B mark
               #"         AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",  #190411-00017#1 B mod #191126-00020#1 mark
               "         AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 <= ",p_xcbb006,"))",                        #191126-00020#1 add
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcck202  = nvl(xcck201 * xccc280 ,0) ,  ",
               "                xcck202a = nvl(xcck201 * xccc280a,0) ,  ",
               "                xcck202b = nvl(xcck201 * xccc280b,0) ,  ",
               "                xcck202c = nvl(xcck201 * xccc280c,0) ,  ",
               "                xcck202d = nvl(xcck201 * xccc280d,0) ,  ",
               "                xcck202e = nvl(xcck201 * xccc280e,0) ,  ",
               "                xcck202f = nvl(xcck201 * xccc280f,0) ,  ",
               "                xcck202g = nvl(xcck201 * xccc280g,0) ,  ",
               "                xcck202h = nvl(xcck201 * xccc280h,0)    " 
               #181224-00058#1---add---s
               ,"             , xcck282  = nvl(xccc280 ,0) ,  ",
               "                xcck282a = nvl(xccc280a,0) ,  ",
               "                xcck282b = nvl(xccc280b,0) ,  ",
               "                xcck282c = nvl(xccc280c,0) ,  ",
               "                xcck282d = nvl(xccc280d,0) ,  ",
               "                xcck282e = nvl(xccc280e,0) ,  ",
               "                xcck282f = nvl(xccc280f,0) ,  ",
               "                xcck282g = nvl(xccc280g,0) ,  ",
               "                xcck282h = nvl(xccc280h,0)    " 
               #181224-00058#1---add---e
               #160728-00020#1 --- add Start ---
               #下階領上階時明細資料已給值，不需重新更新
               #下階領上階時，元件取前期單價
               #191126-00020#1 mark(s)
#              ,"    WHERE xcck202 = 0 AND xcck202a = 0 AND xcck202b = 0 ",
#               "      AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 ",
#               "      AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0 ",
               #191126-00020#1 mark(e)
               #160728-00020#1 --- add End ---
               #161004-00001#1-s-add
               #"       AND EXISTS (SELECT 1 FROM sfac_tmp2 ",  #191126-00020#1 mark
              ,"     WHERE EXISTS (SELECT 1 FROM sfac_tmp2 ",   #191126-00020#1 add               
               "                    WHERE sfac_tmp2.sfacdocno= xcck047 ",
               "                      AND sfac_tmp2.clevel   = ",p_xcbb006," ) "               
               #161004-00001#1-e-add
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_3_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p1')         
#     RETURN r_success
   END IF

   EXECUTE s_axcp500_avg1_set_xcck_3_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p1')         
#     RETURN r_success
   END IF          
 
#180905-00006#1---mark---s 
#   #215.销退  
#   #180308-00016#1---add---s
#   #当期初数量+本期入库数量+返工领出数量+返工入库数量<0时,销退的数量则算成当期影响成本,xcck055='215'
#   IF g_sys_6006 = '2' THEN
#      LET g_sql = " MERGE INTO sale_return_tmp a",
#                  " USING (SELECT xccc001,xccc002,xccc006,xccc007,xccc008 ",
#                  "          FROM ( SELECT xccc001,xccc002,xccc006,xccc007,xccc008, ",
#                  "                       xccc101,xccc201,xccc203,xccc205,xccc211,xccc213,xccc215,xccc217,",
#                  "                       SUM(xcck201*xcck009) a",
#                  "                  FROM xccc_tmp,xcck_tmp",
#                  "                 WHERE xcckent = xcccent ",
#                  "                   AND xcckld  = xcccld  ",
#                  "                   AND xcck001 = xccc001 ",
#                  "                   AND xcck002 = xccc002 ",
#                  "                   AND xcck003 = xccc003 ",
#                  "                   AND xcck004 = xccc004 ",
#                  "                   AND xcck005 = xccc005 ",
#                  "                   AND xcck010 = xccc006 ",
#                  "                   AND xcck011 = xccc007 ",
#                  "                   AND xcck017 = xccc008 ",
#                  "                   AND xcck055 IN('207','209')",
#                  "                 GROUP by xccc001,xccc002,xccc006,xccc007,xccc008,",
#                  "                          xccc101,xccc201,xccc203,xccc205,xccc211,xccc213,xccc215,xccc217) ",
#                  "         WHERE xccc101+xccc201+xccc203+xccc205+xccc211+xccc213+xccc215+xccc217+a<=0) b",
#                  "          ON ( a.xcck001 = b.xccc001 ",
#                  "         AND   a.xcck002 = b.xccc002 ",
#                  "         AND   a.xcck010 = b.xccc006 ",
#                  "         AND   a.xcck011 = b.xccc007 ",
#                  "         AND   a.xcck017 = b.xccc008 )",
#                  "  WHEN MATCHED THEN    ",
#                  "  UPDATE SET a.xcck055 = '215'",
#                  "       WHERE a.xcck055 = '305' "                  
#    PREPARE s_axcp500_avg1_set_xcck_3_p2_3 FROM g_sql
#    IF SQLCA.sqlcode THEN
#       INITIALIZE g_errparam TO NULL
#       LET g_errparam.code   = SQLCA.sqlcode
#       LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p2_3"
#       LET g_errparam.popup  = TRUE
#       CALL cl_err()
#       CALL s_axcp500_ins_error('','','','','','','','','','','',
#                                '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p2_3')         
#    END IF
#   
#    EXECUTE s_axcp500_avg1_set_xcck_3_p2_3 
#    IF SQLCA.sqlcode THEN
#       INITIALIZE g_errparam TO NULL
#       LET g_errparam.code   = SQLCA.sqlcode
#       LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p2_3"
#       LET g_errparam.popup  = TRUE
#       CALL cl_err()
#       CALL s_axcp500_ins_error('','','','','','','','','','','',
#                                '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p2_3')         
#    END IF   
#   END IF    
#   #180308-00016#1---add---e   
#   
#   #sale_return_tmp 中凡成本为零时,用目前的xccc280来更新
#   #g_sys_6005 = '2.当前月成本"时,全部更新
#   #g_sys_6005 = '1.原始出货月成本"时,若取不到成本时,才要更新
#   LET g_sql = " MERGE INTO sale_return_tmp a",
#               "      USING xccc_tmp b ",
#               "         ON (xcck001 = xccc001 ",
#               "        AND  xcck002 = xccc002 ",
#               "        AND  xcck010 = xccc006 ",
#               "        AND  xcck011 = xccc007 ",
#               "        AND  xcck017 = xccc008 ",
#               "        AND  xcck055 = '215'   ", 
#               #mod zhangllc 150730 --begin
#               #"        AND  xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
#               #"        AND  (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               "        AND  (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               #mod zhangllc 150730 --end            
#               "  WHEN MATCHED THEN ",
#               "       UPDATE SET a.xccc280  = b.xccc280, ",
#               "                  a.xccc280a = b.xccc280a, ",
#               "                  a.xccc280b = b.xccc280b, ",
#               "                  a.xccc280c = b.xccc280c, ",
#               "                  a.xccc280d = b.xccc280d, ",
#               "                  a.xccc280e = b.xccc280e, ",
#               "                  a.xccc280f = b.xccc280f, ",
#               "                  a.xccc280g = b.xccc280g, ",
#               "                  a.xccc280h = b.xccc280h  ",
#               "        WHERE a.xccc280 = 0 "
#   PREPARE s_axcp500_avg1_set_xcck_3_p2_1 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p2_1"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p2_1')         
##     RETURN r_success
#   END IF
#
#   EXECUTE s_axcp500_avg1_set_xcck_3_p2_1 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p2_1"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p2_1')         
##     RETURN r_success
#   END IF                
#
#   
#   #用sale_return_tmp中每笔明细单据的单位成本更新xcck_tmp
#   LET g_sql = " MERGE INTO xcck_tmp a ",
#               "      USING sale_return_tmp b ",
#               "          ON ( a.xcck001 = b.xcck001 ",
#               "         AND   a.xcck002 = b.xcck002 ",
#               "         AND   a.xcck006 = b.xcck006 ",
#               "         AND   a.xcck007 = b.xcck007 ",
#               "         AND   a.xcck008 = b.xcck008 ",
#               "         AND   a.xcck009 = b.xcck009 ",               
#               "         AND   a.xcck055 = '215' ",
#               #mod zhangllc 150730 --begin
#               #"         AND   a.xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
#               #"         AND  (a.xcck010,a.xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
#               "         AND  (a.xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
#               #mod zhangllc 150730 --end 
#               "  WHEN MATCHED THEN    ",
#               "     UPDATE SET a.xcck202  = nvl(xcck201 * b.xccc280 ,0),  ",
#               "                a.xcck202a = nvl(xcck201 * b.xccc280a,0),  ",
#               "                a.xcck202b = nvl(xcck201 * b.xccc280b,0),  ",
#               "                a.xcck202c = nvl(xcck201 * b.xccc280c,0),  ",
#               "                a.xcck202d = nvl(xcck201 * b.xccc280d,0),  ",
#               "                a.xcck202e = nvl(xcck201 * b.xccc280e,0),  ",
#               "                a.xcck202f = nvl(xcck201 * b.xccc280f,0),  ",
#               "                a.xcck202g = nvl(xcck201 * b.xccc280g,0),  ",
#               "                a.xcck202h = nvl(xcck201 * b.xccc280h,0)   "
#               #180706-00041#1---add---s               
#               ,"              ,a.xcck282  = NVL(b.xccc280 ,0),  ",
#               "                a.xcck282a = NVL(b.xccc280a,0),  ",
#               "                a.xcck282b = NVL(b.xccc280b,0),  ",
#               "                a.xcck282c = NVL(b.xccc280c,0),  ",
#               "                a.xcck282d = NVL(b.xccc280d,0),  ",
#               "                a.xcck282e = NVL(b.xccc280e,0),  ",
#               "                a.xcck282f = NVL(b.xccc280f,0),  ",
#               "                a.xcck282g = NVL(b.xccc280g,0),  ",
#               "                a.xcck282h = NVL(b.xccc280h,0)   "   
#               #180706-00041#1---add---e
#   PREPARE s_axcp500_avg1_set_xcck_3_p2_2 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p2_2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p2_2')         
##     RETURN r_success
#   END IF
#
#   EXECUTE s_axcp500_avg1_set_xcck_3_p2_2 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p2_2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p2_2')         
##     RETURN r_success
#   END IF 
#180905-00006#1---mark---e   
      
   #xcck202a~xcck202h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                         "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), ",
                         "                    xcck202e = round(xcck202e,? ), xcck202f = round(xcck202f,? ), ",
                         "                    xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? )  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add   #170112-00041#1                      
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #170112-00041#1  #190411-00017#1 B mark
                         #"  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod #191126-00020#1 mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 <= ",p_xcbb006,")",                        #191126-00020#1 add                         
                        #mod zhangllc 150730 --end
                         #"   AND xcck055 IN ('207','215') " #180905-00006#1 mark
                         "   AND xcck055 IN ('207') "        #180905-00006#1

                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                         "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), ",
                         "                    xcck202e = trunc(xcck202e,? ), xcck202f = trunc(xcck202f,? ), ",
                         "                    xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? )  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add  #170112-00041#1
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add  #170112-00041#1  #190411-00017#1 B mark
                         #"  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod #191126-00020#1 mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 <= ",p_xcbb006,")",                        #191126-00020#1 add
                        #mod zhangllc 150730 --end
                         #"   AND xcck055 IN ('207','215') " #180905-00006#1 mark
                         "   AND xcck055 IN ('207') "        #180905-00006#1

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202,?) ",
                         "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202,?)",
                         "                                END ),",
                         "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a,?) ",
                         "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                                END ),",
                         "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b,?) ",
                         "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b,?)",
                         "                                END ),",
                         "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c,?) ",
                         "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c,?)",
                         "                                END ),",
                         "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d,?) ",
                         "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d,?)",
                         "                                END ),",
                         "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e,?) ",
                         "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e,?)",
                         "                                END ),",
                         "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f,?) ",
                         "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f,?)",
                         "                                END ),",
                         "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g,?) ",
                         "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g,?)",
                         "                                END ),",
                         "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h,?) ",
                         "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h,?)",
                         "                                END )",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",      #190411-00017#1 B mark
                         #"  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod #191126-00020#1 mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 <= ",p_xcbb006,")",                        #191126-00020#1 add                         
                         #"   AND xcck055 IN ('207','215') " #180905-00006#1 mark
                         "   AND xcck055 IN ('207') "        #180905-00006#1
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                         "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                         "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                         "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                         "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                         "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                         "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                         "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                         "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?) ",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",    #190411-00017#1 B mark
                         #"  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod #191126-00020#1 mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 <= ",p_xcbb006,")",                        #191126-00020#1 add                         
                         #"   AND xcck055 IN ('207','215') " #180905-00006#1 mark
                         "   AND xcck055 IN ('207') "        #180905-00006#1
        #180802-00015#1 add-E
                         
   END CASE                         
   PREPARE s_axcp500_avg1_set_xcck_3_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p3')         
#     RETURN r_success
   END IF


   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcck_3_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_3_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_3_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_3_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_3_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p3')         
#     RETURN r_success
   END IF      


   #修正xcck202的值-先修至xcck202a,若xcck202a为零,则修正xcck202b......
   UPDATE xcck_tmp SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)   
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     #AND xcbb006 = p_xcbb006)  #191126-00020#1 mark
                     AND xcbb006 <= p_xcbb006)  #191126-00020#1 add
      #mod zhangllc 150730 --end        
      #AND xcck055 IN ('207','215')  #180905-00006#1 mark
      AND xcck055 IN ('207')         #180905-00006#1
      #170222-00055#1---add---s
      AND xcck202a >= xcck202b AND xcck202a >= xcck202c
      AND xcck202a >= xcck202d AND xcck202a >= xcck202e
      AND xcck202a >= xcck202f AND xcck202a >= xcck202g
      AND xcck202a >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')         
#     RETURN r_success
   END IF   
      
   UPDATE xcck_tmp SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     #AND xcbb006 = p_xcbb006)  #191126-00020#1 mark
                     AND xcbb006 <= p_xcbb006)  #191126-00020#1 add 
      #mod zhangllc 150730 --end        
      #AND xcck055 IN ('207','215')  #180905-00006#1 mark
      AND xcck055 IN ('207')         #180905-00006#1  
      #170222-00055#1---add---s
      AND xcck202b >= xcck202c
      AND xcck202b >= xcck202d AND xcck202b >= xcck202e
      AND xcck202b >= xcck202f AND xcck202b >= xcck202g
      AND xcck202b >= xcck202h
      #170222-00055#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')         
#     RETURN r_success
   END IF 


   UPDATE xcck_tmp SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     #AND xcbb006 = p_xcbb006)  #191126-00020#1 mark
                     AND xcbb006 <= p_xcbb006)  #191126-00020#1 add 
      #mod zhangllc 150730 --end        
      #AND xcck055 IN ('207','215')  #180905-00006#1 mark
      AND xcck055 IN ('207')         #180905-00006#1
      #170222-00055#1---add---s
      AND xcck202c >= xcck202d AND xcck202c >= xcck202e
      AND xcck202c >= xcck202f AND xcck202c >= xcck202g
      AND xcck202c >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     #AND xcbb006 = p_xcbb006)  #191126-00020#1 mark
                     AND xcbb006 <= p_xcbb006)  #191126-00020#1 add 
      #mod zhangllc 150730 --end        
      #AND xcck055 IN ('207','215')  #180905-00006#1 mark
      AND xcck055 IN ('207')         #180905-00006#1
      #170222-00055#1---add---s
      AND xcck202d >= xcck202e
      AND xcck202d >= xcck202f AND xcck202d >= xcck202g
      AND xcck202d >= xcck202h
      #170222-00055#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
#     RETURN r_success
   END IF 


   UPDATE xcck_tmp SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     #AND xcbb006 = p_xcbb006)  #191126-00020#1 mark
                     AND xcbb006 <= p_xcbb006)  #191126-00020#1 add 
      #mod zhangllc 150730 --end        
      #AND xcck055 IN ('207','215')  #180905-00006#1 mark
      AND xcck055 IN ('207')         #180905-00006#1
      #170222-00055#1---add---s
      AND xcck202e >= xcck202f AND xcck202e >= xcck202g
      AND xcck202e >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     #AND xcbb006 = p_xcbb006)  #191126-00020#1 mark
                     AND xcbb006 <= p_xcbb006)  #191126-00020#1 add 
      #mod zhangllc 150730 --end        
      #AND xcck055 IN ('207','215')  #180905-00006#1 mark
      AND xcck055 IN ('207')         #180905-00006#1
      #170222-00055#1---add---s
      AND xcck202f >= xcck202g
      AND xcck202f >= xcck202h
      #170222-00055#1---add---e        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')         
#     RETURN r_success
   END IF   

   
   UPDATE xcck_tmp SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     #AND xcbb006 = p_xcbb006)  #191126-00020#1 mark
                     AND xcbb006 <= p_xcbb006)  #191126-00020#1 add 
      #mod zhangllc 150730 --end        
      #AND xcck055 IN ('207','215')  #180905-00006#1 mark
      AND xcck055 IN ('207')         #180905-00006#1 
      #170222-00055#1---add---s
      AND xcck202g >= xcck202h
      #170222-00055#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     #AND xcbb006 = p_xcbb006)  #191126-00020#1 mark
                     AND xcbb006 <= p_xcbb006)  #191126-00020#1 add 
      #mod zhangllc 150730 --end      
      #AND xcck055 IN ('207','215')  #180905-00006#1 mark
      AND xcck055 IN ('207')         #180905-00006#1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')         
#     RETURN r_success
   END IF   
#180706-00041#1---mark---s
#   #计算平均单价
#   CASE g_round_type
#        WHEN '1'   #四舍五入
#
#             LET g_sql = "UPDATE xcck_tmp SET xcck282  = round(xcck202 /xcck201,?),xcck282a = round(xcck202a/xcck201,?),xcck282b = round(xcck202b/xcck201,?), ",
#                         "                    xcck282c = round(xcck202c/xcck201,?),xcck282d = round(xcck202d/xcck201,?), ",
#                         "                    xcck282e = round(xcck202e/xcck201,?),xcck282f = round(xcck202f/xcck201,?), ",
#                         "                    xcck282g = round(xcck202g/xcck201,?),xcck282h = round(xcck202h/xcck201,?)  ",
#          
#                       #mod zhangllc 150730 --begin
#                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
#                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
#                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add   #170112-00041#1                      
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #170112-00041#1                      
#                        #mod zhangllc 150730 --end
#                         "   AND xcck055 IN ('207','215') ",                         
#                         "   AND xcck201 <> 0 "
#
#        WHEN '3'   #无条件截位
#
#             LET g_sql = "UPDATE xcck_tmp SET xcck282  = trunc(xcck202 /xcck201,?),xcck282a = trunc(xcck202a/xcck201,?),xcck282b = trunc(xcck202b/xcck201,?), ",
#                         "                    xcck282c = trunc(xcck202c/xcck201,?),xcck282d = trunc(xcck202d/xcck201,?), ",
#                         "                    xcck282e = trunc(xcck202e/xcck201,?),xcck282f = trunc(xcck202f/xcck201,?), ",
#                         "                    xcck282g = trunc(xcck202g/xcck201,?),xcck282h = trunc(xcck202h/xcck201,?)  ",
#          
#                        #mod zhangllc 150730 --begin
#                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
#                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
#                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add   #170112-00041#1                      
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #170112-00041#1                      
#                        #mod zhangllc 150730 --end
#                         "   AND xcck055 IN ('207','215') ",                         
#                         "   AND xcck201 <> 0 "
#
#                         
#   END CASE                               
#   PREPARE s_axcp500_avg1_set_xcck_3_p4 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_3_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_3_p4')         
##     RETURN r_success
#   END IF
#
#   EXECUTE s_axcp500_avg1_set_xcck_3_p4 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_3_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_3_p4')         
##     RETURN r_success
#   END IF        
#   
#   #更新xcck280的值班
#   UPDATE xcck_tmp SET xcck282a = xcck282 - (xcck282b + xcck282c + xcck282d + xcck282e + xcck282f + xcck282g + xcck282h) ,
#                       xcckcrtdt = l_date
#    #mod zhangllc 150730 --begin
#    #WHERE xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
#    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
#                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
#                     AND xcbb006 = p_xcbb006)  
#    #mod zhangllc 150730 --end
#      AND xcck055 IN ('207','215')                      
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202')         
##     RETURN r_success
#   END IF      
#180706-00041#1---mark---e   
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(18,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xcck - 重工入库
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xcck_4(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xcck_4(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xcck_t.xcck001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_xccd002       LIKE xccd_t.xccd002
   DEFINE l_xcck          type_g_xcck1 #170605-00013#1-add
   #170605-00013#1-s-mark 改用type方式
   #DEFINE l_xcck          RECORD 
   #                       xccksite    LIKE xcck_t.xccksite,
   #                       xcck002     LIKE xcck_t.xcck002,
   #                       xcck006     LIKE xcck_t.xcck006,
   #                       xcck007     LIKE xcck_t.xcck007,
   #                       xcck008     LIKE xcck_t.xcck008,
   #                       xcck009     LIKE xcck_t.xcck009,
   #                       xcck010     LIKE xcck_t.xcck010,
   #                       xcck047     LIKE xcck_t.xcck047,
   #                       xcck049     LIKE xcck_t.xcck049,
   #                       xcck201     LIKE xcck_t.xcck201   
   #                       END RECORD
   #170605-00013#1-e-mark
   DEFINE l_sum           RECORD
                          sum  LIKE xccc_t.xccc202,
                          a    LIKE xccc_t.xccc202a,
                          b    LIKE xccc_t.xccc202b,
                          c    LIKE xccc_t.xccc202c,
                          d    LIKE xccc_t.xccc202d,
                          e    LIKE xccc_t.xccc202e,
                          f    LIKE xccc_t.xccc202f,
                          g    LIKE xccc_t.xccc202g,
                          h    LIKE xccc_t.xccc202h
                          END RECORD                          
   DEFINE l_date          DATETIME YEAR TO SECOND

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   MESSAGE "set_xcck_4:xccd302->xcck202"
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME
   
   LET l_date = cl_get_current()
   #190411-00017#1 A mark-S
#   DECLARE s_axcp500_avg1_set_xcck_4_cs1 CURSOR FOR 
#    #SELECT xccksite,xcck002,xcck006,xcck007,xcck008,xcck009,xcck010,xcck047,xcck049,xcck201 FROM xcck_tmp,s_axcp500_tmp          #170603-00020#1 mark
#    SELECT DISTINCT xccksite,xcck002,xcck006,xcck007,xcck008,xcck009,xcck010,xcck047,xcck049,xcck201 FROM xcck_tmp,s_axcp500_tmp  #170603-00020#1 add
#     WHERE xcck055 = '209'
#       AND xcck020 <> '109'   #排除委外倉退  #170329-00068#1
#       AND xcck010 = imaa001
#       AND xcck011 = xccc007   #add zhangllc 150730
#       AND xcbb006 = p_xcbb006
#     ORDER BY xcck047,xcck201  #161115-00004#1 add 同一張工單數量小的先算，大的後算，調尾差才會調到最大筆
   #190411-00017#1 A mark-E
   #190411-00017#1 A add-S
   DECLARE s_axcp500_avg1_set_xcck_4_cs1 CURSOR FOR 
    SELECT DISTINCT xccksite,xcck002,xcck006,xcck007,xcck008,xcck009,xcck010,xcck047,xcck049,xcck201 
      FROM xcck_tmp  
     WHERE xcck055 = '209'
       AND xcck020 <> '109'   #排除委外倉退 
       #200407-00021#1---mod---s       
       #AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcck011 = xccc007 AND xcbb006 = p_xcbb006)
       AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcck011 = xccc007)
       AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xcck047 = sfacdocno AND clevel = p_xcbb006) 
       #200407-00021#1---mod---e       
     ORDER BY xcck047,xcck201
   #190411-00017#1 A add-E
   FOREACH s_axcp500_avg1_set_xcck_4_cs1 INTO l_xcck.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = 'FOREACH s_axcp500_avg1_set_xcck_4_cs1'
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg1_set_xcck_4_cs1')
            
         CONTINUE FOREACH   
      END IF   
   
      MESSAGE "set_xcck_4:xccd302->xcck202:",l_xcck.xcck047
      LET l_xccd002 = ' '
      IF g_field_type = '1' THEN
         LET l_xccd002 = l_xcck.xcck002
      END IF   
      CALL s_axcp500_avg_get_store_in_sum(p_seq,l_xccd002,l_xcck.xcck201,l_xcck.xcck047,l_xcck.xcck049,l_xcck.xccksite,
                                          l_xcck.xcck010,l_xcck.xcck006,l_xcck.xcck007,l_xcck.xcck008,l_xcck.xcck009)
           RETURNING l_sum.*  
 
      UPDATE xcck_tmp SET xcck202  = l_sum.sum , xcck202a = l_sum.a, xcck202b = l_sum.b,
                          xcck202c = l_sum.c,    xcck202d = l_sum.d, xcck202e = l_sum.e,
                          xcck202f = l_sum.f,    xcck202g = l_sum.g, xcck202h = l_sum.h
       WHERE xcckent = g_enterprise
         AND xcckld  = g_ld
         AND xcck001 = p_seq
         AND xcck002 = l_xcck.xcck002
         AND xcck003 = g_xcat001
         AND xcck004 = g_yy
         AND xcck005 = g_pp
         AND xcck006 = l_xcck.xcck006
         AND xcck007 = l_xcck.xcck007
         AND xcck008 = l_xcck.xcck008
         AND xcck009 = l_xcck.xcck009         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck203/xcck205 sum"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xcck203/xcck205 sum')         
#        RETURN r_success
      END IF   
   
      LET g_stat_cnt = g_stat_cnt + 1
   
   END FOREACH
   
   #xcck202a~xcck202h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                         "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), ",
                         "                    xcck202e = round(xcck202e,? ), xcck202f = round(xcck202f,? ), ",
                         "                    xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? )  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add   #170112-00041#1                      
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #170112-00041#1    #190411-00017#1 B mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                  
                        #mod zhangllc 150730 --end
                         "   AND xcck055 = '209' "

                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                         "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), ",
                         "                    xcck202e = trunc(xcck202e,? ), xcck202f = trunc(xcck202f,? ), ",
                         "                    xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? )  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add   #170112-00041#1                      
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #170112-00041#1 #190411-00017#1 B mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                      
                        #mod zhangllc 150730 --end
                         "   AND xcck055 = '209' "

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202,?) ",
                         "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202,?)",
                         "                                END ),",
                         "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a,?) ",
                         "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                                END ),",
                         "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b,?) ",
                         "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b,?)",
                         "                                END ),",
                         "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c,?) ",
                         "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c,?)",
                         "                                END ),",
                         "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d,?) ",
                         "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d,?)",
                         "                                END ),",
                         "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e,?) ",
                         "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e,?)",
                         "                                END ),",
                         "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f,?) ",
                         "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f,?)",
                         "                                END ),",
                         "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g,?) ",
                         "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g,?)",
                         "                                END ),",
                         "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h,?) ",
                         "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h,?)",
                         "                                END )",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                         "   AND xcck055 = '209' "
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                         "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                         "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                         "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                         "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                         "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                         "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                         "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                         "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?) ",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                         "   AND xcck055 = '209' "
        #180802-00015#1 add-E
                         
   END CASE                         
   PREPARE s_axcp500_avg1_set_xcck_4_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_4_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_4_p1')         
#     RETURN r_success
   END IF

   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcck_4_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_4_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_4_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_4_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_4_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_4_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_4_p1')         
#     RETURN r_success
   END IF      
                  
   #修正xcck202的值-先修至xcck202a,若xcck202a为零,则修正xcck202b......
   UPDATE xcck_tmp SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)   
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011  #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end     
      AND xcck055 = '209'
      #170222-00055#1---add---s
      AND xcck202a >= xcck202b AND xcck202a >= xcck202c
      AND xcck202a >= xcck202d AND xcck202a >= xcck202e
      AND xcck202a >= xcck202f AND xcck202a >= xcck202g
      AND xcck202a >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')         
#     RETURN r_success
   END IF   
      
   UPDATE xcck_tmp SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end        
      AND xcck055 = '209' 
      #170222-00055#1---add---s
      AND xcck202b >= xcck202c
      AND xcck202b >= xcck202d AND xcck202b >= xcck202e
      AND xcck202b >= xcck202f AND xcck202b >= xcck202g
      AND xcck202b >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
            #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
      AND xcck055 = '209'  
      #170222-00055#1---add---s
      AND xcck202c >= xcck202d AND xcck202c >= xcck202e
      AND xcck202c >= xcck202f AND xcck202c >= xcck202g
      AND xcck202c >= xcck202h
      #170222-00055#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end        
      AND xcck055 = '209'  
      #170222-00055#1---add---s
      AND xcck202d >= xcck202e
      AND xcck202d >= xcck202f AND xcck202d >= xcck202g
      AND xcck202d >= xcck202h
      #170222-00055#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end        
      AND xcck055 = '209' 
      #170222-00055#1---add---s
      AND xcck202e >= xcck202f AND xcck202e >= xcck202g
      AND xcck202e >= xcck202h
      #170222-00055#1---add---e        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
      AND xcck055 = '209'
      #170222-00055#1---add---s
      AND xcck202f >= xcck202g
      AND xcck202f >= xcck202h
      #170222-00055#1---add---e        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
      AND xcck055 = '209' 
      #170222-00055#1---add---s
      AND xcck202g >= xcck202h
      #170222-00055#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
      AND xcck055 = '209'  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')         
#     RETURN r_success
   END IF   

   #计算平均单价
   CASE g_round_type
        WHEN '1'   #四舍五入

             LET g_sql = "UPDATE xcck_tmp SET xcck282  = round(xcck202 /xcck201,?),xcck282a = round(xcck202a/xcck201,?),xcck282b = round(xcck202b/xcck201,?), ",
                         "                    xcck282c = round(xcck202c/xcck201,?),xcck282d = round(xcck202d/xcck201,?), ",
                         "                    xcck282e = round(xcck202e/xcck201,?),xcck282f = round(xcck202f/xcck201,?), ",
                         "                    xcck282g = round(xcck202g/xcck201,?),xcck282h = round(xcck202h/xcck201,?)  ",
          
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add #170112-00041#1                         
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #170112-00041#1   #190411-00017#1 B mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                      
                        #mod zhangllc 150730 --end
                         "   AND xcck201 <> 0 ",
                         "   AND xcck055 = '209' "

        WHEN '3'   #无条件截位

             LET g_sql = "UPDATE xcck_tmp SET xcck282  = trunc(xcck202 /xcck201,?),xcck282a = trunc(xcck202a/xcck201,?),xcck282b = trunc(xcck202b/xcck201,?), ",
                         "                    xcck282c = trunc(xcck202c/xcck201,?),xcck282d = trunc(xcck202d/xcck201,?), ",
                         "                    xcck282e = trunc(xcck202e/xcck201,?),xcck282f = trunc(xcck202f/xcck201,?), ",
                         "                    xcck282g = trunc(xcck202g/xcck201,?),xcck282h = trunc(xcck202h/xcck201,?)  ",
            
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add    #170112-00041#1                                                
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #170112-00041#1     #190411-00017#1 B mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                                           
                        #mod zhangllc 150730 --end
                         "   AND xcck201 <> 0 ",
                         "   AND xcck055 = '209' "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck282  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202/xcck201,?) ",
                         "                                                          ELSE ROUND(xcck202/xcck201,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202/xcck201,?)",
                         "                                END ),",
                         "                    xcck282a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202a/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a/xcck201,?)",
                         "                                END ),",
                         "                    xcck282b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202b/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b/xcck201,?)",
                         "                                END ),",
                         "                    xcck282c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202c/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c/xcck201,?)",
                         "                                END ),",
                         "                    xcck282d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202d/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d/xcck201,?)",
                         "                                END ),",
                         "                    xcck282e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202e/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e/xcck201,?)",
                         "                                END ),",
                         "                    xcck282f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202f/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f/xcck201,?)",
                         "                                END ),",
                         "                    xcck282g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202g/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g/xcck201,?)",
                         "                                END ),",
                         "                    xcck282h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h/xcck201,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h/xcck201,?) ",
                         "                                                         ELSE ROUND(xcck202h/xcck201,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h/xcck201,?)",
                         "                                END )",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #190411-00017#1 B mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                         "   AND xcck201 <> 0 ",
                         "   AND xcck055 = '209' "
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck282  = ceil(xcck202 /xcck201*power(10,?))/power(10,?),",
                         "                    xcck282a = ceil(xcck202a/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282b = ceil(xcck202b/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282c = ceil(xcck202c/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282d = ceil(xcck202d/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282e = ceil(xcck202e/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282f = ceil(xcck202f/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282g = ceil(xcck202g/xcck201*power(10,?))/power(10,?),",
                         "                    xcck282h = ceil(xcck202h/xcck201*power(10,?))/power(10,?) ",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #190411-00017#1 B mark
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                         "   AND xcck201 <> 0 ",
                         "   AND xcck055 = '209' "
        #180802-00015#1 add-E                  

   END CASE                               
   PREPARE s_axcp500_avg1_set_xcck_4_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_4_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_4_p2')         
#     RETURN r_success
   END IF


   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcck_4_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_4_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_4_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_4_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_4_p2 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282a
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282b
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282c
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282d
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282e
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282f
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282g
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1    #xcck282h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_4_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_4_p2')         
#     RETURN r_success
   END IF        


   #更新xcck280的值班
   UPDATE xcck_tmp SET xcck282a   = xcck282 - (xcck282b + xcck282c + xcck282d + xcck282e + xcck282f + xcck282g + xcck282h) ,
                       xcckcrtdt = l_date
    #mod zhangllc 150730 --begin
    #WHERE xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end
      AND xcck055 = '209'    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202')         
#     RETURN r_success
   END IF      
   
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(17,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xcck - 更新出项
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xcck_5(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-11 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xcck_5(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xcck_t.xcck001
   DEFINE r_success       LIKE type_t.num5                       
   DEFINE l_date          DATETIME YEAR TO SECOND

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET l_date = cl_get_current()
   
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME
   
   #305.销退
   #sale_return_tmp 中凡成本为零时,用目前的xccc280来更新
   #g_sys_6005 = '2.当前月成本"时,全部更新
   #g_sys_6005 = '1.原始出货月成本"时,若取不到成本时,才要更新
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO sale_return_tmp a",
               "      USING xccc_tmp b ",
               "         ON (xcck001 = xccc001 ",
               "        AND  xcck002 = xccc002 ",
               "        AND  xcck010 = xccc006 ",
               "        AND  xcck011 = xccc007 ",
               "        AND  xcck017 = xccc008 ",
               "        AND  xcck055 = '305'   ",
               #mod zhangllc 150730 --begin
               #"        AND  xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"        AND  (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               "        AND  (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1 #190411-00017#1 B mark
               "        AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",  #190411-00017#1 B mod
               ##mod zhangllc 150730 --end
               "  WHEN MATCHED THEN ",
               "       UPDATE SET a.xccc280  = b.xccc280, ",
               "                  a.xccc280a = b.xccc280a, ",
               "                  a.xccc280b = b.xccc280b, ",
               "                  a.xccc280c = b.xccc280c, ",
               "                  a.xccc280d = b.xccc280d, ",
               "                  a.xccc280e = b.xccc280e, ",
               "                  a.xccc280f = b.xccc280f, ",
               "                  a.xccc280g = b.xccc280g, ",
               "                  a.xccc280h = b.xccc280h  ",
               #"        WHERE a.xccc280 = 0 "  #180802-00068#1 mark
               "        WHERE a.xccc280 = 0 OR a.xccc280 IN NULL "  #180802-00068#1
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_5_p1_1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_5_p1_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_5_p1_1')         
#     RETURN r_success
   END IF


   EXECUTE s_axcp500_avg1_set_xcck_5_p1_1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_5_p1_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_5_p1_1')         
#     RETURN r_success
   END IF  

   #用sale_return_tmp中每笔明细单据的单位成本更新xcck_tmp
   #用sale_return_tmp中每笔明细单据的单位成本更新xcck_tmp
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp a ",
               "      USING sale_return_tmp b ",
               "          ON ( a.xcck001 = b.xcck001 ",
               "         AND   a.xcck002 = b.xcck002 ",
               "         AND   a.xcck006 = b.xcck006 ",
               "         AND   a.xcck007 = b.xcck007 ",
               "         AND   a.xcck008 = b.xcck008 ",
               "         AND   a.xcck009 = b.xcck009 ",               
               "         AND   a.xcck055 = '305' ",
               
               #mod zhangllc 150730 --begin
               #"         AND   a.xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"        AND  (a.xcck010,a.xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
#               "        AND  (a.xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1 #190411-00017#1 B mark
               "        AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE a.xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",  #190411-00017#1 B mod
               ##mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcck202  = nvl(xcck201 * b.xccc280 ,0),  ",
               "                a.xcck202a = nvl(xcck201 * b.xccc280a,0),  ",
               "                a.xcck202b = nvl(xcck201 * b.xccc280b,0),  ",
               "                a.xcck202c = nvl(xcck201 * b.xccc280c,0),  ",
               "                a.xcck202d = nvl(xcck201 * b.xccc280d,0),  ",
               "                a.xcck202e = nvl(xcck201 * b.xccc280e,0),  ",
               "                a.xcck202f = nvl(xcck201 * b.xccc280f,0),  ",
               "                a.xcck202g = nvl(xcck201 * b.xccc280g,0),  ",
               "                a.xcck202h = nvl(xcck201 * b.xccc280h,0),  ",
#170317-00006#1 mark start -----               
#               #add zhangllc 151116#1 --begin
#               "                a.xcck282  = b.xccc280 ,  ",
#               "                a.xcck282a = b.xccc280a,  ",
#               "                a.xcck282b = b.xccc280b,  ",
#               "                a.xcck282c = b.xccc280c,  ",
#               "                a.xcck282d = b.xccc280d,  ",
#               "                a.xcck282e = b.xccc280e,  ",
#               "                a.xcck282f = b.xccc280f,  ",
#               "                a.xcck282g = b.xccc280g,  ",
#               "                a.xcck282h = b.xccc280h   "
#               #add zhangllc 151116#1 --end  
#170317-00006#1 mark end  -----
#170317-00006#1 add start -----               
               "                a.xcck282  = NVL(b.xccc280 ,0),  ",
               "                a.xcck282a = NVL(b.xccc280a,0),  ",
               "                a.xcck282b = NVL(b.xccc280b,0),  ",
               "                a.xcck282c = NVL(b.xccc280c,0),  ",
               "                a.xcck282d = NVL(b.xccc280d,0),  ",
               "                a.xcck282e = NVL(b.xccc280e,0),  ",
               "                a.xcck282f = NVL(b.xccc280f,0),  ",
               "                a.xcck282g = NVL(b.xccc280g,0),  ",
               "                a.xcck282h = NVL(b.xccc280h,0)   "
#170317-00006#1 add end  -----
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_5_p1_2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_5_p1_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_5_p1_2')         
#     RETURN r_success
   END IF


   EXECUTE s_axcp500_avg1_set_xcck_5_p1_2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_5_p1_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_5_p1_2')         
#     RETURN r_success
   END IF    
   
   #add zhangllc 150817 --begin
   #311 盘盈亏：盘盈盘亏单优先取盘盈盘亏单上的单价和金额，取不到就取当月平均单位成本
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp ",
               "      USING inei_t ",
               "          ON ( xcckent = ineient ",
               "         AND   xcck006 = ineidocno ", #单号
               "         AND   xcck007 = ineiseq  ", #项次
               "         AND   xcck008 = ineiseq1 ", #项序
               "         AND   xcck055 = '311'  ", #盘点
               #"         AND  (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
#               "         AND  (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1  #190411-00017#1 B mark
               "         AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",  #190411-00017#1 B mod
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcck202  = nvl(inei012,0)*xcck009,  ",
               "                xcck202a = nvl(inei012,0)*xcck009,  ",
               "                xcck202b = 0,  ",
               "                xcck202c = 0,  ",
               "                xcck202d = 0,  ",
               "                xcck202e = 0,  ",
               "                xcck202f = 0,  ",
               "                xcck202g = 0,  ",
               "                xcck202h = 0,  ",   
               #"                xcck282  = nvl(inei012,0)/(xcck201*xcck009),  ", #170705-00006#1 mark
               #"                xcck282a = nvl(inei012,0)/(xcck201*xcck009),  ", #170705-00006#1 mark
               "                xcck282  = ( CASE xcck201*xcck009 WHEN 0 THEN 0 ELSE nvl(inei012,0)/(xcck201*xcck009) END),  ", #170705-00006#1 add
               "                xcck282a = ( CASE xcck201*xcck009 WHEN 0 THEN 0 ELSE nvl(inei012,0)/(xcck201*xcck009) END),  ", #170705-00006#1 add 
               "                xcck282b = 0,  ",
               "                xcck282c = 0,  ",
               "                xcck282d = 0,  ",
               "                xcck282e = 0,  ",
               "                xcck282f = 0,  ",
               "                xcck282g = 0,  ",
               "                xcck282h = 0   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_5_p1_30 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_5_p1_30"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_5_p1_30')
   END IF

   
   EXECUTE s_axcp500_avg1_set_xcck_5_p1_30 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_5_p1_30"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_5_p1_30')
   END IF   
   #add zhangllc 150817 --end
   
   #更新所有出项 - 除了"销退"
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp ",
               "      USING xccc_tmp ",
               "          ON ( xcckent = xcccent ",
               "         AND   xcckld  = xcccld  ",
               "         AND   xcck001 = xccc001 ",
               "         AND   xcck002 = xccc002 ",
               "         AND   xcck003 = xccc003 ",
               "         AND   xcck004 = xccc004 ",
               "         AND   xcck005 = xccc005 ",
               "         AND   xcck010 = xccc006 ",
               "         AND   xcck011 = xccc007 ",
               "         AND   xcck017 = xccc008 "
               #"         AND   xcck055 IN ('3012','303','307','3092','311','3132') ",  #161109-00032#3
#               "         AND   xcck055 IN ('3012','303','307','3092','311','3132','309X') ",  #161109-00032#3  #180125-00005#1 mark
   #180125-00005#1 add-S 当站下线：人工设定时，取axct314的资料，如果是系统设定，则抓xccc的资料
   IF g_sys_6025 = '1' THEN
      LET g_sql = g_sql CLIPPED," AND   xcck055 IN ('3011','3012','303','307','3092','311','3132','309X') "
   ELSE
      LET g_sql = g_sql CLIPPED," AND   xcck055 IN ('3012','303','307','3092','311','3132','309X') "
   END IF
   #180125-00005#1 add-E
   LET g_sql = g_sql CLIPPED,
               #mod zhangllc 150730 --begin
               #"        AND  xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"        AND  (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               "        AND  (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1 #190411-00017#1 B mark
               "         AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",  #190411-00017#1 B mod  
               ##mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcck202  = nvl(xcck201 * xccc280 ,0),  ",
               "                xcck202a = nvl(xcck201 * xccc280a,0),  ",
               "                xcck202b = nvl(xcck201 * xccc280b,0),  ",
               "                xcck202c = nvl(xcck201 * xccc280c,0),  ",
               "                xcck202d = nvl(xcck201 * xccc280d,0),  ",
               "                xcck202e = nvl(xcck201 * xccc280e,0),  ",
               "                xcck202f = nvl(xcck201 * xccc280f,0),  ",
               "                xcck202g = nvl(xcck201 * xccc280g,0),  ",
               "                xcck202h = nvl(xcck201 * xccc280h,0),  ",   
               "                xcck282  = nvl(xccc280 ,0),  ",
               "                xcck282a = nvl(xccc280a,0),  ",
               "                xcck282b = nvl(xccc280b,0),  ",
               "                xcck282c = nvl(xccc280c,0),  ",
               "                xcck282d = nvl(xccc280d,0),  ",
               "                xcck282e = nvl(xccc280e,0),  ",
               "                xcck282f = nvl(xccc280f,0),  ",
               "                xcck282g = nvl(xccc280g,0),  ",
               "                xcck282h = nvl(xccc280h,0)   ",
               "     WHERE xcck202 = 0 "   #add zhangllc 150817               
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_5_p1_3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_5_p1_3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_5_p1_3')         
#     RETURN r_success
   END IF

   EXECUTE s_axcp500_avg1_set_xcck_5_p1_3 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_5_p1_3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_5_p1_3')         
#     RETURN r_success
   END IF         
     
   #xcck202a~xcck202h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                         "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), ",
                         "                    xcck202e = round(xcck202e,? ), xcck202f = round(xcck202f,? ), ",
                         "                    xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? )  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                        
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add   #170112-00041#1                      
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #170112-00041#1  #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                    
                        #mod zhangllc 150730 --end 
                         #"   AND xcck055 IN ('3012','303','305','307','3092','311','3132') "     #161109-00032#3
#                        "   AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X') "     #161109-00032#3  #180125-00005#1 mark
                        "   AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X','3011') "     #161109-00032#3  #180125-00005#1 mod                         

                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                         "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), ",
                         "                    xcck202e = trunc(xcck202e,? ), xcck202f = trunc(xcck202f,? ), ",
                         "                    xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? )  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                         
                        #" WHERE (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",                    #161114-00003#1 mark
                         #" WHERE (xcck010,xcck011) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")", #161114-00003#1 add  #170112-00041#1                                                
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #170112-00041#1    #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod                                               
                        #mod zhangllc 150730 --end
                         #"   AND xcck055 IN ('3012','303','305','307','3092','311','3132') "   #161109-00032#3   
#                         "   AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X') "   #161109-00032#3      #180125-00005#1 mark
                         "   AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X','3011') "   #180125-00005#1 mod                         
              
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202,?) ",
                         "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202,?)",
                         "                                END ),",
                         "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a,?) ",
                         "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                                END ),",
                         "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b,?) ",
                         "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b,?)",
                         "                                END ),",
                         "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c,?) ",
                         "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c,?)",
                         "                                END ),",
                         "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d,?) ",
                         "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d,?)",
                         "                                END ),",
                         "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e,?) ",
                         "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e,?)",
                         "                                END ),",
                         "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f,?) ",
                         "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f,?)",
                         "                                END ),",
                         "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g,?) ",
                         "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g,?)",
                         "                                END ),",
                         "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h,?) ",
                         "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h,?)",
                         "                                END )",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",   #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                         "   AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X','3011') "  
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                         "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                         "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                         "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                         "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                         "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                         "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                         "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                         "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?) ",
#                         " WHERE (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",    #190411-00017#1 B mark
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                         "   AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X','3011') "   
        #180802-00015#1 add-E           
   END CASE                         
   PREPARE s_axcp500_avg1_set_xcck_5_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_5_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_5_p3')         
#     RETURN r_success
   END IF


   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcck_5_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_5_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_5_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_5_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_5_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_5_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_5_p3')         
#     RETURN r_success
   END IF      
   
   #180418-00031#1---add---s
   #拆件工单分批入库尾差处理
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp a ",
               " USING (SELECT xcckent,xcckld,xcck001,xcck002,xcck003,",
               "               xcck004,xcck005,xcck006,xcck007,xcck008,",
               "               xcck009,",
               "               (xcck202-xcci302)   xcck202, ",
               "               (xcck202a-xcci302a) xcck202a, ",
               "               (xcck202b-xcci302b) xcck202b, ",
               "               (xcck202c-xcci302c) xcck202c, ",
               "               (xcck202d-xcci302d) xcck202d, ",
               "               (xcck202e-xcci302e) xcck202e, ",
               "               (xcck202f-xcci302f) xcck202f, ",
               "               (xcck202g-xcci302g) xcck202g, ",
               "               (xcck202h-xcci302h) xcck202h ",
               "          FROM ( SELECT xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                        xcck004,xcck005,xcck006,xcck007,xcck008,xcck009,"
   CASE g_round_type
     #200310-00043#1 mod 移除xcck005,xcck047,xcck010 中间的xcck047---start                 
      WHEN '1'   #四舍五入
        LET g_sql = g_sql," ROUND(SUM(xcck201*xcck009*xccc280)  OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302,",
                          " ROUND(SUM(xcck201*xcck009*xccc280a) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302a,",
                          " ROUND(SUM(xcck201*xcck009*xccc280b) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302b,",
                          " ROUND(SUM(xcck201*xcck009*xccc280c) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302c,",
                          " ROUND(SUM(xcck201*xcck009*xccc280d) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302d,",
                          " ROUND(SUM(xcck201*xcck009*xccc280e) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302e,",
                          " ROUND(SUM(xcck201*xcck009*xccc280f) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302f,",
                          " ROUND(SUM(xcck201*xcck009*xccc280g) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302g,",
                          " ROUND(SUM(xcck201*xcck009*xccc280h) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302h,"
      WHEN '3'   #无条件截位                                                                                                              
        LET g_sql = g_sql," TRUNC(SUM(xcck201*xcck009*xccc280)  OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302,",
                          " TRUNC(SUM(xcck201*xcck009*xccc280a) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302a,",
                          " TRUNC(SUM(xcck201*xcck009*xccc280b) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302b,",
                          " TRUNC(SUM(xcck201*xcck009*xccc280c) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302c,",
                          " TRUNC(SUM(xcck201*xcck009*xccc280d) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302d,",
                          " TRUNC(SUM(xcck201*xcck009*xccc280e) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302e,",
                          " TRUNC(SUM(xcck201*xcck009*xccc280f) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302f,",
                          " TRUNC(SUM(xcck201*xcck009*xccc280g) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302g,",
                          " TRUNC(SUM(xcck201*xcck009*xccc280h) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302h,"      
      OTHERWISE                                                                                                                          
        LET g_sql = g_sql," ROUND(SUM(xcck201*xcck009*xccc280)  OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302,",
                          " ROUND(SUM(xcck201*xcck009*xccc280a) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302a,",
                          " ROUND(SUM(xcck201*xcck009*xccc280b) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302b,",
                          " ROUND(SUM(xcck201*xcck009*xccc280c) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302c,",
                          " ROUND(SUM(xcck201*xcck009*xccc280d) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302d,",
                          " ROUND(SUM(xcck201*xcck009*xccc280e) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302e,",
                          " ROUND(SUM(xcck201*xcck009*xccc280f) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302f,",
                          " ROUND(SUM(xcck201*xcck009*xccc280g) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302g,",
                          " ROUND(SUM(xcck201*xcck009*xccc280h) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017),",g_curr[p_seq].digit2,") xcci302h,"       
   END CASE
   LET g_sql = g_sql,"                        SUM(xcck201*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck201,",
                     "                        SUM(xcck202*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202,",
                     "                        SUM(xcck202a*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202a,",
                     "                        SUM(xcck202b*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202b,",
                     "                        SUM(xcck202c*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202c,",
                     "                        SUM(xcck202d*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202d,",
                     "                        SUM(xcck202e*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202e,",
                     "                        SUM(xcck202f*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202f,",
                     "                        SUM(xcck202g*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202g,",             
                     "                        SUM(xcck202h*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202h,",
  #200310-00043#1 mod xcck047--->移除---end
                     #"                        ROW_NUMBER() OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017  ",  #190313-00012#1 mark
                     #"                        ROW_NUMBER() OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017,xcck047  ",  #190313-00012#1  #200507-00039#1 mark
                     "                        ROW_NUMBER() OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017  ",   #200507-00039#1
                     "                                              ORDER BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017,xcck202 DESC ) AS numm",
#                     "                   FROM xcck_tmp,xccc_t",    #200310-00043#1 mark
                     "                    FROM xcck_tmp,xccc_tmp",   #200310-00043#1 add
                     "                  WHERE xcccent = xcckent",
                     "                    AND xcccld  = xcckld",
                     "                    AND xccc001 = xcck001",
                     "                    AND xccc002 = xcck002",
                     "                    AND xccc003 = xcck003",
                     "                    AND xccc004 = xcck004",
                     "                    AND xccc005 = xcck005",
                     "                    AND xccc006 = xcck010",
                     "                    AND xccc007 = xcck011",
                     "                    AND xccc008 = xcck017",
#                     "                    AND (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mark
                     "                    AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",  #190411-00017#1 B mod
                     #"                    AND xcck055 = '3012' AND (xcck020 = '113' OR xcck020 = '106')) ",  #190313-00012#1 mark
                     "                    AND xcck055 = '3012' ) ",       #190313-00012#1
                     #"         WHERE xcck202 - xcci302 <> 0 AND numm = 1) b",  #190919-00050#1 mark
                     #190919-00050#1---addd---s
                     "         WHERE numm = 1 AND xcck201 = 0 AND (xcck202 - xcci302 <> 0 ",   
                     "                          OR xcck202a - xcci302a <> 0 ", 
                     "                          OR xcck202b - xcci302b <> 0 ", 
                     "                          OR xcck202c - xcci302c <> 0 ", 
                     "                          OR xcck202d - xcci302d <> 0 ", 
                     "                          OR xcck202e - xcci302e <> 0 ", 
                     "                          OR xcck202f - xcci302f <> 0 ", 
                     "                          OR xcck202g - xcci302g <> 0 ", 
                     "                          OR xcck202h - xcci302h <> 0) )b ", 
                     #190919-00050#1---addd---e
                     "    ON (a.xcckent = b.xcckent ",
                     "   AND  a.xcckld  = b.xcckld  ",
                     "   AND  a.xcck001 = b.xcck001 ",
                     "   AND  a.xcck002 = b.xcck002 ",
                     "   AND  a.xcck003 = b.xcck003 ",
                     "   AND  a.xcck004 = b.xcck004 ",
                     "   AND  a.xcck005 = b.xcck005 ",
                     "   AND  a.xcck006 = b.xcck006 ",
                     "   AND  a.xcck007 = b.xcck007 ",
                     "   AND  a.xcck008 = b.xcck008 ",
                     "   AND  a.xcck009 = b.xcck009)",
                     "  WHEN MATCHED THEN    ",
                     #190313-00012#1---mod---s
                     #"  UPDATE SET a.xcck202  = a.xcck202 -   b.xcck202, ",
                     #"             a.xcck202a  = a.xcck202a - b.xcck202a, ",
                     #"             a.xcck202b  = a.xcck202b - b.xcck202b, ",
                     #"             a.xcck202c  = a.xcck202c - b.xcck202c, ",
                     #"             a.xcck202d  = a.xcck202d - b.xcck202d, ",
                     #"             a.xcck202e  = a.xcck202e - b.xcck202e, ",
                     #"             a.xcck202f  = a.xcck202f - b.xcck202f, ",
                     #"             a.xcck202g  = a.xcck202g - b.xcck202g, ",
                     #"             a.xcck202h  = a.xcck202h - b.xcck202h "
                     "  UPDATE SET a.xcck202  = a.xcck202 -   b.xcck009 * b.xcck202, ",
                     "             a.xcck202a  = a.xcck202a - b.xcck009 * b.xcck202a, ",
                     "             a.xcck202b  = a.xcck202b - b.xcck009 * b.xcck202b, ",
                     "             a.xcck202c  = a.xcck202c - b.xcck009 * b.xcck202c, ",
                     "             a.xcck202d  = a.xcck202d - b.xcck009 * b.xcck202d, ",
                     "             a.xcck202e  = a.xcck202e - b.xcck009 * b.xcck202e, ",
                     "             a.xcck202f  = a.xcck202f - b.xcck009 * b.xcck202f, ",
                     "             a.xcck202g  = a.xcck202g - b.xcck009 * b.xcck202g, ",
                     "             a.xcck202h  = a.xcck202h - b.xcck009 * b.xcck202h "                     
                     #190313-00012#1---mod---e
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_5_p1_5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_5_p1_5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  


   EXECUTE s_axcp500_avg1_set_xcck_5_p1_5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_5_p1_5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_5_p1_5')         
   END IF    
   #180418-00031#1---add---e
   
   #170705-00044#1---add---s
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp a ",
               " USING (SELECT xcckent,xcckld,xcck001,xcck002,xcck003,",
               "               xcck004,xcck005,xcck006,xcck007,xcck008,",
               "               xcck009,xcck201,xcck202 ",
               "               ,xcck202a,xcck202b,xcck202c,xcck202d,xcck202e,xcck202f,xcck202g,xcck202h",#180907-00050#1-add
               #181211-00016#1---mark---s               
               #"          FROM ( SELECT xcckent,xcckld,xcck001,xcck002,xcck003,",
               #"                        xcck004,xcck005,xcck006,xcck007,xcck008,xcck009,xcck020,",  #180418-00031#1 add xcck020
               #"                        SUM(xcck201*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck201,",  
               #"                        SUM(xcck202*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202,",
               ##180907-00050#1-add-s
               #"                        SUM(xcck202a*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202a,",                        
               #"                        SUM(xcck202b*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202b,",
               #"                        SUM(xcck202c*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202c,",
               #"                        SUM(xcck202d*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202d,",
               #"                        SUM(xcck202e*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202e,",
               #"                        SUM(xcck202f*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202f,",
               #"                        SUM(xcck202g*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202g,",
               #"                        SUM(xcck202h*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017) xcck202h,",              
               ##180907-00050#1-add-e               
               #"                        ROW_NUMBER() OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017,xcck020  ",    #180418-00031#1 add xcck020
               #"                                              ORDER BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017,xcck020,xcck202 DESC ) AS numm",  #180418-00031#1 add xcck020
               #181211-00016#1---mark---e
               #181211-00016#1---add---s               
               "          FROM ( SELECT xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                        xcck004,xcck005,xcck006,xcck007,xcck008,xcck009,xcck020,", 
               "                        SUM(xcck201*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011, xcck047) xcck201,",  
               "                        SUM(xcck202*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011, xcck047) xcck202,",
               "                        SUM(xcck202a*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047) xcck202a,",                        
               "                        SUM(xcck202b*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047) xcck202b,",
               "                        SUM(xcck202c*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047) xcck202c,",
               "                        SUM(xcck202d*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047) xcck202d,",
               "                        SUM(xcck202e*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047) xcck202e,",
               "                        SUM(xcck202f*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047) xcck202f,",
               "                        SUM(xcck202g*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047) xcck202g,",
               "                        SUM(xcck202h*xcck009) OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047) xcck202h,",              
               "                        ROW_NUMBER() OVER(PARTITION BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047  ",   
               "                                              ORDER BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck047,xcck202 DESC ) AS numm",  
               #181211-00016#1---add---e               
               "                   FROM xcck_tmp",
               "                  WHERE xcck055 IN ('3012','3011') ",
#               "                    AND (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",   #190411-00017#1 B mark
               "                    AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",  #190411-00017#1 B mod
               #"         WHERE xcck201 = 0 AND xcck202 <> 0 AND numm = 1 AND xcck020<>'113') b",  #180418-00031#1  #180907-00050#1-mark 
               #180907-00050#1-add-s
               "         WHERE xcck201 = 0 AND (xcck202 <> 0 OR xcck202a <>0 OR xcck202b <>0 OR xcck202c <>0 OR xcck202d <>0 ",
               "                              OR xcck202e <>0 OR xcck202f <>0 OR xcck202g <>0 OR xcck202h <>0) ",
               #"           AND numm = 1 AND rownum =1 AND xcck020<>'113') b", #190712-00045#1 mark
               "           AND numm = 1 AND xcck020<>'113') b",  #190712-00045#1             
               #180907-00050#1-add-e
               "    ON (a.xcckent = b.xcckent ",
               "   AND  a.xcckld  = b.xcckld  ",
               "   AND  a.xcck001 = b.xcck001 ",
               "   AND  a.xcck002 = b.xcck002 ",
               "   AND  a.xcck003 = b.xcck003 ",
               "   AND  a.xcck004 = b.xcck004 ",
               "   AND  a.xcck005 = b.xcck005 ",
               "   AND  a.xcck006 = b.xcck006 ",
               "   AND  a.xcck007 = b.xcck007 ",
               "   AND  a.xcck008 = b.xcck008 ",
               "   AND  a.xcck009 = b.xcck009)",
               "  WHEN MATCHED THEN    ",
               #"  UPDATE SET a.xcck202  = a.xcck202 - b.xcck202 " #171006-00036#1 mark
               "  UPDATE SET a.xcck202  = a.xcck202 - (b.xcck202 * a.xcck009) " #171006-00036#1 add
               #180907-00050#1-add-s
              ,"            ,a.xcck202a  = a.xcck202a - (b.xcck202a * a.xcck009),",
               "             a.xcck202b  = a.xcck202b - (b.xcck202b * a.xcck009),",
               "             a.xcck202c  = a.xcck202c - (b.xcck202c * a.xcck009),",
               "             a.xcck202d  = a.xcck202d - (b.xcck202d * a.xcck009),",
               "             a.xcck202e  = a.xcck202e - (b.xcck202e * a.xcck009),",
               "             a.xcck202f  = a.xcck202f - (b.xcck202f * a.xcck009),",
               "             a.xcck202g  = a.xcck202g - (b.xcck202g * a.xcck009),",
               "             a.xcck202h  = a.xcck202h - (b.xcck202h * a.xcck009) " 
               #180907-00050#1-add-e               

   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_5_p1_4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_5_p1_4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_5_p1_4')         
#     RETURN r_success
   END IF


   EXECUTE s_axcp500_avg1_set_xcck_5_p1_4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_5_p1_4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_5_p1_4')         
#     RETURN r_success
   END IF                 
   #170705-00044#1---add---e


   #修正xcck202的值-先修至xcck202a,若xcck202a为零,则修正xcck202b......
   UPDATE xcck_tmp SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)   
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #190221-00025#1--add--(S)
      AND (xcck202a <> 0
       OR (xcck202a = 0 AND xcck202b = 0 AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0
      AND EXISTS (SELECT xccc006 FROM xccc_tmp
                   WHERE xcccent = xcckent
                     AND xcccld  = xcckld
                     AND xccc001 = xcck001
                     AND xccc002 = xcck002
                     AND xccc003 = xcck003
                     AND xccc004 = xcck004
                     AND xccc005 = xcck005
                     AND xccc006 = xcck010
                     AND xccc007 = xcck011
                     AND xccc008 = xcck017
                     AND ABS(xccc280a) >= ABS(xccc280b) AND ABS(xccc280a) >= ABS(xccc280c) 
                     AND ABS(xccc280a) >= ABS(xccc280d) AND ABS(xccc280a) >= ABS(xccc280e) 
                     AND ABS(xccc280a) >= ABS(xccc280f) AND ABS(xccc280a) >= ABS(xccc280g) 
                     AND ABS(xccc280a) >= ABS(xccc280h))))
      #190221-00025#1--add--(E)    
      #AND xcck202a <> 0 #180112-00027#1 add  #180906-00016#1 mark
      #AND xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132')  #161109-00032#3  
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X')  #161109-00032#3 #190806-00021#1 mark
      AND xcck055 IN ('3011','3012','303','305','307','3092','311','3132','309X')   #190806-00021#1 add      
      #180906-00016#1---mod---s
      ##170222-00055#1---add---s
      #AND xcck202a >= xcck202b AND xcck202a >= xcck202c
      #AND xcck202a >= xcck202d AND xcck202a >= xcck202e
      #AND xcck202a >= xcck202f AND xcck202a >= xcck202g
      #AND xcck202a >= xcck202h
      ##170222-00055#1---add---e
      AND ABS(xcck202a) >= ABS(xcck202b) AND ABS(xcck202a) >= ABS(xcck202c)
      AND ABS(xcck202a) >= ABS(xcck202d) AND ABS(xcck202a) >= ABS(xcck202e)
      AND ABS(xcck202a) >= ABS(xcck202f) AND ABS(xcck202a) >= ABS(xcck202g)
      AND ABS(xcck202a) >= ABS(xcck202h)      
      #180906-00016#1---mod---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')         
#     RETURN r_success
   END IF   
      
   UPDATE xcck_tmp SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #190221-00025#1--add--(S)
      AND (xcck202b <> 0
       OR (xcck202a = 0 AND xcck202b = 0 AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0
      AND EXISTS (SELECT xccc006 FROM xccc_tmp
                   WHERE xcccent = xcckent
                     AND xcccld  = xcckld
                     AND xccc001 = xcck001
                     AND xccc002 = xcck002
                     AND xccc003 = xcck003
                     AND xccc004 = xcck004
                     AND xccc005 = xcck005
                     AND xccc006 = xcck010
                     AND xccc007 = xcck011
                     AND xccc008 = xcck017
                     AND ABS(xccc280b) >= ABS(xccc280c) AND ABS(xccc280b) >= ABS(xccc280d) 
                     AND ABS(xccc280b) >= ABS(xccc280e) AND ABS(xccc280b) >= ABS(xccc280f) 
                     AND ABS(xccc280b) >= ABS(xccc280g) AND ABS(xccc280b) >= ABS(xccc280h))))
      #190221-00025#1--add--(E)    
      #AND xcck202b <> 0 #180112-00027#1 add  #180906-00016#1 mark
      #AND xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132')  #161109-00032#3  
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X')  #161109-00032#3 #190806-00021#1 mark
      AND xcck055 IN ('3011','3012','303','305','307','3092','311','3132','309X')   #190806-00021#1 add
      #180906-00016#1---mod---s
      ##170222-00055#1---add---s
      #AND xcck202b >= xcck202c
      #AND xcck202b >= xcck202d AND xcck202b >= xcck202e
      #AND xcck202b >= xcck202f AND xcck202b >= xcck202g
      #AND xcck202b >= xcck202h
      ##170222-00055#1---add---e 
      AND ABS(xcck202b) >= ABS(xcck202c)
      AND ABS(xcck202b) >= ABS(xcck202d) AND ABS(xcck202b) >= ABS(xcck202e)
      AND ABS(xcck202b) >= ABS(xcck202f) AND ABS(xcck202b) >= ABS(xcck202g)
      AND ABS(xcck202b) >= ABS(xcck202h)      
      #180906-00016#1---mod---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')         
#     RETURN r_success
   END IF 


   UPDATE xcck_tmp SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #190221-00025#1--add--(S)
      AND (xcck202c <> 0
       OR (xcck202a = 0 AND xcck202b = 0 AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0
      AND EXISTS (SELECT xccc006 FROM xccc_tmp
                   WHERE xcccent = xcckent
                     AND xcccld  = xcckld
                     AND xccc001 = xcck001
                     AND xccc002 = xcck002
                     AND xccc003 = xcck003
                     AND xccc004 = xcck004
                     AND xccc005 = xcck005
                     AND xccc006 = xcck010
                     AND xccc007 = xcck011
                     AND xccc008 = xcck017
                     AND ABS(xccc280c) >= ABS(xccc280d) AND ABS(xccc280c) >= ABS(xccc280e)
                     AND ABS(xccc280c) >= ABS(xccc280f) AND ABS(xccc280c) >= ABS(xccc280g) 
                     AND ABS(xccc280c) >= ABS(xccc280h))))
      #190221-00025#1--add--(E)    
      #AND xcck202c <> 0 #180112-00027#1 add  #180906-00016#1 mark
      #AND xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132')  #161109-00032#3  
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X')  #161109-00032#3 #190806-00021#1 mark
      AND xcck055 IN ('3011','3012','303','305','307','3092','311','3132','309X')   #190806-00021#1 add 
      #180906-00016#1---mod---s
      ##170222-00055#1---add---s
      #AND xcck202c >= xcck202d AND xcck202c >= xcck202e
      #AND xcck202c >= xcck202f AND xcck202c >= xcck202g
      #AND xcck202c >= xcck202h
      ##170222-00055#1---add---e  
      AND ABS(xcck202c) >= ABS(xcck202d) AND ABS(xcck202c) >= ABS(xcck202e)
      AND ABS(xcck202c) >= ABS(xcck202f) AND ABS(xcck202c) >= ABS(xcck202g)
      AND ABS(xcck202c) >= ABS(xcck202h)      
      #180906-00016#1---mod---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #190221-00025#1--add--(S) 
      AND (xcck202d <> 0
       OR (xcck202a = 0 AND xcck202b = 0 AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0
      AND EXISTS (SELECT xccc006 FROM xccc_tmp
                   WHERE xcccent = xcckent
                     AND xcccld  = xcckld
                     AND xccc001 = xcck001
                     AND xccc002 = xcck002
                     AND xccc003 = xcck003
                     AND xccc004 = xcck004
                     AND xccc005 = xcck005
                     AND xccc006 = xcck010
                     AND xccc007 = xcck011
                     AND xccc008 = xcck017
                     AND ABS(xccc280d) >= ABS(xccc280e) AND ABS(xccc280d) >= ABS(xccc280f) 
                     AND ABS(xccc280d) >= ABS(xccc280g) AND ABS(xccc280d) >= ABS(xccc280h))))
      #190221-00025#1--add--(E)
      #AND xcck202d <> 0 #180112-00027#1 add  #180906-00016#1 mark
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132')   #161109-00032#3  
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X')  #161109-00032#3 #190806-00021#1 mark
      AND xcck055 IN ('3011','3012','303','305','307','3092','311','3132','309X')   #190806-00021#1 add 
      #180906-00016#1---mod---s
      ##170222-00055#1---add---s
      #AND xcck202d >= xcck202e
      #AND xcck202d >= xcck202f AND xcck202d >= xcck202g
      #AND xcck202d >= xcck202h
      ##170222-00055#1---add---e
      AND ABS(xcck202d) >= ABS(xcck202e)
      AND ABS(xcck202d) >= ABS(xcck202f) AND ABS(xcck202d) >= ABS(xcck202g)
      AND ABS(xcck202d) >= ABS(xcck202h)      
      #180906-00016#1---mod---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
#     RETURN r_success
   END IF 


   UPDATE xcck_tmp SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #190221-00025#1--add--(S)   
      AND (xcck202e <> 0
       OR (xcck202a = 0 AND xcck202b = 0 AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0
      AND EXISTS (SELECT xccc006 FROM xccc_tmp
                   WHERE xcccent = xcckent
                     AND xcccld  = xcckld
                     AND xccc001 = xcck001
                     AND xccc002 = xcck002
                     AND xccc003 = xcck003
                     AND xccc004 = xcck004
                     AND xccc005 = xcck005
                     AND xccc006 = xcck010
                     AND xccc007 = xcck011
                     AND xccc008 = xcck017
                     AND ABS(xccc280e) >= ABS(xccc280f) AND ABS(xccc280e) >= ABS(xccc280g) 
                     AND ABS(xccc280e) >= ABS(xccc280h))))
      #190221-00025#1--add--(E)    
      #AND xcck202e <> 0 #180112-00027#1 add   #180906-00016#1 mark 
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132')  #161109-00032#3  
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X')  #161109-00032#3 #190806-00021#1 mark
      AND xcck055 IN ('3011','3012','303','305','307','3092','311','3132','309X')   #190806-00021#1 add 
      #180906-00016#1---mod---s
      ##170222-00055#1---add---s
      #AND xcck202e >= xcck202f AND xcck202e >= xcck202g
      #AND xcck202e >= xcck202h
      ##170222-00055#1---add---e
      AND ABS(xcck202e) >= ABS(xcck202f) AND ABS(xcck202e) >= ABS(xcck202g)
      AND ABS(xcck202e) >= ABS(xcck202h)
      #180906-00016#1---mod---s      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #190221-00025#1--add--(S)    
      AND (xcck202f <> 0
       OR (xcck202a = 0 AND xcck202b = 0 AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0
      AND EXISTS (SELECT xccc006 FROM xccc_tmp
                   WHERE xcccent = xcckent
                     AND xcccld  = xcckld
                     AND xccc001 = xcck001
                     AND xccc002 = xcck002
                     AND xccc003 = xcck003
                     AND xccc004 = xcck004
                     AND xccc005 = xcck005
                     AND xccc006 = xcck010
                     AND xccc007 = xcck011
                     AND xccc008 = xcck017
                     AND ABS(xccc280f) >= ABS(xccc280g) AND ABS(xccc280f) >= ABS(xccc280h))))
      #190221-00025#1--add--(E)    
      #AND xcck202f <> 0 #180112-00027#1 add      #180906-00016#1 mark
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end   
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132') #161109-00032#3  
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X')  #161109-00032#3 #190806-00021#1 mark
      AND xcck055 IN ('3011','3012','303','305','307','3092','311','3132','309X')   #190806-00021#1 add 
      #180906-00016#1---mod---s
      ##170222-00055#1---add---s
      #AND xcck202f >= xcck202g
      #AND xcck202f >= xcck202h
      ##170222-00055#1---add---e
      AND ABS(xcck202f) >= ABS(xcck202g)
      AND ABS(xcck202f) >= ABS(xcck202h)      
      #180906-00016#1---mod---s      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')         
#     RETURN r_success
   END IF  


   UPDATE xcck_tmp SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #190221-00025#1--add--(S)   
      AND (xcck202g <> 0
       OR (xcck202a = 0 AND xcck202b = 0 AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0
      AND EXISTS (SELECT xccc006 FROM xccc_tmp
                   WHERE xcccent = xcckent
                     AND xcccld  = xcckld
                     AND xccc001 = xcck001
                     AND xccc002 = xcck002
                     AND xccc003 = xcck003
                     AND xccc004 = xcck004
                     AND xccc005 = xcck005
                     AND xccc006 = xcck010
                     AND xccc007 = xcck011
                     AND xccc008 = xcck017
                     AND ABS(xccc280g) >= ABS(xccc280h))))
      #190221-00025#1--add--(E)    
      #AND xcck202g <> 0 #180112-00027#1 add   #180906-00016#1 mark 
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132')  #161109-00032#3  
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X')  #161109-00032#3 #190806-00021#1 mark
      AND xcck055 IN ('3011','3012','303','305','307','3092','311','3132','309X')   #190806-00021#1 add 
      #180906-00016#1---mod---s
      ##170222-00055#1---add---s
      #AND xcck202g >= xcck202h
      ##170222-00055#1---add---e 
      AND ABS(xcck202g) >= ABS(xcck202h)
      #180906-00016#1---mod---s      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')         
#     RETURN r_success
   END IF   
   UPDATE xcck_tmp SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      #190221-00025#1--add--(S)    
      AND (xcck202h <> 0
       OR (xcck202a = 0 AND xcck202b = 0 AND xcck202c = 0 AND xcck202d = 0 AND xcck202e = 0 AND xcck202f = 0 AND xcck202g = 0 AND xcck202h = 0
      AND EXISTS (SELECT xccc006 FROM xccc_tmp
                   WHERE xcccent = xcckent
                     AND xcccld  = xcckld
                     AND xccc001 = xcck001
                     AND xccc002 = xcck002
                     AND xccc003 = xcck003
                     AND xccc004 = xcck004
                     AND xccc005 = xcck005
                     AND xccc006 = xcck010
                     AND xccc007 = xcck011
                     AND xccc008 = xcck017)))
      #190221-00025#1--add--(E)    
      #AND xcck202h <> 0 #180112-00027#1 add   #180906-00016#1 mark  
      #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g) <> 0  #>=0  #mod zhangllc 160601 SBS5 >=0 -> <>0 #170804-00027#1 mark
      #mod zhangllc 150730 --begin
      #AND xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE imaa001=xcck010 #AND xccc007=xcck011 #170112-00041#1 mark
                     AND xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132')  #161109-00032#3  
      #AND xcck055 IN ('3012','303','305','307','3092','311','3132','309X')  #161109-00032#3 #190806-00021#1 mark
      AND xcck055 IN ('3011','3012','303','305','307','3092','311','3132','309X')   #190806-00021#1 add 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')         
#     RETURN r_success
   END IF             

#   #计算平均单价
#   CASE g_round_type
#        WHEN '1'   #四舍五入
#             LET g_sql = "UPDATE xcck_tmp SET xcck282  = round(xcck202 /xcck201,?),xcck282a = round(xcck202a/xcck201,?),xcck282b = round(xcck202b/xcck201,?), ",
#                         "                    xcck282c = round(xcck202c/xcck201,?),xcck282d = round(xcck202d/xcck201,?), ",
#                         "                    xcck282e = round(xcck202e/xcck201,?),xcck282f = round(xcck202f/xcck201,?), ",
#                         "                    xcck282g = round(xcck202g/xcck201,?),xcck282h = round(xcck202h/xcck201,?)  ",
#                         " WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",
#                         "   AND xcck055 IN ('3012','303','305','307','3092','311','3132') ",                           
#                         "   AND xcck201 <> 0 "
#
#        WHEN '3'   #无条件截位
#             LET g_sql = "UPDATE xcck_tmp SET xcck282  = trunc(xcck202 /xcck201,?),xcck282a = trunc(xcck202a/xcck201,?),xcck282b = trunc(xcck202b/xcck201,?), ",
#                         "                    xcck282c = trunc(xcck202c/xcck201,?),xcck282d = trunc(xcck202d/xcck201,?), ",
#                         "                    xcck282e = trunc(xcck202e/xcck201,?),xcck282f = trunc(xcck202f/xcck201,?), ",
#                         "                    xcck282g = trunc(xcck202g/xcck201,?),xcck282h = trunc(xcck202h/xcck201,?)  ",
#                         " WHERE xcck010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",
#                         "   AND xcck055 IN ('3012','303','305','307','3092','311','3132') ",                           
#                         "   AND xcck201 <> 0 "
#
#                         
#   END CASE                               
#   PREPARE s_axcp500_avg1_set_xcck_5_p4 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_5_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_5_p4')         
##     RETURN r_success
#   END IF
#
#   EXECUTE s_axcp500_avg1_set_xcck_5_p4 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_5_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_5_p4')         
##     RETURN r_success
#   END IF        
#   
#   #更新xcck280的值班
#   UPDATE xcck_tmp SET xcck282a = xcck282 - (xcck282b + xcck282c + xcck282d + xcck282e + xcck282f + xcck282g + xcck282h) ,
#                       xcckcrtdt = l_date
#    WHERE xcck010 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
#      AND xcck055 IN ('3012','303','305','307','3092','311','3132')                           
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202')         
##     RETURN r_success
#   END IF      
   
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(19,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 整批写xccq - 201.采购 211.杂项入 213.调整入 217.其他入
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccq_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-12-15 By zhangllc 151215
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccq_1(p_seq)
   DEFINE p_seq           LIKE xccq_t.xccq001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   
   #xcck_tmp 的资料丢入xccq_tmp
   INSERT INTO xccq_tmp SELECT UNIQUE xcckent,xcckcomp,xcckld,xccksite,xcck001,xcck002,
                               xcck003,xcck004,xcck005,xcck010,xcck011,xcck017,xccktmp1,xcck015,xcck016,xcck028,
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #101.期初/201.采购
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #203.委外/205.工单入库
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #207.重工领出/209.重工入库
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #211.杂项入库/213.调整入库
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #215.销退入库/217.其他入库
                               0,0,0,0,0,0,0,0,0,                                         #280.平均单价
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #301.工单领用/303.销货
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #305.销退/307.销售费用
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #309.杂发/311.盘盈亏
                               0,0,0,0,0,0,0,0,0,0,  0,0,                                 #313.其他出库/401.销货收入金额/402.销退金额
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,                   #901.期末结存/903.销售费用
                               ''                                                         #最近成本计算时间
                          FROM xcck_tmp
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "INSERT INTO xccq_tmp FROM xcck_tmp"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','INSERT INTO xccq_tmp FROM xcck_tmp')         
#     RETURN r_success


   END IF                         
                        
   #更新期初资料 - 上期的xccq
   #add 151116 zhangllc --begin 效能改善
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp a   ",
               "       USING (SELECT * FROM xccq_t ",
               "               WHERE xccqent = ",g_enterprise,
               "                 AND xccqld  = '",g_ld,"'",
               "                 AND xccq001 = '",p_seq,"'",
               "                 AND xccq003 = '",g_xcat001,"'",
               "                 AND xccq004 = ",g_last_yy,
               "                 AND xccq005 = ",g_last_pp, 
               "                 AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xccq006 ) ",
               "              ) b    ",
               "          ON ( a.xccqent = b.xccqent         ",
               "          AND  a.xccqld  = b.xccqld          ",
               "          AND  a.xccqsite= b.xccqsite        ",
               "          AND  a.xccq001 = b.xccq001         ",
               "          AND  a.xccq002 = b.xccq002         ",
               "          AND  a.xccq003 = b.xccq003         ",
               "          AND  a.xccq006 = b.xccq006         ",
               "          AND  a.xccq007 = b.xccq007         ",
               "          AND  a.xccq008 = b.xccq008         ",
               "          AND  a.xccq009 = b.xccq009         ",
               "          AND  a.xccq010 = b.xccq010         ",
               "          AND  a.xccq011 = b.xccq011         ",
               "          AND  a.xccq012 = b.xccq012 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccq101  = nvl(b.xccq901 ,0) ,   ",
               "                  a.xccq102  = nvl(b.xccq902 ,0) ,   ",
               "                  a.xccq102a = nvl(b.xccq902a,0) ,   ",    
               "                  a.xccq102b = nvl(b.xccq902b,0) ,   ",    
               "                  a.xccq102c = nvl(b.xccq902c,0) ,   ",    
               "                  a.xccq102d = nvl(b.xccq902d,0) ,   ",    
               "                  a.xccq102e = nvl(b.xccq902e,0) ,   ",    
               "                  a.xccq102f = nvl(b.xccq902f,0) ,   ",    
               "                  a.xccq102g = nvl(b.xccq902g,0) ,   ",    
               "                  a.xccq102h = nvl(b.xccq902h,0) ,   ",
               "                  a.xccq280  = nvl(b.xccq280 ,0) ,   ",
               "                  a.xccq280a = nvl(b.xccq280a,0) ,   ",    
               "                  a.xccq280b = nvl(b.xccq280b,0) ,   ",    
               "                  a.xccq280c = nvl(b.xccq280c,0) ,   ",    
               "                  a.xccq280d = nvl(b.xccq280d,0) ,   ",    
               "                  a.xccq280e = nvl(b.xccq280e,0) ,   ",    
               "                  a.xccq280f = nvl(b.xccq280f,0) ,   ",    
               "                  a.xccq280g = nvl(b.xccq280g,0) ,   ",    
               "                  a.xccq280h = nvl(b.xccq280h,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccqent,b.xccqcomp,b.xccqld,b.xccqsite,b.xccq001,b.xccq002,    ",  
               "                     b.xccq003,",g_yy,",",g_pp,",b.xccq006,b.xccq007,    ",
               "                     b.xccq008,b.xccq009,b.xccq010,b.xccq011,b.xccq012,     ",
               "                     b.xccq901,b.xccq902,b.xccq902a,b.xccq902b,b.xccq902c,  ",    #101.期初
               "                     b.xccq902d,b.xccq902e,b.xccq902f,b.xccq902g,b.xccq902h,",
               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #201.采购
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #203.委外/205.工单入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #207.重工领出/209.重工入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #211.杂项入库/213.调整入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #215.销退入库/217.其他入库
               "                     b.xccq280, b.xccq280a,b.xccq280b,b.xccq280c,b.xccq280d,",    #280.平均单价
               "                     b.xccq280e,b.xccq280f,b.xccq280g,b.xccq280h,",               
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #301.工单领用/303.销货
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #305.销退/307.销售费用
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #309.杂发/311.盘盈亏
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,                  ",               #313.其他出库/401.销货收入金额/402.销退金额
               "                     b.xccq901,b.xccq902,b.xccq902a,b.xccq902b,b.xccq902c,  ",    #901.期末结存
               "                     b.xccq902d,b.xccq902e,b.xccq902f,b.xccq902g,b.xccq902h,",               
               "                     0,0,0,0,0,0,0,0,0,    ",                                     #903.结存调整
               "                     '' )                                        "                #最近成本计算时间
   #add 151116 zhangllc --end
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_1_p1')         
#     RETURN r_success
   END IF     
   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   

   CREATE INDEX xccq_i02 ON xccq_tmp(xccqent,xccqld,xccqsite,xccq001,xccq002,xccq003,xccq006,xccq007,xccq008,xccq009,xccq010,xccq011,xccq012) #ODI-ORA#
   IF cl_db_generate_analyze("xccq_tmp") THEN END IF
   
   EXECUTE s_axcp500_avg1_set_xccq_1_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_1_p1')         
#     RETURN r_success
   END IF    

   #更新期初资料 - 上期的xcca
   #临时表辅助xcca开账计算
   #xcbz分摊
   #xcbz单位肯定是基础单位，如果发现不一样请重算axcp210
   LET g_sql = " SELECT xccqent ,xccqcomp,xccqld  ,xccqsite,xccq001 ,xccq002 ,xccq003 ,xccq004 ,xccq005 , ",
               "        xccq006 ,xccq007 ,xccq008 ,xccq009 ,xccq010 ,xccq011 ,xccq012 ,xcbz101 , ",
               #170705-00006#1 mark(S)
               #"        xcca101 ,xcbz101/xcca101 rate      ,xcbz101/xcca101*xcca102  xcca102  , ",
               #"        xcbz101/xcca101*xcca102a xcca102a  ,xcbz101/xcca101*xcca102b xcca102b , ",
               #"        xcbz101/xcca101*xcca102c xcca102c  ,xcbz101/xcca101*xcca102d xcca102d , ",
               #"        xcbz101/xcca101*xcca102e xcca102e  ,xcbz101/xcca101*xcca102f xcca102f , ",
               #"        xcbz101/xcca101*xcca102g xcca102g  ,xcbz101/xcca101*xcca102h xcca102h , ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "        xcca101 ,(CASE xcca101 WHEN 0 THEN 0 ELSE xcbz101/xcca101 END) rate      ,( CASE xcca101*xcca102 WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102 END)  xcca102  , ",
               "        ( CASE xcca101*xcca102a WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102a END) xcca102a  ,( CASE xcca101*xcca102b WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102b END) xcca102b , ",
               "        ( CASE xcca101*xcca102c WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102c END) xcca102c  ,( CASE xcca101*xcca102d WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102d END) xcca102d , ",
               "        ( CASE xcca101*xcca102e WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102e END) xcca102e  ,( CASE xcca101*xcca102f WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102f END) xcca102f , ",
               "        ( CASE xcca101*xcca102g WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102g END) xcca102g  ,( CASE xcca101*xcca102h WHEN 0 THEN 0 ELSE xcbz101/xcca101*xcca102h END) xcca102h , ",
               #170705-00006#1 add(E)
               "        xcca110  , ",
               "        xcca110a  , xcca110b , ",
               "        xcca110c  , xcca110d , ",
               "        xcca110e  , xcca110f , ",
               "        xcca110g  , xcca110h   ",
               "   FROM xccq_tmp,xcbz_t,xcca_t ",
               " WHERE xccqent = xcbzent AND xccqld  = xcbzld  AND xccqsite= xcbzsite ",
               "   AND xccq004 = xcbz001 AND xccq005 = xcbz002 AND xccq006 = xcbz003 ",
               "   AND xccq007 = xcbz004 AND xccq009 = xcbz005 AND xccq010 = xcbz006 ",
               "   AND xccq011 = xcbz007 AND xccq008 = xcbz008 ",
               "   AND xccqent = xccaent AND xccqld  = xccald  ",
               "   AND xccq001 = xcca001 AND xccq002 = xcca002 AND xccq003 = xcca003 ",
               "   AND xcca004 = ",g_last_yy,
               "   AND xcca005 = ",g_last_pp,
               "   AND xccq006 = xcca006 AND xccq007 = xcca007 AND xccq008 = xcca008 ",
               "   AND xcbz101 > 0 AND xcca101 > 0 ",  #数量大于0，小于等于0没法分摊，xcbz数量总和应等于xcca101，等于0xccq就没意义
               "   INTO TEMP xcca_tmp "
   PREPARE s_axcp500_avg1_xcca_tmp_execute_p FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_xcca_tmp_execute_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   EXECUTE s_axcp500_avg1_xcca_tmp_execute_p
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_xcca_tmp_execute_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   FREE s_axcp500_avg1_xcca_tmp_execute_p

   #161114-00003#1-s-add
   #b add by zwr 16.10.20 增加索引

   CREATE INDEX xcca_tmp_i01 ON xcca_tmp(xccqent,xccqld ,xccqsite,xccq001,xccq002,xccq003,xccq004,xccq005,xccq006,xccq007,xccq008,xccq009,xccq010,xccq011,xccq012);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX xcca_tmp_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   IF cl_db_generate_analyze("xcca_tmp") THEN END IF   
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add
   
   UPDATE xcca_tmp SET xcca102a = xcca102 - xcca102b - xcca102c - xcca102d - xcca102e - xcca102f - xcca102g - xcca102h,
                       xcca110a = xcca110 - xcca110b - xcca110c - xcca110d - xcca110e - xcca110f - xcca110g - xcca110h
   
   #add 151116 zhangllc --begin 效能改善
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp a    ",
               "       USING xcca_tmp b     ",
               "          ON ( a.xccqent = b.xccqent       ",  
               "          AND  a.xccqld  = b.xccqld        ",
               "          AND  a.xccqsite= b.xccqsite      ",
               "          AND  a.xccq001 = b.xccq001       ",
               "          AND  a.xccq002 = b.xccq002       ",
               "          AND  a.xccq003 = b.xccq003       ",
               "          AND  a.xccq004 = b.xccq004       ",
               "          AND  a.xccq005 = b.xccq005       ",
               "          AND  a.xccq006 = b.xccq006       ",
               "          AND  a.xccq007 = b.xccq007       ",
               "          AND  a.xccq008 = b.xccq008       ",
               "          AND  a.xccq009 = b.xccq009       ",
               "          AND  a.xccq010 = b.xccq010       ",
               "          AND  a.xccq011 = b.xccq011       ",
               "          AND  a.xccq012 = b.xccq012 )     ",
               "  WHEN MATCHED THEN                        ",
               "       UPDATE SET a.xccq101  = nvl(b.xcbz101 ,0) , ",
               "                  a.xccq102  = nvl(b.xcca102 ,0) , ",
               "                  a.xccq102a = nvl(b.xcca102a,0) , ", 
               "                  a.xccq102b = nvl(b.xcca102b,0) , ", 
               "                  a.xccq102c = nvl(b.xcca102c,0) , ", 
               "                  a.xccq102d = nvl(b.xcca102d,0) , ", 
               "                  a.xccq102e = nvl(b.xcca102e,0) , ", 
               "                  a.xccq102f = nvl(b.xcca102f,0) , ", 
               "                  a.xccq102g = nvl(b.xcca102g,0) , ", 
               "                  a.xccq102h = nvl(b.xcca102h,0) , ",  
               "                  a.xccq280  = nvl(b.xcca110 ,0) , ",  
               "                  a.xccq280a = nvl(b.xcca110a,0) , ", 
               "                  a.xccq280b = nvl(b.xcca110b,0) , ", 
               "                  a.xccq280c = nvl(b.xcca110c,0) , ", 
               "                  a.xccq280d = nvl(b.xcca110d,0) , ", 
               "                  a.xccq280e = nvl(b.xcca110e,0) , ", 
               "                  a.xccq280f = nvl(b.xcca110f,0) , ", 
               "                  a.xccq280g = nvl(b.xcca110g,0) , ", 
               "                  a.xccq280h = nvl(b.xcca110h,0)   ",                  
               "  WHEN NOT MATCHED THEN                    ",
               "       INSERT VALUES(b.xccqent,b.xccqcomp,b.xccqld,b.xccqsite, b.xccq001,b.xccq002,      ",
               "                     b.xccq003,b.xccq004,b.xccq005,b.xccq006,b.xccq007,      ",
               "                     b.xccq008,b.xccq009,b.xccq010,b.xccq011,b.xccq012,     ",
               "                     b.xcbz101,b.xcca102,b.xcca102a,b.xcca102b,b.xcca102c,    ",  #101.期初
               "                     b.xcca102d,b.xcca102e,b.xcca102f,b.xcca102g,b.xcca102h,  ",
               "                     0,0,0,0,0,0,0,0,0,0,                       ",                #201.采购
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #203.委外/205.工单入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #207.重工领出/209.重工入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
               "                     b.xcca110, b.xcca110a,b.xcca110b,b.xcca110c,b.xcca110d,",    #280.平均单价
               "                     b.xcca110e,b.xcca110f,b.xcca110g,b.xcca110h,",               
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
               "                     b.xcca101,b.xcca102,b.xcca102a,b.xcca102b,b.xcca102c,    ",  #901.期末结存
               "                     b.xcca102d,b.xcca102e,b.xcca102f,b.xcca102g,b.xcca102h,  ",               
               "                     0,0,0,0,0,0,0,0,0,   ",                                      #903.销售费用
               "                     '' )                                       "                 #最近成本计算时间 
   #add 151116 zhangllc --end
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_1_p2')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_1_p2 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_1_p2')         
#     RETURN r_success
   END IF    
   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   

   DROP TABLE xcca_tmp; #ODI-ORA#
   
   #更新已经取到的入项成本
   #201.采购入库成本
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",    
               #"                WHERE xcck055 = '201' ",
               "                WHERE xcck055 in ('2011','2012') ", #mod zhangllc 151203
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq201  = nvl(b.xcck201 ,0) ,  ",
               "                xccq202  = nvl(b.xcck202 ,0) ,  ",
               "                xccq202a = nvl(b.xcck202a,0) ,  ",
               "                xccq202b = nvl(b.xcck202b,0) ,  ",
               "                xccq202c = nvl(b.xcck202c,0) ,  ",
               "                xccq202d = nvl(b.xcck202d,0) ,  ",
               "                xccq202e = nvl(b.xcck202e,0) ,  ",
               "                xccq202f = nvl(b.xcck202f,0) ,  ",
               "                xccq202g = nvl(b.xcck202g,0) ,  ",
               "                xccq202h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_1_p3')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_1_p3 

   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_1_p3')         
#     RETURN r_success
   END IF     
   
   #211.杂收入库
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '211' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq211  = nvl(b.xcck201 ,0) ,  ",
               "                xccq212  = nvl(b.xcck202 ,0) ,  ",
               "                xccq212a = nvl(b.xcck202a,0) ,  ",
               "                xccq212b = nvl(b.xcck202b,0) ,  ",
               "                xccq212c = nvl(b.xcck202c,0) ,  ",
               "                xccq212d = nvl(b.xcck202d,0) ,  ",
               "                xccq212e = nvl(b.xcck202e,0) ,  ",
               "                xccq212f = nvl(b.xcck202f,0) ,  ",
               "                xccq212g = nvl(b.xcck202g,0) ,  ",
               "                xccq212h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_1_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_1_p4')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_1_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_1_p4')         
#     RETURN r_success
   END IF     
   
   #add zhangllc 151208 --begin
   #213.调整入库--当站下线写入
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '213' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq213  = xccq213  + nvl(b.xcck201 ,0), ",
               "                xccq214  = xccq214  + nvl(b.xcck202 ,0), ",
               "                xccq214a = xccq214a + nvl(b.xcck202a,0), ",
               "                xccq214b = xccq214b + nvl(b.xcck202b,0), ",
               "                xccq214c = xccq214c + nvl(b.xcck202c,0), ",
               "                xccq214d = xccq214d + nvl(b.xcck202d,0), ",
               "                xccq214e = xccq214e + nvl(b.xcck202e,0), ",
               "                xccq214f = xccq214f + nvl(b.xcck202f,0), ",
               "                xccq214g = xccq214g + nvl(b.xcck202g,0), ",
               "                xccq214h = xccq214h + nvl(b.xcck202h,0)  "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_1_p52 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_1_p52"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_1_p52')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_1_p52 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_1_p52"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_1_p52')         
#     RETURN r_success
   END IF
   #add zhangllc 151208 --end
   
   
   #217.其他入库
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '217' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq217  = nvl(b.xcck201 ,0) ,  ",
               "                xccq218  = nvl(b.xcck202 ,0) ,  ",
               "                xccq218a = nvl(b.xcck202a,0) ,  ",
               "                xccq218b = nvl(b.xcck202b,0) ,  ",
               "                xccq218c = nvl(b.xcck202c,0) ,  ",
               "                xccq218d = nvl(b.xcck202d,0) ,  ",
               "                xccq218e = nvl(b.xcck202e,0) ,  ",
               "                xccq218f = nvl(b.xcck202f,0) ,  ",
               "                xccq218g = nvl(b.xcck202g,0) ,  ",
               "                xccq218h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_1_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_1_p6')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_1_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_1_p6')         
#     RETURN r_success
   END IF
   
   #213.调整入库,从上面213的位置移下来，因为要算上所有入库的金额去分摊
   #临时表辅助xcco调整
   #根据xccq的按料号的合计金额(期初金额＋本期入库金额)为分母，每笔xccq的金额为分子，算出比率，再乘以xcco的金额
   LET g_sql = " SELECT xccqent ,xccqld  ,xccqsite,xccq001 ,xccq002 ,xccq003 ,xccq004 ,xccq005 , ",
               "        xccq006 ,xccq007 ,xccq008 ,xccq009 ,xccq010 ,xccq011 ,xccq012 , ",
               #分子amt_son：每笔xccq的金额为
               "        xccq102 + xccq202 + xccq204 + xccq206 + xccq208 + xccq210 + xccq212 + xccq214 + xccq216 + xccq218 amt_son, ",
               #分母amt_mum：再算，xcco调整金额(待分配)
               "        0 amt_mum,SUM(xcco102) xcco102,SUM(xcco102a) xcco102a,SUM(xcco102b) xcco102b,",
               "        SUM(xcco102c) xcco102c,SUM(xcco102d) xcco102d,SUM(xcco102e) xcco102e, ",
               "        SUM(xcco102f) xcco102f,SUM(xcco102g) xcco102g,SUM(xcco102h) xcco102h ",
               "   FROM xccq_tmp,xcco_t ",
               " WHERE xccqent = xccoent AND xccqld  = xccold  ",
               "   AND xccq001 = xcco001 AND xccq002 = xcco002 AND xccq003 = xcco003 ",
               "   AND xccq004 = xcco004 AND xccq005 = xcco005 AND xccq006 = xcco006 "
               #"   AND xccq007 = xcco007 AND xccq008 = xcco008 ",
   #使用特征否
   IF g_sys_6013 = 'Y' THEN
      LET g_sql = g_sql CLIPPED," AND xccq007 = xcco007  "
   #ELSE
   #   LET g_sql = g_sql CLIPPED," AND xccq007 = ' '  "
   END IF
   
   #批次成本否
   IF g_cost_type = '3' THEN
      LET g_sql = g_sql CLIPPED," AND xccq008 = xcco008 "
   #ELSE
   #   LET g_sql = g_sql CLIPPED," AND xccq008 = ' '  "  
   END IF
               
   LET g_sql = g_sql CLIPPED,
               "   AND xcco102 != 0 ",
               " GROUP BY xccqent ,xccqld  ,xccqsite,xccq001 ,xccq002 ,xccq003 ,xccq004 ,xccq005 , ",
               "        xccq006 ,xccq007 ,xccq008 ,xccq009 ,xccq010 ,xccq011 ,xccq012 , ",
               "        xccq102 + xccq202 + xccq204 + xccq206 + xccq208 + xccq210 + xccq212 + xccq214 + xccq216 + xccq218,0 ",
               "   INTO TEMP xcco_tmp "
   PREPARE s_axcp500_avg1_xcco_tmp_execute_p FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_xcco_tmp_execute_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   EXECUTE s_axcp500_avg1_xcco_tmp_execute_p
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_xcco_tmp_execute_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   FREE s_axcp500_avg1_xcco_tmp_execute_p
   
   #161114-00003#1-s-add
   #b add by zwr 16.10.20 增加索引

   CREATE INDEX xcco_tmp_i01 ON xcco_tmp(xccqent,xccqld ,xccq001,xccq002,xccq003,xccq004,xccq005,xccq006,xccq007,xccq008);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX xcco_tmp_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   IF cl_db_generate_analyze("xcco_tmp") THEN END IF   
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add
   
   #xcco_tmp计算分母：按料号的合计金额(期初金额＋本期入库金额)
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcco_tmp a ",
               "       USING (SELECT xccqent,xccqld,xccq001,xccq002,xccq003,xccq004,xccq005,xccq006,xccq007,xccq008, ",
               "                     SUM(xccq102 + xccq202 + xccq204 + xccq206 + xccq208 + xccq210 + xccq212 + xccq214 + xccq216 + xccq218) amt_mum ",
               "                FROM xccq_tmp ",
               "               GROUP BY xccqent,xccqld,xccq001,xccq002,xccq003,xccq004,xccq005,xccq006,xccq007,xccq008 ",
               "                ) b ",
               "          ON ( a.xccqent = b.xccqent  ",
               "         AND   a.xccqld  = b.xccqld   ",
               "         AND   a.xccq001 = b.xccq001  ",
               "         AND   a.xccq002 = b.xccq002  ",
               "         AND   a.xccq003 = b.xccq003  ",
               "         AND   a.xccq004 = b.xccq004  ",
               "         AND   a.xccq005 = b.xccq005  ",
               "         AND   a.xccq006 = b.xccq006  ",
               "         AND   a.xccq007 = b.xccq007  ",
               "         AND   a.xccq008 = b.xccq008  ",
               "     ) ",  
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.amt_mum = b.amt_mum   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_upd_xcco_tmp_execute_p FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_upd_xcco_tmp_execute_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF     
   EXECUTE s_axcp500_avg1_upd_xcco_tmp_execute_p
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_upd_xcco_tmp_execute_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #如果xccq按料号的合计金额为0，就是分母为0，则无法分配，跟配率算0
   UPDATE xcco_tmp SET amt_son = 0,
                       amt_mum = 1
    WHERE amt_mum = 0
   #计算分配的调整金额
   UPDATE xcco_tmp SET xcco102  = xcco102  * amt_son/amt_mum,
                       xcco102a = xcco102a * amt_son/amt_mum,
                       xcco102b = xcco102b * amt_son/amt_mum,
                       xcco102c = xcco102c * amt_son/amt_mum,
                       xcco102d = xcco102d * amt_son/amt_mum,
                       xcco102e = xcco102e * amt_son/amt_mum,
                       xcco102f = xcco102f * amt_son/amt_mum,
                       xcco102g = xcco102g * amt_son/amt_mum,
                       xcco102h = xcco102h * amt_son/amt_mum
   
   
   UPDATE xcco_tmp SET xcco102a = xcco102 - xcco102b - xcco102c - xcco102d - xcco102e - xcco102f - xcco102g - xcco102h
   
   #213.调整入库 zll
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp a ",
               "       USING xcco_tmp b ",
               "          ON ( a.xccqent = b.xccqent ",
               "         AND   a.xccqld  = b.xccqld  ",
               "         AND   a.xccqsite= b.xccqsite ",
               "         AND   a.xccq001 = b.xccq001 ",
               "         AND   a.xccq002 = b.xccq002 ",
               "         AND   a.xccq003 = b.xccq003 ",
               "         AND   a.xccq004 = b.xccq004 ",
               "         AND   a.xccq005 = b.xccq005 ",
               "         AND   a.xccq006 = b.xccq006 ",
               "         AND   a.xccq007 = b.xccq007 ",
               "         AND   a.xccq008 = b.xccq008 ",
               "         AND   a.xccq009 = b.xccq009 ",
               "         AND   a.xccq010 = b.xccq010 ",
               "         AND   a.xccq011 = b.xccq011 ",
               "         AND   a.xccq012 = b.xccq012) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq214  = xccq214  + nvl(b.xcco102,0)  , ",
               "                xccq214a = xccq214a + nvl(b.xcco102a,0) , ",
               "                xccq214b = xccq214b + nvl(b.xcco102b,0) , ",
               "                xccq214c = xccq214c + nvl(b.xcco102c,0) , ",
               "                xccq214d = xccq214d + nvl(b.xcco102d,0) , ",
               "                xccq214e = xccq214e + nvl(b.xcco102e,0) , ",
               "                xccq214f = xccq214f + nvl(b.xcco102f,0) , ",
               "                xccq214g = xccq214g + nvl(b.xcco102g,0) , ",
               "                xccq214h = xccq214h + nvl(b.xcco102h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_1_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.sqlerr = SQLCA.sqlerrd[2]  #add zhangllc 151113
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_1_p5')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_1_p5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_1_p5')         
#     RETURN r_success
   END IF

   DROP TABLE xcco_tmp; #ODI-ORA#
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xccc - 201.采购 211.杂项入 213.调整入 217.其他入
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccc_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccc_1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   #PGS-(D)-03080-----s
   DEFINE l_sql           STRING
   #PGS-(D)-03080-----e

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME   

   MESSAGE "set_xccc_1:ins xccc_tmp "
   #xcck_tmp 的资料丢入xccc_tmp
#PGS-(D)-03080-----s
#PGS-(D)-03080-----e
   INSERT INTO xccc_tmp SELECT DISTINCT xcckent,xcckcomp,xcckld,xcck001,xcck002,
                               xcck003,xcck004,xcck005,xcck010,xcck011,xcck017,xcck041, 
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #101.期初/201.采购
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #203.委外/205.工单入库
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #207.重工领出/209.重工入库
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #211.杂项入库/213.调整入库
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #215.销退入库/217.其他入库
                               0,0,0,0,0,0,0,0,0,                                         #280.平均单价
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #301.工单领用/303.销货
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #305.销退/307.销售费用
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,                 #309.杂发/311.盘盈亏
                               0,0,0,0,0,0,0,0,0,0,  0,0,                                 #313.其他出库/401.销货收入金额/402.销退金额
                               0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,                   #901.期末结存/903.销售费用
                               ''                                                         #最近成本计算时间
                          FROM xcck_tmp
#PGS-(D)-03080-----s
#PGS-(D)-03080-----e
   
   #PGS-(D)-03080-----s
   #PGS-(D)-03080-----e
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "INSERT INTO xccc_tmp FROM xcck_tmp"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','INSERT INTO xccc_tmp FROM xcck_tmp')         
#     RETURN r_success
   END IF                         
   
   #更新期初资料 - 上期的xccc
#mark 151116 zhangllc --begin
#   LET g_sql = " MERGE INTO xccc_tmp a   ",
#               "       USING xccc_t b    ",
#               "          ON ( a.xcccent = b.xcccent         ",
#               "          AND  a.xcccld  = b.xcccld          ",
#               "          AND  a.xccc001 = b.xccc001         ",
#               "          AND  a.xccc002 = b.xccc002         ",
#               "          AND  a.xccc003 = b.xccc003         ",
#               "          AND  a.xccc006 = b.xccc006         ",
#               "          AND  a.xccc007 = b.xccc007         ",
#               "          AND  a.xccc008 = b.xccc008 )       ",
#               "  WHEN MATCHED THEN                          ",
#               "       UPDATE SET a.xccc101  = nvl(b.xccc901 ,0) ,   ",
#               "                  a.xccc102  = nvl(b.xccc902 ,0) ,   ",
#               "                  a.xccc102a = nvl(b.xccc902a,0) ,   ",    
#               "                  a.xccc102b = nvl(b.xccc902b,0) ,   ",    
#               "                  a.xccc102c = nvl(b.xccc902c,0) ,   ",    
#               "                  a.xccc102d = nvl(b.xccc902d,0) ,   ",    
#               "                  a.xccc102e = nvl(b.xccc902e,0) ,   ",    
#               "                  a.xccc102f = nvl(b.xccc902f,0) ,   ",    
#               "                  a.xccc102g = nvl(b.xccc902g,0) ,   ",    
#               "                  a.xccc102h = nvl(b.xccc902h,0) ,   ",
#               "                  a.xccc280  = nvl(b.xccc280 ,0) ,   ",
#               "                  a.xccc280a = nvl(b.xccc280a,0) ,   ",    
#               "                  a.xccc280b = nvl(b.xccc280b,0) ,   ",    
#               "                  a.xccc280c = nvl(b.xccc280c,0) ,   ",    
#               "                  a.xccc280d = nvl(b.xccc280d,0) ,   ",    
#               "                  a.xccc280e = nvl(b.xccc280e,0) ,   ",    
#               "                  a.xccc280f = nvl(b.xccc280f,0) ,   ",    
#               "                  a.xccc280g = nvl(b.xccc280g,0) ,   ",    
#               "                  a.xccc280h = nvl(b.xccc280h,0)     ",               
#               "        WHERE b.xccc004 = ",g_last_yy,
#               "          AND b.xccc005 = ",g_last_pp,              
#               "  WHEN NOT MATCHED THEN                      ",
#               "       INSERT VALUES(b.xcccent,b.xccccomp,b.xcccld, b.xccc001,b.xccc002,    ",  
#               "                     b.xccc003,",g_yy,",",g_pp,",b.xccc006,b.xccc007,    ",
#               "                     b.xccc008,b.xccc010,                                   ",    #101.期初
#               "                     b.xccc901,b.xccc902,b.xccc902a,b.xccc902b,b.xccc902c,  ",
#               "                     b.xccc902d,b.xccc902e,b.xccc902f,b.xccc902g,b.xccc902h,",
#               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #201.采购
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #203.委外/205.工单入库
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #207.重工领出/209.重工入库
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #211.杂项入库/213.调整入库
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #215.销退入库/217.其他入库
#               "                     b.xccc280, b.xccc280a,b.xccc280b,b.xccc280c,b.xccc280d,",    #280.平均单价
#               "                     b.xccc280e,b.xccc280f,b.xccc280g,b.xccc280h,",               
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #301.工单领用/303.销货
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #305.销退/307.销售费用
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #309.杂发/311.盘盈亏
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,                  ",               #313.其他出库/401.销货收入金额/402.销退金额
#               "                     b.xccc901,b.xccc902,b.xccc902a,b.xccc902b,b.xccc902c,  ",    #901.期末结存
#               "                     b.xccc902d,b.xccc902e,b.xccc902f,b.xccc902g,b.xccc902h,",               
#               "                     0,0,0,0,0,0,0,0,0,    ",                                     #903.结存调整
#               "                     '' )                                        ",               #最近成本计算时间                       
#               #"        WHERE b.xccc006 IN (SELECT imaa001 FROM s_axcp500_tmp ) ",
#               "        WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=b.xccc006 )", #mod zhangllc 150811 速度提升
#               "          AND b.xcccent = ",g_enterprise,
#               "          AND b.xcccld  = '",g_ld,"'",
#               "          AND b.xccc001 = '",p_seq,"'",
#               "          AND b.xccc003 = '",g_xcat001,"'",
#               "          AND b.xccc004 = ",g_last_yy,
#               "          AND b.xccc005 = ",g_last_pp
##              "          AND (b.xccc901 <> 0 OR b.xccc902 <> 0 ) "
#mark 151116 zhangllc --end  
   MESSAGE "set_xccc_1:init xccc from xccc"
   #add 151116 zhangllc --begin 效能改善
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp a   ",
               "       USING (SELECT * FROM xccc_t ",
               "               WHERE xcccent = ",g_enterprise,
               "                 AND xcccld  = '",g_ld,"'",
               "                 AND xccc001 = '",p_seq,"'",
               "                 AND xccc003 = '",g_xcat001,"'",
               "                 AND xccc004 = ",g_last_yy,
               "                 AND xccc005 = ",g_last_pp, 
               "                 AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xccc006 ) ",
               "              ) b    ",
               "          ON ( a.xcccent = b.xcccent         ",
               "          AND  a.xcccld  = b.xcccld          ",
               "          AND  a.xccc001 = b.xccc001         ",
               "          AND  a.xccc002 = b.xccc002         ",
               "          AND  a.xccc003 = b.xccc003         ",
               "          AND  a.xccc006 = b.xccc006         ",
               "          AND  a.xccc007 = b.xccc007         ",
               "          AND  a.xccc008 = b.xccc008 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccc101  = nvl(b.xccc901 ,0) ,   ",
               "                  a.xccc102  = nvl(b.xccc902 ,0) ,   ",
               "                  a.xccc102a = nvl(b.xccc902a,0) ,   ",    
               "                  a.xccc102b = nvl(b.xccc902b,0) ,   ",    
               "                  a.xccc102c = nvl(b.xccc902c,0) ,   ",    
               "                  a.xccc102d = nvl(b.xccc902d,0) ,   ",    
               "                  a.xccc102e = nvl(b.xccc902e,0) ,   ",    
               "                  a.xccc102f = nvl(b.xccc902f,0) ,   ",    
               "                  a.xccc102g = nvl(b.xccc902g,0) ,   ",    
               "                  a.xccc102h = nvl(b.xccc902h,0) ,   ",
               "                  a.xccc280  = nvl(b.xccc280 ,0) ,   ",
               "                  a.xccc280a = nvl(b.xccc280a,0) ,   ",    
               "                  a.xccc280b = nvl(b.xccc280b,0) ,   ",    
               "                  a.xccc280c = nvl(b.xccc280c,0) ,   ",    
               "                  a.xccc280d = nvl(b.xccc280d,0) ,   ",    
               "                  a.xccc280e = nvl(b.xccc280e,0) ,   ",    
               "                  a.xccc280f = nvl(b.xccc280f,0) ,   ",    
               "                  a.xccc280g = nvl(b.xccc280g,0) ,   ",    
               "                  a.xccc280h = nvl(b.xccc280h,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xcccent,b.xccccomp,b.xcccld, b.xccc001,b.xccc002,    ",  
               "                     b.xccc003,",g_yy,",",g_pp,",b.xccc006,b.xccc007,    ",
               "                     b.xccc008,b.xccc010,                                   ",    #101.期初
               "                     b.xccc901,b.xccc902,b.xccc902a,b.xccc902b,b.xccc902c,  ",
               "                     b.xccc902d,b.xccc902e,b.xccc902f,b.xccc902g,b.xccc902h,",
               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #201.采购
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #203.委外/205.工单入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #207.重工领出/209.重工入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #211.杂项入库/213.调整入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #215.销退入库/217.其他入库
               "                     b.xccc280, b.xccc280a,b.xccc280b,b.xccc280c,b.xccc280d,",    #280.平均单价
               "                     b.xccc280e,b.xccc280f,b.xccc280g,b.xccc280h,",               
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #301.工单领用/303.销货
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #305.销退/307.销售费用
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  ",               #309.杂发/311.盘盈亏
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,                  ",               #313.其他出库/401.销货收入金额/402.销退金额
               "                     b.xccc901,b.xccc902,b.xccc902a,b.xccc902b,b.xccc902c,  ",    #901.期末结存
               "                     b.xccc902d,b.xccc902e,b.xccc902f,b.xccc902g,b.xccc902h,",               
               "                     0,0,0,0,0,0,0,0,0,    ",                                     #903.结存调整
               "                     '' )                                        "                #最近成本计算时间
   #add 151116 zhangllc --end
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p1')         
#     RETURN r_success
   END IF     
   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   

   CREATE INDEX xccc_i02 ON xccc_tmp(xcccent,xcccld,xccc001,xccc002,xccc003,xccc006,xccc007,xccc008) #ODI-ORA#
   IF cl_db_generate_analyze("xccc_tmp") THEN END IF
   
   EXECUTE s_axcp500_avg1_set_xccc_1_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p1')         
#     RETURN r_success
   END IF    

   #更新期初资料 - 上期的xcca
#mark 151116 zhangllc --begin
#   LET g_sql = " MERGE INTO xccc_tmp a    ",
#               "       USING xcca_t b     ",
#               "          ON ( a.xcccent = b.xccaent       ",  
#               "          AND  a.xcccld  = b.xccald        ",
#               "          AND  a.xccc001 = b.xcca001       ",
#               "          AND  a.xccc002 = b.xcca002       ",
#               "          AND  a.xccc003 = b.xcca003       ",
#               "          AND  a.xccc006 = b.xcca006       ",
#               "          AND  a.xccc007 = b.xcca007       ",
#               "          AND  a.xccc008 = b.xcca008 )     ",
#               "  WHEN MATCHED THEN                        ",
#               "       UPDATE SET a.xccc101  = nvl(b.xcca101 ,0) , ",
#               "                  a.xccc102  = nvl(b.xcca102 ,0) , ",
#               "                  a.xccc102a = nvl(b.xcca102a,0) , ",       
#               "                  a.xccc102b = nvl(b.xcca102b,0) , ",       
#               "                  a.xccc102c = nvl(b.xcca102c,0) , ",       
#               "                  a.xccc102d = nvl(b.xcca102d,0) , ",       
#               "                  a.xccc102e = nvl(b.xcca102e,0) , ",       
#               "                  a.xccc102f = nvl(b.xcca102f,0) , ",       
#               "                  a.xccc102g = nvl(b.xcca102g,0) , ",       
#               "                  a.xccc102h = nvl(b.xcca102h,0) , ",
#               "                  a.xccc280  = nvl(b.xcca110 ,0) , ",
#               "                  a.xccc280a = nvl(b.xcca110a,0) , ",       
#               "                  a.xccc280b = nvl(b.xcca110b,0) , ",       
#               "                  a.xccc280c = nvl(b.xcca110c,0) , ",       
#               "                  a.xccc280d = nvl(b.xcca110d,0) , ",       
#               "                  a.xccc280e = nvl(b.xcca110e,0) , ",       
#               "                  a.xccc280f = nvl(b.xcca110f,0) , ",       
#               "                  a.xccc280g = nvl(b.xcca110g,0) , ",       
#               "                  a.xccc280h = nvl(b.xcca110h,0)   ",               
#               "        WHERE b.xcca004 = ",g_last_yy,
#               "          AND b.xcca005 = ",g_last_pp,
#               "          AND (b.xcca101 <> 0 OR b.xcca102 <> 0 ) ",                  
#               "  WHEN NOT MATCHED THEN                    ",
#               "       INSERT VALUES(b.xccaent,b.xccacomp,b.xccald, b.xcca001,b.xcca002,      ",
#               "                     b.xcca003,",g_yy,",",g_pp,",b.xcca006,b.xcca007,      ",
#               "                     b.xcca008,'",g_curr[p_seq].curr,"',",
#               "                     b.xcca101,b.xcca102,b.xcca102a,b.xcca102b,b.xcca102c,    ",  #101.期初
#               "                     b.xcca102d,b.xcca102e,b.xcca102f,b.xcca102g,b.xcca102h,  ",
#               "                     0,0,0,0,0,0,0,0,0,0,                       ",                #201.采购
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #203.委外/205.工单入库
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #207.重工领出/209.重工入库
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
#               "                     b.xcca110, b.xcca110a,b.xcca110b,b.xcca110c,b.xcca110d,",    #280.平均单价
#               "                     b.xcca110e,b.xcca110f,b.xcca110g,b.xcca110h,",               
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
#               "                     0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
#               "                     b.xcca101,b.xcca102,b.xcca102a,b.xcca102b,b.xcca102c,    ",  #901.期末结存
#               "                     b.xcca102d,b.xcca102e,b.xcca102f,b.xcca102g,b.xcca102h,  ",               
#               "                     0,0,0,0,0,0,0,0,0,   ",                                      #903.销售费用
#               "                     '' )                                       ",                #最近成本计算时间                       
#               #"        WHERE b.xcca006 IN (SELECT imaa001 FROM s_axcp500_tmp ) ",
#               "        WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=b.xcca006 )", #mod zhangllc 150811 速度提升
#               "          AND b.xccaent = ",g_enterprise,
#               "          AND b.xccald  = '",g_ld,"'",
#               "          AND b.xcca001 = '",p_seq,"'",
#               "          AND b.xcca003 = '",g_xcat001,"'",
#               "          AND b.xcca004 = ",g_last_yy,
#               "          AND b.xcca005 = ",g_last_pp,
#               "          AND (b.xcca101 <> 0 OR b.xcca102 <> 0 ) "
#mark 151116 zhangllc --end  
   MESSAGE "set_xccc_1:init xccc from xcca"
   #add 151116 zhangllc --begin 效能改善
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp a    ",
              #-------#171023-00005#1---begin-----modify
              #"       USING ( SELECT * FROM xcca_t ", 
               "       USING ( SELECT * FROM xcca_tmp1 ",               
              #-------#171023-00005#1---end--------modify               
               "               WHERE xccaent = ",g_enterprise,
               "                 AND xccald  = '",g_ld,"'",
               "                 AND xcca001 = '",p_seq,"'",
               "                 AND xcca003 = '",g_xcat001,"'",
               "                 AND xcca004 = ",g_last_yy,
               "                 AND xcca005 = ",g_last_pp,
               #"                 AND (xcca101 <> 0 OR xcca102 <> 0 ) ",  #mark zhangllc 160528 SBS5 在上线制开账的时候如果以前的工单主件已经入库了，并入库的部分也已全部出库了，实际库存为0，但工单产线上还有些多余元料，本期退库了，那本期第一次算成本的时候因为没有上期成本，也没开账成本，这张工单结案时的转出若算入一般入库转出的话，则归集不到xccc了，因为xccc里面没有这个料的讯息
               "                 AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcca006 )",
               "             ) b     ",
               "          ON ( a.xcccent = b.xccaent       ",  
               "          AND  a.xcccld  = b.xccald        ",
               "          AND  a.xccc001 = b.xcca001       ",
               "          AND  a.xccc002 = b.xcca002       ",
               "          AND  a.xccc003 = b.xcca003       ",
#               "          AND  a.xccc006 = b.xcca006       ",  #180831-00062#1 mark
               "          AND  NVL(a.xccc006,' ') = NVL(b.xcca006,' ')       ",  #180831-00062#1 mod
               "          AND  a.xccc007 = b.xcca007       ",
               "          AND  a.xccc008 = b.xcca008 )     ",
               "  WHEN MATCHED THEN                        ",
               "       UPDATE SET a.xccc101  = nvl(b.xcca101 ,0) , ",
               "                  a.xccc102  = nvl(b.xcca102 ,0) , ",
               "                  a.xccc102a = nvl(b.xcca102a,0) , ",       
               "                  a.xccc102b = nvl(b.xcca102b,0) , ",       
               "                  a.xccc102c = nvl(b.xcca102c,0) , ",       
               "                  a.xccc102d = nvl(b.xcca102d,0) , ",       
               "                  a.xccc102e = nvl(b.xcca102e,0) , ",       
               "                  a.xccc102f = nvl(b.xcca102f,0) , ",       
               "                  a.xccc102g = nvl(b.xcca102g,0) , ",       
               "                  a.xccc102h = nvl(b.xcca102h,0) , ",
               "                  a.xccc280  = nvl(b.xcca110 ,0) , ",
               "                  a.xccc280a = nvl(b.xcca110a,0) , ",       
               "                  a.xccc280b = nvl(b.xcca110b,0) , ",       
               "                  a.xccc280c = nvl(b.xcca110c,0) , ",       
               "                  a.xccc280d = nvl(b.xcca110d,0) , ",       
               "                  a.xccc280e = nvl(b.xcca110e,0) , ",       
               "                  a.xccc280f = nvl(b.xcca110f,0) , ",       
               "                  a.xccc280g = nvl(b.xcca110g,0) , ",       
               "                  a.xccc280h = nvl(b.xcca110h,0) , ",  #161212-00079#1 add ,
              #161212-00079#1-s-add 
               "                  a.xccc901  = nvl(b.xcca101 ,0) , ",
               "                  a.xccc902  = nvl(b.xcca102 ,0) , ",
               "                  a.xccc902a = nvl(b.xcca102a,0) , ",       
               "                  a.xccc902b = nvl(b.xcca102b,0) , ",       
               "                  a.xccc902c = nvl(b.xcca102c,0) , ",       
               "                  a.xccc902d = nvl(b.xcca102d,0) , ",       
               "                  a.xccc902e = nvl(b.xcca102e,0) , ",       
               "                  a.xccc902f = nvl(b.xcca102f,0) , ",       
               "                  a.xccc902g = nvl(b.xcca102g,0) , ",       
               "                  a.xccc902h = nvl(b.xcca102h,0)   ",        
              #161212-00079#1-e-add
               "  WHEN NOT MATCHED THEN                    ",
               "       INSERT VALUES(b.xccaent,b.xccacomp,b.xccald, b.xcca001,b.xcca002,      ",
               "                     b.xcca003,",g_yy,",",g_pp,",b.xcca006,b.xcca007,      ",
               "                     b.xcca008,'",g_curr[p_seq].curr,"',",
               "                     b.xcca101,b.xcca102,b.xcca102a,b.xcca102b,b.xcca102c,    ",  #101.期初
               "                     b.xcca102d,b.xcca102e,b.xcca102f,b.xcca102g,b.xcca102h,  ",
               "                     0,0,0,0,0,0,0,0,0,0,                       ",                #201.采购
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #203.委外/205.工单入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #207.重工领出/209.重工入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
               "                     b.xcca110, b.xcca110a,b.xcca110b,b.xcca110c,b.xcca110d,",    #280.平均单价
               "                     b.xcca110e,b.xcca110f,b.xcca110g,b.xcca110h,",               
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
               "                     0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
               "                     b.xcca101,b.xcca102,b.xcca102a,b.xcca102b,b.xcca102c,    ",  #901.期末结存
               "                     b.xcca102d,b.xcca102e,b.xcca102f,b.xcca102g,b.xcca102h,  ",               
               "                     0,0,0,0,0,0,0,0,0,   ",                                      #903.销售费用
               "                     '' )                                       "                 #最近成本计算时间
   #add 151116 zhangllc --end
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p2')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_1_p2 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p2')         
#     RETURN r_success
   END IF 

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #160813-00001#2-s-add      
   LET g_sql = " INSERT INTO xccc_tmp ",              
              #" SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',",                    #161114-00003#1 mark
              #" SELECT /*+ PARALLEL(4) */ UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',", #161114-00003#1 add   #170110-00028#1             
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',",  #170110-00028#1             
               "        ' ','",g_xcat001,"',",g_yy,",",g_pp,",sfaa010,' ', ",
               "        ' ','",g_curr[p_seq].curr,"',",
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",            
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                      
               #"        ''                                         ",     #PGS-(D)-03080 mark
               "        CAST(NULL as timestamp)                    ",      #最近成本计算时间    #PGS-(D)-03080   
               "   FROM sfaa_tmp ",
               "  WHERE NOT EXISTS (SELECT 1 FROM xccc_tmp WHERE xccc006 = sfaa010 )"
               
   PREPARE s_axcp500_avg1_set_xccc_1_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p7')         

   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_1_p7 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p7') 
   END IF 
   #160813-00001#2-e-add
   
   #170105-00016#1 add
   LET g_sql = " INSERT INTO xccc_tmp ",
               #" SELECT /*+ PARALLEL(4) */ UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',", #170110-00028#1 
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',", #170110-00028#1 
               "        ' ','",g_xcat001,"',",g_yy,",",g_pp,",sfac001,sfac006, ",
               "        ' ','",g_curr[p_seq].curr,"',",
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",            
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",             
               "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                      
               #"        ''                                         ",      #PGS-(D)-03080 mark
               "        CAST(NULL as timestamp)                    ",      #最近成本计算时间    #PGS-(D)-03080                
               "   FROM sfac_tmp ",
               "  WHERE NOT EXISTS (SELECT 1 FROM xccc_tmp WHERE xccc006 = sfac001 AND xccc007 = sfac006 )"
               
   PREPARE s_axcp500_avg1_set_xccc_1_p8 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p8')         

   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_1_p8 



   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p8') 
   END IF 
   #170105-00016#1 add end
   
   #add 150807 增加以下sql的执行效能

   CREATE INDEX xcck_tmp_i01 ON xcck_tmp(xcck055) #ODI-ORA#
   IF cl_db_generate_analyze("xcck_tmp") THEN END IF
   #add 150807 end
   
   #更新已经取到的入项成本
   MESSAGE "set_xccc_1:deal xccc201/xccc202"
   #201.采购入库成本
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",    
               #"                WHERE xcck055 = '201' ",
               "                WHERE xcck055 in ('2011','2012') ", #mod zhangllc 151203
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc201  = nvl(b.xcck201 ,0) ,  ",
               "                xccc202  = nvl(b.xcck202 ,0) ,  ",
               "                xccc202a = nvl(b.xcck202a,0) ,  ",
               "                xccc202b = nvl(b.xcck202b,0) ,  ",
               "                xccc202c = nvl(b.xcck202c,0) ,  ",
               "                xccc202d = nvl(b.xcck202d,0) ,  ",
               "                xccc202e = nvl(b.xcck202e,0) ,  ",
               "                xccc202f = nvl(b.xcck202f,0) ,  ",
               "                xccc202g = nvl(b.xcck202g,0) ,  ",
               "                xccc202h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p3')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_1_p3 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p3')         
#     RETURN r_success
   END IF     
   
   #211.杂收入库
   MESSAGE "set_xccc_1:deal xccc211/xccc212"
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '211' ",
               "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc211  = nvl(b.xcck201 ,0) ,  ",
               "                xccc212  = nvl(b.xcck202 ,0) ,  ",
               "                xccc212a = nvl(b.xcck202a,0) ,  ",
               "                xccc212b = nvl(b.xcck202b,0) ,  ",
               "                xccc212c = nvl(b.xcck202c,0) ,  ",
               "                xccc212d = nvl(b.xcck202d,0) ,  ",
               "                xccc212e = nvl(b.xcck202e,0) ,  ",
               "                xccc212f = nvl(b.xcck202f,0) ,  ",
               "                xccc212g = nvl(b.xcck202g,0) ,  ",
               "                xccc212h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_1_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p4')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_1_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p4')         
#     RETURN r_success
   END IF
   
   #213.调整入库
   MESSAGE "set_xccc_1:deal xccc214"
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xccoent,xccocomp,xccold,xcco001,xcco002,xcco003,   ",  #160826-00022#1 add xccocomp,
               "                     xcco004,xcco005,xcco006,xcco007,xcco008,   ",
     
               "                     SUM(xcco102)  xcco102, SUM(xcco102a) xcco102a, SUM(xcco102b) xcco102b,",
               "                     SUM(xcco102c) xcco102c,SUM(xcco102d) xcco102d, SUM(xcco102e) xcco102e,",
               "                     SUM(xcco102f) xcco102f,SUM(xcco102g) xcco102g, SUM(xcco102h) xcco102h ",
               "                FROM xcco_t     ",
               #160823-00028#1-s
               "               WHERE xccoent = ",g_enterprise,
               "                 AND xccocomp  = '",g_comp,"' ",  #160826-00022#1 add
               "                 AND xccold  = '",g_ld,"' ",
               "                 AND xcco001 = '",p_seq,"' ",
               "                 AND xcco003 = '",g_xcat001,"' ",
               "                 AND xcco004 = ",g_yy,
               "                 AND xcco005 = ",g_pp,
               "                 AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcco006 ) ",  #160826-00022#1 add
               #160823-00028#1-e
               "                GROUP BY xccoent,xccocomp,xccold, xcco001,xcco002,xcco003,",  #160826-00022#1 add xccocomp,
               "                         xcco004,xcco005,xcco006,xcco007,xcco008 ",
               "                ) b ",
               "          ON ( xcccent = b.xccoent  ",
               "         AND   xcccld  = b.xccold   ",
               "         AND   xccc001 = b.xcco001  ",
               "         AND   xccc002 = b.xcco002  ",
               "         AND   xccc003 = b.xcco003  ",
               "         AND   xccc004 = b.xcco004  ",
               "         AND   xccc005 = b.xcco005  ",
               "         AND   xccc006 = b.xcco006  "
   #使用特征否
   IF g_sys_6013 = 'Y' THEN
      LET g_sql = g_sql CLIPPED,
               "         AND   xccc007 = b.xcco007  "
   ELSE
      LET g_sql = cl_str_replace_multistr(g_sql,"xcco007,","")
      LET g_sql = cl_str_replace_multistr(g_sql,",xcco007,","")
      LET g_sql = g_sql CLIPPED,"         AND   xccc007 = ' '  "  #add zhangllc 151113 报ORA-30926错修改
   END IF
   
   #批次成本否
   IF g_cost_type = '3' THEN
      LET g_sql = g_sql CLIPPED,"         AND   xccc008 = b.xcco008 )"   #月加权,则不管批号
   ELSE
      LET g_sql = cl_str_replace_multistr(g_sql,"xcco008,","")
      #LET g_sql = cl_str_replace_multistr(g_sql,",xcco008,","")  
      LET g_sql = cl_str_replace_multistr(g_sql,",xcco008","")   #mod zhangllc 151113 
      LET g_sql = g_sql CLIPPED,"         AND   xccc008 = ' ' "   #月加权,则不管批号  add zhangllc 151113 报ORA-30926错修改
      LET g_sql = g_sql CLIPPED," ) "  
   END IF

   LET g_sql = g_sql CLIPPED,
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc214  = nvl(b.xcco102,0)  , ",
               "                xccc214a = nvl(b.xcco102a,0) , ",
               "                xccc214b = nvl(b.xcco102b,0) , ",
               "                xccc214c = nvl(b.xcco102c,0) , ",
               "                xccc214d = nvl(b.xcco102d,0) , ",
               "                xccc214e = nvl(b.xcco102e,0) , ",
               "                xccc214f = nvl(b.xcco102f,0) , ",
               "                xccc214g = nvl(b.xcco102g,0) , ",
               #160823-00028#1-s
               "                xccc214h = nvl(b.xcco102h,0)   ",
               "   WHEN NOT MATCHED THEN ",
               ##160826-00022#1-s
               "       INSERT VALUES(b.xccoent,b.xccocomp,b.xccold, b.xcco001,b.xcco002,",
               "                     b.xcco003,b.xcco004,b.xcco005,b.xcco006,b.xcco007,   ",
               "                     b.xcco008,'",g_curr[p_seq].curr,"',",
               ##160826-00022#1-e
               "                     0,0,0,0,0,  ",  #101.期初
               "                     0,0,0,0,0,  ",
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #201.采购
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #203.委外
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #205.工单入库
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #207.重工领出
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #209.重工入库
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #211.杂项入库
               "                     0,nvl(b.xcco102,0),nvl(b.xcco102a,0),nvl(b.xcco102b,0),nvl(b.xcco102c,0),nvl(b.xcco102d,0),nvl(b.xcco102e,0),nvl(b.xcco102f,0),nvl(b.xcco102g,0),nvl(b.xcco102h,0),  ",  #213.调整入库
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #215.销退入库
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #217.其他入库
               "                     0,0,0,0,0,            ",  #280.平均单价
               "                     0,0,0,0,              ",               
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #301.工单领用
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #303.销货
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #305.销退
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #307.销售费用
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #309.杂发
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #311.盘盈亏
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #313.其他出库
               "                     0,0,                  ",  #401.销货收入金额/402.销退金额
               "                     0,0,0,0,0,0,0,0,0,0,  ",  #901.期末结存
               "                     0,0,0,0,0,0,0,0,0,    ",  #903.销售费用
               "                     '' )                  "   #最近成本计算时间
               #160823-00028#1-e
   #200810-00030#6 mark -S-
   ##使用特征否
   #IF g_sys_6013 = 'Y' THEN
   #   LET g_sql = g_sql CLIPPED,
   #            "         AND dest.xccc007 = sour.xcco007  "
   #ELSE
   #   LET g_sql = cl_str_replace_multistr(g_sql,"xcco007,","")
   #   LET g_sql = cl_str_replace_multistr(g_sql,",xcco007,","")
   #   LET g_sql = g_sql CLIPPED,"         AND dest.xccc007 = ' '  "  #add zhangllc 151113 报ORA-30926错修改
   #END IF
   #
   ##批次成本否
   #IF g_cost_type = '3' THEN
   #   LET g_sql = g_sql CLIPPED,"         AND dest.xccc008 = sour.xcco008 )"   #月加权,则不管批号
   #ELSE
   #   LET g_sql = cl_str_replace_multistr(g_sql,"xcco008,","")
   #   #LET g_sql = cl_str_replace_multistr(g_sql,",xcco008,","")  
   #   LET g_sql = cl_str_replace_multistr(g_sql,",xcco008","")   #mod zhangllc 151113 
   #   LET g_sql = g_sql CLIPPED,"         AND dest.xccc008 = ' ' "   #月加权,则不管批号  add zhangllc 151113 报ORA-30926错修改
   #   LET g_sql = g_sql CLIPPED," ) "  
   #END IF 
   #PGS(D)-00824 --- end ---
   #200810-00030#6 mark -E-

   #160826-00022#1-s
   #使用特征否
   IF g_sys_6013 != 'Y' THEN
      LET g_sql = cl_str_replace_multistr(g_sql,"b.xcco007","' '")
   END IF
   #批次成本否
   IF g_cost_type != '3' THEN
      LET g_sql = cl_str_replace_multistr(g_sql,"b.xcco008","' '")
   END IF
   #160826-00022#1-e
   #PGS-(D)-03080
   
   PREPARE s_axcp500_avg1_set_xccc_1_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.sqlerr = SQLCA.sqlerrd[2]  #add zhangllc 151113
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p5')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_1_p5 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p5')         
#     RETURN r_success
   END IF
   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   
   #當「當站下線是否影響成本」=Y 且 「當站下線的取價方式」=2.人工取值時，才做當站下線的處理，
   #這是為了避免數量算進去但金額沒算，導致當月平均單價異常
   IF g_sys_6016 = 'Y' AND g_sys_6025 = '2' THEN   #190802-00007#1 add
      #add zhangllc 151208 --begin
      #213.调整入库--当站下线写入
      MESSAGE "set_xccc_1:deal xccc213/xccc214"
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xccc_tmp ",
                  "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
                  "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
                  "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
                  "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
                  "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
                  "                     SUM(xcck202h*xcck009) xcck202h ",
                  "                FROM xcck_tmp     ",                         
                  "                WHERE xcck055 = '213' ",
                  "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
                  "                         xcck004,xcck005,xcck010,xcck011,xcck017",
                  "                ) b ",
                  "          ON ( xcccent = b.xcckent  ",
                  "         AND   xcccld  = b.xcckld   ",
                  "         AND   xccc001 = b.xcck001  ",
                  "         AND   xccc002 = b.xcck002  ",
                  "         AND   xccc003 = b.xcck003  ",
                  "         AND   xccc004 = b.xcck004  ",
                  "         AND   xccc005 = b.xcck005  ",
                  "         AND   xccc006 = b.xcck010  ",
                  "         AND   xccc007 = b.xcck011  ",
                  "         AND   xccc008 = b.xcck017 )",
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xccc213  = xccc213  + nvl(b.xcck201 ,0), ",
                  "                xccc214  = xccc214  + nvl(b.xcck202 ,0), ",
                  "                xccc214a = xccc214a + nvl(b.xcck202a,0), ",
                  "                xccc214b = xccc214b + nvl(b.xcck202b,0), ",
                  "                xccc214c = xccc214c + nvl(b.xcck202c,0), ",
                  "                xccc214d = xccc214d + nvl(b.xcck202d,0), ",
                  "                xccc214e = xccc214e + nvl(b.xcck202e,0), ",
                  "                xccc214f = xccc214f + nvl(b.xcck202f,0), ",
                  "                xccc214g = xccc214g + nvl(b.xcck202g,0), ",
                  "                xccc214h = xccc214h + nvl(b.xcck202h,0)  "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_set_xccc_1_p52 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p52"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p52')         
   #     RETURN r_success
      END IF     
      EXECUTE s_axcp500_avg1_set_xccc_1_p52 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p52"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p52')         
   #     RETURN r_success
      END IF
      #add zhangllc 151208 --end
   END IF   #190802-00007#1 add
   
   #217.其他入库
   MESSAGE "set_xccc_1:deal xccc217/xccc218"
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",
               #160823-00028#1-s
               #"                WHERE xcck055 = '217' ",
               "                WHERE xcck055 IN ('217','3131') ",  #20160809 DSC.liquor mod  調撥出庫移到是撥入的減項裡
               #160823-00028#1-e
               "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc217  = nvl(b.xcck201 ,0) ,  ",
               "                xccc218  = nvl(b.xcck202 ,0) ,  ",
               "                xccc218a = nvl(b.xcck202a,0) ,  ",
               "                xccc218b = nvl(b.xcck202b,0) ,  ",
               "                xccc218c = nvl(b.xcck202c,0) ,  ",
               "                xccc218d = nvl(b.xcck202d,0) ,  ",
               "                xccc218e = nvl(b.xcck202e,0) ,  ",
               "                xccc218f = nvl(b.xcck202f,0) ,  ",
               "                xccc218g = nvl(b.xcck202g,0) ,  ",
               "                xccc218h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_1_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_1_p6')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_1_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_1_p6')         
#     RETURN r_success
   END IF
         
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(20,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xccq - 203.委外入 205.一般工单入 
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccq_2(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-12-15 By zhangllc 151215
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccq_2(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccq_t.xccq001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   
   #更新已经取到的入项成本
   #203.委外入库成本
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               #"                WHERE xcck055 = '203' ",
               "                WHERE xcck055 IN ('203','2030') ",      #mod zhangllc 160608 SBS2
               "                  AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006," AND xcck010 = imaa001)",  #171228-00050#1 add
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq203  = nvl(b.xcck201 ,0) ,  ",
               "                xccq204  = nvl(b.xcck202 ,0) ,  ",
               "                xccq204a = nvl(b.xcck202a,0) ,  ",
               "                xccq204b = nvl(b.xcck202b,0) ,  ",
               "                xccq204c = nvl(b.xcck202c,0) ,  ",
               "                xccq204d = nvl(b.xcck202d,0) ,  ",
               "                xccq204e = nvl(b.xcck202e,0) ,  ",
               "                xccq204f = nvl(b.xcck202f,0) ,  ",
               "                xccq204g = nvl(b.xcck202g,0) ,  ",
               "                xccq204h = nvl(b.xcck202h,0)    "
               #171228-00050#1---add---s
               ,
               "  WHEN NOT MATCHED THEN                      ",
               "     INSERT VALUES(b.xcckent,'",g_comp,"',b.xcckld,b.xccksite,b.xcck001,b.xcck002,",
               "                   b.xcck003,b.xcck004,b.xcck005,b.xcck010,b.xcck011,b.xcck017,",
               "                   b.xccktmp1,b.xcck015,b.xcck016,b.xcck028, ",
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #101.期初/201.采购
               "                   b.xcck201,b.xcck202,b.xcck202a,b.xcck202b,b.xcck202c,b.xcck202d,b.xcck202e,b.xcck202f,b.xcck202g,b.xcck202h,  0,0,0,0,0,0,0,0,0,0, ",                #203.委外/205.工单入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #207.重工领出/209.重工入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
               "                   0,0,0,0,0,0,0,0,0,                         ",                #280.平均单价
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,   ",                #901.期末结存/903.销售费用
               "                   '')                                         "                #最近成本计算时间 
               #171228-00050#1---add---e               
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_2_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_2_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_2_p1 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_2_p1')         
#     RETURN r_success
   END IF     
   
   #205.一般工单入库
   #PGS(D)-00824 --- end ---
   
   #205.一般工单入库
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",
               #"                WHERE xcck055 = '205' ",
               "                WHERE xcck055 IN ('205','2050') ",      #mod zhangllc 160527 SBS2
               "                  AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006," AND xcck010 = imaa001)",  #171228-00050#1 add
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq205  = nvl(b.xcck201 ,0) ,  ",
               "                xccq206  = nvl(b.xcck202 ,0) ,  ",
               "                xccq206a = nvl(b.xcck202a,0) ,  ",
               "                xccq206b = nvl(b.xcck202b,0) ,  ",
               "                xccq206c = nvl(b.xcck202c,0) ,  ",
               "                xccq206d = nvl(b.xcck202d,0) ,  ",
               "                xccq206e = nvl(b.xcck202e,0) ,  ",
               "                xccq206f = nvl(b.xcck202f,0) ,  ",
               "                xccq206g = nvl(b.xcck202g,0) ,  ",
               "                xccq206h = nvl(b.xcck202h,0)   "
               #171228-00050#1---add---s
               ,
               "  WHEN NOT MATCHED THEN                      ",
               "     INSERT VALUES(b.xcckent,'",g_comp,"',b.xcckld,b.xccksite,b.xcck001,b.xcck002,",
               "                   b.xcck003,b.xcck004,b.xcck005,b.xcck010,b.xcck011,b.xcck017,",
               "                   b.xccktmp1,b.xcck015,b.xcck016,b.xcck028, ",
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #101.期初/201.采购
               "                   0,0,0,0,0,0,0,0,0,0,  b.xcck201,b.xcck202,b.xcck202a,b.xcck202b,b.xcck202c,b.xcck202d,b.xcck202e,b.xcck202f,b.xcck202g,b.xcck202h, ",                #203.委外/205.工单入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #207.重工领出/209.重工入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
               "                   0,0,0,0,0,0,0,0,0,                         ",                #280.平均单价
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,   ",                #901.期末结存/903.销售费用
               "                   '')                                         "                #最近成本计算时间 
               #171228-00050#1---add---e               
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_2_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_2_p2')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_2_p2 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_2_p2')         
#     RETURN r_success
   END IF     
   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   
   #计算料件的平均单价 第一轮平均成本单价
   CALL s_axcp500_avg1_set_xccq280(p_xcbb006,p_seq,'1')
        RETURNING l_success
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xccc - 203.委外入 205.一般工单入 
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccc_2(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccc_2(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME   
   
   
   #更新已经取到的入项成本
   #203.委外入库成本
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
              #"                WHERE xcck055 = '203' ",
               "                WHERE xcck055 IN ('203','2030') ",      #mod zhangllc 160608 SBS2
               "                  AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006," AND xcck010 = imaa001)",  #171228-00050#1 add
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"        AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc203  = nvl(b.xcck201 ,0) ,  ",
               "                xccc204  = nvl(b.xcck202 ,0) ,  ",
               "                xccc204a = nvl(b.xcck202a,0) ,  ",
               "                xccc204b = nvl(b.xcck202b,0) ,  ",
               "                xccc204c = nvl(b.xcck202c,0) ,  ",
               "                xccc204d = nvl(b.xcck202d,0) ,  ",
               "                xccc204e = nvl(b.xcck202e,0) ,  ",
               "                xccc204f = nvl(b.xcck202f,0) ,  ",
               "                xccc204g = nvl(b.xcck202g,0) ,  ",
               "                xccc204h = nvl(b.xcck202h,0)    "
               #171228-00050#1---add---s
               ,
               "  WHEN NOT MATCHED THEN                      ",
               "     INSERT VALUES(b.xcckent,'",g_comp,"',b.xcckld,b.xcck001,b.xcck002,",
               "                   b.xcck003,b.xcck004,b.xcck005,b.xcck010,b.xcck011,b.xcck017,'",g_curr[p_seq].curr,"', ",
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #101.期初/201.采购
               "                   b.xcck201,b.xcck202,b.xcck202a,b.xcck202b,b.xcck202c,b.xcck202d,b.xcck202e,b.xcck202f,b.xcck202g,b.xcck202h,  0,0,0,0,0,0,0,0,0,0, ",                #203.委外/205.工单入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #207.重工领出/209.重工入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
               "                   0,0,0,0,0,0,0,0,0,                         ",                #280.平均单价
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,   ",                #901.期末结存/903.销售费用
               "                   '')                                        "                #最近成本计算时间               
               #171228-00050#1---add---e 
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_2_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_2_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_2_p1 
   
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_2_p1')         
#     RETURN r_success
   END IF     
   
   #205.一般工单入库
   #PGS(D)-00824 --- end ---
   
   #205.一般工单入库
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               #"                WHERE xcck055 = '205' ",
               "                WHERE xcck055 IN ('205','2050') ",      #mod zhangllc 160527 SBS2
               "                  AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006," AND xcck010 = imaa001)",  #171228-00050#1 add
               "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc205  = nvl(b.xcck201 ,0) ,  ",
               "                xccc206  = nvl(b.xcck202 ,0) ,  ",
               "                xccc206a = nvl(b.xcck202a,0) ,  ",
               "                xccc206b = nvl(b.xcck202b,0) ,  ",
               "                xccc206c = nvl(b.xcck202c,0) ,  ",
               "                xccc206d = nvl(b.xcck202d,0) ,  ",
               "                xccc206e = nvl(b.xcck202e,0) ,  ",
               "                xccc206f = nvl(b.xcck202f,0) ,  ",
               "                xccc206g = nvl(b.xcck202g,0) ,  ",
               "                xccc206h = nvl(b.xcck202h,0)   "
               #171228-00050#1---add---s
               ,
               "  WHEN NOT MATCHED THEN                      ",
               "     INSERT VALUES(b.xcckent,'",g_comp,"',b.xcckld,b.xcck001,b.xcck002,",
               "                   b.xcck003,b.xcck004,b.xcck005,b.xcck010,b.xcck011,b.xcck017,'",g_curr[p_seq].curr,"', ",
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #101.期初/201.采购
               "                   0,0,0,0,0,0,0,0,0,0,  b.xcck201,b.xcck202,b.xcck202a,b.xcck202b,b.xcck202c,b.xcck202d,b.xcck202e,b.xcck202f,b.xcck202g,b.xcck202h, ",                #203.委外/205.工单入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #207.重工领出/209.重工入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
               "                   0,0,0,0,0,0,0,0,0,                         ",                #280.平均单价
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,   ",                #901.期末结存/903.销售费用
               "                   '')                                        "                #最近成本计算时间               
               #171228-00050#1---add---e               
   #PGS(D)-00824 --- end ---   
   PREPARE s_axcp500_avg1_set_xccc_2_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_2_p2')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_2_p2 
   
   
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_2_p2')         
#     RETURN r_success
   END IF     
   
   #计算料件的平均单价 第一轮平均成本单价
   #PGS(D)-00824 --- end ---
   
   #计算料件的平均单价 第一轮平均成本单价
   CALL s_axcp500_avg1_set_xccc280(p_xcbb006,p_seq,'1')
        RETURNING l_success
   
#   #算平均成本xccc280a~xccc280h
#   UPDATE xccc_tmp SET xccc280 = (xccc102 + xccc202 + xccc204 + xccc206 + xccc212 + xccc214 + xccc218) / 
#                                 (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
#                       xccc280a = (xccc102a + xccc202a + xccc204a + xccc206a + xccc212a + xccc214a + xccc218a) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
#                       xccc280b = (xccc102b + xccc202b + xccc204b + xccc206b + xccc212b + xccc214b + xccc218b) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
#                       xccc280c = (xccc102c + xccc202c + xccc204c + xccc206c + xccc212c + xccc214c + xccc218c) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
#                       xccc280d = (xccc102d + xccc202d + xccc204d + xccc206d + xccc212d + xccc214d + xccc218d) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
#                       xccc280e = (xccc102e + xccc202e + xccc204e + xccc206e + xccc212e + xccc214e + xccc218e) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
#                       xccc280f = (xccc102f + xccc202f + xccc204f + xccc206f + xccc212f + xccc214f + xccc218f) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
#                       xccc280g = (xccc102g + xccc202g + xccc204g + xccc206g + xccc212g + xccc214g + xccc218g) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
#                       xccc280h = (xccc102h + xccc202h + xccc204h + xccc206h + xccc212h + xccc214h + xccc218h) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)
#    WHERE (xccc101 <> 0 OR xccc201 <> 0 OR xccc203 <> 0 OR xccc205 <> 0 OR xccc211 <> 0 OR xccc213 <> 0 OR xccc217 <> 0  )
#      AND (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217 <> 0 )
#      AND xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )                                    
#   
#   
#   #xccc280平均单价为0时，则重取上期xccc的平均单价
#   LET g_sql = " MERGE INTO xccc_tmp a   ",
#               "       USING xccc_t b    ",
#               "          ON ( a.xcccent = b.xcccent         ",
#               "          AND  a.xcccld  = b.xcccld          ",
#               "          AND  a.xccc001 = b.xccc001         ",
#               "          AND  a.xccc002 = b.xccc002         ",
#               "          AND  a.xccc003 = b.xccc003         ",
#               "          AND  a.xccc006 = b.xccc006         ",
#               "          AND  a.xccc007 = b.xccc007         ",
#               "          AND  a.xccc008 = b.xccc008         ",
#               "          AND  a.xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
#               "  WHEN MATCHED THEN                          ",
#               "       UPDATE SET a.xccc280  = nvl(b.xccc280 ,0) ,   ",
#               "                  a.xccc280a = nvl(b.xccc280a,0) ,   ",    
#               "                  a.xccc280b = nvl(b.xccc280b,0) ,   ",    
#               "                  a.xccc280c = nvl(b.xccc280c,0) ,   ",    
#               "                  a.xccc280d = nvl(b.xccc280d,0) ,   ",    
#               "                  a.xccc280e = nvl(b.xccc280e,0) ,   ",    
#               "                  a.xccc280f = nvl(b.xccc280f,0) ,   ",    
#               "                  a.xccc280g = nvl(b.xccc280g,0) ,   ",    
#               "                  a.xccc280h = nvl(b.xccc280h,0)     ",               
#               "        WHERE b.xccc004 = ",g_last_yy,
#               "          AND b.xccc005 = ",g_last_pp,
#               "          AND a.xccc280 = 0    ",
#               "          AND b.xccc280 <> 0   "
#               
#   PREPARE s_axcp500_avg1_set_xccc_2_p4 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_2_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_2_p4')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccc_2_p4 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_2_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_2_p4')         
##     RETURN r_success
#   END IF
#
#   #还取不到平均单价,则取开帐的平均单价
#   LET g_sql = " MERGE INTO xccc_tmp a    ",
#               "       USING xcca_t b     ",
#               "          ON ( a.xcccent = b.xccaent       ",  
#               "          AND  a.xcccld  = b.xccald        ",
#               "          AND  a.xccc001 = b.xcca001       ",
#               "          AND  a.xccc002 = b.xcca002       ",
#               "          AND  a.xccc003 = b.xcca003       ",
#               "          AND  a.xccc006 = b.xcca006       ",
#               "          AND  a.xccc007 = b.xcca007       ",
#               "          AND  a.xccc008 = b.xcca008       ",
#               "          AND  a.xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
#               "  WHEN MATCHED THEN                        ",
#               "       UPDATE SET a.xccc280  = nvl(b.xcca110 ,0) , ",
#               "                  a.xccc280a = nvl(b.xcca110a,0) , ",       
#               "                  a.xccc280b = nvl(b.xcca110b,0) , ",       
#               "                  a.xccc280c = nvl(b.xcca110c,0) , ",       
#               "                  a.xccc280d = nvl(b.xcca110d,0) , ",       
#               "                  a.xccc280e = nvl(b.xcca110e,0) , ",       
#               "                  a.xccc280f = nvl(b.xcca110f,0) , ",       
#               "                  a.xccc280g = nvl(b.xcca110g,0) , ",       
#               "                  a.xccc280h = nvl(b.xcca110h,0)   ",               
#               "        WHERE b.xcca004 = ",g_last_yy,
#               "          AND b.xcca005 = ",g_last_pp,
#               "          AND a.xccc280 = 0     ",
#               "          AND b.xcca110 <> 0    "
#               
#   PREPARE s_axcp500_avg1_set_xccc_2_p5 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_2_p5"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_2_p5')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccc_2_p5 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_2_p5"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_2_p5')         
##     RETURN r_success
#   END IF
#
#   
#   #平均成本字段取位xccc280a~xccc280h
#   CASE g_round_type
#        WHEN '1'   #四舍五入   
#             LET g_sql = " UPDATE xccc_tmp SET xccc280  = round(xccc280 ,?), ",
#                         "                     xccc280a = round(xccc280a,?), xccc280b = round(xccc280b,?), ",
#                         "                     xccc280c = round(xccc280c,?), xccc280d = round(xccc280d,?), ",
#                         "                     xccc280e = round(xccc280e,?), xccc280f = round(xccc280f,?), ",
#                         "                     xccc280g = round(xccc280g,?), xccc280h = round(xccc280h,?)  ",
#                         "  WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "
#                         
#        WHEN '3'   #无条件截位
#             LET g_sql = " UPDATE xccc_tmp SET xccc280  = trunc(xccc280,?), ",
#                         "                     xccc280a = trunc(xccc280a,?), xccc280b = trunc(xccc280b,?), ",
#                         "                     xccc280c = trunc(xccc280c,?), xccc280d = trunc(xccc280d,?), ",
#                         "                     xccc280e = trunc(xccc280e,?), xccc280f = trunc(xccc280f,?), ",
#                         "                     xccc280g = trunc(xccc280g,?), xccc280h = trunc(xccc280h,?)  ",
#                         "  WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                      
#        
#   END CASE        
#   PREPARE s_axcp500_avg1_set_xccc_2_p3 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_2_p3"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_2_p3')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccc_2_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_2_p3"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_2_p3')         
##     RETURN r_success
#   END IF      
#   
#   #修正xccc280的值-先修至xccc280a,若xccc280a为零,则修正xccc280b......
#   UPDATE xccc_tmp SET xccc280a = xccc280 - (xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)   
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280a"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280a')         
##     RETURN r_success
#   END IF   
#      
#   UPDATE xccc_tmp SET xccc280b = xccc280 - (xccc280a + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0 
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280b"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280b')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280c = xccc280 - (xccc280a + xccc280b + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280c"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280c')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280d = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280e + xccc280f + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280e + xccc280f + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280d"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280d')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280e = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280f + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280f + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280e"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280e')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280f = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280f"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280f')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280g = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280g"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280g')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280h = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280h"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280h')         
##     RETURN r_success
#   END IF   
   
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(21,g_stat_begin,g_stat_end,g_stat_cnt) 
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xcck - 215.销退
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccq_2_2(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2018-09-05 By 02295
# Modify.........: 180905-00006#1
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccq_2_2(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   
   #215.销退
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '215' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1 
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1 
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq215  = nvl(b.xcck201 ,0) ,  ",
               "                xccq216  = nvl(b.xcck202 ,0) ,  ",
               "                xccq216a = nvl(b.xcck202a,0) ,  ",
               "                xccq216b = nvl(b.xcck202b,0) ,  ",
               "                xccq216c = nvl(b.xcck202c,0) ,  ",
               "                xccq216d = nvl(b.xcck202d,0) ,  ",
               "                xccq216e = nvl(b.xcck202e,0) ,  ",
               "                xccq216f = nvl(b.xcck202f,0) ,  ",
               "                xccq216g = nvl(b.xcck202g,0) ,  ",
               "                xccq216h = nvl(b.xcck202h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_3_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_3_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_3_p2')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_3_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_3_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_3_p2')         
#     RETURN r_success
   END IF     
   
   #计算料件的平均单价 - 第二轮月加权平均成本单价
   CALL s_axcp500_avg1_set_xccq280(p_xcbb006,p_seq,'2')
        RETURNING l_success
        
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xccc - 215.销退
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccc_2_2(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2018-09-05 By 02295
# Modify.........: 180905-00006#1 
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccc_2_2(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE

   #215.销退
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '215' ",
               "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc215  = nvl(b.xcck201 ,0) ,  ",
               "                xccc216  = nvl(b.xcck202 ,0) ,  ",
               "                xccc216a = nvl(b.xcck202a,0) ,  ",
               "                xccc216b = nvl(b.xcck202b,0) ,  ",
               "                xccc216c = nvl(b.xcck202c,0) ,  ",
               "                xccc216d = nvl(b.xcck202d,0) ,  ",
               "                xccc216e = nvl(b.xcck202e,0) ,  ",
               "                xccc216f = nvl(b.xcck202f,0) ,  ",
               "                xccc216g = nvl(b.xcck202g,0) ,  ",
               "                xccc216h = nvl(b.xcck202h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_3_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_3_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_3_p2')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_3_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_3_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_3_p2')         
#     RETURN r_success
   END IF     
   
   #计算料件的平均单价 - 第二轮月加权平均成本单价
   CALL s_axcp500_avg1_set_xccc280(p_xcbb006,p_seq,'2')
        RETURNING l_success
        
   LET r_success = TRUE
   RETURN r_success    
END FUNCTION

################################################################################
# Descriptions...: 整批写xccq - 207.重工领出 215.销退 
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccq_3(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-12-15 By zhangllc 151215
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccq_3(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccq_t.xccq001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   
   #207.重工领出
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '207' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq207  = nvl(b.xcck201 ,0) ,  ",
               "                xccq208  = nvl(b.xcck202 ,0) ,  ",
               "                xccq208a = nvl(b.xcck202a,0) ,  ",
               "                xccq208b = nvl(b.xcck202b,0) ,  ",
               "                xccq208c = nvl(b.xcck202c,0) ,  ",
               "                xccq208d = nvl(b.xcck202d,0) ,  ",
               "                xccq208e = nvl(b.xcck202e,0) ,  ",
               "                xccq208f = nvl(b.xcck202f,0) ,  ",
               "                xccq208g = nvl(b.xcck202g,0) ,  ",
               "                xccq208h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_3_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_3_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_3_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_3_p1')         
#     RETURN r_success
   END IF   
   
#180905-00006#1---mark---s   
#   #215.销退
#   LET g_sql = " MERGE INTO xccq_tmp ",
#               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
#               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
#               "                     xccktmp1,xcck015,xcck016,xcck028, ",
#               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
#               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
#               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
#               "                     SUM(xcck202h*xcck009) xcck202h ",
#               "                FROM xcck_tmp     ",                         
#               "                WHERE xcck055 = '215' ",
#               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
#               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
#               "                         xccktmp1,xcck015,xcck016,xcck028 ",
#               "                ) b ",
#               "          ON ( xccqent = b.xcckent  ",
#               "         AND   xccqld  = b.xcckld   ",
#               "         AND   xccqsite= b.xccksite ",
#               "         AND   xccq001 = b.xcck001  ",
#               "         AND   xccq002 = b.xcck002  ",
#               "         AND   xccq003 = b.xcck003  ",
#               "         AND   xccq004 = b.xcck004  ",
#               "         AND   xccq005 = b.xcck005  ",
#               "         AND   xccq006 = b.xcck010  ",
#               "         AND   xccq007 = b.xcck011  ",
#               "         AND   xccq008 = b.xcck017  ",
#               "         AND   xccq009 = b.xccktmp1  ",
#               "         AND   xccq010 = b.xcck015  ",
#               "         AND   xccq011 = b.xcck016  ",
#               "         AND   xccq012 = b.xcck028  ",
#               #mod zhangllc 150730 --begin
#               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
#               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1 
#               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1 
#               #mod zhangllc 150730 --end
#               "  WHEN MATCHED THEN    ",
#               "     UPDATE SET xccq215  = nvl(b.xcck201 ,0) ,  ",
#               "                xccq216  = nvl(b.xcck202 ,0) ,  ",
#               "                xccq216a = nvl(b.xcck202a,0) ,  ",
#               "                xccq216b = nvl(b.xcck202b,0) ,  ",
#               "                xccq216c = nvl(b.xcck202c,0) ,  ",
#               "                xccq216d = nvl(b.xcck202d,0) ,  ",
#               "                xccq216e = nvl(b.xcck202e,0) ,  ",
#               "                xccq216f = nvl(b.xcck202f,0) ,  ",
#               "                xccq216g = nvl(b.xcck202g,0) ,  ",
#               "                xccq216h = nvl(b.xcck202h,0)   "
#   PREPARE s_axcp500_avg1_set_xccq_3_p2 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_3_p2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_3_p2')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccq_3_p2 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_3_p2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_3_p2')         
##     RETURN r_success
#   END IF     
#180905-00006#1---mark---e

   #计算料件的平均单价 - 第二轮月加权平均成本单价
   CALL s_axcp500_avg1_set_xccq280(p_xcbb006,p_seq,'2')
        RETURNING l_success
        

   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xccc - 207.重工领出 215.销退 
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccc_3(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-15 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccc_3(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME   
   
   #207.重工领出
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '207' ",
               "                  AND EXISTS (SELECT 1 FROM sfaa_t WHERE sfaaent = ",g_enterprise," AND sfaadocno = xcck047 AND sfaa003 <> '3') ",  #190213-00028#1 add
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc207  = nvl(b.xcck201 ,0) ,  ",
               "                xccc208  = nvl(b.xcck202 ,0) ,  ",
               "                xccc208a = nvl(b.xcck202a,0) ,  ",
               "                xccc208b = nvl(b.xcck202b,0) ,  ",
               "                xccc208c = nvl(b.xcck202c,0) ,  ",
               "                xccc208d = nvl(b.xcck202d,0) ,  ",
               "                xccc208e = nvl(b.xcck202e,0) ,  ",
               "                xccc208f = nvl(b.xcck202f,0) ,  ",
               "                xccc208g = nvl(b.xcck202g,0) ,  ",
               "                xccc208h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_3_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_3_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_3_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_3_p1')         
#     RETURN r_success
   END IF     

#180905-00006#1---mark---s
#   #215.销退
#   LET g_sql = " MERGE INTO xccc_tmp ",
#               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
#               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
#               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
#               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
#               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
#               "                     SUM(xcck202h*xcck009) xcck202h ",
#               "                FROM xcck_tmp     ",                         
#               "                WHERE xcck055 = '215' ",
#               "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
#               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
#               "                ) b ",
#               "          ON ( xcccent = b.xcckent  ",
#               "         AND   xcccld  = b.xcckld   ",
#               "         AND   xccc001 = b.xcck001  ",
#               "         AND   xccc002 = b.xcck002  ",
#               "         AND   xccc003 = b.xcck003  ",
#               "         AND   xccc004 = b.xcck004  ",
#               "         AND   xccc005 = b.xcck005  ",
#               "         AND   xccc006 = b.xcck010  ",
#               "         AND   xccc007 = b.xcck011  ",
#               "         AND   xccc008 = b.xcck017  ",
#               #mod zhangllc 150730 --begin
#               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
#               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               #mod zhangllc 150730 --end
#               "  WHEN MATCHED THEN    ",
#               "     UPDATE SET xccc215  = nvl(b.xcck201 ,0) ,  ",
#               "                xccc216  = nvl(b.xcck202 ,0) ,  ",
#               "                xccc216a = nvl(b.xcck202a,0) ,  ",
#               "                xccc216b = nvl(b.xcck202b,0) ,  ",
#               "                xccc216c = nvl(b.xcck202c,0) ,  ",
#               "                xccc216d = nvl(b.xcck202d,0) ,  ",
#               "                xccc216e = nvl(b.xcck202e,0) ,  ",
#               "                xccc216f = nvl(b.xcck202f,0) ,  ",
#               "                xccc216g = nvl(b.xcck202g,0) ,  ",
#               "                xccc216h = nvl(b.xcck202h,0)   "
#   PREPARE s_axcp500_avg1_set_xccc_3_p2 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_3_p2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_3_p2')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccc_3_p2 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_3_p2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_3_p2')         
##     RETURN r_success
#   END IF     
#180905-00006#1---mark---e

   #计算料件的平均单价 - 第二轮月加权平均成本单价
   CALL s_axcp500_avg1_set_xccc280(p_xcbb006,p_seq,'2')
        RETURNING l_success
        
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(22,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
          
END FUNCTION

################################################################################
# Descriptions...: 整批写xccq - 209.重工入库 
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccq_4(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-12-15 By zhangllc 151215
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccq_4(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccq_t.xccq001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE 
   
   #更新已经取到的入项成本
   #209.重工入库
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               #"                WHERE xcck055 = '209' ",
               "                WHERE xcck055 IN ('209','2090') ",      #mod zhangllc 160527 SBS2
               "                  AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006," AND xcck010 = imaa001)",  #171228-00050#1 add
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq209  = nvl(b.xcck201 ,0) ,  ",
               "                xccq210  = nvl(b.xcck202 ,0) ,  ",
               "                xccq210a = nvl(b.xcck202a,0) ,  ",
               "                xccq210b = nvl(b.xcck202b,0) ,  ",
               "                xccq210c = nvl(b.xcck202c,0) ,  ",
               "                xccq210d = nvl(b.xcck202d,0) ,  ",
               "                xccq210e = nvl(b.xcck202e,0) ,  ",
               "                xccq210f = nvl(b.xcck202f,0) ,  ",
               "                xccq210g = nvl(b.xcck202g,0) ,  ",
               "                xccq210h = nvl(b.xcck202h,0)    "
               #171228-00050#1---add---s
               ,
               "  WHEN NOT MATCHED THEN                      ",
               "     INSERT VALUES(b.xcckent,'",g_comp,"',b.xcckld,b.xccksite,b.xcck001,b.xcck002,",
               "                   b.xcck003,b.xcck004,b.xcck005,b.xcck010,b.xcck011,b.xcck017,",
               "                   b.xccktmp1,b.xcck015,b.xcck016,b.xcck028, ",
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #101.期初/201.采购
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #203.委外/205.工单入库
               "                   0,0,0,0,0,0,0,0,0,0,  b.xcck201,b.xcck202,b.xcck202a,b.xcck202b,b.xcck202c,b.xcck202d,b.xcck202e,b.xcck202f,b.xcck202g,b.xcck202h, ",                #207.重工领出/209.重工入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
               "                   0,0,0,0,0,0,0,0,0,                         ",                #280.平均单价
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,   ",                #901.期末结存/903.销售费用
               "                   '')                                         "                #最近成本计算时间 
               #171228-00050#1---add---e               
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_4_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_4_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_4_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_4_p1 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_4_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_4_p1')         
#     RETURN r_success
   END IF     

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #计算料件的平均单价 - 第二轮月加权平均成本单价
   CALL s_axcp500_avg1_set_xccq280(p_xcbb006,p_seq,'2')
        RETURNING l_success

   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xccc - 209.重工入库 
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccc_4(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccc_4(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME   
   
   #更新已经取到的入项成本
   #209.重工入库
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               #"                WHERE xcck055 = '209' ",
               "                WHERE xcck055 IN ('209','2090') ",      #mod zhangllc 160527 SBS2
               "                  AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006," AND xcck010 = imaa001)",  #171228-00050#1 add
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc209  = nvl(b.xcck201 ,0) ,  ",
               "                xccc210  = nvl(b.xcck202 ,0) ,  ",
               "                xccc210a = nvl(b.xcck202a,0) ,  ",
               "                xccc210b = nvl(b.xcck202b,0) ,  ",
               "                xccc210c = nvl(b.xcck202c,0) ,  ",
               "                xccc210d = nvl(b.xcck202d,0) ,  ",
               "                xccc210e = nvl(b.xcck202e,0) ,  ",
               "                xccc210f = nvl(b.xcck202f,0) ,  ",
               "                xccc210g = nvl(b.xcck202g,0) ,  ",
               "                xccc210h = nvl(b.xcck202h,0)    "
               #171228-00050#1---add---s
               ,
               "  WHEN NOT MATCHED THEN                      ",
               "     INSERT VALUES(b.xcckent,'",g_comp,"',b.xcckld,b.xcck001,b.xcck002,",
               "                   b.xcck003,b.xcck004,b.xcck005,b.xcck010,b.xcck011,b.xcck017,'",g_curr[p_seq].curr,"', ",
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #101.期初/201.采购
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #203.委外/205.工单入库
               "                   0,0,0,0,0,0,0,0,0,0,  b.xcck201,b.xcck202,b.xcck202a,b.xcck202b,b.xcck202c,b.xcck202d,b.xcck202e,b.xcck202f,b.xcck202g,b.xcck202h, ",                #207.重工领出/209.重工入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #211.杂项入库/213.调整入库
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #215.销退入库/217.其他入库
               "                   0,0,0,0,0,0,0,0,0,                         ",                #280.平均单价
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #301.工单领用/303.销货
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #305.销退/307.销售费用
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0, ",                #309.杂发/311.盘盈亏
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,                 ",                #313.其他出库/401.销货收入金额/402.销退金额
               "                   0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,   ",                #901.期末结存/903.销售费用
               "                   '')                                        "                #最近成本计算时间               
               #171228-00050#1---add---e
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_4_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_4_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p1')         
#     RETURN r_success
   END IF     
      
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
      
#   #算平均成本xccc280a~xccc280h
#   UPDATE xccc_tmp SET xccc280  = (xccc102 + xccc202 + xccc204 + xccc206 + xccc208 + xccc210 + xccc212 + xccc214 + xccc216 + xccc218) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280a = (xccc102a + xccc202a + xccc204a + xccc206a + xccc208a + xccc210a + xccc212a + xccc214a + xccc216a + xccc218a) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280b = (xccc102b + xccc202b + xccc204b + xccc206b + xccc208b + xccc210b + xccc212b + xccc214b + xccc216b + xccc218b) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
#                       xccc280c = (xccc102c + xccc202c + xccc204c + xccc206c + xccc208c + xccc210c + xccc212c + xccc214c + xccc216c + xccc218c) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280d = (xccc102d + xccc202d + xccc204d + xccc206d + xccc208d + xccc210d + xccc212d + xccc214d + xccc216d + xccc218d) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
#                       xccc280e = (xccc102e + xccc202e + xccc204e + xccc206e + xccc208e + xccc210e + xccc212e + xccc214e + xccc216e + xccc218e) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280f = (xccc102f + xccc202f + xccc204f + xccc206f + xccc208f + xccc210f + xccc212f + xccc214f + xccc216f + xccc218f) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
#                       xccc280g = (xccc102g + xccc202g + xccc204g + xccc206g + xccc208g + xccc210g + xccc212g + xccc214g + xccc216g + xccc218g) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280h = (xccc102h + xccc202h + xccc204h + xccc206h + xccc208h + xccc210h + xccc212h + xccc214h + xccc216h + xccc218h) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)
#     WHERE (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217) <> 0
#       AND xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280')         
##     RETURN r_success
#   END IF   
#   
#   #算平均成本xccc280a~xccc280h
#   UPDATE xccc_tmp SET xccc280  = (xccc102 + xccc202 + xccc204 + xccc206 + xccc210 + xccc212 + xccc214 + xccc216 + xccc218) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280a = (xccc102a + xccc202a + xccc204a + xccc206a + xccc210a + xccc212a + xccc214a + xccc216a + xccc218a) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280b = (xccc102b + xccc202b + xccc204b + xccc206b + xccc210b + xccc212b + xccc214b + xccc216b + xccc218b) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
#                       xccc280c = (xccc102c + xccc202c + xccc204c + xccc206c + xccc210c + xccc212c + xccc214c + xccc216c + xccc218c) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280d = (xccc102d + xccc202d + xccc204d + xccc206d + xccc210d + xccc212d + xccc214d + xccc216d + xccc218d) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
#                       xccc280e = (xccc102e + xccc202e + xccc204e + xccc206e + xccc210e + xccc212e + xccc214e + xccc216e + xccc218e) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280f = (xccc102f + xccc202f + xccc204f + xccc206f + xccc210f + xccc212f + xccc214f + xccc216f + xccc218f) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
#                       xccc280g = (xccc102g + xccc202g + xccc204g + xccc206g + xccc210g + xccc212g + xccc214g + xccc216g + xccc218g) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
#                       xccc280h = (xccc102h + xccc202h + xccc204h + xccc206h + xccc210h + xccc212h + xccc214h + xccc216h + xccc218h) / 
#                                  (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)
#     WHERE (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217) = 0
#       AND (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217) <> 0
#       AND xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )                                          
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280')         
##     RETURN r_success
#   END IF   
#   
#   #xccc280平均单价为0时，则重取上期xccc的平均单价
#   LET g_sql = " MERGE INTO xccc_tmp a   ",
#               "       USING xccc_t b    ",
#               "          ON ( a.xcccent = b.xcccent         ",
#               "          AND  a.xcccld  = b.xcccld          ",
#               "          AND  a.xccc001 = b.xccc001         ",
#               "          AND  a.xccc002 = b.xccc002         ",
#               "          AND  a.xccc003 = b.xccc003         ",
#               "          AND  a.xccc006 = b.xccc006         ",
#               "          AND  a.xccc007 = b.xccc007         ",
#               "          AND  a.xccc008 = b.xccc008         ",
#               "          AND  a.xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
#               "  WHEN MATCHED THEN                          ",
#               "       UPDATE SET a.xccc280  = nvl(b.xccc280 ,0) ,   ",
#               "                  a.xccc280a = nvl(b.xccc280a,0) ,   ",    
#               "                  a.xccc280b = nvl(b.xccc280b,0) ,   ",    
#               "                  a.xccc280c = nvl(b.xccc280c,0) ,   ",    
#               "                  a.xccc280d = nvl(b.xccc280d,0) ,   ",    
#               "                  a.xccc280e = nvl(b.xccc280e,0) ,   ",    
#               "                  a.xccc280f = nvl(b.xccc280f,0) ,   ",    
#               "                  a.xccc280g = nvl(b.xccc280g,0) ,   ",    
#               "                  a.xccc280h = nvl(b.xccc280h,0)     ",               
#               "        WHERE b.xccc004 = ",g_last_yy,
#               "          AND b.xccc005 = ",g_last_pp,
#               "          AND a.xccc280 = 0         ",
#               "          AND b.xccc280 <> 0        "
#               
#   PREPARE s_axcp500_avg1_set_xccc_4_p4 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p4')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccc_4_p4 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p4')         
##     RETURN r_success
#   END IF
#
#   #还取不到平均单价,则取开帐的平均单价
#   LET g_sql = " MERGE INTO xccc_tmp a    ",
#               "       USING xcca_t b     ",
#               "          ON ( a.xcccent = b.xccaent       ",  
#               "          AND  a.xcccld  = b.xccald        ",
#               "          AND  a.xccc001 = b.xcca001       ",
#               "          AND  a.xccc002 = b.xcca002       ",
#               "          AND  a.xccc003 = b.xcca003       ",
#               "          AND  a.xccc006 = b.xcca006       ",
#               "          AND  a.xccc007 = b.xcca007       ",
#               "          AND  a.xccc008 = b.xcca008       ",
#               "          AND  a.xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
#               "  WHEN MATCHED THEN                        ",
#               "       UPDATE SET a.xccc280  = nvl(b.xcca110 ,0) , ",
#               "                  a.xccc280a = nvl(b.xcca110a,0) , ",       
#               "                  a.xccc280b = nvl(b.xcca110b,0) , ",       
#               "                  a.xccc280c = nvl(b.xcca110c,0) , ",       
#               "                  a.xccc280d = nvl(b.xcca110d,0) , ",       
#               "                  a.xccc280e = nvl(b.xcca110e,0) , ",       
#               "                  a.xccc280f = nvl(b.xcca110f,0) , ",       
#               "                  a.xccc280g = nvl(b.xcca110g,0) , ",       
#               "                  a.xccc280h = nvl(b.xcca110h,0)   ",               
#               "        WHERE b.xcca004 = ",g_last_yy,
#               "          AND b.xcca005 = ",g_last_pp,
#               "          AND a.xccc280 = 0         ",
#               "          AND b.xcca110 <> 0        "
#               
#   PREPARE s_axcp500_avg1_set_xccc_4_p5 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p5"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p5')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccc_4_p5 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p5"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p5')         
##     RETURN r_success
#   END IF
#   
#   
#   #平均成本字段取位xccc280a~xccc280h
#   CASE g_round_type
#        WHEN '1'   #四舍五入   
#             LET g_sql = " UPDATE xccc_tmp SET xccc280  = round(xccc280 ,?), ",
#                         "                     xccc280a = round(xccc280a,?), xccc280b = round(xccc280b,?), ",
#                         "                     xccc280c = round(xccc280c,?), xccc280d = round(xccc280d,?), ",
#                         "                     xccc280e = round(xccc280e,?), xccc280f = round(xccc280f,?), ",
#                         "                     xccc280g = round(xccc280g,?), xccc280h = round(xccc280h,?)  ",
#                         "  WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "
#                         
#        WHEN '3'   #无条件截位
#             LET g_sql = " UPDATE xccc_tmp SET xccc280  = trunc(xccc280 ,?), ",
#                         "                     xccc280a = trunc(xccc280a,?), xccc280b = trunc(xccc280b,?), ",
#                         "                     xccc280c = trunc(xccc280c,?), xccc280d = trunc(xccc280d,?), ",
#                         "                     xccc280e = trunc(xccc280e,?), xccc280f = trunc(xccc280f,?), ",
#                         "                     xccc280g = trunc(xccc280g,?), xccc280h = trunc(xccc280h,?)  ",
#                         "  WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                      
#        
#   END CASE        
#   PREPARE s_axcp500_avg1_set_xccc_4_p3 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p3"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p3')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccc_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p3"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p3')         
##     RETURN r_success
#   END IF      
#   
#   #修正xccc280的值-先修至xccc280a,若xccc280a为零,则修正xccc280b......
#   UPDATE xccc_tmp SET xccc280a = xccc280 - (xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)   
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280a"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280a')         
##     RETURN r_success
#   END IF   
#      
#   UPDATE xccc_tmp SET xccc280b = xccc280 - (xccc280a + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0 
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280b"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280b')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280c = xccc280 - (xccc280a + xccc280b + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280c"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280c')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280d = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280e + xccc280f + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280e + xccc280f + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280d"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280d')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280e = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280f + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280f + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280e"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280e')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280f = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280g + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280g + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280f"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280f')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280g = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280h)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280h) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280g"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280g')         
##     RETURN r_success
#   END IF   
#   UPDATE xccc_tmp SET xccc280h = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g)  
#    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
#      AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g) >=0
#      AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )        
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280h"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280h')         
##     RETURN r_success
#   END IF   

   #计算料件的平均单价 - 第二轮月加权平均成本单价
   CALL s_axcp500_avg1_set_xccc280(p_xcbb006,p_seq,'2')
        RETURNING l_success

   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(23,g_stat_begin,g_stat_end,g_stat_cnt)        
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xccq - 更新出项
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccq_5(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-12-15 By zhangllc 151215
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccq_5(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccq_t.xccq001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   
   
   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_current()
   
   #更新已经取到的出项成本
   #301.工单领用
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 IN ('3011','3012') ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq301  = nvl(b.xcck201 ,0) ,  ",
               "                xccq302  = nvl(b.xcck202 ,0) ,  ",
               "                xccq302a = nvl(b.xcck202a,0) ,  ",
               "                xccq302b = nvl(b.xcck202b,0) ,  ",
               "                xccq302c = nvl(b.xcck202c,0) ,  ",
               "                xccq302d = nvl(b.xcck202d,0) ,  ",
               "                xccq302e = nvl(b.xcck202e,0) ,  ",
               "                xccq302f = nvl(b.xcck202f,0) ,  ",
               "                xccq302g = nvl(b.xcck202g,0) ,  ",
               "                xccq302h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_5_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_5_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_5_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_5_p1 
   
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_5_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_5_p1')         
#     RETURN r_success
   END IF     
   
   #303.销货
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '303' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028 ",

               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq303  = nvl(b.xcck201 ,0) ,  ",
               "                xccq304  = nvl(b.xcck202 ,0) ,  ",
               "                xccq304a = nvl(b.xcck202a,0) ,  ",
               "                xccq304b = nvl(b.xcck202b,0) ,  ",
               "                xccq304c = nvl(b.xcck202c,0) ,  ",
               "                xccq304d = nvl(b.xcck202d,0) ,  ",
               "                xccq304e = nvl(b.xcck202e,0) ,  ",
               "                xccq304f = nvl(b.xcck202f,0) ,  ",
               "                xccq304g = nvl(b.xcck202g,0) ,  ",
               "                xccq304h = nvl(b.xcck202h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_5_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_5_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_5_p2')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_5_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_5_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_5_p2')         
#     RETURN r_success
   END IF     
   
   #305.销退
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '305' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq305  = nvl(b.xcck201 ,0) ,  ",
               "                xccq306  = nvl(b.xcck202 ,0) ,  ",
               "                xccq306a = nvl(b.xcck202a,0) ,  ",
               "                xccq306b = nvl(b.xcck202b,0) ,  ",
               "                xccq306c = nvl(b.xcck202c,0) ,  ",
               "                xccq306d = nvl(b.xcck202d,0) ,  ",
               "                xccq306e = nvl(b.xcck202e,0) ,  ",
               "                xccq306f = nvl(b.xcck202f,0) ,  ",
               "                xccq306g = nvl(b.xcck202g,0) ,  ",
               "                xccq306h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_5_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_5_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_5_p3')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_5_p3 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_5_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_5_p1')         
#     RETURN r_success
   END IF     
   
   #307.销售费用
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '307' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1 
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq307  = nvl(b.xcck201 ,0) ,  ",
               "                xccq308  = nvl(b.xcck202 ,0) ,  ",
               "                xccq308a = nvl(b.xcck202a,0) ,  ",
               "                xccq308b = nvl(b.xcck202b,0) ,  ",
               "                xccq308c = nvl(b.xcck202c,0) ,  ",
               "                xccq308d = nvl(b.xcck202d,0) ,  ",
               "                xccq308e = nvl(b.xcck202e,0) ,  ",
               "                xccq308f = nvl(b.xcck202f,0) ,  ",
               "                xccq308g = nvl(b.xcck202g,0) ,  ",
               "                xccq308h = nvl(b.xcck202h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_5_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_5_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_5_p4')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_5_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_5_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_5_p4')         
#     RETURN r_success
   END IF     
   
   #309.杂发
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               #"                WHERE xcck055 IN ('3091','3092') ",  #161109-00032#3  
               "                WHERE xcck055 IN ('3091','3092','309X') ",  #161109-00032#3  
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq309  = nvl(b.xcck201 ,0) ,  ",
               "                xccq310  = nvl(b.xcck202 ,0) ,  ",
               "                xccq310a = nvl(b.xcck202a,0) ,  ",
               "                xccq310b = nvl(b.xcck202b,0) ,  ",
               "                xccq310c = nvl(b.xcck202c,0) ,  ",
               "                xccq310d = nvl(b.xcck202d,0) ,  ",
               "                xccq310e = nvl(b.xcck202e,0) ,  ",
               "                xccq310f = nvl(b.xcck202f,0) ,  ",
               "                xccq310g = nvl(b.xcck202g,0) ,  ",
               "                xccq310h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_5_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_5_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_5_p5')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_5_p5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_5_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_5_p5')         
#     RETURN r_success
   END IF     
   
   #311.盘盈亏
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '311' ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq311  = nvl(b.xcck201 ,0) ,  ",
               "                xccq312  = nvl(b.xcck202 ,0) ,  ",
               "                xccq312a = nvl(b.xcck202a,0) ,  ",
               "                xccq312b = nvl(b.xcck202b,0) ,  ",
               "                xccq312c = nvl(b.xcck202c,0) ,  ",
               "                xccq312d = nvl(b.xcck202d,0) ,  ",
               "                xccq312e = nvl(b.xcck202e,0) ,  ",
               "                xccq312f = nvl(b.xcck202f,0) ,  ",
               "                xccq312g = nvl(b.xcck202g,0) ,  ",
               "                xccq312h = nvl(b.xcck202h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_5_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_5_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_5_p6')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_5_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_5_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_5_p6')         
#     RETURN r_success
   END IF     
        
   #313.其他出库
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp ",
               "       USING (SELECT xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     xccktmp1,xcck015,xcck016,xcck028, ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 IN ('3131','3132') ",
               "                GROUP BY xcckent,xcckld,xccksite,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017,",
               "                         xccktmp1,xcck015,xcck016,xcck028 ",
               "                ) b ",
               "          ON ( xccqent = b.xcckent  ",
               "         AND   xccqld  = b.xcckld   ",
               "         AND   xccqsite= b.xccksite ",
               "         AND   xccq001 = b.xcck001  ",
               "         AND   xccq002 = b.xcck002  ",
               "         AND   xccq003 = b.xcck003  ",
               "         AND   xccq004 = b.xcck004  ",
               "         AND   xccq005 = b.xcck005  ",
               "         AND   xccq006 = b.xcck010  ",
               "         AND   xccq007 = b.xcck011  ",
               "         AND   xccq008 = b.xcck017  ",
               "         AND   xccq009 = b.xccktmp1  ",
               "         AND   xccq010 = b.xcck015  ",
               "         AND   xccq011 = b.xcck016  ",
               "         AND   xccq012 = b.xcck028  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccq313  = nvl(b.xcck201 ,0) ,  ",
               "                xccq314  = nvl(b.xcck202 ,0) ,  ",
               "                xccq314a = nvl(b.xcck202a,0) ,  ",
               "                xccq314b = nvl(b.xcck202b,0) ,  ",
               "                xccq314c = nvl(b.xcck202c,0) ,  ",
               "                xccq314d = nvl(b.xcck202d,0) ,  ",
               "                xccq314e = nvl(b.xcck202e,0) ,  ",
               "                xccq314f = nvl(b.xcck202f,0) ,  ",
               "                xccq314g = nvl(b.xcck202g,0) ,  ",
               "                xccq314h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_5_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_5_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_5_p7')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_5_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_5_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_5_p7')         
#     RETURN r_success
   END IF     


   #计算期末结余
   #计算结余数量
   UPDATE xccq_tmp SET xccq901  = xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 +
                                  xccq215 + xccq217 + xccq301 + xccq303 + xccq305 + xccq307 + xccq309 + xccq311 +
                                  xccq313
    #mod zhangllc 150730 --begin
    #WHERE xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq901')         
#     RETURN r_success
   END IF  


   #计算结余金额=结余数量*平均单价
   UPDATE xccq_tmp SET xccq902  = xccq901 * xccq280,
                       xccq902a = xccq901 * xccq280a,
                       xccq902b = xccq901 * xccq280b,
                       xccq902c = xccq901 * xccq280c,
                       xccq902d = xccq901 * xccq280d,
                       xccq902e = xccq901 * xccq280e,
                       xccq902f = xccq901 * xccq280f,
                       xccq902g = xccq901 * xccq280g,
                       xccq902h = xccq901 * xccq280h
    #mod zhangllc 150730 --begin
    #WHERE xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902')         
#     RETURN r_success
   END IF 
   
   #结余金额取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xccq_tmp SET xccq902  = round(xccq902,?),",
                         "                    xccq902a = round(xccq902a,?),xccq902b = round(xccq902b,?), ",
                         "                    xccq902c = round(xccq902c,?),xccq902d = round(xccq902d,?), ",
                         "                    xccq902e = round(xccq902e,?),xccq902f = round(xccq902f,?), ",
                         "                    xccq902g = round(xccq902g,?),xccq902h = round(xccq902h,?)  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"                        
                        #" WHERE (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"                    #161114-00003#1 mark
                         #" WHERE (xccq006,xccq007) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")" #161114-00003#1 add  #170112-00041#1                       
                         " WHERE (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #170112-00041#1                       
                        #mod zhangllc 150730 --end

        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xccq_tmp SET xccq902  = trunc(xccq902,?),",
                         "                    xccq902a = trunc(xccq902a,?),xccq902b = trunc(xccq902b,?), ",
                         "                    xccq902c = trunc(xccq902c,?),xccq902d = trunc(xccq902d,?), ",
                         "                    xccq902e = trunc(xccq902e,?),xccq902f = trunc(xccq902f,?), ",
                         "                    xccq902g = trunc(xccq902g,?),xccq902h = trunc(xccq902h,?)  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"                        
                        #" WHERE (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"                    #161114-00003#1 mark
                         #" WHERE (xccq006,xccq007) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")" #161114-00003#1 add  #170112-00041#1                         
                         " WHERE (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"   #170112-00041#1                         
                        #mod zhangllc 150730 --end

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xccq_tmp SET xccq902  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccq902,?) ",
                         "                                                          ELSE ROUND(xccq902,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccq902,?)",
                         "                                END ),",
                         "                    xccq902a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq902a,?) ",
                         "                                                         ELSE ROUND(xccq902a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq902a,?)",
                         "                                END ),",
                         "                    xccq902b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq902b,?) ",
                         "                                                         ELSE ROUND(xccq902b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq902b,?)",
                         "                                END ),",
                         "                    xccq902c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq902c,?) ",
                         "                                                         ELSE ROUND(xccq902c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq902c,?)",
                         "                                END ),",
                         "                    xccq902d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq902d,?) ",
                         "                                                         ELSE ROUND(xccq902d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq902d,?)",
                         "                                END ),",
                         "                    xccq902e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq902e,?) ",
                         "                                                         ELSE ROUND(xccq902e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq902e,?)",
                         "                                END ),",
                         "                    xccq902f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq902f,?) ",
                         "                                                         ELSE ROUND(xccq902f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq902f,?)",
                         "                                END ),",
                         "                    xccq902g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq902g,?) ",
                         "                                                         ELSE ROUND(xccq902g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq902g,?)",
                         "                                END ),",
                         "                    xccq902h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq902h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq902h,?) ",
                         "                                                         ELSE ROUND(xccq902h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq902h,?)",
                         "                                END )",
                         " WHERE (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xccq_tmp SET xccq902  = ceil(xccq902 *power(10,?))/power(10,?),",
                         "                    xccq902a = ceil(xccq902a*power(10,?))/power(10,?),",
                         "                    xccq902b = ceil(xccq902b*power(10,?))/power(10,?),",
                         "                    xccq902c = ceil(xccq902c*power(10,?))/power(10,?),",
                         "                    xccq902d = ceil(xccq902d*power(10,?))/power(10,?),",
                         "                    xccq902e = ceil(xccq902e*power(10,?))/power(10,?),",
                         "                    xccq902f = ceil(xccq902f*power(10,?))/power(10,?),",
                         "                    xccq902g = ceil(xccq902g*power(10,?))/power(10,?),",
                         "                    xccq902h = ceil(xccq902h*power(10,?))/power(10,?) ",
                         " WHERE (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  
        #180802-00015#1 add-E            
                         
   END CASE                               
   PREPARE s_axcp500_avg1_set_xccq_5_p11 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_5_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_5_p11')         
#     RETURN r_success
   END IF


   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xccq_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                               g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                               g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xccq_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xccq_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xccq_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xccq_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_5_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_5_p11')         
#     RETURN r_success
   END IF        


   #修正xccq902的值-先修至xccq902a,若xccq902a为零,则修正xccq902b......
   UPDATE xccq_tmp SET xccq902a = xccq902 - (xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h)   
    WHERE xccq902 <> xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h
      AND xccq902 - (xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h) >=0 
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902a')         
#     RETURN r_success
   END IF   
      
   UPDATE xccq_tmp SET xccq902b = xccq902 - (xccq902a + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h)  
    WHERE xccq902 <> xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h
      AND xccq902 - (xccq902a + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h) >=0 
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902b')         
#     RETURN r_success
   END IF 


   UPDATE xccq_tmp SET xccq902c = xccq902 - (xccq902a + xccq902b + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h)  
    WHERE xccq902 <> xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h
      AND xccq902 - (xccq902a + xccq902b + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902c')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq902d = xccq902 - (xccq902a + xccq902b + xccq902c + xccq902e + xccq902f + xccq902g + xccq902h)  
    WHERE xccq902 <> xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h
      AND xccq902 - (xccq902a + xccq902b + xccq902c + xccq902e + xccq902f + xccq902g + xccq902h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902d')         
#     RETURN r_success
   END IF   
   
   
   UPDATE xccq_tmp SET xccq902e = xccq902 - (xccq902a + xccq902b + xccq902c + xccq902d + xccq902f + xccq902g + xccq902h)  
    WHERE xccq902 <> xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h
      AND xccq902 - (xccq902a + xccq902b + xccq902c + xccq902d + xccq902f + xccq902g + xccq902h) >=0 
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902e')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq902f = xccq902 - (xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902g + xccq902h)  
    WHERE xccq902 <> xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h
      AND xccq902 - (xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902g + xccq902h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902f')         
#     RETURN r_success
   END IF 


   UPDATE xccq_tmp SET xccq902g = xccq902 - (xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902h)  
    WHERE xccq902 <> xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h
      AND xccq902 - (xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902g')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq902h = xccq902 - (xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g)  
    WHERE xccq902 <> xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g + xccq902h
      AND xccq902 - (xccq902a + xccq902b + xccq902c + xccq902d + xccq902e + xccq902f + xccq902g) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902h')         
#     RETURN r_success
   END IF   
    
   #结余调整
   UPDATE xccq_tmp SET xccq903  = (xccq102 + xccq202 + xccq204 + xccq206 + xccq208 + xccq210 + xccq212 + xccq214 +
                                  xccq216 + xccq218 + xccq302 + xccq304 + xccq306 + xccq308 + xccq310 + xccq312 +
                                  xccq314 ) * -1 + xccq902 ,
                       xccq903a = (xccq102a + xccq202a + xccq204a + xccq206a + xccq208a + xccq210a + xccq212a + xccq214a +
                                  xccq216a + xccq218a + xccq302a + xccq304a + xccq306a + xccq308a + xccq310a + xccq312a +
                                  xccq314a ) * -1 + xccq902a ,
                       xccq903b = (xccq102b + xccq202b + xccq204b + xccq206b + xccq208b + xccq210b + xccq212b + xccq214b +
                                  xccq216b + xccq218b + xccq302b + xccq304b + xccq306b + xccq308b + xccq310b + xccq312b +
                                  xccq314b) * -1  + xccq902b ,
                       xccq903c = (xccq102c + xccq202c + xccq204c + xccq206c + xccq208c + xccq210c + xccq212c + xccq214c +
                                  xccq216c + xccq218c + xccq302c + xccq304c + xccq306c + xccq308c + xccq310c + xccq312c +
                                  xccq314c) * -1  + xccq902c ,
                       xccq903d = (xccq102d + xccq202d + xccq204d + xccq206d + xccq208d + xccq210d + xccq212d + xccq214d +
                                  xccq216d + xccq218d + xccq302d + xccq304d + xccq306d + xccq308d + xccq310d + xccq312d +
                                  xccq314d) * -1  + xccq902d ,
                       xccq903e = (xccq102e + xccq202e + xccq204e + xccq206e + xccq208e + xccq210e + xccq212e + xccq214e +
                                  xccq216e + xccq218e + xccq302e + xccq304e + xccq306e + xccq308e + xccq310e + xccq312e +
                                  xccq314e) * -1  + xccq902e ,
                       xccq903f = (xccq102f + xccq202f + xccq204f + xccq206f + xccq208f + xccq210f + xccq212f + xccq214f +
                                  xccq216f + xccq218f + xccq302f + xccq304f + xccq306f + xccq308f + xccq310f + xccq312f +
                                  xccq314f) * -1  + xccq902f ,
                       xccq903g = (xccq102g + xccq202g + xccq204g + xccq206g + xccq208g + xccq210g + xccq212g + xccq214g +
                                  xccq216g + xccq218g + xccq302g + xccq304g + xccq306g + xccq308g + xccq310g + xccq312g +
                                  xccq314g) * -1  + xccq902g ,
                       xccq903h = (xccq102h + xccq202h + xccq204h + xccq206h + xccq208h + xccq210h + xccq212h + xccq214h +
                                  xccq216h + xccq218h + xccq302h + xccq304h + xccq306h + xccq308h + xccq310h + xccq312h +
                                  xccq314h) * -1  + xccq902h
    #mod zhangllc 150730 --begin
    #WHERE xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq903"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq903')         
#     RETURN r_success
   END IF            


   #本期没有数量,但有金额,则把金额转至结余调整中
   UPDATE xccq_tmp SET xccq903  = xccq903  - xccq902,  xccq903a = xccq903a - xccq902a, xccq903b = xccq903b - xccq902b, 
                       xccq903c = xccq903c - xccq902b, xccq903d = xccq903d - xccq902d, xccq903e = xccq903e - xccq902e, 
                       xccq903f = xccq903f - xccq902f, xccq903g = xccq903g - xccq902g, xccq903h = xccq903h - xccq902h
    WHERE xccq901 = 0 AND (xccq902 <> 0 OR xccq902a <> 0 OR xccq902b<> 0 OR xccq902c <> 0 OR xccq902d <> 0 OR
                           xccq902e <> 0 OR xccq902f <> 0 OR xccq902g <> 0 OR xccq902h <> 0)
      #mod zhangllc 150730 --begin
      #AND xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq903"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq903')         
#     RETURN r_success
   END IF       

   UPDATE xccq_tmp SET xccq902  = 0, xccq902a = 0, xccq902b = 0, xccq902c = 0,
                       xccq902d = 0, xccq902e = 0, xccq902f = 0, xccq902g = 0,
                       xccq902h = 0
    WHERE xccq901 = 0 AND (xccq902 <> 0 OR xccq902a <> 0 OR xccq902b<> 0 OR xccq902c <> 0 OR xccq902d <> 0 OR
                           xccq902e <> 0 OR xccq902f <> 0 OR xccq902g <> 0 OR xccq902h <> 0)
      #mod zhangllc 150730 --begin
      #AND xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902 = 0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq902 = 0')         
#     RETURN r_success
   END IF       


   #更新xccq903的值
   UPDATE xccq_tmp SET xccq903 = xccq903a + xccq903b + xccq903c + xccq903d + xccq903e + xccq903f + xccq903g + xccq903h ,
                       xccqtime = l_date
    #mod zhangllc 150730 --begin
    #WHERE xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq902"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq903')         
#     RETURN r_success
   END IF      
               
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批写xccc - 更新出项
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccc_5(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-15 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccc_5(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   
   
   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_current()
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME   
   
   IF cl_db_generate_analyze("xcck_tmp") THEN END IF   #181116-00032#1
   
   #更新已经取到的出项成本
   #301.工单领用
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 IN ('3011','3012') ",
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc301  = nvl(b.xcck201 ,0) ,  ",
               "                xccc302  = nvl(b.xcck202 ,0) ,  ",
               "                xccc302a = nvl(b.xcck202a,0) ,  ",
               "                xccc302b = nvl(b.xcck202b,0) ,  ",
               "                xccc302c = nvl(b.xcck202c,0) ,  ",
               "                xccc302d = nvl(b.xcck202d,0) ,  ",
               "                xccc302e = nvl(b.xcck202e,0) ,  ",
               "                xccc302f = nvl(b.xcck202f,0) ,  ",
               "                xccc302g = nvl(b.xcck202g,0) ,  ",
               "                xccc302h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p1')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p1')         
#     RETURN r_success
   END IF     
   
   #303.销货
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '303' ",
               "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc303  = nvl(b.xcck201 ,0) ,  ",
               "                xccc304  = nvl(b.xcck202 ,0) ,  ",
               "                xccc304a = nvl(b.xcck202a,0) ,  ",
               "                xccc304b = nvl(b.xcck202b,0) ,  ",
               "                xccc304c = nvl(b.xcck202c,0) ,  ",
               "                xccc304d = nvl(b.xcck202d,0) ,  ",
               "                xccc304e = nvl(b.xcck202e,0) ,  ",
               "                xccc304f = nvl(b.xcck202f,0) ,  ",
               "                xccc304g = nvl(b.xcck202g,0) ,  ",
               "                xccc304h = nvl(b.xcck202h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p2')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p2')         
#     RETURN r_success
   END IF     
   
   #305.销退
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '305' ",
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", ##170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", ##170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc305  = nvl(b.xcck201 ,0) ,  ",
               "                xccc306  = nvl(b.xcck202 ,0) ,  ",
               "                xccc306a = nvl(b.xcck202a,0) ,  ",
               "                xccc306b = nvl(b.xcck202b,0) ,  ",
               "                xccc306c = nvl(b.xcck202c,0) ,  ",
               "                xccc306d = nvl(b.xcck202d,0) ,  ",
               "                xccc306e = nvl(b.xcck202e,0) ,  ",
               "                xccc306f = nvl(b.xcck202f,0) ,  ",
               "                xccc306g = nvl(b.xcck202g,0) ,  ",
               "                xccc306h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p3')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p3 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p1')         
#     RETURN r_success
   END IF     
   
   #307.销售费用
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '307' ",
               "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc307  = nvl(b.xcck201 ,0) ,  ",
               "                xccc308  = nvl(b.xcck202 ,0) ,  ",
               "                xccc308a = nvl(b.xcck202a,0) ,  ",
               "                xccc308b = nvl(b.xcck202b,0) ,  ",
               "                xccc308c = nvl(b.xcck202c,0) ,  ",
               "                xccc308d = nvl(b.xcck202d,0) ,  ",
               "                xccc308e = nvl(b.xcck202e,0) ,  ",
               "                xccc308f = nvl(b.xcck202f,0) ,  ",
               "                xccc308g = nvl(b.xcck202g,0) ,  ",
               "                xccc308h = nvl(b.xcck202h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p4')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p4')         
#     RETURN r_success
   END IF     
   
   #309.杂发
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               #"                WHERE xcck055 IN ('3091','3092') ",  #161109-00032#3  
               "                WHERE xcck055 IN ('3091','3092','309X') ",  #161109-00032#3  
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc309  = nvl(b.xcck201 ,0) ,  ",
               "                xccc310  = nvl(b.xcck202 ,0) ,  ",
               "                xccc310a = nvl(b.xcck202a,0) ,  ",
               "                xccc310b = nvl(b.xcck202b,0) ,  ",
               "                xccc310c = nvl(b.xcck202c,0) ,  ",
               "                xccc310d = nvl(b.xcck202d,0) ,  ",
               "                xccc310e = nvl(b.xcck202e,0) ,  ",
               "                xccc310f = nvl(b.xcck202f,0) ,  ",
               "                xccc310g = nvl(b.xcck202g,0) ,  ",
               "                xccc310h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p5')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p5 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p5')         
#     RETURN r_success
   END IF     
   
   #311.盘盈亏
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",                         
               "                WHERE xcck055 = '311' ",
               "                GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc311  = nvl(b.xcck201 ,0) ,  ",
               "                xccc312  = nvl(b.xcck202 ,0) ,  ",
               "                xccc312a = nvl(b.xcck202a,0) ,  ",
               "                xccc312b = nvl(b.xcck202b,0) ,  ",
               "                xccc312c = nvl(b.xcck202c,0) ,  ",
               "                xccc312d = nvl(b.xcck202d,0) ,  ",
               "                xccc312e = nvl(b.xcck202e,0) ,  ",
               "                xccc312f = nvl(b.xcck202f,0) ,  ",
               "                xccc312g = nvl(b.xcck202g,0) ,  ",
               "                xccc312h = nvl(b.xcck202h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p6')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p6')         
#     RETURN r_success
   END IF     
        
   #313.其他出库
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
               "                     SUM(xcck202h*xcck009) xcck202h ",
               "                FROM xcck_tmp     ",
               #160823-00028#1-s
               #"                WHERE xcck055 IN ('3131','3132') ",
               "                WHERE xcck055 IN ('3132') ",  #20160809 DSC.liquor mod 調撥出庫移到是撥入的減項裡
               #160823-00028#1-e
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
               "                         xcck004,xcck005,xcck010,xcck011,xcck017",
               "                ) b ",
               "          ON ( xcccent = b.xcckent  ",
               "         AND   xcccld  = b.xcckld   ",
               "         AND   xccc001 = b.xcck001  ",
               "         AND   xccc002 = b.xcck002  ",
               "         AND   xccc003 = b.xcck003  ",
               "         AND   xccc004 = b.xcck004  ",
               "         AND   xccc005 = b.xcck005  ",
               "         AND   xccc006 = b.xcck010  ",
               "         AND   xccc007 = b.xcck011  ",
               "         AND   xccc008 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccc313  = nvl(b.xcck201 ,0) ,  ",
               "                xccc314  = nvl(b.xcck202 ,0) ,  ",
               "                xccc314a = nvl(b.xcck202a,0) ,  ",
               "                xccc314b = nvl(b.xcck202b,0) ,  ",
               "                xccc314c = nvl(b.xcck202c,0) ,  ",
               "                xccc314d = nvl(b.xcck202d,0) ,  ",
               "                xccc314e = nvl(b.xcck202e,0) ,  ",
               "                xccc314f = nvl(b.xcck202f,0) ,  ",
               "                xccc314g = nvl(b.xcck202g,0) ,  ",
               "                xccc314h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p7')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p7')         
#     RETURN r_success
   END IF     


   #计算期末结余
   #计算结余数量
   UPDATE xccc_tmp SET xccc901  = xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 +
                                  xccc215 + xccc217 + xccc301 + xccc303 + xccc305 + xccc307 + xccc309 + xccc311 +
                                  xccc313
    #mod zhangllc 150730 --begin
    #WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc901')         
#     RETURN r_success
   END IF  

   #计算结余金额=结余数量*平均单价
   UPDATE xccc_tmp SET xccc902  = xccc901 * xccc280,
                       xccc902a = xccc901 * xccc280a,
                       xccc902b = xccc901 * xccc280b,
                       xccc902c = xccc901 * xccc280c,
                       xccc902d = xccc901 * xccc280d,
                       xccc902e = xccc901 * xccc280e,
                       xccc902f = xccc901 * xccc280f,
                       xccc902g = xccc901 * xccc280g,
                       xccc902h = xccc901 * xccc280h
    #mod zhangllc 150730 --begin
    #WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902')         
#     RETURN r_success
   END IF 
   
   #结余金额取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xccc_tmp SET xccc902  = round(xccc902,?),",
                         "                    xccc902a = round(xccc902a,?),xccc902b = round(xccc902b,?), ",
                         "                    xccc902c = round(xccc902c,?),xccc902d = round(xccc902d,?), ",
                         "                    xccc902e = round(xccc902e,?),xccc902f = round(xccc902f,?), ",
                         "                    xccc902g = round(xccc902g,?),xccc902h = round(xccc902h,?)  ",
                        #mod zhangllc 150730 --begin
                        #" WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"                        
                        #" WHERE (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"                    #161114-00003#1 mark
                         #" WHERE (xccc006,xccc007) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")" #161114-00003#1 add  #170112-00041#1                       
                         " WHERE (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #170112-00041#1                       
                        #mod zhangllc 150730 --end

        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xccc_tmp SET xccc902  = trunc(xccc902,?),",
                         "                    xccc902a = trunc(xccc902a,?),xccc902b = trunc(xccc902b,?), ",
                         "                    xccc902c = trunc(xccc902c,?),xccc902d = trunc(xccc902d,?), ",
                         "                    xccc902e = trunc(xccc902e,?),xccc902f = trunc(xccc902f,?), ",
                         "                    xccc902g = trunc(xccc902g,?),xccc902h = trunc(xccc902h,?)  ",
                         #mod zhangllc 150730 --begin
                         #" WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"                         
                        #" WHERE (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"                    #161114-00003#1 mark
                         #" WHERE (xccc006,xccc007) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")" #161114-00003#1 add  #170112-00041#1                        
                         " WHERE (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  #170112-00041#1                        
                         #mod zhangllc 150730 --end

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xccc_tmp SET xccc902  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccc902,?) ",
                         "                                                          ELSE ROUND(xccc902,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccc902,?)",
                         "                                END ),",
                         "                    xccc902a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc902a,?) ",
                         "                                                         ELSE ROUND(xccc902a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc902a,?)",
                         "                                END ),",
                         "                    xccc902b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc902b,?) ",
                         "                                                         ELSE ROUND(xccc902b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc902b,?)",
                         "                                END ),",
                         "                    xccc902c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc902c,?) ",
                         "                                                         ELSE ROUND(xccc902c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc902c,?)",
                         "                                END ),",
                         "                    xccc902d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc902d,?) ",
                         "                                                         ELSE ROUND(xccc902d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc902d,?)",
                         "                                END ),",
                         "                    xccc902e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc902e,?) ",
                         "                                                         ELSE ROUND(xccc902e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc902e,?)",
                         "                                END ),",
                         "                    xccc902f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc902f,?) ",
                         "                                                         ELSE ROUND(xccc902f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc902f,?)",
                         "                                END ),",
                         "                    xccc902g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc902g,?) ",
                         "                                                         ELSE ROUND(xccc902g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc902g,?)",
                         "                                END ),",
                         "                    xccc902h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc902h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc902h,?) ",
                         "                                                         ELSE ROUND(xccc902h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc902h,?)",
                         "                                END )",
                         " WHERE (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")" 
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xccc_tmp SET xccc902  = ceil(xccc902 *power(10,?))/power(10,?),",
                         "                    xccc902a = ceil(xccc902a*power(10,?))/power(10,?),",
                         "                    xccc902b = ceil(xccc902b*power(10,?))/power(10,?),",
                         "                    xccc902c = ceil(xccc902c*power(10,?))/power(10,?),",
                         "                    xccc902d = ceil(xccc902d*power(10,?))/power(10,?),",
                         "                    xccc902e = ceil(xccc902e*power(10,?))/power(10,?),",
                         "                    xccc902f = ceil(xccc902f*power(10,?))/power(10,?),",
                         "                    xccc902g = ceil(xccc902g*power(10,?))/power(10,?),",
                         "                    xccc902h = ceil(xccc902h*power(10,?))/power(10,?) ",
                         " WHERE (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")"  
        #180802-00015#1 add-E     
                         
   END CASE                               
   PREPARE s_axcp500_avg1_set_xccc_5_p11 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p11')         
#     RETURN r_success
   END IF


   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xccc_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                               g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                               g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xccc_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xccc_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xccc_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xccc_5_p11 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p11')         
#     RETURN r_success
   END IF        


   #修正xccc902的值-先修至xccc902a,若xccc902a为零,则修正xccc902b......
   UPDATE xccc_tmp SET xccc902a = xccc902 - (xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h)   
    WHERE xccc902 <> xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h
      AND xccc902 - (xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h) <>0  #>=0   #mod zhangllc 160528 SBS5 >=0 -> <>0 若开启负库存，期末结余为负数的话，小数误差就不好处理了
      #170330-00046#1 add start -----
      AND xccc902a >= xccc902b AND xccc902a >= xccc902c
      AND xccc902a >= xccc902d AND xccc902a >= xccc902e
      AND xccc902a >= xccc902f AND xccc902a >= xccc902g
      AND xccc902a >= xccc902h
      #170330-00046#1 add end   -----      
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902a')         
#     RETURN r_success
   END IF   
      
   UPDATE xccc_tmp SET xccc902b = xccc902 - (xccc902a + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h)  
    WHERE xccc902 <> xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h
      AND xccc902 - (xccc902a + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h) <>0  #>=0   #mod zhangllc 160528 SBS5 >=0 -> <>0 若开启负库存，期末结余为负数的话，小数误差就不好处理了
      #170330-00046#1 add start -----
      AND xccc902b >= xccc902c
      AND xccc902b >= xccc902d AND xccc902b >= xccc902e
      AND xccc902b >= xccc902f AND xccc902b >= xccc902g
      AND xccc902b >= xccc902h
      #170330-00046#1 add end   -----      
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902b')         
#     RETURN r_success
   END IF   
   
   
   UPDATE xccc_tmp SET xccc902c = xccc902 - (xccc902a + xccc902b + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h)  
    WHERE xccc902 <> xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h
      AND xccc902 - (xccc902a + xccc902b + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h) <>0  #>=0   #mod zhangllc 160528 SBS5 >=0 -> <>0 若开启负库存，期末结余为负数的话，小数误差就不好处理了
      #170330-00046#1 add start -----
      AND xccc902c >= xccc902d AND xccc902c >= xccc902e
      AND xccc902c >= xccc902f AND xccc902c >= xccc902g
      AND xccc902c >= xccc902h
      #170330-00046#1 add end   -----      
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902c')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc902d = xccc902 - (xccc902a + xccc902b + xccc902c + xccc902e + xccc902f + xccc902g + xccc902h)  
    WHERE xccc902 <> xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h
      AND xccc902 - (xccc902a + xccc902b + xccc902c + xccc902e + xccc902f + xccc902g + xccc902h) <>0  #>=0   #mod zhangllc 160528 SBS5 >=0 -> <>0 若开启负库存，期末结余为负数的话，小数误差就不好处理了
      #170330-00046#1 add start -----
      AND xccc902d >= xccc902e
      AND xccc902d >= xccc902f AND xccc902d >= xccc902g
      AND xccc902d >= xccc902h
      #170330-00046#1 add end   -----      
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902d')         
#     RETURN r_success
   END IF   


   UPDATE xccc_tmp SET xccc902e = xccc902 - (xccc902a + xccc902b + xccc902c + xccc902d + xccc902f + xccc902g + xccc902h)  
    WHERE xccc902 <> xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h
      AND xccc902 - (xccc902a + xccc902b + xccc902c + xccc902d + xccc902f + xccc902g + xccc902h) <>0  #>=0   #mod zhangllc 160528 SBS5 >=0 -> <>0 若开启负库存，期末结余为负数的话，小数误差就不好处理了
      #170330-00046#1 add start -----
      AND xccc902e >= xccc902f AND xccc902e >= xccc902g
      AND xccc902e >= xccc902h
      #170330-00046#1 add end   -----      
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902e')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc902f = xccc902 - (xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902g + xccc902h)  
    WHERE xccc902 <> xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h
      AND xccc902 - (xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902g + xccc902h) <>0  #>=0   #mod zhangllc 160528 SBS5 >=0 -> <>0 若开启负库存，期末结余为负数的话，小数误差就不好处理了
      #170330-00046#1 add start -----
      AND xccc902f >= xccc902g AND xccc902f >= xccc902h
      #170330-00046#1 add end   -----
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902f')         
#     RETURN r_success
   END IF   


   UPDATE xccc_tmp SET xccc902g = xccc902 - (xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902h)  
    WHERE xccc902 <> xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h
      AND xccc902 - (xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902h) <>0  #>=0   #mod zhangllc 160528 SBS5 >=0 -> <>0 若开启负库存，期末结余为负数的话，小数误差就不好处理了
      #170330-00046#1 add start -----
      AND xccc902g >= xccc902h
      #170330-00046#1 add end   -----      
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902g')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc902h = xccc902 - (xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g)  
    WHERE xccc902 <> xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g + xccc902h
      AND xccc902 - (xccc902a + xccc902b + xccc902c + xccc902d + xccc902e + xccc902f + xccc902g) <>0  #>=0   #mod zhangllc 160528 SBS5 >=0 -> <>0 若开启负库存，期末结余为负数的话，小数误差就不好处理了
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902h')         
#     RETURN r_success
   END IF   
    
#181213-00042#1---mark---s  
#   #结余调整
#   UPDATE xccc_tmp SET xccc903  = (xccc102 + xccc202 + xccc204 + xccc206 + xccc208 + xccc210 + xccc212 + xccc214 +
#                                  xccc216 + xccc218 + xccc302 + xccc304 + xccc306 + xccc308 + xccc310 + xccc312 +
#                                  xccc314 ) * -1 + xccc902 ,
#                       xccc903a = (xccc102a + xccc202a + xccc204a + xccc206a + xccc208a + xccc210a + xccc212a + xccc214a +
#                                  xccc216a + xccc218a + xccc302a + xccc304a + xccc306a + xccc308a + xccc310a + xccc312a +
#                                  xccc314a ) * -1 + xccc902a ,
#                       xccc903b = (xccc102b + xccc202b + xccc204b + xccc206b + xccc208b + xccc210b + xccc212b + xccc214b +
#                                  xccc216b + xccc218b + xccc302b + xccc304b + xccc306b + xccc308b + xccc310b + xccc312b +
#                                  xccc314b) * -1  + xccc902b ,
#                       xccc903c = (xccc102c + xccc202c + xccc204c + xccc206c + xccc208c + xccc210c + xccc212c + xccc214c +
#                                  xccc216c + xccc218c + xccc302c + xccc304c + xccc306c + xccc308c + xccc310c + xccc312c +
#                                  xccc314c) * -1  + xccc902c ,
#                       xccc903d = (xccc102d + xccc202d + xccc204d + xccc206d + xccc208d + xccc210d + xccc212d + xccc214d +
#                                  xccc216d + xccc218d + xccc302d + xccc304d + xccc306d + xccc308d + xccc310d + xccc312d +
#                                  xccc314d) * -1  + xccc902d ,
#                       xccc903e = (xccc102e + xccc202e + xccc204e + xccc206e + xccc208e + xccc210e + xccc212e + xccc214e +
#                                  xccc216e + xccc218e + xccc302e + xccc304e + xccc306e + xccc308e + xccc310e + xccc312e +
#                                  xccc314e) * -1  + xccc902e ,
#                       xccc903f = (xccc102f + xccc202f + xccc204f + xccc206f + xccc208f + xccc210f + xccc212f + xccc214f +
#                                  xccc216f + xccc218f + xccc302f + xccc304f + xccc306f + xccc308f + xccc310f + xccc312f +
#                                  xccc314f) * -1  + xccc902f ,
#                       xccc903g = (xccc102g + xccc202g + xccc204g + xccc206g + xccc208g + xccc210g + xccc212g + xccc214g +
#                                  xccc216g + xccc218g + xccc302g + xccc304g + xccc306g + xccc308g + xccc310g + xccc312g +
#                                  xccc314g) * -1  + xccc902g ,
#                       xccc903h = (xccc102h + xccc202h + xccc204h + xccc206h + xccc208h + xccc210h + xccc212h + xccc214h +
#                                  xccc216h + xccc218h + xccc302h + xccc304h + xccc306h + xccc308h + xccc310h + xccc312h +
#                                  xccc314h) * -1  + xccc902h
#    #mod zhangllc 150730 --begin
#    #WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
#    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
#                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
#                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
#    #mod zhangllc 150730 --end    
##   UPDATE xccc_tmp SET xccc903  = xccc102 + xccc202 + xccc204 + xccc206 + xccc208 + xccc210 + xccc212 + xccc214 +
##                                  xccc216 + xccc218 + xccc302 + xccc304 + xccc306 + xccc308 + xccc310 + xccc312 +
##                                  xccc314 - xccc902 ,
##                       xccc903a = xccc102a + xccc202a + xccc204a + xccc206a + xccc208a + xccc210a + xccc212a + xccc214a +
##                                  xccc216a + xccc218a + xccc302a + xccc304a + xccc306a + xccc308a + xccc310a + xccc312a +
##                                  xccc314a - xccc902a ,        
##                       xccc903b = xccc102b + xccc202b + xccc204b + xccc206b + xccc208b + xccc210b + xccc212b + xccc214b +
##                                  xccc216b + xccc218b + xccc302b + xccc304b + xccc306b + xccc308b + xccc310b + xccc312b +
##                                  xccc314b - xccc902b ,        
##                       xccc903c = xccc102c + xccc202c + xccc204c + xccc206c + xccc208c + xccc210c + xccc212c + xccc214c +
##                                  xccc216c + xccc218c + xccc302c + xccc304c + xccc306c + xccc308c + xccc310c + xccc312c +
##                                  xccc314c - xccc902c ,        
##                       xccc903d = xccc102d + xccc202d + xccc204d + xccc206d + xccc208d + xccc210d + xccc212d + xccc214d +
##                                  xccc216d + xccc218d + xccc302d + xccc304d + xccc306d + xccc308d + xccc310d + xccc312d +
##                                  xccc314d - xccc902d ,        
##                       xccc903e = xccc102e + xccc202e + xccc204e + xccc206e + xccc208e + xccc210e + xccc212e + xccc214e +
##                                  xccc216e + xccc218e + xccc302e + xccc304e + xccc306e + xccc308e + xccc310e + xccc312e +
##                                  xccc314e - xccc902e ,        
##                       xccc903f = xccc102f + xccc202f + xccc204f + xccc206f + xccc208f + xccc210f + xccc212f + xccc214f +
##                                  xccc216f + xccc218f + xccc302f + xccc304f + xccc306f + xccc308f + xccc310f + xccc312f +
##                                  xccc314f - xccc902f ,        
##                       xccc903g = xccc102g + xccc202g + xccc204g + xccc206g + xccc208g + xccc210g + xccc212g + xccc214g +
##                                  xccc216g + xccc218g + xccc302g + xccc304g + xccc306g + xccc308g + xccc310g + xccc312g +
##                                  xccc314g - xccc902g ,        
##                       xccc903h = xccc102h + xccc202h + xccc204h + xccc206h + xccc208h + xccc210h + xccc212h + xccc214h +
##                                  xccc216h + xccc218h + xccc302h + xccc304h + xccc306h + xccc308h + xccc310h + xccc312h +
##                                  xccc314h - xccc902h        
##    WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc903"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc903')         
##     RETURN r_success
#   END IF     
#181213-00042#1---mark---e 

#   #计算平均单价
#   CASE g_round_type
#        WHEN '1'   #四舍五入
#             LET g_sql = "UPDATE xccc_tmp SET xccc280  = round(xccc903/xccc901,?),",
#                         "                    xccc280a = round(xccc903a/xccc901,?),xccc280b = round(xccc903b/xccc901,?), ",
#                         "                    xccc280c = round(xccc903c/xccc901,?),xccc280d = round(xccc903d/xccc901,?), ",
#                         "                    xccc280e = round(xccc903e/xccc901,?),xccc280f = round(xccc903f/xccc901,?), ",
#                         "                    xccc280g = round(xccc903g/xccc901,?),xccc280h = round(xccc903h/xccc901,?)  ",
#                         " WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",
#                         "   AND xccc901 <> 0 AND xccc903 <> 0 AND xccc280 = 0 "
#
#        WHEN '3'   #无条件截位
#             LET g_sql = "UPDATE xccc_tmp SET xccc280  = trunc(xccc903/xccc901,?),",
#                         "                    xccc280a = trunc(xccc903a/xccc901,?),xccc280b = trunc(xccc903b/xccc901,?), ",
#                         "                    xccc280c = trunc(xccc903c/xccc901,?),xccc280d = trunc(xccc903d/xccc901,?), ",
#                         "                    xccc280e = trunc(xccc903e/xccc901,?),xccc280f = trunc(xccc903f/xccc901,?), ",
#                         "                    xccc280g = trunc(xccc903g/xccc901,?),xccc280h = trunc(xccc903h/xccc901,?)  ",
#                         " WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",
#                         "   AND xccc901 <> 0 AND xccc903 <> 0 AND xccc280 = 0 "
#
#                         
#   END CASE                               
#   PREPARE s_axcp500_avg1_set_xccc_5_p8 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p8"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p8')         
##     RETURN r_success
#   END IF
#
#   EXECUTE s_axcp500_avg1_set_xccc_5_p8 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p8"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p8')         
##     RETURN r_success
#   END IF        


   #本期没有数量,但有金额,则把金额转至结余调整中
   UPDATE xccc_tmp SET xccc903  = xccc903  - xccc902,  xccc903a = xccc903a - xccc902a, xccc903b = xccc903b - xccc902b, 
                       xccc903c = xccc903c - xccc902b, xccc903d = xccc903d - xccc902d, xccc903e = xccc903e - xccc902e, 
                       xccc903f = xccc903f - xccc902f, xccc903g = xccc903g - xccc902g, xccc903h = xccc903h - xccc902h
    WHERE xccc901 = 0 AND (xccc902 <> 0 OR xccc902a <> 0 OR xccc902b<> 0 OR xccc902c <> 0 OR xccc902d <> 0 OR
                           xccc902e <> 0 OR xccc902f <> 0 OR xccc902g <> 0 OR xccc902h <> 0)
      #mod zhangllc 150730 --begin
      #AND xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc903"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc903')         
#     RETURN r_success
   END IF       

   UPDATE xccc_tmp SET xccc902  = 0, xccc902a = 0, xccc902b = 0, xccc902c = 0,
                       xccc902d = 0, xccc902e = 0, xccc902f = 0, xccc902g = 0,
                       xccc902h = 0
    WHERE xccc901 = 0 AND (xccc902 <> 0 OR xccc902a <> 0 OR xccc902b<> 0 OR xccc902c <> 0 OR xccc902d <> 0 OR
                           xccc902e <> 0 OR xccc902f <> 0 OR xccc902g <> 0 OR xccc902h <> 0)
      #mod zhangllc 150730 --begin
      #AND xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902 = 0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc902 = 0')         
#     RETURN r_success
   END IF       
      
#   #xccc902(结余金额)是用 期初 + 本期入 - 本期出得到的,但是不一定等于 xccc901(结余数量) * 平均单价   
#   #则要把这两个的差额记录至xccc903(结余调整)中   
#   UPDATE xccc_tmp SET xccc903a = xccc901 * xccc280a - xccc902a ,
#                       xccc903b = xccc901 * xccc280b - xccc902b ,                                
#                       xccc903c = xccc901 * xccc280c - xccc902c ,                                
#                       xccc903d = xccc901 * xccc280d - xccc902d ,                                
#                       xccc903e = xccc901 * xccc280e - xccc902e ,                                
#                       xccc903f = xccc901 * xccc280f - xccc902f ,                                
#                       xccc903g = xccc901 * xccc280g - xccc902g ,                                
#                       xccc903h = xccc901 * xccc280h - xccc902h 
#    WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
#      AND xccc901 <> 0 
                                                           
#   #计算平均单价
#   CASE g_round_type
#        WHEN '1'   #四舍五入
#             LET g_sql = "UPDATE xccc_tmp SET xccc280  = round(xccc902/xccc901,?),",
#                         "                    xccc280a = round(xccc902a/xccc901,?),xccc280b = round(xccc902b/xccc901,?), ",
#                         "                    xccc280c = round(xccc902c/xccc901,?),xccc280d = round(xccc902d/xccc901,?), ",
#                         "                    xccc280e = round(xccc902e/xccc901,?),xccc280f = round(xccc902f/xccc901,?), ",
#                         "                    xccc280g = round(xccc902g/xccc901,?),xccc280h = round(xccc902h/xccc901,?)  ",
#                         " WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",
#                         "   AND xccc901 <> 0 AND xccc902 <> 0 AND xccc280 = 0 "
#
#        WHEN '3'   #无条件截位
#             LET g_sql = "UPDATE xccc_tmp SET xccc280  = trunc(xccc902/xccc901,?),",
#                         "                    xccc280a = trunc(xccc902a/xccc901,?),xccc280b = trunc(xccc902b/xccc901,?), ",
#                         "                    xccc280c = trunc(xccc902c/xccc901,?),xccc280d = trunc(xccc902d/xccc901,?), ",
#                         "                    xccc280e = trunc(xccc902e/xccc901,?),xccc280f = trunc(xccc902f/xccc901,?), ",
#                         "                    xccc280g = trunc(xccc902g/xccc901,?),xccc280h = trunc(xccc902h/xccc901,?)  ",
#                         " WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")",
#                         "   AND xccc901 <> 0 AND xccc902 <> 0 AND xccc280 = 0 "
#
#                         
#   END CASE                               
#   PREPARE s_axcp500_avg1_set_xccc_5_p9 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p9"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p9')         
##     RETURN r_success
#   END IF
#
#   EXECUTE s_axcp500_avg1_set_xccc_5_p9 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p9"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p9')         
##     RETURN r_success
#   END IF        


#   #结存调整字段取位xccc903a~xccc903h
#   CASE g_round_type
#        WHEN '1'   #四舍五入   
#             LET g_sql = " UPDATE xccc_tmp SET xccc903a = round(xccc903a,?), xccc903b = round(xccc903b,?), ",
#                         "                     xccc903c = round(xccc903c,?), xccc903d = round(xccc903d,?), ",
#                         "                     xccc903e = round(xccc903e,?), xccc903f = round(xccc903f,?), ",
#                         "                     xccc903g = round(xccc903g,?), xccc903h = round(xccc903h,?)  ",
#                         "  WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "
#                         
#        WHEN '3'   #无条件截位
#             LET g_sql = " UPDATE xccc_tmp SET xccc903a = trunc(xccc903a,?), xccc903b = trunc(xccc903b,?), ",
#                         "                     xccc903c = trunc(xccc903c,?), xccc903d = trunc(xccc903d,?), ",
#                         "                     xccc903e = trunc(xccc903e,?), xccc903f = trunc(xccc903f,?), ",
#                         "                     xccc903g = trunc(xccc903g,?), xccc903h = trunc(xccc903h,?)  ",
#                         "  WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                      
#        
#   END CASE        
#   PREPARE s_axcp500_avg1_set_xccc_5_p10 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p10"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p10')         
##     RETURN r_success
#   END IF     
#   EXECUTE s_axcp500_avg1_set_xccc_5_p10 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                               g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p10"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p10')         
##     RETURN r_success
#   END IF    

#181213-00042#1---mark---s
#   #更新xccc903的值
#   UPDATE xccc_tmp SET xccc903 = xccc903a + xccc903b + xccc903c + xccc903d + xccc903e + xccc903f + xccc903g + xccc903h ,
#                       xccctime = l_date
#    #mod zhangllc 150730 --begin
#    #WHERE xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
#    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
#                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
#                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
#    #mod zhangllc 150730 --end    
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc902"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc903')         
##     RETURN r_success
#   END IF      
#181213-00042#1---mark---e

#   #计算xccc280-- 修正xccc280a
#   UPDATE xccc_tmp SET xccc280a = xccc280 - (xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)
#    WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )    
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccc280"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      CALL s_axcp500_ins_error('','','','','','','','','','','',
#                               '',SQLCA.sqlcode,'','UPDATE xccc280')         
##     RETURN r_success
#   END IF  

  #161108-00046#1-s-add
   #170425-00007#1 mod--s
   #LET g_sql = " MERGE INTO xccc_tmp ",
   #            "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
   #            "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
   #           #"                     (xrcb113 * xrcb022) xrcb113 ",        #170116-00028#1 mark
   #            "                     (SUM(xrcb113 * xrcb022)) xrcb113 ",   #170116-00028#1 add
   #            "                FROM xcck_tmp     ",
   #            "                     LEFT OUTER JOIN (SELECT DISTINCT xrcbent,xrcbld,xrcb002,xrcb003, ",
   #            "                                             SUM(xrcb113) xrcb113,xrcb022 ", 
   #            "                                        FROM xrcb_t ", 
   #            "                                       WHERE EXISTS (SELECT 1 FROM xrca_t ",
   #            "                                                      WHERE xrcastus <> 'X' AND xrcadocno = xrcbdocno ",
   #            "                                                        AND xrca001 IN ('01','02','12','17','22') ",
   #            "                                                        AND xrcaent = xrcbent AND xrcald = xrcbld ) ",
   #            "                                         AND xrcb023 <> 'Y' ",
   #            "                                      GROUP BY xrcbent,xrcbld,xrcb002,xrcb003,xrcb022) tsed", 
   #            "                      ON  xcck006 = xrcb002 AND xcck007 = xrcb003 AND ",
   #            "                          xcckent = xrcbent AND xcckld = xrcbld ",                
   #            "                          AND (xcck008 = 0 OR xcck008 = 1 OR xcck008 IS NULL) ",    #170216-00059#2 add
   #            "               WHERE xcck055 IN ('305','307','303','215') ", 
   #            "               GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017 ",     #170116-00028#1  add            
   #            "             ) b ",
   #            "       ON ( xcccent = b.xcckent  ",
   #            "      AND   xcccld  = b.xcckld   ",
   #            "      AND   xccc001 = b.xcck001  ",
   #            "      AND   xccc002 = b.xcck002  ",
   #            "      AND   xccc003 = b.xcck003  ",
   #            "      AND   xccc004 = b.xcck004  ",
   #            "      AND   xccc005 = b.xcck005  ",
   #            "      AND   xccc006 = b.xcck010  ",
   #            "      AND   xccc007 = b.xcck011  ",
   #            "      AND   xccc008 = b.xcck017  ",
   #            #"      AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
   #            "      AND   (xccc006) IN ( SELECT DISTINCT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
   #            " WHEN MATCHED THEN    ",
   #            "     UPDATE SET xccc401  = nvl(b.xrcb113 ,0)   "
   #170601-00051#1 mark start -----

   #DROP TABLE xrcb_tmp; #ODI-ORA#
   #LET g_sql = " CREATE  GLOBAL TEMPORARY TABLE xrcb_tmp AS (SELECT DISTINCT xrcbent,xrcbld,xrcb002,xrcb003, ",
   #170601-00051#1 mark end   -----
   #170601-00051#1 add start -----
   LET g_sql = " INSERT INTO xrcb_tmp (xrcbent,xrcbld,xrcb002,xrcb003,xrcb113,",
               "                       xrcb022)                                ",
               " SELECT DISTINCT xrcbent,xrcbld,xrcb002,xrcb003, ",
   #170601-00051#1 add end   -----   
               "                                             SUM(xrcb113) xrcb113,xrcb022 ", 
               "                                        FROM xrcb_t ", 
               "                                       WHERE EXISTS (SELECT 1 FROM xrca_t ",
               "                                                      WHERE xrcastus <> 'X' AND xrcadocno = xrcbdocno ",
               "                                                        AND xrca001 IN ('01','02','12','17','22') ",
               "                                                        AND xrcaent = xrcbent AND xrcald = xrcbld ) ",
               "                                         AND xrcb023 <> 'Y' ",
               "      AND   (xrcb004) IN ( SELECT DISTINCT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") ", #170705-00053#1 add               
               "                                      GROUP BY xrcbent,xrcbld,xrcb002,xrcb003,xrcb022"   #170601-00051#1 add               
               #"                                      GROUP BY xrcbent,xrcbld,xrcb002,xrcb003,xrcb022) tsed" #170601-00051#1 mark
   PREPARE s_axcp500_avg1_set_xccc_5_pre FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_pre"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_pre')         
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_pre 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_pre"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_pre')         
   END IF 
    
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               #201118-00012#1---mark---s
               #"       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               #"                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               ##"                     (xrcb113 * xrcb022) xrcb113 ",        #170116-00028#1 mark
               #"                     (SUM(xrcb113 * xrcb022)) xrcb113 ",   #170116-00028#1 add
               #"                FROM xcck_tmp     ",
               #"                     LEFT OUTER JOIN xrcb_tmp ", 
               #"                      ON  xcck006 = xrcb002 AND xcck007 = xrcb003 AND ",
               #"                          xcckent = xrcbent AND xcckld = xrcbld ",                
               ##"                          AND (xcck008 = 0 OR xcck008 = 1 OR xcck008 IS NULL) ",    #170216-00059#2 add  #181116-00032#1 mark
               ##"               WHERE xcck055 IN ('305','307','303','215') ", #170705-00053#1 mark
               #"               WHERE xcck055 IN ('307','303') ", #170705-00053#1 add               
               #"                 AND (xcck008 = 0 OR xcck008 = 1 OR xcck008 IS NULL) ",  #181116-00032#1
               #"               GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017 ",     #170116-00028#1  add 
               #201118-00012#1---mark---e
               #201118-00012#1---add---s
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     SUM(xrcb113 * xrcb022) xrcb113 ",
               "                FROM (SELECT DISTINCT xcckent,xcckld, xcck001,xcck002,xcck003,xcck006,xcck007, ",
               "                                     xcck004,xcck005,xcck010,xcck011,xcck017 ",              
               "                       FROM xcck_tmp     ",               
               "                      WHERE xcck055 IN ('307','303') ", 
               "                        AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xcck010 AND xcbb006 = ",p_xcbb006,")",              
               "                     ) t1 ",
               "                LEFT JOIN xrcb_tmp ON xcckent = xrcbent AND xcckld = xrcbld AND xcck006 = xrcb002 AND xcck007 = xrcb003 ",
               "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017",               
               #201118-00012#1---add---e
               "             ) b ",
               "       ON ( xcccent = b.xcckent  ",
               "      AND   xcccld  = b.xcckld   ",
               "      AND   xccc001 = b.xcck001  ",
               "      AND   xccc002 = b.xcck002  ",
               "      AND   xccc003 = b.xcck003  ",
               "      AND   xccc004 = b.xcck004  ",
               "      AND   xccc005 = b.xcck005  ",
               "      AND   xccc006 = b.xcck010  ",
               "      AND   xccc007 = b.xcck011  ",
               "      AND   xccc008 = b.xcck017  ",
               #"      AND   (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               "      AND   (xccc006) IN ( SELECT DISTINCT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
               " WHEN MATCHED THEN    ",
               "     UPDATE SET xccc401  = nvl(b.xrcb113 ,0)   "
   #170425-00007#1 mod--e
   #201118-00012#1---add---s
   #201118-00012#1---add---e
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p12 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p12')         
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p12 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p12')         
   END IF 
  #161108-00046#1-e-add
  #170705-00053#1 add start -----
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp ",
               #201118-00012#1---mark---s
               #"       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               #"                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               #"                     (SUM(xrcb113 * xrcb022)*-1) xrcb113 ",
               #"                FROM xcck_tmp     ",
               #"                     LEFT OUTER JOIN xrcb_tmp ", 
               #"                      ON  xcck006 = xrcb002 AND xcck007 = xrcb003 AND ",
               #"                          xcckent = xrcbent AND xcckld = xrcbld ",                
               ##"                          AND (xcck008 = 0 OR xcck008 = 1 OR xcck008 IS NULL) ", #181116-00032#1 mark
               #"               WHERE xcck055 IN ('305','215') ",             
               #"                 AND (xcck008 = 0 OR xcck008 = 1 OR xcck008 IS NULL) ", #181116-00032#1
               #"               GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017 ",    
               #201118-00012#1---mark---e
               #201118-00012#1---add---s
               "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,   ",
               "                     xcck004,xcck005,xcck010,xcck011,xcck017,   ",
               "                     (SUM(xrcb113 * xrcb022)*-1) xrcb113 ",
               "                FROM (SELECT DISTINCT xcckent,xcckld, xcck001,xcck002,xcck003,xcck006,xcck007, ",
               "                                     xcck004,xcck005,xcck010,xcck011,xcck017 ",              
               "                        FROM xcck_tmp     ",               
               "                       WHERE xcck055 IN ('305','215') ", 
               "                         AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xcck010 AND xcbb006 = ",p_xcbb006,")",               
               "                     ) t1 ",    
               "                LEFT JOIN xrcb_tmp ON xcckent = xrcbent AND xcckld = xrcbld AND xcck006 = xrcb002 AND xcck007 = xrcb003 ",
               "               GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,xcck004,xcck005,xcck010,xcck011,xcck017",                  
               #201118-00012#1---add---e               
               "             ) b ",
               "       ON ( xcccent = b.xcckent  ",
               "      AND   xcccld  = b.xcckld   ",
               "      AND   xccc001 = b.xcck001  ",
               "      AND   xccc002 = b.xcck002  ",
               "      AND   xccc003 = b.xcck003  ",
               "      AND   xccc004 = b.xcck004  ",
               "      AND   xccc005 = b.xcck005  ",
               "      AND   xccc006 = b.xcck010  ",
               "      AND   xccc007 = b.xcck011  ",
               "      AND   xccc008 = b.xcck017  ",
               "      AND   (xccc006) IN ( SELECT DISTINCT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               " WHEN MATCHED THEN    ",
               "     UPDATE SET xccc402  = nvl(b.xrcb113 ,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_5_p13 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_5_p13"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_5_p13')         
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_5_p13 


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_5_p13"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_5_p13')         
   END IF  
  #170705-00053#1 add end   -----
  
  
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(24,g_stat_begin,g_stat_end,g_stat_cnt)  
   
   LET r_success = TRUE
   RETURN r_success
      
END FUNCTION

################################################################################
# Descriptions...: 月加权-料件的在制成本计算 - 前置处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_part1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_part1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   
   #在制整批处理 - 期初处理 xccd
   CALL s_axcp500_avg1_wip_1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   #在制整批处理 - 期初处理 xcce
   CALL s_axcp500_avg1_wip_2_1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   #在制整批处理 - 期初处理 xccz
   CALL s_axcp500_avg1_wip_3('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   #161121-00018#5---add---s
   IF g_sys_6003 = 'Y' THEN 
      #在制整批处理 - 期初处理 xchb
      CALL s_axcp500_avg_wip_xchb_1('1')
        RETURNING l_success
      IF NOT l_success THEN
         RETURN r_success
      END IF
      
      #在制整批处理 - 期初处理 xcha
      CALL s_axcp500_avg_wip_xcha_1('1')
        RETURNING l_success
      IF NOT l_success THEN
         RETURN r_success
      END IF
   END IF
   #161121-00018#5---add---e
   
   #在制整批处理 - 转出逻辑-1
   CALL s_axcp500_avg1_wip_4_1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
      
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 月加权-料件的在制成本计算 - 优化版
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2014-08-04 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip(p_xcbb006,p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
#   DEFINE l_sfaa          RECORD LIKE sfaa_t.*  #161124-00048#20 mark
   DEFINE l_sfaa          type_g_sfaa  #170605-00013#1-add
   #170605-00013#1-s-mark 改用type方式
   ##161124-00048#20 add(s)
   #DEFINE l_sfaa RECORD  #工單單頭檔
   #    sfaaent LIKE sfaa_t.sfaaent, #企业编号
   #    sfaaownid LIKE sfaa_t.sfaaownid, #资料所有者
   #    sfaaowndp LIKE sfaa_t.sfaaowndp, #资料所有部门
   #    sfaacrtid LIKE sfaa_t.sfaacrtid, #资料录入者
   #    sfaacrtdp LIKE sfaa_t.sfaacrtdp, #资料录入部门
   #    sfaacrtdt LIKE sfaa_t.sfaacrtdt, #资料创建日
   #    sfaamodid LIKE sfaa_t.sfaamodid, #资料更改者
   #    sfaamoddt LIKE sfaa_t.sfaamoddt, #最近更改日
   #    sfaacnfid LIKE sfaa_t.sfaacnfid, #资料审核者
   #    sfaacnfdt LIKE sfaa_t.sfaacnfdt, #数据审核日
   #    sfaapstid LIKE sfaa_t.sfaapstid, #资料过账者
   #    sfaapstdt LIKE sfaa_t.sfaapstdt, #资料过账日
   #    sfaastus LIKE sfaa_t.sfaastus, #状态码
   #    sfaasite LIKE sfaa_t.sfaasite, #营运据点
   #    sfaadocno LIKE sfaa_t.sfaadocno, #单号
   #    sfaadocdt LIKE sfaa_t.sfaadocdt, #单据日期
   #    sfaa001 LIKE sfaa_t.sfaa001, #变更版本
   #    sfaa002 LIKE sfaa_t.sfaa002, #生管人员
   #    sfaa003 LIKE sfaa_t.sfaa003, #工单类型
   #    sfaa004 LIKE sfaa_t.sfaa004, #发料制度
   #    sfaa005 LIKE sfaa_t.sfaa005, #工单来源
   #    sfaa006 LIKE sfaa_t.sfaa006, #来源单号
   #    sfaa007 LIKE sfaa_t.sfaa007, #来源项次
   #    sfaa008 LIKE sfaa_t.sfaa008, #来源项序
   #    sfaa009 LIKE sfaa_t.sfaa009, #参考客户
   #    sfaa010 LIKE sfaa_t.sfaa010, #生产料号
   #    sfaa011 LIKE sfaa_t.sfaa011, #特性
   #    sfaa012 LIKE sfaa_t.sfaa012, #生产数量
   #    sfaa013 LIKE sfaa_t.sfaa013, #生产单位
   #    sfaa014 LIKE sfaa_t.sfaa014, #BOM版本
   #    sfaa015 LIKE sfaa_t.sfaa015, #BOM有效日期
   #    sfaa016 LIKE sfaa_t.sfaa016, #工艺编号
   #    sfaa017 LIKE sfaa_t.sfaa017, #部门供应商
   #    sfaa018 LIKE sfaa_t.sfaa018, #协作据点
   #    sfaa019 LIKE sfaa_t.sfaa019, #预计开工日
   #    sfaa020 LIKE sfaa_t.sfaa020, #预计完工日
   #    sfaa021 LIKE sfaa_t.sfaa021, #母工单单号
   #    sfaa022 LIKE sfaa_t.sfaa022, #参考原始单号
   #    sfaa023 LIKE sfaa_t.sfaa023, #参考原始项次
   #    sfaa024 LIKE sfaa_t.sfaa024, #参考原始项序
   #    sfaa025 LIKE sfaa_t.sfaa025, #前工单单号
   #    sfaa026 LIKE sfaa_t.sfaa026, #料表批号(PBI)
   #    sfaa027 LIKE sfaa_t.sfaa027, #No Use
   #    sfaa028 LIKE sfaa_t.sfaa028, #项目编号
   #    sfaa029 LIKE sfaa_t.sfaa029, #WBS
   #    sfaa030 LIKE sfaa_t.sfaa030, #活动
   #    sfaa031 LIKE sfaa_t.sfaa031, #理由码
   #    sfaa032 LIKE sfaa_t.sfaa032, #紧急比率
   #    sfaa033 LIKE sfaa_t.sfaa033, #优先级
   #    sfaa034 LIKE sfaa_t.sfaa034, #预计入库库位
   #    sfaa035 LIKE sfaa_t.sfaa035, #预计入库储位
   #    sfaa036 LIKE sfaa_t.sfaa036, #手册编号
   #    sfaa037 LIKE sfaa_t.sfaa037, #保税核准文号
   #    sfaa038 LIKE sfaa_t.sfaa038, #保税核销
   #    sfaa039 LIKE sfaa_t.sfaa039, #备料已生成
   #    sfaa040 LIKE sfaa_t.sfaa040, #生产工艺路线已审核
   #    sfaa041 LIKE sfaa_t.sfaa041, #冻结
   #    sfaa042 LIKE sfaa_t.sfaa042, #返工
   #    sfaa043 LIKE sfaa_t.sfaa043, #备置
   #    sfaa044 LIKE sfaa_t.sfaa044, #FQC
   #    sfaa045 LIKE sfaa_t.sfaa045, #实际开始发料日
   #    sfaa046 LIKE sfaa_t.sfaa046, #最后入库日
   #    sfaa047 LIKE sfaa_t.sfaa047, #生管结案日
   #    sfaa048 LIKE sfaa_t.sfaa048, #成本结案日
   #    sfaa049 LIKE sfaa_t.sfaa049, #已发料套数
   #    sfaa050 LIKE sfaa_t.sfaa050, #已入库合格量
   #    sfaa051 LIKE sfaa_t.sfaa051, #已入库不合格量
   #    sfaa052 LIKE sfaa_t.sfaa052, #Bouns
   #    sfaa053 LIKE sfaa_t.sfaa053, #工单转入数量
   #    sfaa054 LIKE sfaa_t.sfaa054, #工单转出数量
   #    sfaa055 LIKE sfaa_t.sfaa055, #下线数量
   #    sfaa056 LIKE sfaa_t.sfaa056, #报废数量
   #    sfaa057 LIKE sfaa_t.sfaa057, #委外类型
   #    sfaa058 LIKE sfaa_t.sfaa058, #参考数量
   #    sfaa059 LIKE sfaa_t.sfaa059, #预计入库批号
   #    sfaa060 LIKE sfaa_t.sfaa060, #参考单位
   #    sfaa061 LIKE sfaa_t.sfaa061, #工艺
   #    sfaa062 LIKE sfaa_t.sfaa062, #纳入APS计算
   #    sfaa063 LIKE sfaa_t.sfaa063, #来源分批序
   #    sfaa064 LIKE sfaa_t.sfaa064, #参考原始分批序
   #    sfaa065 LIKE sfaa_t.sfaa065, #生管结案状态
   #    sfaa066 LIKE sfaa_t.sfaa066, #多角流程编号
   #    sfaa067 LIKE sfaa_t.sfaa067, #多角流进程号
   #    sfaa068 LIKE sfaa_t.sfaa068, #成本中心
   #    sfaa069 LIKE sfaa_t.sfaa069, #可供给量
   #    sfaa070 LIKE sfaa_t.sfaa070, #原始预计完工日期
   #    sfaa071 LIKE sfaa_t.sfaa071, #齐料套数
   #    sfaa072 LIKE sfaa_t.sfaa072  #保税否
   #END RECORD
   ##161124-00048#20 add(e)
   #170605-00013#1-e-mark
   DEFINE l_close         LIKE type_t.chr1
   DEFINE l_date          LIKE type_t.dat
   #170617-00245#1 add(s)
   DEFINE l_str  STRING
   DEFINE l_str1 STRING
   DEFINE l_str2 STRING
   DEFINE l_str3 STRING
   DEFINE i               LIKE type_t.num10
   #170617-00245#1 add(e)
   DEFINE l_cnt           LIKE type_t.num10  #200120-00015#1
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET l_date = g_edate + 1
   
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME
   #161121-00018#5---add---s
   IF g_sys_6003 = 'Y' THEN 
      CALL s_axcp500_avg_wip_process('N',p_xcbb006,p_seq)
   ELSE
   #161121-00018#5---add---s    
      #元件投入
      CALL s_axcp500_avg1_wip_2_2('N',p_xcbb006,p_seq)
           RETURNING l_success
   
      LET g_sfaa028 = NULL   #wujie 160522   #g_sfaa028 要定义在azzi908里


      #找主件为此成本阶的一般在制的工单单头（排除重工和拆件）
      FOREACH s_axcp500_avg1_wip_cs1 USING p_xcbb006
#                                      INTO l_sfaa.*,g_gywwrk   #add zhangllc 160131 add g_gywwrk   #190513-00024#1 mark
                                      #190513-00024#1 add-S
                                      INTO l_sfaa.sfaaent,l_sfaa.sfaasite,l_sfaa.sfaadocno,l_sfaa.sfaadocdt,l_sfaa.sfaa003,l_sfaa.sfaa010,l_sfaa.sfaa011,l_sfaa.sfaa012,
                                           l_sfaa.sfaa013,l_sfaa.sfaa028,l_sfaa.sfaa042,l_sfaa.sfaa048,l_sfaa.sfaa057,g_gywwrk
                                      #190513-00024#1 add-E
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = 'FOREACH s_axcp500_avg1_wip_cs1'
            LET g_errparam.popup  = TRUE
            CALL cl_err()   
            CONTINUE FOREACH    
         END IF
   
   #wujie 160522 --begin
         IF cl_null(l_sfaa.sfaa028) THEN
            LET g_sfaa028 = ' '   #g_sfaa028是s_axcp500_get_xccd里用的，给空格是为了和别的地方调用s_axcp500_get_xccd区分开，其他地方都是null，唯有这里是空格
         ELSE
            LET g_sfaa028 = l_sfaa.sfaa028    
         END IF
   #wujie 160522 --end
   
         IF g_bgjob <> "Y" THEN      
            LET g_mesg = g_stat_msg.msg2 CLIPPED,p_xcbb006 USING "<<&",g_stat_msg.msg4 CLIPPED,':',l_sfaa.sfaadocno
            #170617-00245#1 add(s)
            LET i = 60
            LET l_str = g_mesg
            LET l_str2 = l_str
            WHILE l_str2.getLength()>60 
               LET l_str1 = l_str.subString(1,i)
               LET l_str2 = l_str.subString(i+1,l_str.getLength())
               LET l_str = l_str1,'\n',l_str2
               LET i = i+60+2   #加上\n的两个字符
            END WHILE  
            CALL cl_progress_no_window_ing(l_str)             
            #170617-00245#1 add(e)
            #CALL cl_progress_no_window_ing(g_mesg)   #170617-00245#1 mark
         END IF   
   
         CALL s_axcp500_get_xccd(p_seq,l_sfaa.sfaasite,l_sfaa.sfaadocno,'','','','',l_sfaa.sfaa010)
              RETURNING g_xccd.* 
          
         #STEP -3 取当期的人工/加工/制费
         CALL s_axcp500_wip_2_3()
              RETURNING l_success   
      
         #STEP -4 取当期的在制成本调整
         #200120-00015#1---add---s
         LET l_cnt = 0
         EXECUTE s_axcp500_avg1_chk_xccp_p USING p_seq,l_sfaa.sfaadocno INTO l_cnt 
         IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF 
         IF l_cnt > 0 THEN 
         #200120-00015#1---add---e
            CALL s_axcp500_wip_2_4()
                 RETURNING l_success   
         END IF  #200120-00015#1 add 
   
         LET g_sfaa028 = NULL  #wujie 160522
         LET g_stat_cnt = g_stat_cnt + 1
      END FOREACH
      
      #转出逻辑-2
      CALL s_axcp500_avg1_wip_4_2('N',p_xcbb006,p_seq)
           RETURNING l_success   
   END IF  
   #161121-00018#5        
   #xccd=SUM(xcce)
   CALL s_axcp500_avg1_wip_5(p_xcbb006,p_seq)
        RETURNING l_success   
        
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(3,g_stat_begin,g_stat_end,g_stat_cnt)   
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 产生xccd
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
#   DEFINE l_sfaa          RECORD LIKE sfaa_t.*  #161124-00048#20 mark
   DEFINE l_sfaa          type_g_sfaa  #170605-00013#1-add
   #170605-00013#1-s-mark 改用type方式
   ##161124-00048#20 add(s)
   #DEFINE l_sfaa RECORD  #工單單頭檔
   #    sfaaent LIKE sfaa_t.sfaaent, #企业编号
   #    sfaaownid LIKE sfaa_t.sfaaownid, #资料所有者
   #    sfaaowndp LIKE sfaa_t.sfaaowndp, #资料所有部门
   #    sfaacrtid LIKE sfaa_t.sfaacrtid, #资料录入者
   #    sfaacrtdp LIKE sfaa_t.sfaacrtdp, #资料录入部门
   #    sfaacrtdt LIKE sfaa_t.sfaacrtdt, #资料创建日
   #    sfaamodid LIKE sfaa_t.sfaamodid, #资料更改者
   #    sfaamoddt LIKE sfaa_t.sfaamoddt, #最近更改日
   #    sfaacnfid LIKE sfaa_t.sfaacnfid, #资料审核者
   #    sfaacnfdt LIKE sfaa_t.sfaacnfdt, #数据审核日
   #    sfaapstid LIKE sfaa_t.sfaapstid, #资料过账者
   #    sfaapstdt LIKE sfaa_t.sfaapstdt, #资料过账日
   #    sfaastus LIKE sfaa_t.sfaastus, #状态码
   #    sfaasite LIKE sfaa_t.sfaasite, #营运据点
   #    sfaadocno LIKE sfaa_t.sfaadocno, #单号
   #    sfaadocdt LIKE sfaa_t.sfaadocdt, #单据日期
   #    sfaa001 LIKE sfaa_t.sfaa001, #变更版本
   #    sfaa002 LIKE sfaa_t.sfaa002, #生管人员
   #    sfaa003 LIKE sfaa_t.sfaa003, #工单类型
   #    sfaa004 LIKE sfaa_t.sfaa004, #发料制度
   #    sfaa005 LIKE sfaa_t.sfaa005, #工单来源
   #    sfaa006 LIKE sfaa_t.sfaa006, #来源单号
   #    sfaa007 LIKE sfaa_t.sfaa007, #来源项次
   #    sfaa008 LIKE sfaa_t.sfaa008, #来源项序
   #    sfaa009 LIKE sfaa_t.sfaa009, #参考客户
   #    sfaa010 LIKE sfaa_t.sfaa010, #生产料号
   #    sfaa011 LIKE sfaa_t.sfaa011, #特性
   #    sfaa012 LIKE sfaa_t.sfaa012, #生产数量
   #    sfaa013 LIKE sfaa_t.sfaa013, #生产单位
   #    sfaa014 LIKE sfaa_t.sfaa014, #BOM版本
   #    sfaa015 LIKE sfaa_t.sfaa015, #BOM有效日期
   #    sfaa016 LIKE sfaa_t.sfaa016, #工艺编号
   #    sfaa017 LIKE sfaa_t.sfaa017, #部门供应商
   #    sfaa018 LIKE sfaa_t.sfaa018, #协作据点
   #    sfaa019 LIKE sfaa_t.sfaa019, #预计开工日
   #    sfaa020 LIKE sfaa_t.sfaa020, #预计完工日
   #    sfaa021 LIKE sfaa_t.sfaa021, #母工单单号
   #    sfaa022 LIKE sfaa_t.sfaa022, #参考原始单号
   #    sfaa023 LIKE sfaa_t.sfaa023, #参考原始项次
   #    sfaa024 LIKE sfaa_t.sfaa024, #参考原始项序
   #    sfaa025 LIKE sfaa_t.sfaa025, #前工单单号
   #    sfaa026 LIKE sfaa_t.sfaa026, #料表批号(PBI)
   #    sfaa027 LIKE sfaa_t.sfaa027, #No Use
   #    sfaa028 LIKE sfaa_t.sfaa028, #项目编号
   #    sfaa029 LIKE sfaa_t.sfaa029, #WBS
   #    sfaa030 LIKE sfaa_t.sfaa030, #活动
   #    sfaa031 LIKE sfaa_t.sfaa031, #理由码
   #    sfaa032 LIKE sfaa_t.sfaa032, #紧急比率
   #    sfaa033 LIKE sfaa_t.sfaa033, #优先级
   #    sfaa034 LIKE sfaa_t.sfaa034, #预计入库库位
   #    sfaa035 LIKE sfaa_t.sfaa035, #预计入库储位
   #    sfaa036 LIKE sfaa_t.sfaa036, #手册编号
   #    sfaa037 LIKE sfaa_t.sfaa037, #保税核准文号
   #    sfaa038 LIKE sfaa_t.sfaa038, #保税核销
   #    sfaa039 LIKE sfaa_t.sfaa039, #备料已生成
   #    sfaa040 LIKE sfaa_t.sfaa040, #生产工艺路线已审核
   #    sfaa041 LIKE sfaa_t.sfaa041, #冻结
   #    sfaa042 LIKE sfaa_t.sfaa042, #返工
   #    sfaa043 LIKE sfaa_t.sfaa043, #备置
   #    sfaa044 LIKE sfaa_t.sfaa044, #FQC
   #    sfaa045 LIKE sfaa_t.sfaa045, #实际开始发料日
   #    sfaa046 LIKE sfaa_t.sfaa046, #最后入库日
   #    sfaa047 LIKE sfaa_t.sfaa047, #生管结案日
   #    sfaa048 LIKE sfaa_t.sfaa048, #成本结案日
   #    sfaa049 LIKE sfaa_t.sfaa049, #已发料套数
   #    sfaa050 LIKE sfaa_t.sfaa050, #已入库合格量
   #    sfaa051 LIKE sfaa_t.sfaa051, #已入库不合格量
   #    sfaa052 LIKE sfaa_t.sfaa052, #Bouns
   #    sfaa053 LIKE sfaa_t.sfaa053, #工单转入数量
   #    sfaa054 LIKE sfaa_t.sfaa054, #工单转出数量
   #    sfaa055 LIKE sfaa_t.sfaa055, #下线数量
   #    sfaa056 LIKE sfaa_t.sfaa056, #报废数量
   #    sfaa057 LIKE sfaa_t.sfaa057, #委外类型
   #    sfaa058 LIKE sfaa_t.sfaa058, #参考数量
   #    sfaa059 LIKE sfaa_t.sfaa059, #预计入库批号
   #    sfaa060 LIKE sfaa_t.sfaa060, #参考单位
   #    sfaa061 LIKE sfaa_t.sfaa061, #工艺
   #    sfaa062 LIKE sfaa_t.sfaa062, #纳入APS计算
   #    sfaa063 LIKE sfaa_t.sfaa063, #来源分批序
   #    sfaa064 LIKE sfaa_t.sfaa064, #参考原始分批序
   #    sfaa065 LIKE sfaa_t.sfaa065, #生管结案状态
   #    sfaa066 LIKE sfaa_t.sfaa066, #多角流程编号
   #    sfaa067 LIKE sfaa_t.sfaa067, #多角流进程号
   #    sfaa068 LIKE sfaa_t.sfaa068, #成本中心
   #    sfaa069 LIKE sfaa_t.sfaa069, #可供给量
   #    sfaa070 LIKE sfaa_t.sfaa070, #原始预计完工日期
   #    sfaa071 LIKE sfaa_t.sfaa071, #齐料套数
   #    sfaa072 LIKE sfaa_t.sfaa072  #保税否
   #END RECORD
   ##161124-00048#20 add(e)
   #170605-00013#1-e-mark
   DEFINE l_date          DATETIME YEAR TO SECOND

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()
   
   #add zhangllc 160529 SBS3--s

   CREATE INDEX s_axcp500_tmp_i02 ON s_axcp500_tmp(imaa001) #ODI-ORA#
   IF cl_db_generate_analyze("s_axcp500_tmp") THEN END IF

   CREATE INDEX sfaa_tmp_i01 ON sfaa_tmp(sfaa010) #ODI-ORA#
   IF cl_db_generate_analyze("sfaa_tmp") THEN END IF
   #add zhangllc 160529 SBS3--e
   
   #整批INSERT xccd_t
   LET g_sql = "INSERT INTO xccd_tmp (xccdent ,xccdcomp,xccdld  ,xccd001 ,xccd002 ,",
               "                      xccd003 ,xccd004 ,xccd005 ,xccd006 ,xccd007 ,",
               "                      xccd008 ,xccd009 ,xccd010 ,xccd011 ,xccd012 ,",
               "                      xccd013 ,xccd014 ,                           ",
               "                      xccd101 ,xccd102 ,xccd102a,xccd102b,xccd102c,",
               "                      xccd102d,xccd102e,xccd102f,xccd102g,xccd102h,",
               "                      xccd200 ,                                    ",
               "                      xccd201 ,xccd202 ,xccd202a,xccd202b,xccd202c,",
               "                      xccd202d,xccd202e,xccd202f,xccd202g,xccd202h,",
               "                      xccd204 ,xccd204a,xccd204b,xccd204c,         ",
               "                      xccd204d,xccd204e,xccd204f,xccd204g,xccd204h,",
               "                      xccd301 ,xccd302 ,xccd302a,xccd302b,xccd302c,",
               "                      xccd302d,xccd302e,xccd302f,xccd302g,xccd302h,",
               "                      xccd303 ,xccd304 ,xccd304a,xccd304b,xccd304c,",
               "                      xccd304d,xccd304e,xccd304f,xccd304g,xccd304h,",
               "                      xccd901 ,xccd902 ,xccd902a,xccd902b,xccd902c,",
               "                      xccd902d,xccd902e,xccd902f,xccd902g,xccd902h,",
               "                      xccdtime)                                    ",              
              #" SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",                    #161114-00003#1 mark
               #" SELECT /*+ PARALLEL(4) */ UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',", #161114-00003#1 add  #170110-00028#1              
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",  #170110-00028#1              
                "      '",g_xcat001,"',",g_yy,",",g_pp,",sfaadocno,sfaa010,",
                "      ' ',' ',sfaa028,'",g_curr[p_seq].curr,"','N',",
                #"      sfac006,' ',sfaa028,'",g_curr[p_seq].curr,"','N',", #mod zhangllc 150804
                "      '','',",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      ? ",
                #190411-00017#1 A mark-S
#                "  FROM sfaa_tmp,s_axcp500_tmp ",
#                #"  FROM sfaa_tmp,sfac_tmp,s_axcp500_tmp ",  #mod zhangllc 150804
#               " WHERE sfaa010 = imaa001 ",                           #料件
#               #"   AND sfacent = sfaaent AND sfacdocno = sfaadocno AND sfac006 = xccc007 ", #add zhangllc 150804
##              "   AND ",g_wc,
##              "   AND sfaa003 <> '4' ",                              #研发工单
#               "   AND sfaa003 <> '3'  "                              #拆件工单
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
                "  FROM sfaa_tmp ",
               " WHERE sfaa003 <> '3'  ",
               "   AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE sfaa010 = imaa001) "               
               #190411-00017#1 A add-E               

   PREPARE s_axcp500_avg1_wip_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_1_p1 USING l_date


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #161010-00010#1 add--s 先更新下，以防后面再根据上期的xccd写入时因为成本域的不同，又写入一笔xccd，以致xccd重复存在，以致后面更新成本域时报重复
   #（从下面的更新成本域游标s_axcp500_avg1_wip_1_p3复制过来，下面的更新成本域也不取消，以便及时发现问题，让问题检查难度缩小，若仍报-268违反唯一限制，则可能axci150的成本域设置有变动的原因导致）
   #处理xccd002
   #成本域
   IF g_field_type = '1' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xccd_tmp a ",
                  "       USING (SELECT sfaadocno,xcbf001 FROM sfaa_tmp,xcbf_t ",
                  "               WHERE xcbfent = ",g_enterprise,
                  "                 AND xcbfcomp = '",g_comp,"'",
                  "                 AND xcbf002 = sfaasite ) b ",
                  "       ON ( a.xccd006 = b.sfaadocno ) ",
                  "  WHEN MATCHED THEN ",
                  "       UPDATE SET a.xccd002 = b.xcbf001 ",
                  "        WHERE a.xccd012 = 'N' "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_wip_1_p03 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p03"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
      EXECUTE s_axcp500_avg1_wip_1_p03 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p03"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
    
      UPDATE xccd_tmp SET xccd002 = ' ' 
       WHERE xccd002 IS NULL
   END IF
   #161010-00010#1 add--e

   #repeat mark 20150424
   #根据inaj中inaj040不空的工单号等insert xccd_tmp


   #更新期初资料 - 上期的xccd
   #mark 151116 zhangllc --begin
   #LET g_sql = " MERGE INTO xccd_tmp a   ",
   #            "       USING xccd_t b    ",
   #            "          ON ( a.xccdent = b.xccdent         ",
   #            "          AND  a.xccdld  = b.xccdld          ",
   #            "          AND  a.xccd001 = b.xccd001         ",
   #            "          AND  a.xccd002 = b.xccd002         ",
   #            "          AND  a.xccd003 = b.xccd003         ",
   #            "          AND  a.xccd006 = b.xccd006 )       ",
   #            "  WHEN MATCHED THEN                          ",
   #            "       UPDATE SET a.xccd101  = nvl(b.xccd901 ,0) ,   ",
   #            "                  a.xccd102  = nvl(b.xccd902 ,0) ,   ",
   #            "                  a.xccd102a = nvl(b.xccd902a,0) ,   ",    
   #            "                  a.xccd102b = nvl(b.xccd902b,0) ,   ",    
   #            "                  a.xccd102c = nvl(b.xccd902c,0) ,   ",    
   #            "                  a.xccd102d = nvl(b.xccd902d,0) ,   ",    
   #            "                  a.xccd102e = nvl(b.xccd902e,0) ,   ",    
   #            "                  a.xccd102f = nvl(b.xccd902f,0) ,   ",    
   #            "                  a.xccd102g = nvl(b.xccd902g,0) ,   ",    
   #            "                  a.xccd102h = nvl(b.xccd902h,0) ,   ",
   #            "                  a.xccd901  = nvl(b.xccd901 ,0) ,   ",
   #            "                  a.xccd902  = nvl(b.xccd902 ,0) ,   ",
   #            "                  a.xccd902a = nvl(b.xccd902a,0) ,   ",    
   #            "                  a.xccd902b = nvl(b.xccd902b,0) ,   ",    
   #            "                  a.xccd902c = nvl(b.xccd902c,0) ,   ",    
   #            "                  a.xccd902d = nvl(b.xccd902d,0) ,   ",    
   #            "                  a.xccd902e = nvl(b.xccd902e,0) ,   ",    
   #            "                  a.xccd902f = nvl(b.xccd902f,0) ,   ",    
   #            "                  a.xccd902g = nvl(b.xccd902g,0) ,   ",    
   #            "                  a.xccd902h = nvl(b.xccd902h,0)     ",               
   #            "        WHERE b.xccd004 = ",g_last_yy,
   #            "          AND b.xccd005 = ",g_last_pp,  
   #            "          AND b.xccd012 = 'N' ",               
   #            "  WHEN NOT MATCHED THEN                      ",
   #            "       INSERT VALUES(b.xccdent,b.xccdcomp,b.xccdld, b.xccd001,b.xccd002,    ",  
   #            "                     b.xccd003,",g_yy,",",g_pp,",b.xccd006,b.xccd007,    ",
   #            "                     b.xccd008,b.xccd009, b.xccd010,b.xccd011,b.xccd012,    ",
   #            "                     b.xccd013,b.xccd014,                                   ",
   #            "                     b.xccd901,b.xccd902,b.xccd902a,b.xccd902b,b.xccd902c,  ",    #101.期初  
   #            "                     b.xccd902d,b.xccd902e,b.xccd902f,b.xccd902g,b.xccd902h,",
   #            "                     0,                                          ",               #200.本期投入工时
   #            "                     0,0,0,0,0,0,0,0,0,0,                        ",               #201.本期本阶投入
   #            "                     0,0,0,0,0,0,0,0,0,                          ",               #204.本期下阶投入
   #            "                     0,0,0,0,0,0,0,0,0,0,                        ",               #301.本期转出
   #            "                     0,0,0,0,0,0,0,0,0,0,                        ",               #303.差异转出
   #            "                     b.xccd901,b.xccd902,b.xccd902a,b.xccd902b,b.xccd902c,  ",    #901.期末结存
   #            "                     b.xccd902d,b.xccd902e,b.xccd902f,b.xccd902g,b.xccd902h,",
   #            "                     '' )                                        ",               #最近成本计算时间                       
   #            "        WHERE b.xccd007 IN (SELECT imaa001 FROM s_axcp500_tmp ) ",
   #            #"        WHERE (b.xccd007,b.xccd008) IN (SELECT imaa001,xccc007 FROM s_axcp500_tmp ) ",  #Mod zhangllc 150804
   #            "          AND b.xccdent = ",g_enterprise,
   #            "          AND b.xccdld  = '",g_ld,"'",
   #            "          AND b.xccd001 = '",p_seq,"'",
   #            "          AND b.xccd003 = '",g_xcat001,"'",
   #            "          AND b.xccd004 = ",g_last_yy,
   #            "          AND b.xccd005 = ",g_last_pp,
   #            "          AND b.xccd012 = 'N' ",
   #            "          AND (b.xccd901 <> 0 OR b.xccd902 <> 0 ) "   
   #mark 151116 zhangllc --end
   #add 151116 zhangllc --begin
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp a   ",
               "       USING (SELECT * FROM xccd_t ",
               "               WHERE xccdent = ",g_enterprise,
               "                 AND xccd007 IN (SELECT imaa001 FROM s_axcp500_tmp ) ",
               "                 AND xccdld  = '",g_ld,"'",
               "                 AND xccd001 = '",p_seq,"'",
               "                 AND xccd003 = '",g_xcat001,"'",
               "                 AND xccd004 = ",g_last_yy,
               "                 AND xccd005 = ",g_last_pp,
               "                 AND xccd012 = 'N' ",
               "                 AND (xccd901 <> 0 OR xccd902 <> 0 ) " ,
               "             ) b    ",
               "          ON ( a.xccdent = b.xccdent         ",
               "          AND  a.xccdld  = b.xccdld          ",
               "          AND  a.xccd001 = b.xccd001         ",
               "          AND  a.xccd002 = b.xccd002         ",
               "          AND  a.xccd003 = b.xccd003         ",
               "          AND  a.xccd006 = b.xccd006 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccd101  = nvl(b.xccd901 ,0) ,   ",
               "                  a.xccd102  = nvl(b.xccd902 ,0) ,   ",
               "                  a.xccd102a = nvl(b.xccd902a,0) ,   ",    
               "                  a.xccd102b = nvl(b.xccd902b,0) ,   ",    
               "                  a.xccd102c = nvl(b.xccd902c,0) ,   ",    
               "                  a.xccd102d = nvl(b.xccd902d,0) ,   ",    
               "                  a.xccd102e = nvl(b.xccd902e,0) ,   ",    
               "                  a.xccd102f = nvl(b.xccd902f,0) ,   ",    
               "                  a.xccd102g = nvl(b.xccd902g,0) ,   ",    
               "                  a.xccd102h = nvl(b.xccd902h,0) ,   ",
               "                  a.xccd901  = nvl(b.xccd901 ,0) ,   ",
               "                  a.xccd902  = nvl(b.xccd902 ,0) ,   ",
               "                  a.xccd902a = nvl(b.xccd902a,0) ,   ",    
               "                  a.xccd902b = nvl(b.xccd902b,0) ,   ",    
               "                  a.xccd902c = nvl(b.xccd902c,0) ,   ",    
               "                  a.xccd902d = nvl(b.xccd902d,0) ,   ",    
               "                  a.xccd902e = nvl(b.xccd902e,0) ,   ",    
               "                  a.xccd902f = nvl(b.xccd902f,0) ,   ",    
               "                  a.xccd902g = nvl(b.xccd902g,0) ,   ",    
               "                  a.xccd902h = nvl(b.xccd902h,0)     ",              
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccdent,b.xccdcomp,b.xccdld, b.xccd001,b.xccd002,    ",  
               "                     b.xccd003,",g_yy,",",g_pp,",b.xccd006,b.xccd007,    ",
               "                     b.xccd008,b.xccd009, b.xccd010,b.xccd011,b.xccd012,    ",
               "                     b.xccd013,b.xccd014,                                   ",
               "                     b.xccd901,b.xccd902,b.xccd902a,b.xccd902b,b.xccd902c,  ",    #101.期初  
               "                     b.xccd902d,b.xccd902e,b.xccd902f,b.xccd902g,b.xccd902h,",
               "                     0,                                          ",               #200.本期投入工时
               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #201.本期本阶投入
               "                     0,0,0,0,0,0,0,0,0,                          ",               #204.本期下阶投入
               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #303.差异转出
               "                     b.xccd901,b.xccd902,b.xccd902a,b.xccd902b,b.xccd902c,  ",    #901.期末结存
               "                     b.xccd902d,b.xccd902e,b.xccd902f,b.xccd902g,b.xccd902h,",
               "                     '',0 )                                        "                #最近成本计算时间  #210125-00026#1 add 0
   #PGS(D)-00824 --- end ---
   #add 151116 zhangllc --end 
   
   PREPARE s_axcp500_avg1_wip_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_1_p2


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #170315-00026#1---add---s
   #从上期的xccb中结转期初值
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp a   ",
               "       USING ( SELECT xccb_t.*,sfaa010,sfaa028 FROM xccb_t,sfaa_tmp ",
               "                WHERE xccbent = sfaaent ",
               "                  AND xccb006 = sfaadocno ",
               "                  AND xccbent = ",g_enterprise,
               "                  AND xccbld  = '",g_ld,"'",
               "                  AND xccb001 = '",p_seq,"'",
               "                  AND xccb003 = '",g_xcat001,"'",
               "                  AND xccb004 = ",g_last_yy,
               "                  AND xccb005 = ",g_last_pp,
               "                  AND sfaa003 <> '3' ",  #181101-00027#1 add
               "                  AND xccb007 = 'DL+OH+SUB' ",
               "              ) b    ",
               "          ON ( a.xccdent = b.xccbent         ",
               "          AND  a.xccdld  = b.xccbld          ",
               "          AND  a.xccd001 = b.xccb001         ",
               "          AND  a.xccd002 = b.xccb002         ",
               "          AND  a.xccd003 = b.xccb003         ",
               "          AND  a.xccd006 = b.xccb006 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccd101  = nvl(b.xccb101 ,0)    ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccbent,b.xccbcomp,b.xccbld, b.xccb001,b.xccb002,    ",
               "                     b.xccb003,",g_yy,",",g_pp,",b.xccb006,b.sfaa010,       ",
               "                     ' ',' ',b.sfaa028,'",g_curr[p_seq].curr,"','N',        ",
               "                     '','',                                                 ",
               "                     b.xccb101,0,0,0,0,0,0,0,0,0,                           ",    #101.期初
               "                     0,                                                     ",    #200.本期投入工时
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期本阶投入
               "                     0,0,0,0,0,0,0,0,0,                                     ",    #204.本期下阶投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #901.期末结存
               "                     '',0 )                                        "                #最近成本计算时间  #210125-00026#1 add 0
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_1_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_1_p7


   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   #170315-00026#1---add---e
   
   #处理xccd002
   #成本域
   IF g_field_type = '1' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xccd_tmp a ",
                  "       USING (SELECT sfaadocno,xcbf001 FROM sfaa_tmp,xcbf_t ",
                  "               WHERE xcbfent = ",g_enterprise,
                  "                 AND xcbfcomp = '",g_comp,"'",
                  "                 AND xcbf002 = sfaasite ) b ",
                  "       ON ( a.xccd006 = b.sfaadocno ) ",
                  "  WHEN MATCHED THEN ",
                  "       UPDATE SET a.xccd002 = b.xcbf001 ",
                  "        WHERE a.xccd012 = 'N' "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_wip_1_p3 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg1_wip_1_p3 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
    
      UPDATE xccd_tmp SET xccd002 = ' ' 
       WHERE xccd002 IS NULL
   END IF



   #取xccd200 (本期投入工時)
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp ",
               "       USING (SELECT xcbi002,SUM(xcbi201) xcbi201 ",
               "                FROM xcbh_t,xcbi_t     ",   
               "               WHERE xcbhent   = xcbient AND xcbient = ",g_enterprise,
               "                 AND xcbhdocno = xcbidocno ",
               "                 AND xcbh001   BETWEEN '",g_bdate,"' AND '",g_edate,"'",
               "                 AND xcbhstus  = 'Y' ",
               "               GROUP BY xcbi002 ) b",
               "          ON ( b.xcbi002 = xccd006 ) ",          
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccd200  = nvl(b.xcbi201,0)  ",
               "      WHERE xccd012 = 'N' "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_1_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_1_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF      


   #取xccd301(本期轉出數量)

   DROP TABLE s_axcp500_wip_tmp1; #ODI-ORA#
   #LET g_sql = " SELECT inajsite,inaj020,sfaa010,inaj005,SUM(inaj011*inaj014*-1) qty,100.000000 xcbp006 FROM sfaa_tmp,inaj_tmp ",   #160518-00033#2  mark
   #LET g_sql = " SELECT inajsite,inaj020,sfaa010,inaj005,SUM(inaj011*inaj048/ inaj049*-1) qty,100.000000 xcbp006 FROM sfaa_tmp,inaj_tmp ",   #160518-00033#2 #170705-00006#1 mark
   #LET g_sql = " SELECT inajsite,inaj020,sfaa010,inaj005,SUM(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/ inaj049*-1 END)) qty,100.000000 xcbp006 FROM sfaa_tmp,inaj_tmp ", #170705-00006#1 add #210125-00026#1 mark
   #210125-00026#1---add---s
   LET g_sql = " SELECT inajsite,inaj020,sfaa010,inaj005,SUM(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/ inaj049*-1 END)) qty,0 xcbp006,0 rate ",
               "   FROM sfaa_tmp,inaj_tmp ",
   #210125-00026#1---add---e
               "  WHERE inaj036 IN ('110','111','112','113','103','104','105','106')",    #一般/联产品/多产出主件/拆件--/回收
               "    AND sfaaent   = inajent ",   #add 150916
               "    AND sfaasite  = inajsite ",  #add 151205
               "    AND sfaadocno = inaj020 ",
               "  GROUP BY inajsite,inaj020,sfaa010,inaj005 INTO TEMP s_axcp500_wip_tmp1"
   PREPARE s_axcp500_avg1_wip_1_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_1_p5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #161114-00003#1-s-add
   #b add by zwr 16.10.20 增加索引

   CREATE INDEX s_axcp500_wip_tp1 ON s_axcp500_wip_tmp1(inaj020,xcbp006);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX s_axcp500_wip_tp1" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   IF cl_db_generate_analyze("s_axcp500_wip_tmp1") THEN END IF   
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add 

   #170526-00032#1---add---s
   #对xccd301进行小数取位
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO s_axcp500_wip_tmp1 a",
               " USING (SELECT inajsite,inaj020,sfaa010,inaj005,(CASE WHEN ooca004 = 1 THEN round(round(COALESCE(qty,0),6),ooca002) " ,
               "                                                      WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(qty,0),6),ooca002),(2/power(10,ooca002)))=0 ",
               "                                                                                  THEN round(round(COALESCE(qty,0),6),ooca002) ",
               "                                                                                  ELSE round(round(COALESCE(qty,0),6),ooca002)-(-1/power(10,ooca002)) ",
               "                                                                              END )",
               "                                                      WHEN ooca004 = 3 THEN trunc(round(COALESCE(qty,0),6),ooca002)",
               "                                                      WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*qty,0),6)*power(10,ooca002))/power(10,ooca002)",
               "                                                  END ) n_qty ",
               "         FROM s_axcp500_wip_tmp1,imaa_t ",
               "         LEFT JOIN ooca_t ON oocaent = imaaent AND ooca001 = imaa006 ",
               "        WHERE inaj005 = imaa001 AND imaaent = '",g_enterprise,"') b",
               "    ON (a.inajsite=b.inajsite AND a.inaj020=b.inaj020 AND a.sfaa010=b.sfaa010 AND a.inaj005=b.inaj005)",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.qty = b.n_qty "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_1_p51 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p51"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_1_p51 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p51"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF       
   #170526-00032#1---add---e
   
   #取联产品入库比例
   #IF g_sys_6009 <> '1' THEN  #1.按入库比例
   IF g_sys_6009 <> '1' AND g_sys_6017 = 'Y' THEN  #1.按入库比例  #mod zhangllc 150717 聯產品入庫折算在制轉出數量不按分配率計算,那么在制转出数量在计算时联产品的转出数量不需要乘以分配率 
      
      #210125-00026#1---add---s
      UPDATE s_axcp500_wip_tmp1 SET xcbp006 = ( SELECT xcbp006 FROM xcbp_t
                                                 WHERE xcbpent  = g_enterprise
                                                   AND xcbpsite = inajsite
                                                   AND xcbp001  = g_yy
                                                   AND xcbp002  = g_pp
                                                   AND xcbp003  = sfaa010
                                                   AND xcbp004  = inaj005 )
       WHERE xcbp006 IS NULL OR xcbp006 = 0
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE s_axcp500_wip_tmp1 xcbp006_2"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF       
      #210125-00026#1---add---e
      UPDATE s_axcp500_wip_tmp1 SET xcbp006 = ( SELECT xcbo004 FROM xcbo_t
                                                 WHERE xcboent  = g_enterprise
                                                   AND xcbosite = inajsite
                                                   AND xcbo001  = sfaa010
                                                   AND xcbo002  = inaj005 )
       WHERE xcbp006 IS NULL OR xcbp006 = 0   #210125-00026#1                                                 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE s_axcp500_wip_tmp1 xcbp006_1"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF            
      
      #210125-00026#1---mark---s
      #UPDATE s_axcp500_wip_tmp1 SET xcbp006 = ( SELECT xcbp006 FROM xcbp_t
      #                                           WHERE xcbpent  = g_enterprise
      #                                             AND xcbpsite = inajsite
      #                                             AND xcbp001  = g_yy
      #                                             AND xcbp002  = g_pp
      #                                             AND xcbp003  = sfaa010
      #                                             AND xcbp004  = inaj005 )
      #IF SQLCA.sqlcode THEN
      #   INITIALIZE g_errparam TO NULL
      #   LET g_errparam.code   = SQLCA.sqlcode
      #   LET g_errparam.extend = "UPDATE s_axcp500_wip_tmp1 xcbp006_2"
      #   LET g_errparam.popup  = TRUE
      #   CALL cl_err()
#     #   RETURN r_success
      #END IF  
      #210125-00026#1---mark---e      
   END IF
   
   #210125-00026#1---add---s
   #取联产品入库比例
   IF g_sys_6009 = '2' THEN  
     UPDATE s_axcp500_wip_tmp1 SET rate = ( SELECT xcbp006 FROM xcbp_t
                                                 WHERE xcbpent  = g_enterprise
                                                   AND xcbpsite = inajsite
                                                   AND xcbp001  = g_yy
                                                   AND xcbp002  = g_pp
                                                   AND xcbp003  = sfaa010
                                                   AND xcbp004  = inaj005 )
                              WHERE rate IS NULL OR rate = 0                   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE s_axcp500_wip_tmp1 rate_2"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  

      UPDATE s_axcp500_wip_tmp1 SET rate = ( SELECT xcbo004 FROM xcbo_t
                                                 WHERE xcboent  = g_enterprise
                                                   AND xcbosite = inajsite
                                                   AND xcbo001  = sfaa010
                                                   AND xcbo002  = inaj005 )
                               WHERE rate IS NULL OR rate = 0                     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE s_axcp500_wip_tmp1 rate"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
      
      UPDATE s_axcp500_wip_tmp1 SET rate = 100 WHERE rate IS NULL OR rate = 0
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE s_axcp500_wip_tmp1 SET rate = 100"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF             
   END IF  
   #210125-00026#1---add---e
   
   UPDATE s_axcp500_wip_tmp1 SET xcbp006 = 100 WHERE xcbp006 IS NULL OR xcbp006 = 0
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE s_axcp500_wip_tmp1 SET xcbp006 = 100"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
      
   #更新xccd301本期转出数量（按联产品比例）
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp a ",
               #"       USING ( SELECT inaj020,SUM(qty * xcbp006 / 100) qty FROM s_axcp500_wip_tmp1 ",  #210125-00026#1 mark
               "       USING ( SELECT inaj020,SUM(qty * xcbp006 / 100) qty,SUM(qty * rate / 100) qty2 FROM s_axcp500_wip_tmp1 ",  #210125-00026#1
               "                GROUP BY inaj020 ) b",
               "          ON (a.xccd006 = b.inaj020 ) ",
               "       WHEN MATCHED THEN ",
               #"            UPDATE SET a.xccd301 = b.qty ", #210125-00026#1 mark
               "            UPDATE SET a.xccd301 = b.qty,", #210125-00026#1
               "                       a.xccd301p = b.qty2 ", #210125-00026#1
               "             WHERE a.xccd012 = 'N' "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_1_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_1_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   
   UPDATE xccd_tmp SET xccd301 = 0 WHERE xccd301 IS NULL
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd301 = 0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   
   
   #170504-00046#1--add---s
   #1.參數下拉選項改成1.結案月轉出、2.當月轉出，金額轉入庫存成本、3.當月轉出，金額轉至在製差異轉出
   #  a.抓取asft335的報廢數量(sffb018)，開工日期(sffb012)在該期別內的已確認之報工單，數量合計
   #  b.主件差異數量xccd303 = xccd303 + 合計的報廢數量 * (-1)
   #    参数为2时，报废金额转至入库金额上，参数为3时，报废金额转至差异金额上  #170504-00046#1 add
   #根据参数设定主件资料将报废的数量转入差异转出
   IF g_sys_6007 MATCHES '[23]' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xccd_tmp a  ",
                  "       USING ( SELECT sffbent,sffb005,SUM(qty) * (-1) sffb018",
                  "              FROM (",
                  #"                  SELECT DISTINCT sffbent,sffb005,COALESCE(sffb018 ,0) qty",   #191220-00003#1 mark 
                  "                  SELECT DISTINCT sffbent,sffbdocno,sffbseq,sffb005,COALESCE(sffb018 ,0) qty",   #191220-00003#1
                  "                  FROM sffb_t ",
                  "                  WHERE sffbent = ",g_enterprise,
                  "                    AND sffbstus = 'Y' AND sffb001 ='3' ",
                  "                    AND sffb012 >= '",g_bdate,"' ",
                  "                    AND sffb012 <= '",g_edate,"' ",
                  "                  ) ",
                  "               GROUP BY sffbent,sffb005) b",
                  "   ON ( a.xccd006 = b.sffb005 )  ",      #工单
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET a.xccd303  = a.xccd303 + b.sffb018 "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_wip_1_p8 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p8"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg1_wip_1_p8
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p8"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF                   
   END IF
   #170504-00046#1--add----e     
   
   #210303-00044#1---add---s
   #当斩下线的数量给差异转出
   IF g_sys_6003 ='Y' THEN
      LET g_sql = " MERGE INTO xccd_tmp a  ",
                  " USING (SELECT xcbt003,SUM(NVL(xcbt013,0))*(-1) xcbt013 ",
                  "          FROM xcbt_t ",
                  "         WHERE xcbtent = ",g_enterprise,
                  "           AND xcbt001 = ",g_yy,
                  "           AND xcbt002 = ",g_pp,
                  "         GROUP BY xcbt003 ",
                  "       ) b ",
                  "    ON ( a.xccd006 = b.xcbt003 ) ",
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET a.xccd303  = a.xccd303 + b.xcbt013 "
      PREPARE s_axcp500_avg1_wip_1_p9 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_1_p9"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF

      EXECUTE s_axcp500_avg1_wip_1_p9
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_1_p9"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
   END IF
   #210303-00044#1---add---e
   
   #材料投入套数 xccd201
   #UPDATE xccd_tmp SET xccd201 = ( SELECT xcbg004 * xcbg006 FROM xcbg_t      #170607-00058#1 mark
   UPDATE xccd_tmp SET xccd201 = ( SELECT xcbg004  FROM xcbg_t                #170607-00058#1 add
                                    WHERE xcbgent  = g_enterprise
                                      AND xcbgcomp = g_comp
                                      AND xcbg001  = g_yy
                                      AND xcbg002  = g_pp
                                      AND xcbg003  = xccd006 )
    WHERE xccd012 = 'N'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd201"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                    
                 
   UPDATE xccd_tmp SET xccd201 = 0 WHERE xccd201 IS NULL AND xccd012 = 'N'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd201 = 0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                    
             
  #UPDATE xccd_tmp SET xccd201 = (xccd301 * -1 - xccd101) WHERE (xccd201 + xccd101) < xccd301 * -1 AND xccd012 = 'N'   #210303-00044#1 mark
   UPDATE xccd_tmp SET xccd201 = ((xccd301+xccd303) * -1 - xccd101) WHERE (xccd201 + xccd101) < (xccd301+xccd303) * -1 AND xccd012 = 'N'   #210303-00044#1 add
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd201 = xccd301 * -1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    

   
   
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 产生xcce & xcce期初
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_2_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-01-28 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_2_1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()
   
   LET l_xcce010 = g_curr[p_seq].curr
   
   #整批插入xcce(各数量/金额为0)
   LET g_sql = "INSERT INTO xcce_tmp(xcceent,  xccecomp, xcceld,   xcce001,  xcce002, ",
               "                   xcce003,  xcce004,  xcce005,  xcce006,  xcce007, ",
               "                   xcce008,  xcce009,  xcce010,                     ",
               "                   xcce101,  xcce102,  xcce102a, xcce102b, xcce102c,",
               "                   xcce102d, xcce102e, xcce102f, xcce102g, xcce102h,",
               "                   xcce201,  xcce202,  xcce202a, xcce202b, xcce202c,",
               "                   xcce202d, xcce202e, xcce202f, xcce202g, xcce202h,",
               "                   xcce205,  xcce206,  xcce206a, xcce206b, xcce206c,",
               "                   xcce206d, xcce206e, xcce206f, xcce206g, xcce206h,",
               "                   xcce207,  xcce208,  xcce208a, xcce208b, xcce208c,",
               "                   xcce208d, xcce208e, xcce208f, xcce208g, xcce208h,",
               "                   xcce209,  xcce210,  xcce210a, xcce210b, xcce210c,",
               "                   xcce210d, xcce210e, xcce210f, xcce210g, xcce210h,",
               "                   xcce301,  xcce302,  xcce302a, xcce302b, xcce302c,",
               "                   xcce302d, xcce302e, xcce302f, xcce302g, xcce302h,",
               "                   xcce303,  xcce304,  xcce304a, xcce304b, xcce304c,",
               "                   xcce304d, xcce304e, xcce304f, xcce304g, xcce304h,",
               "                   xcce307,  xcce308,  xcce308a, xcce308b, xcce308c,",
               "                   xcce308d, xcce308e, xcce308f, xcce308g, xcce308h,",
               "                   xcce901,  xcce902,  xcce902a, xcce902b, xcce902c,",
               "                   xcce902d, xcce902e, xcce902f, xcce902g, xcce902h,",
               "                   xccetime)                                        ",              
              #" SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,",                    #161114-00003#1 mark
              #" SELECT /*+ PARALLEL(4) */ UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,", #161114-00003#1 add  #170110-00028#1              
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,",  #170110-00028#1              
               "       '",g_xcat001,"',",g_yy,",",g_pp,",inaj020,inaj005,",               
               "          inaj006,inaj010,'",l_xcce010,"',",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          ? ",
               "   FROM inaj_tmp,sfaa_tmp ",
               "  WHERE inaj020 IS NOT NULL ",
               "    AND inajent = sfaaent ",  #add 150916
               "    AND inajsite= sfaasite  ",  #add 151205
               "    AND inaj020 = sfaadocno ",
               "    AND sfaa003 <> '3' "                              #不可为拆件工单
#200212-00020#1 mark -S
#   IF g_sys_6016 = 'Y' THEN
#      LET g_sql = g_sql CLIPPED,
#               "   AND inaj036 IN ('302','303','501','114','107') "               #生产发料/生产退料/盘点/回收入库/委外回收入库
#   ELSE
#200212-00020#1 mark -E
      LET g_sql = g_sql CLIPPED,
               "   AND inaj036 IN ('302','303','115','501','114','107') "         #生产发料/生产退料/当站下线/盘点/回收入库/委外回收入库
#   END IF  #200212-00020#1 mark
   
   PREPARE s_axcp500_avg1_wip_2_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_2_1_p1 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     
   
   #结转上期结余的在制元件成本至本期期初   
#   LET g_sql = " MERGE INTO xcce_tmp a   ",
#               "       USING xcce_t b    ",
#               "          ON ( a.xcceent = b.xcceent         ",
#               "          AND  a.xcceld  = b.xcceld          ",
#               "          AND  a.xcce001 = b.xcce001         ",
#               "          AND  a.xcce002 = b.xcce002         ",
#               "          AND  a.xcce003 = b.xcce003         ",
#               "          AND  a.xcce006 = b.xcce006         ",
#               "          AND  a.xcce007 = b.xcce007         ",
#               "          AND  a.xcce008 = b.xcce008         ",
#               "          AND  a.xcce009 = b.xcce009 )       ",
#               "  WHEN MATCHED THEN                          ",
#               "       UPDATE SET a.xcce101  = nvl(b.xcce901 ,0) ,   ",
#               "                  a.xcce102  = nvl(b.xcce902 ,0) ,   ",
#               "                  a.xcce102a = nvl(b.xcce902a,0) ,   ",    
#               "                  a.xcce102b = nvl(b.xcce902b,0) ,   ",    
#               "                  a.xcce102c = nvl(b.xcce902c,0) ,   ",    
#               "                  a.xcce102d = nvl(b.xcce902d,0) ,   ",    
#               "                  a.xcce102e = nvl(b.xcce902e,0) ,   ",    
#               "                  a.xcce102f = nvl(b.xcce902f,0) ,   ",    
#               "                  a.xcce102g = nvl(b.xcce902g,0) ,   ",    
#               "                  a.xcce102h = nvl(b.xcce902h,0) ,   ",
#               "                  a.xcce901  = nvl(b.xcce901 ,0) ,   ",
#               "                  a.xcce902  = nvl(b.xcce902 ,0) ,   ",
#               "                  a.xcce902a = nvl(b.xcce902a,0) ,   ",    
#               "                  a.xcce902b = nvl(b.xcce902b,0) ,   ",    
#               "                  a.xcce902c = nvl(b.xcce902c,0) ,   ",    
#               "                  a.xcce902d = nvl(b.xcce902d,0) ,   ",    
#               "                  a.xcce902e = nvl(b.xcce902e,0) ,   ",    
#               "                  a.xcce902f = nvl(b.xcce902f,0) ,   ",    
#               "                  a.xcce902g = nvl(b.xcce902g,0) ,   ",    
#               "                  a.xcce902h = nvl(b.xcce902h,0)     ",               
#               "        WHERE b.xcce004 = ",g_last_yy,
#               "          AND b.xcce005 = ",g_last_pp,              
#               "  WHEN NOT MATCHED THEN                      ",
#               "       INSERT VALUES(b.xcceent,b.xccecomp,b.xcceld, b.xcce001,b.xcce002,    ",  
#               "                     b.xcce003,",g_yy,",",g_pp,",b.xcce006,b.xcce007,       ",
#               "                     b.xcce008,b.xcce009, b.xcce010,                        ",
#               "                     b.xcce901,b.xcce902,b.xcce902a,b.xcce902b,b.xcce902c,  ",    #101.期初  
#               "                     b.xcce902d,b.xcce902e,b.xcce902f,b.xcce902g,b.xcce902h,",
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #205.本期当站下线
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #207.本期一般退料
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #209.本期超领退
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.盘差
#               "                     b.xcce901,b.xcce902,b.xcce902a,b.xcce902b,b.xcce902c,  ",    #901.期末结存
#               "                     b.xcce902d,b.xcce902e,b.xcce902f,b.xcce902g,b.xcce902h,",
#               "                     '' )                                        ",               #最近成本计算时间                       
#               "        WHERE b.xcce006 IN (SELECT sfaadocno FROM sfaa_tmp ) ",
#               "          AND b.xcceent = ",g_enterprise,
#               "          AND b.xcceld  = '",g_ld,"'",
#               "          AND b.xcce001 = '",p_seq,"'",
#               "          AND b.xcce003 = '",g_xcat001,"'",
#               "          AND b.xcce004 = ",g_last_yy,
#               "          AND b.xcce005 = ",g_last_pp,
#               "          AND (b.xcce901 <> 0 OR b.xcce902 <> 0) "               

   #结转上期结余的在制元件成本至本期期初
   #190411-00017#1 A mark-S
#   LET g_sql = " MERGE INTO xcce_tmp a ",
#               "       USING ( SELECT xcce_t.* FROM xcce_t,sfaa_tmp ",
#               "                WHERE xcceent = sfaaent ",
#               "                  AND xcce006 = sfaadocno ",
   #190411-00017#1 A mark-E
   #PGS(D)-00824 ---start---
   #190411-00017#1 A add-S
   LET g_sql = " MERGE INTO xcce_tmp a ",
               "       USING ( SELECT xcce_t.* FROM xcce_t ",
               "                WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE xcceent = sfaaent AND xcce006 = sfaadocno) ",
   #190411-00017#1 A add-E
               "                  AND xcceent = ",g_enterprise,
               "                  AND xcceld  = '",g_ld,"'",
               "                  AND xcce001 = '",p_seq,"'",
               "                  AND xcce003 = '",g_xcat001,"'",
               "                  AND xcce004 = ",g_last_yy,
               "                  AND xcce005 = ",g_last_pp,
#               "                  AND (xcce901 <> 0 OR xcce902 <> 0 ) ",   #190702-00040#1 mark
               #190702-00040#1 add-S
               "                  AND (xcce901 <> 0 OR xcce902 <> 0 OR xcce902a <> 0 OR xcce902b <> 0 ",
               "                   OR xcce902c <> 0 OR xcce902d <> 0 OR xcce902e <> 0 OR xcce902f <> 0 ",
               "                   OR xcce902g <> 0 OR xcce902h <> 0) ",
               #190702-00040#1 add-E
               "             ) b ",
               "          ON ( a.xcceent = b.xcceent         ",
               "          AND  a.xcceld  = b.xcceld          ",
               "          AND  a.xcce001 = b.xcce001         ",
               "          AND  a.xcce002 = b.xcce002         ",
               "          AND  a.xcce003 = b.xcce003         ",
               "          AND  a.xcce006 = b.xcce006         ",
               "          AND  a.xcce007 = b.xcce007         ",
               "          AND  a.xcce008 = b.xcce008         ",
               "          AND  a.xcce009 = b.xcce009 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcce101  = nvl(b.xcce901 ,0) ,   ",
               "                  a.xcce102  = nvl(b.xcce902 ,0) ,   ",
               "                  a.xcce102a = nvl(b.xcce902a,0) ,   ",
               "                  a.xcce102b = nvl(b.xcce902b,0) ,   ",
               "                  a.xcce102c = nvl(b.xcce902c,0) ,   ",
               "                  a.xcce102d = nvl(b.xcce902d,0) ,   ",
               "                  a.xcce102e = nvl(b.xcce902e,0) ,   ",
               "                  a.xcce102f = nvl(b.xcce902f,0) ,   ",
               "                  a.xcce102g = nvl(b.xcce902g,0) ,   ",
               "                  a.xcce102h = nvl(b.xcce902h,0) ,   ",
               "                  a.xcce901  = nvl(b.xcce901 ,0) ,   ",
               "                  a.xcce902  = nvl(b.xcce902 ,0) ,   ",
               "                  a.xcce902a = nvl(b.xcce902a,0) ,   ",
               "                  a.xcce902b = nvl(b.xcce902b,0) ,   ",
               "                  a.xcce902c = nvl(b.xcce902c,0) ,   ",
               "                  a.xcce902d = nvl(b.xcce902d,0) ,   ",
               "                  a.xcce902e = nvl(b.xcce902e,0) ,   ",
               "                  a.xcce902f = nvl(b.xcce902f,0) ,   ",
               "                  a.xcce902g = nvl(b.xcce902g,0) ,   ",
               "                  a.xcce902h = nvl(b.xcce902h,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xcceent,b.xccecomp,b.xcceld, b.xcce001,b.xcce002,    ",
               "                     b.xcce003,",g_yy,",",g_pp,",b.xcce006,b.xcce007,       ",
               "                     b.xcce008,b.xcce009, b.xcce010,                        ",
               "                     b.xcce901,b.xcce902,b.xcce902a,b.xcce902b,b.xcce902c,  ",    #101.期初
               "                     b.xcce902d,b.xcce902e,b.xcce902f,b.xcce902g,b.xcce902h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #205.本期当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #207.本期一般退料
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #209.本期超领退
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.盘差
               "                     b.xcce901,b.xcce902,b.xcce902a,b.xcce902b,b.xcce902c,  ",    #901.期末结存
               "                     b.xcce902d,b.xcce902e,b.xcce902f,b.xcce902g,b.xcce902h,",
               "                     ? )                                         "                #最近成本计算时间
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_2_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_2_1_p2 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #从上期的xccb中结转期初值
#   LET g_sql = " MERGE INTO xcce_tmp a   ",
#               "       USING xccb_t b    ",
#               "          ON ( a.xcceent = b.xccbent         ",
#               "          AND  a.xcceld  = b.xccbld          ",
#               "          AND  a.xcce001 = b.xccb001         ",
#               "          AND  a.xcce002 = b.xccb002         ",
#               "          AND  a.xcce003 = b.xccb003         ",
#               "          AND  a.xcce006 = b.xccb006         ",
#               "          AND  a.xcce007 = b.xccb007         ",
#               "          AND  a.xcce008 = b.xccb008         ",
#               "          AND  a.xcce009 = b.xccb009 )       ",
#               "  WHEN MATCHED THEN                          ",
#               "       UPDATE SET a.xcce101  = nvl(b.xccb101 ,0) ,   ",
#               "                  a.xcce102  = nvl(b.xccb102 ,0) ,   ",
#               "                  a.xcce102a = nvl(b.xccb102a,0) ,   ",    
#               "                  a.xcce102b = nvl(b.xccb102b,0) ,   ",    
#               "                  a.xcce102c = nvl(b.xccb102c,0) ,   ",    
#               "                  a.xcce102d = nvl(b.xccb102d,0) ,   ",    
#               "                  a.xcce102e = nvl(b.xccb102e,0) ,   ",    
#               "                  a.xcce102f = nvl(b.xccb102f,0) ,   ",    
#               "                  a.xcce102g = nvl(b.xccb102g,0) ,   ",    
#               "                  a.xcce102h = nvl(b.xccb102h,0) ,   ",
#               "                  a.xcce901  = nvl(b.xccb101 ,0) ,   ",
#               "                  a.xcce902  = nvl(b.xccb102 ,0) ,   ",
#               "                  a.xcce902a = nvl(b.xccb102a,0) ,   ",    
#               "                  a.xcce902b = nvl(b.xccb102b,0) ,   ",    
#               "                  a.xcce902c = nvl(b.xccb102c,0) ,   ",    
#               "                  a.xcce902d = nvl(b.xccb102d,0) ,   ",    
#               "                  a.xcce902e = nvl(b.xccb102e,0) ,   ",    
#               "                  a.xcce902f = nvl(b.xccb102f,0) ,   ",    
#               "                  a.xcce902g = nvl(b.xccb102g,0) ,   ",    
#               "                  a.xcce902h = nvl(b.xccb102h,0)     ",               
#               "        WHERE b.xccb004 = ",g_last_yy,
#               "          AND b.xccb005 = ",g_last_pp,              
#               "  WHEN NOT MATCHED THEN                      ",
#               "       INSERT VALUES(b.xccbent,b.xccbcomp,b.xccbld, b.xccb001,b.xccb002,    ",  
#               "                     b.xccb003,",g_yy,",",g_pp,",b.xccb006,b.xccb007,       ",
#               "                     b.xccb008,b.xccb009, b.xccb010,                        ",
#               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #101.期初  
#               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #205.本期当站下线
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #207.本期一般退料
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #209.本期超领退
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
#               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.盘差
#               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #901.期末结存
#               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
#               "                     '' )                                        ",               #最近成本计算时间                       
#               "        WHERE b.xccb006 IN (SELECT sfaadocno FROM sfaa_tmp ) ",
#               "          AND b.xccbent = ",g_enterprise,
#               "          AND b.xccbld  = '",g_ld,"'",
#               "          AND b.xccb001 = '",p_seq,"'",
#               "          AND b.xccb003 = '",g_xcat001,"'",
#               "          AND b.xccb004 = ",g_last_yy,
#               "          AND b.xccb005 = ",g_last_pp
#--               "          AND (b.xccb101 <> 0  OR b.xccb102 <> 0 ) "              

   #从上期的xccb中结转期初值
   #190411-00017#1 A mark-S
#   LET g_sql = " MERGE INTO xcce_tmp a   ",
#               "       USING ( SELECT xccb_t.* FROM xccb_t,sfaa_tmp ",
#               "                WHERE xccbent = sfaaent ",
#               "                  AND xccb006 = sfaadocno ",
   #190411-00017#1 A mark-E
   #PGS(D)-00824 ---start---
   #190411-00017#1 A add-S
   LET g_sql = " MERGE INTO xcce_tmp a   ",
               "       USING ( SELECT xccb_t.* FROM xccb_t ",
               "                WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xccbent AND sfaadocno = xccb006 AND sfaa003 <> '3') ",
   #190411-00017#1 A add-E
               "                  AND xccbent = ",g_enterprise,
               "                  AND xccbld  = '",g_ld,"'",
               "                  AND xccb001 = '",p_seq,"'",
               "                  AND xccb003 = '",g_xcat001,"'",
               "                  AND xccb004 = ",g_last_yy,
               "                  AND xccb005 = ",g_last_pp,
#               "                  AND sfaa003 <> '3' ",     #180731-00016#1   #190411-00017#1 A mark
--             "                  AND (xccb101 <> 0 OR xccb102 <> 0 ) ",
               "              ) b    ",
               "          ON ( a.xcceent = b.xccbent         ",
               "          AND  a.xcceld  = b.xccbld          ",
               "          AND  a.xcce001 = b.xccb001         ",
               "          AND  a.xcce002 = b.xccb002         ",
               "          AND  a.xcce003 = b.xccb003         ",
               "          AND  a.xcce006 = b.xccb006         ",
               "          AND  a.xcce007 = b.xccb007         ",
               "          AND  a.xcce008 = b.xccb008         ",
               "          AND  a.xcce009 = b.xccb009 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcce101  = nvl(b.xccb101 ,0) ,   ",
               "                  a.xcce102  = nvl(b.xccb102 ,0) ,   ",
               "                  a.xcce102a = nvl(b.xccb102a,0) ,   ",
               "                  a.xcce102b = nvl(b.xccb102b,0) ,   ",
               "                  a.xcce102c = nvl(b.xccb102c,0) ,   ",
               "                  a.xcce102d = nvl(b.xccb102d,0) ,   ",
               "                  a.xcce102e = nvl(b.xccb102e,0) ,   ",
               "                  a.xcce102f = nvl(b.xccb102f,0) ,   ",
               "                  a.xcce102g = nvl(b.xccb102g,0) ,   ",
               "                  a.xcce102h = nvl(b.xccb102h,0) ,   ",
               "                  a.xcce901  = nvl(b.xccb101 ,0) ,   ",
               "                  a.xcce902  = nvl(b.xccb102 ,0) ,   ",
               "                  a.xcce902a = nvl(b.xccb102a,0) ,   ",
               "                  a.xcce902b = nvl(b.xccb102b,0) ,   ",
               "                  a.xcce902c = nvl(b.xccb102c,0) ,   ",
               "                  a.xcce902d = nvl(b.xccb102d,0) ,   ",
               "                  a.xcce902e = nvl(b.xccb102e,0) ,   ",
               "                  a.xcce902f = nvl(b.xccb102f,0) ,   ",
               "                  a.xcce902g = nvl(b.xccb102g,0) ,   ",
               "                  a.xcce902h = nvl(b.xccb102h,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccbent,b.xccbcomp,b.xccbld, b.xccb001,b.xccb002,    ",
               "                     b.xccb003,",g_yy,",",g_pp,",b.xccb006,b.xccb007,       ",
#               "                     b.xccb008,b.xccb009, b.xccb010,                        ",  #181119-00040#1 mark
               "                     b.xccb008,b.xccb009, '",g_curr[p_seq].curr,"',         ",  #181119-00040#1 mod
               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #101.期初
               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #205.本期当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #207.本期一般退料
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #209.本期超领退
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.盘差
               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #901.期末结存
               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
               "                     ?  )                                        "                #最近成本计算时间
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_2_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_2_1_p3 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 本期材料投入
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_2_2(p_flag,p_xcbb006,p_seq)
#                  RETURNING r_success
# Input parameter: p_flag         重工否
#                : p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_2_2(p_flag,p_xcbb006,p_seq)
   DEFINE p_flag          LIKE type_t.chr1
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
#   LET g_stat_cnt = 0
#   LET g_stat_begin = TIME   

   #--By Frank

   CREATE INDEX s_axcp500_tmp_i01 ON s_axcp500_tmp(xcbb006) #ODI-ORA#
   IF cl_db_generate_analyze("s_axcp500_tmp") THEN END IF
   #add zhangllc 160323

   CREATE INDEX xcck_tmp_i04 ON xcck_tmp(xcckent,xcck001,xcck020,xcck012,xcck047) #ODI-ORA#
   IF cl_db_generate_analyze("xcck_tmp") THEN END IF
   #add zhangllc 160323 end

   #更新 xcce201/xcce202 本期本阶投入
   #更新 xcce201/xcce202 本期本阶投入
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp ",               "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel,   ", #Mod zhangllc 150730 add clevel
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h  ",
               "                FROM xcck_tmp,sfaa_tmp,sfac_tmp2     ",     #Mod zhangllc 150730 add sfac_tmp2 
               "                WHERE xcck020 = '302' AND xcck012 <> 'asft312' ",  #生产发料，指元件
               "                  AND xcckent = sfaaent ",  #add 150916
               "                  AND xcck047 = sfaadocno ", 
               "                  AND sfaa042 = ? ",      #重工否
               "                  AND sfaaent = ",g_enterprise,  #add 150916
               "                  AND sfaadocno=sfacdocno ",  #add zhangllc 150730一张工单的主件即使多特征，也只指定一个成本阶
               "                  AND xcck001 = '",p_seq,"'",               
               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel ", #Mod zhangllc 150730 add clevel
               "                ) b ",
               "          ON ( xcceent = ",g_enterprise,
               "         AND   xcceld  = '",g_ld,"'",
               "         AND   xcce001 = '",p_seq,"'",
               "         AND   xcce002 = b.xcck002  ",
               "         AND   xcce003 = '",g_xcat001,"'",
               "         AND   xcce004 = ",g_yy,
               "         AND   xcce005 = ",g_pp,
               "         AND   xcce006 = b.xcck047  ",       #工单
               "         AND   xcce007 = b.xcck010  ",       #料
               "         AND   xcce008 = b.xcck011  ",       #特征
               "         AND   xcce009 = b.xcck017  ",       #批号
               #mod zhangllc 150730 --begin
               #"         AND   b.sfaa010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", 
               #"         AND   (b.sfaa010,b.clevel) IN ( SELECT imaa001,xcbb006 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", 
               "         AND   b.clevel = ",p_xcbb006," ) ", #mod zhangllc SBS4 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到本期投入的情况
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcce201  = nvl(b.xcck201 ,0) ,  ",
               "                xcce202  = nvl(b.xcck202 ,0) ,  ",
               "                xcce202a = nvl(b.xcck202a,0) ,  ",
               "                xcce202b = nvl(b.xcck202b,0) ,  ",
               "                xcce202c = nvl(b.xcck202c,0) ,  ",
               "                xcce202d = nvl(b.xcck202d,0) ,  ",
               "                xcce202e = nvl(b.xcck202e,0) ,  ",
               "                xcce202f = nvl(b.xcck202f,0) ,  ",
               "                xcce202g = nvl(b.xcck202g,0) ,  ",
               "                xcce202h = nvl(b.xcck202h,0)    "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_2_2_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  


   EXECUTE s_axcp500_avg1_wip_2_2_p1 USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   
   #160613 zhangllc mark for temp n顾问纠结此段，在此处产生的数据有投入没产出（因是数据异常导致的现象）怀有质疑的态度，那先mark，省n顾纠结，遇到死循环的客户工单客观情况，必须的前提下，再自行放开，做客制处理
   #add zhangllc 151117 --begin
   IF p_flag = 'Y' THEN  #重工工单
      #更新 xcce201/xcce202 本期本阶投入，前面的计算，在低阶领高阶的情况下算不到元件的投入成本（如主件为1阶，元件为0阶）
      #因此再计算xccd之前加一段xcce的补充计算，xcce202是0，xcce201<>0的再按xcce202=xcce201*xccc280
     #160930-00026#1-s-mark
     #LET g_sql = " MERGE INTO xcce_tmp ",
     #            "       USING (SELECT * FROM xccc_tmp     ",
     #            "                WHERE xcccent = ",g_enterprise,
     #            "                  AND xcccld  = '",g_ld,"'",
     #            "                  AND xccc001 = '",p_seq,"'",
     #            "                  AND xccc003 = '",g_xcat001,"'",
     #            "                  AND xccc004 = ",g_yy,
     #            "                  AND xccc005 = ",g_pp,
     #            "                ) b ",
     #            "          ON ( xcceent = b.xcccent ",
     #            "         AND   xcceld  = b.xcccld  ",
     #            "         AND   xcce001 = b.xccc001 ",
     #            "         AND   xcce002 = b.xccc002 ",
     #            "         AND   xcce003 = b.xccc003 ",
     #            "         AND   xcce004 = b.xccc004 ",
     #            "         AND   xcce005 = b.xccc005 ",
     #            "         AND   xcce007 = b.xccc006 ",       #料
     #            "         AND   xcce008 = b.xccc007 ",       #特征
     #            "         AND   xcce009 = b.xccc008) ",       #批号 
     #            "  WHEN MATCHED THEN    ",
     #            "     UPDATE SET xcce202  = xcce201 * b.xccc280 , ",
     #            "                xcce202a = xcce201 * b.xccc280a, ",
     #            "                xcce202b = xcce201 * b.xccc280b, ",
     #            "                xcce202c = xcce201 * b.xccc280c, ",
     #            "                xcce202d = xcce201 * b.xccc280d, ",
     #            "                xcce202e = xcce201 * b.xccc280e, ",
     #            "                xcce202f = xcce201 * b.xccc280f, ",
     #            "                xcce202g = xcce201 * b.xccc280g, ",
     #            "                xcce202h = xcce201 * b.xccc280h  ",
     #            "     WHERE xcce202 = 0 AND xcce201 != 0    ",
     #            "       AND EXISTS (SELECT 1 FROM sfac_tmp2 ",   #add 160607 增加成本阶计算，否则xccd202和xcce202会不匹配
     #            "                    WHERE sfac_tmp2.sfacdocno= xcce006 ",
     #            "                      AND sfac_tmp2.clevel   = ",p_xcbb006," ) "
     #            
     #PREPARE s_axcp500_avg1_wip_2_2_p1_1 FROM g_sql
     #IF SQLCA.sqlcode THEN
     #   INITIALIZE g_errparam TO NULL
     #   LET g_errparam.code   = SQLCA.sqlcode
     #   LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_2_p1_1"
     #   LET g_errparam.popup  = TRUE
     #   CALL cl_err()
     #END IF  
     #
     #EXECUTE s_axcp500_avg1_wip_2_2_p1_1
     #IF SQLCA.sqlcode THEN
     #   INITIALIZE g_errparam TO NULL
     #   LET g_errparam.code   = SQLCA.sqlcode
     #   LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_2_p1_1"
     #   LET g_errparam.popup  = TRUE
     #   CALL cl_err()
     #END IF
     #160930-00026#1-e-mark
      #add gengmy  160914--begin
      #计算完xcce后，马上更新对应的xcck，避免xcce与xcck不一致
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xcck_tmp ",
                  "       USING (SELECT * FROM xccc_tmp     ",
                  "                WHERE xcccent = ",g_enterprise,
                  "                  AND xcccld  = '",g_ld,"'",
                  "                  AND xccc001 = '",p_seq,"'",
                  "                  AND xccc003 = '",g_xcat001,"'",
                  "                  AND xccc004 = ",g_yy,
                  "                  AND xccc005 = ",g_pp,
                  "                ) b ",
                  "          ON ( xcckent = b.xcccent ",
                  "         AND   xcckld  = b.xcccld  ",
                  "         AND   xcck001 = b.xccc001 ",
                  "         AND   xcck002 = b.xccc002 ",
                  "         AND   xcck003 = b.xccc003 ",
                  "         AND   xcck004 = b.xccc004 ",
                  "         AND   xcck005 = b.xccc005 ",
                  "         AND   xcck010 = b.xccc006 ",       #料
                  "         AND   xcck011 = b.xccc007 ",       #特征
                  "         AND   xcck017 = b.xccc008 ",       #批号 
                  "         AND   xcck055 = '207' ",
                  #"         AND   (xcck010,xcck011) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 < ",p_xcbb006,") )", #170112-00041#1
#                  "         AND   (xcck010) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 < ",p_xcbb006,") )", #170112-00041#1  #190411-00017#1 B mark
                  "         AND EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 < ",p_xcbb006,"))",  #190411-00017#1 B mod
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xcck202  = xcck201 * b.xccc280 , ",
                  "                xcck202a = xcck201 * b.xccc280a, ",
                  "                xcck202b = xcck201 * b.xccc280b, ",
                  "                xcck202c = xcck201 * b.xccc280c, ",
                  "                xcck202d = xcck201 * b.xccc280d, ",
                  "                xcck202e = xcck201 * b.xccc280e, ",
                  "                xcck202f = xcck201 * b.xccc280f, ",
                  "                xcck202g = xcck201 * b.xccc280g, ",
                  "                xcck202h = xcck201 * b.xccc280h, ",
                  "                xcck282  = b.xccc280 , ",
                  "                xcck282a = b.xccc280a, ",
                  "                xcck282b = b.xccc280b, ",
                  "                xcck282c = b.xccc280c, ",
                  "                xcck282d = b.xccc280d, ",
                  "                xcck282e = b.xccc280e, ",
                  "                xcck282f = b.xccc280f, ",
                  "                xcck282g = b.xccc280g, ",
                  "                xcck282h = b.xccc280h  ",
                  "     WHERE xcck202 = 0 AND xcck201 != 0    ",
                  #170111-00004#1-s-mark
                  #"       AND EXISTS (SELECT 1 FROM sfac_tmp2 ",   #add 160607 增加成本阶计算，否则xccd202和xcce202会不匹配
                  #"                    WHERE sfac_tmp2.sfacdocno= xcck047 ",
                  #"                      AND sfac_tmp2.clevel   = ",p_xcbb006," ) "
                  #170111-00004#1-e-mark
                  #170111-00004#1-s-add
                  "       AND EXISTS (SELECT 1 FROM sfac_tmp2,sfaa_tmp ",
                  "                    WHERE sfac_tmp2.sfacdocno = xcck047 ",
                  "                      AND sfaa_tmp.sfaaent = xcckent ",
                  "                      AND sfaa_tmp.sfaadocno = sfac_tmp2.sfacdocno ",
                  "                      AND sfaa_tmp.sfaa042 = 'Y' ",
                  "                      AND sfac_tmp2.clevel   = ",p_xcbb006," ) "
                  #170111-00004#1-e-add
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_wip_2_2_p1_2 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_2_p1_2"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
      
      EXECUTE s_axcp500_avg1_wip_2_2_p1_2
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_2_p1_2"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF 
      #add gengmy  160914--end 


     #160930-00026#1-s-add
      #金額取位 
      CASE g_round_type
           WHEN '1'   #四舍五入
                 LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                             "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), xcck202e = round(xcck202e,? ), ",
                             "                    xcck202f = round(xcck202f,? ), xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? ), ",
                             "                    xcck282  = round(xcck282 ,? ), xcck282a = round(xcck282a,? ), xcck282b = round(xcck282b,? ), ",
                             "                    xcck282c = round(xcck282c,? ), xcck282d = round(xcck282d,? ), xcck282e = round(xcck282e,? ), ",
                             "                    xcck282f = round(xcck282f,? ), xcck282g = round(xcck282g,? ), xcck282h = round(xcck282h,? )  "
                         
           WHEN '3'   #无条件截位
                 LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                             "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), xcck202e = trunc(xcck202e,? ), ",
                             "                    xcck202f = trunc(xcck202f,? ), xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? ), ",
                             "                    xcck282  = trunc(xcck282 ,? ), xcck282a = trunc(xcck282a,? ), xcck282b = trunc(xcck282b,? ), ",
                             "                    xcck282c = trunc(xcck282c,? ), xcck282d = trunc(xcck282d,? ), xcck282e = trunc(xcck282e,? ), ",
                             "                    xcck282f = trunc(xcck282f,? ), xcck282g = trunc(xcck282g,? ), xcck282h = trunc(xcck282h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202,?) ",
                         "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202,?)",
                         "                                END ),",
                         "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a,?) ",
                         "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                                END ),",
                         "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b,?) ",
                         "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b,?)",
                         "                                END ),",
                         "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c,?) ",
                         "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c,?)",
                         "                                END ),",
                         "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d,?) ",
                         "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d,?)",
                         "                                END ),",
                         "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e,?) ",
                         "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e,?)",
                         "                                END ),",
                         "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f,?) ",
                         "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f,?)",
                         "                                END ),",
                         "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g,?) ",
                         "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g,?)",
                         "                                END ),",
                         "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h,?) ",
                         "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h,?)",
                         "                                END ),",
                         "                   xcck282  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck282,?) ",
                         "                                                          ELSE ROUND(xcck282,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck282,?)",
                         "                                END ),",
                         "                    xcck282a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck282a,?) ",
                         "                                                         ELSE ROUND(xcck282a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck282a,?)",
                         "                                END ),",
                         "                    xcck282b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck282b,?) ",
                         "                                                         ELSE ROUND(xcck282b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck282b,?)",
                         "                                END ),",
                         "                    xcck282c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck282c,?) ",
                         "                                                         ELSE ROUND(xcck282c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck282c,?)",
                         "                                END ),",
                         "                    xcck282d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck282d,?) ",
                         "                                                         ELSE ROUND(xcck282d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck282d,?)",
                         "                                END ),",
                         "                    xcck282e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck282e,?) ",
                         "                                                         ELSE ROUND(xcck282e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck282e,?)",
                         "                                END ),",
                         "                    xcck282f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck282f,?) ",
                         "                                                         ELSE ROUND(xcck282f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck282f,?)",
                         "                                END ),",
                         "                    xcck282g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck282g,?) ",
                         "                                                         ELSE ROUND(xcck282g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck282g,?)",
                         "                                END ),",
                         "                    xcck282h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck282h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck282h,?) ",
                         "                                                         ELSE ROUND(xcck282h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck282h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                         "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                         "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                         "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                         "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                         "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                         "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                         "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                         "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?),",
                         "                    xcck282  = ceil(xcck282 *power(10,?))/power(10,?),",
                         "                    xcck282a = ceil(xcck282a*power(10,?))/power(10,?),",
                         "                    xcck282b = ceil(xcck282b*power(10,?))/power(10,?),",
                         "                    xcck282c = ceil(xcck282c*power(10,?))/power(10,?),",
                         "                    xcck282d = ceil(xcck282d*power(10,?))/power(10,?),",
                         "                    xcck282e = ceil(xcck282e*power(10,?))/power(10,?),",
                         "                    xcck282f = ceil(xcck282f*power(10,?))/power(10,?),",
                         "                    xcck282g = ceil(xcck282g*power(10,?))/power(10,?),",
                         "                    xcck282h = ceil(xcck282h*power(10,?))/power(10,?) "
        #180802-00015#1 add-E
      END CASE
      PREPARE s_axcp500_avg1_set_xcck_1_p1 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_1_p1')
      END IF 
      #180802-00015#1 mark-S
#      EXECUTE s_axcp500_avg1_set_xcck_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                #161208-00069#1-s-mark
#                                                #g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                #g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                #g_curr[p_seq].digit2,g_curr[p_seq].digit2          
#                                                #161208-00069#1-e-mark                                                
#                                                #161208-00069#1　-s-add 
#                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                                 g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                                 g_curr[p_seq].digit1,g_curr[p_seq].digit1                                                                      
#                                                #161208-00069#1　-e-add
      #180802-00015#1 mark-E 


   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202h
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282a
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282b
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282c
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282d
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282e
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282f
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282g
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1    #xcck282h
   END CASE
   #180802-00015#1 add-E
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_1_p1"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_1_p1')
      END IF   
      #修正xcck202的值-先修至xcck202a,若xcck202a為零,則修正xcck202b......
      UPDATE xcck_tmp SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)   
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM sfac_tmp2 WHERE sfac_tmp2.sfacdocno= xcck047 AND sfac_tmp2.clevel = p_xcbb006)
         #170222-00055#1---add---s
         AND xcck202a >= xcck202b AND xcck202a >= xcck202c
         AND xcck202a >= xcck202d AND xcck202a >= xcck202e
         AND xcck202a >= xcck202f AND xcck202a >= xcck202g
         AND xcck202a >= xcck202h
         #170222-00055#1---add---e        
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')            
      END IF   
         
      UPDATE xcck_tmp SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM sfac_tmp2 WHERE sfac_tmp2.sfacdocno= xcck047 AND sfac_tmp2.clevel = p_xcbb006)
         #170222-00055#1---add---s
         AND xcck202b >= xcck202c
         AND xcck202b >= xcck202d AND xcck202b >= xcck202e
         AND xcck202b >= xcck202f AND xcck202b >= xcck202g
         AND xcck202b >= xcck202h
         #170222-00055#1---add---e         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')              
      END IF   
      UPDATE xcck_tmp SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM sfac_tmp2 WHERE sfac_tmp2.sfacdocno= xcck047 AND sfac_tmp2.clevel = p_xcbb006)
         #170222-00055#1---add---s
         AND xcck202c >= xcck202d AND xcck202c >= xcck202e
         AND xcck202c >= xcck202f AND xcck202c >= xcck202g
         AND xcck202c >= xcck202h
         #170222-00055#1---add---e        
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
      
      END IF   
      UPDATE xcck_tmp SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM sfac_tmp2 WHERE sfac_tmp2.sfacdocno= xcck047 AND sfac_tmp2.clevel = p_xcbb006)
         #170222-00055#1---add---s
         AND xcck202d >= xcck202e
         AND xcck202d >= xcck202f AND xcck202d >= xcck202g
         AND xcck202d >= xcck202h
         #170222-00055#1---add---e          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
      
      END IF   
      UPDATE xcck_tmp SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM sfac_tmp2 WHERE sfac_tmp2.sfacdocno= xcck047 AND sfac_tmp2.clevel = p_xcbb006)
         #170222-00055#1---add---s
         AND xcck202e >= xcck202f AND xcck202e >= xcck202g
         AND xcck202e >= xcck202h
         #170222-00055#1---add---e          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         
      
      END IF   
      UPDATE xcck_tmp SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM sfac_tmp2 WHERE sfac_tmp2.sfacdocno= xcck047 AND sfac_tmp2.clevel = p_xcbb006) 
         #170222-00055#1---add---s
         AND xcck202f >= xcck202g
         AND xcck202f >= xcck202h
         #170222-00055#1---add---e        
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')         
      
      END IF   
      UPDATE xcck_tmp SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h) <> 0 #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM sfac_tmp2 WHERE sfac_tmp2.sfacdocno= xcck047 AND sfac_tmp2.clevel = p_xcbb006)
         #170222-00055#1---add---s
         AND xcck202g >= xcck202h
         #170222-00055#1---add---e           
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')         
      
      END IF   
      UPDATE xcck_tmp SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)  
       WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
         #AND xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g) <> 0  #170804-00027#1 mark
         AND EXISTS (SELECT 1 FROM sfac_tmp2 WHERE sfac_tmp2.sfacdocno= xcck047 AND sfac_tmp2.clevel = p_xcbb006) 
        
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','','',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')         
      
      END IF        
      
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xcce_tmp ",
                  "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047, ", 
                  "                     SUM(xcck202)  xcck202,  ",
                  "                     SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
                  "                     SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
                  "                     SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
                  "                     SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",
                 #"                 FROM xcck_tmp ",                      #170111-00004#1 mark
                  #190411-00017#1 A mark-S
#                  "                 FROM xcck_tmp,sfaa_tmp,sfac_tmp2 ",   #170111-00004#1 add
#                  "                WHERE xcckent = ",g_enterprise,
#                  "                  AND xcckld = '",g_ld,"'",
#                  "                  AND xcck001 = '",p_seq,"'",
#                  "                  AND xcck003 = '",g_xcat001,"'",
#                  "                  AND xcck004 = ",g_yy,
#                  "                  AND xcck005 = ",g_pp,
#                 #170111-00004#1-s-add
#                  "                  AND xcck020 = '302' AND xcck012 <> 'asft312' ",  #生产发料，指元件
#                  "                  AND xcckent = sfaaent ",
#                  "                  AND xcck047 = sfaadocno ",
#                  "                  AND sfaadocno = sfacdocno ",
#                  "                  AND sfaa042 = 'Y' ",
                  #190411-00017#1 A mark-E
                  #190411-00017#1 A add-S
                  "                 FROM xcck_tmp ",  
                  "                WHERE xcckent = ",g_enterprise,
                  "                  AND xcckld = '",g_ld,"'",
                  "                  AND xcck001 = '",p_seq,"'",
                  "                  AND xcck003 = '",g_xcat001,"'",
                  "                  AND xcck004 = ",g_yy,
                  "                  AND xcck005 = ",g_pp,
                  "                  AND xcck020 = '302' AND xcck012 <> 'asft312' ",  #生产发料，指元件
                  "                  AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xcckent = sfaaent AND xcck047 = sfaadocno AND sfaa042 = 'Y') ",
                  "                  AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xcck047 = sfacdocno) ",
                  #190411-00017#1 A add-E
                 #170111-00004#1-e-add
                  "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047 ",
                  "                ) b ",
                  "          ON ( xcceent = ",g_enterprise,
                  "         AND   xcceld  = '",g_ld,"'",
                  "         AND   xcce001 = '",p_seq,"'",
                  "         AND   xcce002 = b.xcck002  ",
                  "         AND   xcce003 = '",g_xcat001,"'",
                  "         AND   xcce004 = ",g_yy,
                  "         AND   xcce005 = ",g_pp,
                  "         AND   xcce006 = b.xcck047  ",      
                  "         AND   xcce007 = b.xcck010  ",     
                  "         AND   xcce008 = b.xcck011  ",      
                  "         AND   xcce009 = b.xcck017 )",     
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xcce202  = nvl(b.xcck202 ,0) ,  ",
                  "                xcce202a = nvl(b.xcck202a,0) ,  ",
                  "                xcce202b = nvl(b.xcck202b,0) ,  ",
                  "                xcce202c = nvl(b.xcck202c,0) ,  ",
                  "                xcce202d = nvl(b.xcck202d,0) ,  ",
                  "                xcce202e = nvl(b.xcck202e,0) ,  ",
                  "                xcce202f = nvl(b.xcck202f,0) ,  ",
                  "                xcce202g = nvl(b.xcck202g,0) ,  ",
                  "                xcce202h = nvl(b.xcck202h,0)    ",   
                  "     WHERE xcce202 = 0 AND xcce201 != 0    ",
                  "       AND EXISTS (SELECT 1 FROM sfac_tmp2 ",              
                  "                    WHERE sfac_tmp2.sfacdocno= xcce006 ",
                  "                      AND sfac_tmp2.clevel   = ",p_xcbb006," ) "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_wip_2_2_p1_3 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_2_p1_3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  


      EXECUTE s_axcp500_avg1_wip_2_2_p1_3
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_2_p1_3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF                     
     #160930-00026#1-e-add
   END IF
   #add zhangllc 151117 --end


   #160923-00047#1-s-add
   #金額取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = round(xcce202 ,? ), xcce202a = round(xcce202a,? ), xcce202b = round(xcce202b,? ), ",
                         "                    xcce202c = round(xcce202c,? ), xcce202d = round(xcce202d,? ), ",
                         "                    xcce202e = round(xcce202e,? ), xcce202f = round(xcce202f,? ), ",
                         "                    xcce202g = round(xcce202g,? ), xcce202h = round(xcce202h,? )  "
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = trunc(xcce202 ,? ), xcce202a = trunc(xcce202a,? ), xcce202b = trunc(xcce202b,? ), ",
                         "                    xcce202c = trunc(xcce202c,? ), xcce202d = trunc(xcce202d,? ), ",
                         "                    xcce202e = trunc(xcce202e,? ), xcce202f = trunc(xcce202f,? ), ",
                         "                    xcce202g = trunc(xcce202g,? ), xcce202h = trunc(xcce202h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce202,?) ",
                         "                                                          ELSE ROUND(xcce202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce202,?)",
                         "                                END ),",
                         "                    xcce202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202a,?) ",
                         "                                                         ELSE ROUND(xcce202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202a,?)",
                         "                                END ),",
                         "                    xcce202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202b,?) ",
                         "                                                         ELSE ROUND(xcce202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202b,?)",
                         "                                END ),",
                         "                    xcce202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202c,?) ",
                         "                                                         ELSE ROUND(xcce202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202c,?)",
                         "                                END ),",
                         "                    xcce202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202d,?) ",
                         "                                                         ELSE ROUND(xcce202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202d,?)",
                         "                                END ),",
                         "                    xcce202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202e,?) ",
                         "                                                         ELSE ROUND(xcce202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202e,?)",
                         "                                END ),",
                         "                    xcce202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202f,?) ",
                         "                                                         ELSE ROUND(xcce202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202f,?)",
                         "                                END ),",
                         "                    xcce202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202g,?) ",
                         "                                                         ELSE ROUND(xcce202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202g,?)",
                         "                                END ),",
                         "                    xcce202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202h,?) ",
                         "                                                         ELSE ROUND(xcce202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = ceil(xcce202 *power(10,?))/power(10,?),",
                         "                    xcce202a = ceil(xcce202a*power(10,?))/power(10,?),",
                         "                    xcce202b = ceil(xcce202b*power(10,?))/power(10,?),",
                         "                    xcce202c = ceil(xcce202c*power(10,?))/power(10,?),",
                         "                    xcce202d = ceil(xcce202d*power(10,?))/power(10,?),",
                         "                    xcce202e = ceil(xcce202e*power(10,?))/power(10,?),",
                         "                    xcce202f = ceil(xcce202f*power(10,?))/power(10,?),",
                         "                    xcce202g = ceil(xcce202g*power(10,?))/power(10,?),",
                         "                    xcce202h = ceil(xcce202h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E    
   END CASE
   PREPARE s_axcp500_avg1_set_xcce_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcce_1_p1')
   END IF
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcce_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcce_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcce_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcce_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcce_1_p1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcce_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcce_1_p1')
   END IF


   #160923-00047#1-e-add
   #更新 xcce205/xcce206 当站下线
   #170629-00004#1---add---s
   #增加一參數「當站下線的取價方式」：1.系統設定 2.人工設定
   #1.系統設定：合計投料的單價*當站下線數量，投入元件成本/主件投入數量=單價 (像主件單位成本算法)
   #2.人工設定：取axct314成本
   #180125-00005#1 add-S 
   #1.系統設置：[非製程成本]當站下線之料號當月成本單價*當站下線數量，[製程成本]合計投料的單價*當站下線數量
   IF g_sys_6025 = '1' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xcce_tmp ",
                  "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel,   ", #Mod zhangllc 150730 add clevel
                  #190610-00001#1 mark start -----
                  #"                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xccc280*xcck201*xcck009 *-1) xcck202,  ",
                  #"                     SUM(xccc280a*xcck201*xcck009*-1) xcck202a,SUM(xccc280b*xcck201*xcck009*-1) xcck202b, ",
                  #"                     SUM(xccc280c*xcck201*xcck009*-1) xcck202c,SUM(xccc280d*xcck201*xcck009*-1) xcck202d, ",
                  #"                     SUM(xccc280e*xcck201*xcck009*-1) xcck202e,SUM(xccc280f*xcck201*xcck009*-1) xcck202f, ",
                  #"                     SUM(xccc280g*xcck201*xcck009*-1) xcck202g,SUM(xccc280h*xcck201*xcck009*-1) xcck202h",			  
                  #190610-00001#1 mark end   -----
                  #190610-00001#1 add start -----
                  "                     SUM(xcck201*xcck009 *-1) xcck201,SUM(xcck202*xcck009 *-1) xcck202,  ",
                  "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
                  "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
                  "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
                  "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h",
                  #190610-00001#1 add end    -----
                  "                FROM xcck_tmp,sfaa_tmp,sfac_tmp2,xccc_tmp     ",     #Mod zhangllc 150730 add sfac_tmp2                     
#                  "                WHERE (xcck020 = '115' AND xcck055 IN ('3011','3012')) ",   #200212-00020#1 mark
                  "                WHERE (xcck020 = '115') ",   #200212-00020#1 add
                  "                  AND xcckent = sfaaent ",  #add 150916
                  "                  AND xcck047 = sfaadocno ",
                  "                  AND xcck001 = '",p_seq,"'", 
                  "                  AND xcccld = xcckld AND xccc001 = xcck001 AND xccc002 = xcck002 AND xccc003 = xcck003 AND xccc004 = xcck004 AND xccc005 = xcck005 AND xccc006 = xcck010 AND xccc007 = xcck011 AND xccc008 = xcck017 ",                  
                  "                  AND sfaa042 = ? ", 
                  "                  AND sfaadocno=sfacdocno ",  #add zhangllc 150730一张工单的主件即时多特征，也只指定一个成本阶
                  "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel ", #Mod zhangllc 150730 add clevel
                  "                ) b ",               
                  "          ON ( xcceent = ",g_enterprise,
                  "         AND   xcceld  = '",g_ld,"'",
                  "         AND   xcce001 = '",p_seq,"'",
                  "         AND   xcce002 = b.xcck002  ",
                  "         AND   xcce003 = '",g_xcat001,"'",
                  "         AND   xcce004 = ",g_yy,
                  "         AND   xcce005 = ",g_pp,
                  "         AND   xcce006 = b.xcck047  ",       #工单
                  "         AND   xcce007 = b.xcck010  ",
                  "         AND   xcce008 = b.xcck011  ",
                  "         AND   xcce009 = b.xcck017  ",
                  "         AND   b.clevel = ",p_xcbb006," ) ", #SBS4 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到本期投入的情况
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xcce205  = nvl(b.xcck201 ,0) ,  ",
                  "                xcce206  = nvl(b.xcck202 ,0) ,  ",
                  "                xcce206a = nvl(b.xcck202a,0) ,  ",
                  "                xcce206b = nvl(b.xcck202b,0) ,  ",
                  "                xcce206c = nvl(b.xcck202c,0) ,  ",
                  "                xcce206d = nvl(b.xcck202d,0) ,  ",
                  "                xcce206e = nvl(b.xcck202e,0) ,  ",
                  "                xcce206f = nvl(b.xcck202f,0) ,  ",
                  "                xcce206g = nvl(b.xcck202g,0) ,  ",
                  "                xcce206h = nvl(b.xcck202h,0)    "
      #PGS(D)-00824 --- end ---
   ELSE
   #180125-00005#1 add-E
   #180108-00085#1 mark-S 仅在制程成本时处理 制程成本不走该function，故mark掉此段的处理
#   IF g_sys_6025 = '1' THEN   
#      LET g_sql = " MERGE INTO xcce_tmp ",
#                  "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel,   ", #Mod zhangllc 150730 add clevel
#                  "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck201*xcck009 *-1*c.price) xcck202, ",
#                  "                     SUM(xcck201*xcck009 *-1*c.pricea) xcck202a,SUM(xcck201*xcck009 *-1*c.priceb) xcck202b,",
#                  "                     SUM(xcck201*xcck009 *-1*c.pricec) xcck202c,SUM(xcck201*xcck009 *-1*c.priced) xcck202d,",
#                  "                     SUM(xcck201*xcck009 *-1*c.pricee) xcck202e,SUM(xcck201*xcck009 *-1*c.pricef) xcck202f,",
#                  "                     SUM(xcck201*xcck009 *-1*c.priceg) xcck202g,SUM(xcck201*xcck009 *-1*c.priceh) xcck202h",
#                  "                FROM xcck_tmp,sfaa_tmp,sfac_tmp2,     ",    
#                  "                     ( SELECT xccdent,xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006,xccd201, ",
#                  "                              SUM(xcce202)/xccd201 price,  SUM(xcce202a)/xccd201 pricea,SUM(xcce202b)/xccd201 priceb, ",
#                  "                              SUM(xcce202c)/xccd201 pricec,SUM(xcce202d)/xccd201 priced,SUM(xcce202e)/xccd201 pricee, ",
#                  "                              SUM(xcce202f)/xccd201 pricef,SUM(xcce202g)/xccd201 priceg,SUM(xcce202h)/xccd201 priceh  ",
#                  "                          FROM xcce_tmp,xccd_tmp ",
#                  "                          WHERE xcceent = xccdent AND xcceld = xccdld AND xcce001 = xccd001 AND xcce002 = xccd002 ",
#                  "                            AND xcce003 = xccd003 AND xcce004 = xccd004 AND xcce005 = xccd005 AND xcce006 = xccd006 ",
#                  "                            AND xccd201 <> 0  ",
#                  "                        GROUP BY xccdent,xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006,xccd201 ",
#                  "                      ) c ",                  
#                  "               WHERE c.xccdent = xcckent ",
#                  "                 AND c.xccdld  = xcckld  ",
#                  "                 AND c.xccd001 = xcck001 ",
#                  "                 AND c.xccd002 = xcck002 ",
#                  "                 AND c.xccd003 = xcck003 ",
#                  "                 AND c.xccd004 = xcck004 ",
#                  "                 AND c.xccd005 = xcck005 ",
#                  "                 AND c.xccd006 = xcck047 ",
#                  "                 AND xcck020 = '115' AND xcck055 IN ('3011','3012') ",
#                  "                 AND xcckent = sfaaent ",  
#                  "                 AND xcck047 = sfaadocno ",
#                  "                 AND sfaa042 = ? ",   
#                  "                 AND sfaadocno=sfacdocno ",  #add zhangllc 150730一张工单的主件即时多特征，也只指定一个成本阶
#                  "                 AND xcck001 = '",p_seq,"'",               
#                  "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel ",
#                  "                ) b ",
#                  "          ON ( xcceent = ",g_enterprise,
#                  "         AND   xcceld  = '",g_ld,"'",
#                  "         AND   xcce001 = '",p_seq,"'",
#                  "         AND   xcce002 = b.xcck002  ",
#                  "         AND   xcce003 = '",g_xcat001,"'",
#                  "         AND   xcce004 = ",g_yy,
#                  "         AND   xcce005 = ",g_pp,
#                  "         AND   xcce006 = b.xcck047  ",       #工单
#                  "         AND   xcce007 = b.xcck010  ",
#                  "         AND   xcce008 = b.xcck011  ",
#                  "         AND   xcce009 = b.xcck017  ",
#                  "         AND   b.clevel = ",p_xcbb006," ) ", #SBS4 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到本期投入的情况
#                  "  WHEN MATCHED THEN    ",
#                  "     UPDATE SET xcce205  = nvl(b.xcck201 ,0) ,  ",
#                  "                xcce206  = nvl(b.xcck202 ,0) ,  ",
#                  "                xcce206a = nvl(b.xcck202a,0) ,  ",
#                  "                xcce206b = nvl(b.xcck202b,0) ,  ",
#                  "                xcce206c = nvl(b.xcck202c,0) ,  ",
#                  "                xcce206d = nvl(b.xcck202d,0) ,  ",
#                  "                xcce206e = nvl(b.xcck202e,0) ,  ",
#                  "                xcce206f = nvl(b.xcck202f,0) ,  ",
#                  "                xcce206g = nvl(b.xcck202g,0) ,  ",
#                  "                xcce206h = nvl(b.xcck202h,0)    "  
#   ELSE
#   #170629-00004#1---add---e
   #180108-00085#1 mark-E
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xcce_tmp ",
                  "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel,   ", #Mod zhangllc 150730 add clevel
                  "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xccw202*xcck009 *-1) xcck202, ",
                  "                     SUM(xccw202a*xcck009*-1) xcck202a,SUM(xccw202b*xcck009*-1) xcck202b,",
                  "                     SUM(xccw202c*xcck009*-1) xcck202c,SUM(xccw202d*xcck009*-1) xcck202d,",
                  "                     SUM(xccw202e*xcck009*-1) xcck202e,SUM(xccw202f*xcck009*-1) xcck202f,",
                  "                     SUM(xccw202g*xcck009*-1) xcck202g,SUM(xccw202h*xcck009*-1) xcck202h",
                  "                FROM xcck_tmp,sfaa_tmp,xccw_t,sfac_tmp2     ",     #Mod zhangllc 150730 add sfac_tmp2                    
                  "               WHERE xccwent = xcckent ",
                  "                 AND xccwld  = xcckld  ",
                  "                 AND xccw001 = xcck001 ",
                  "                 AND xccw002 = xcck002 ",
                  "                 AND xccw003 = xcck003 ",
                  "                 AND xccw004 = xcck004 ",
                  "                 AND xccw005 = xcck005 ",
                  "                 AND xccw006 = xcck006 ",
                  "                 AND xccw007 = xcck007 ",
                  "                 AND xccw008 = xcck008 ",
                  "                 AND xccw009 = xcck009 ",
                  #"                 AND xcck020 = '115' AND xcck055 IN ('3011','3012') ", #200212-00020#1 mark
                  "                 AND xcck020 = '115' ",  #200212-00020#1 add
                  "                 AND xcckent = sfaaent ",  #add 150916
                  "                 AND xcck047 = sfaadocno ",
                  "                 AND sfaa042 = ? ",   
                  "                 AND sfaadocno=sfacdocno ",  #add zhangllc 150730一张工单的主件即时多特征，也只指定一个成本阶
                  "                 AND xcck001 = '",p_seq,"'",               
                  "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel ", #Mod zhangllc 150730 add clevel
                  "                ) b ",
                  "          ON ( xcceent = ",g_enterprise,
                  "         AND   xcceld  = '",g_ld,"'",
                  "         AND   xcce001 = '",p_seq,"'",
                  "         AND   xcce002 = b.xcck002  ",
                  "         AND   xcce003 = '",g_xcat001,"'",
                  "         AND   xcce004 = ",g_yy,
                  "         AND   xcce005 = ",g_pp,
                  "         AND   xcce006 = b.xcck047  ",       #工单
                  "         AND   xcce007 = b.xcck010  ",
                  "         AND   xcce008 = b.xcck011  ",
                  "         AND   xcce009 = b.xcck017  ",
                  #mod zhangllc 150730 --begin
                  #"         AND   b.sfaa010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", 
                  #"         AND   (b.sfaa010,b.clevel) IN ( SELECT imaa001,xcbb006 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", 
                  "         AND   b.clevel = ",p_xcbb006," ) ", #mod zhangllc SBS4 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到
                  #mod zhangllc 150730 --end               
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xcce205  = nvl(b.xcck201 ,0) ,  ",
                  "                xcce206  = nvl(b.xcck202 ,0) ,  ",
                  "                xcce206a = nvl(b.xcck202a,0) ,  ",
                  "                xcce206b = nvl(b.xcck202b,0) ,  ",
                  "                xcce206c = nvl(b.xcck202c,0) ,  ",
                  "                xcce206d = nvl(b.xcck202d,0) ,  ",
                  "                xcce206e = nvl(b.xcck202e,0) ,  ",
                  "                xcce206f = nvl(b.xcck202f,0) ,  ",
                  "                xcce206g = nvl(b.xcck202g,0) ,  ",
                  "                xcce206h = nvl(b.xcck202h,0)    "
      #PGS(D)-00824 --- end ---
   END IF  #170629-00004#1 add #180108-00085#1 mark  #180125-00005#1 remark
   
#   LET g_sql = " MERGE INTO xcce_tmp ",
#               "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,   ",
#               "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a, ",
#               "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
#               "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
#               "                     SUM(xcck202h*xcck009) xcck202h ",
#               "                FROM xcck_tmp,sfaa_tmp     ",                         
#               "                WHERE xcck020 = '115' AND xcck055 IN ('3011','3012') ",
#               "                  AND xcck047 = sfaadocno ",
#               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010",
#               "                ) b ",
#               "          ON ( xcceent = ",g_enterprise,
#               "         AND   xcceld  = '",g_ld,"'",
#               "         AND   xcce001 = '",p_seq,"'",
#               "         AND   xcce002 = b.xcck002  ",
#               "         AND   xcce003 = '",g_xcat001,"'",
#               "         AND   xcce004 = ",g_yy,
#               "         AND   xcce005 = ",g_pp,
#               "         AND   xcce006 = b.xcck047  ",       #工单
#               "         AND   xcce007 = b.xcck010  ",
#               "         AND   xcce008 = b.xcck011  ",
#               "         AND   xcce009 = b.xcck017  ",
#               "         AND   b.sfaa010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",           
#               "  WHEN MATCHED THEN    ",
#               "     UPDATE SET xcce205  = b.xcck201 ,  ",
#               "                xcce206  = b.xcck202 ,  ",
#               "                xcce206a = b.xcck202a,  ",
#               "                xcce206b = b.xcck202b,  ",
#               "                xcce206c = b.xcck202c,  ",
#               "                xcce206d = b.xcck202d,  ",
#               "                xcce206e = b.xcck202e,  ",
#               "                xcce206f = b.xcck202f,  ",
#               "                xcce206g = b.xcck202g,  ",
#               "                xcce206h = b.xcck202h   "   
#               
   PREPARE s_axcp500_avg1_wip_2_2_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  


   EXECUTE s_axcp500_avg1_wip_2_2_p2 USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   
   #160923-00047#1-s-add   
   #xcce206~xcce206h 金額取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcce_tmp SET xcce206  = round(xcce206 ,? ), xcce206a = round(xcce206a,? ), xcce206b = round(xcce206b,? ), ",
                         "                    xcce206c = round(xcce206c,? ), xcce206d = round(xcce206d,? ), ",
                         "                    xcce206e = round(xcce206e,? ), xcce206f = round(xcce206f,? ), ",
                         "                    xcce206g = round(xcce206g,? ), xcce206h = round(xcce206h,? )  "
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcce_tmp SET xcce206  = trunc(xcce206 ,? ), xcce206a = trunc(xcce206a,? ), xcce206b = trunc(xcce206b,? ), ",
                         "                    xcce206c = trunc(xcce206c,? ), xcce206d = trunc(xcce206d,? ), ",
                         "                    xcce206e = trunc(xcce206e,? ), xcce206f = trunc(xcce206f,? ), ",
                         "                    xcce206g = trunc(xcce206g,? ), xcce206h = trunc(xcce206h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce206  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce206,?) ",
                         "                                                          ELSE ROUND(xcce206,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce206,?)",
                         "                                END ),",
                         "                    xcce206a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce206a,?) ",
                         "                                                         ELSE ROUND(xcce206a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce206a,?)",
                         "                                END ),",
                         "                    xcce206b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce206b,?) ",
                         "                                                         ELSE ROUND(xcce206b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce206b,?)",
                         "                                END ),",
                         "                    xcce206c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce206c,?) ",
                         "                                                         ELSE ROUND(xcce206c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce206c,?)",
                         "                                END ),",
                         "                    xcce206d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce206d,?) ",
                         "                                                         ELSE ROUND(xcce206d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce206d,?)",
                         "                                END ),",
                         "                    xcce206e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce206e,?) ",
                         "                                                         ELSE ROUND(xcce206e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce206e,?)",
                         "                                END ),",
                         "                    xcce206f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce206f,?) ",
                         "                                                         ELSE ROUND(xcce206f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce206f,?)",
                         "                                END ),",
                         "                    xcce206g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce206g,?) ",
                         "                                                         ELSE ROUND(xcce206g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce206g,?)",
                         "                                END ),",
                         "                    xcce206h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce206h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce206h,?) ",
                         "                                                         ELSE ROUND(xcce206h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce206h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce206  = ceil(xcce206 *power(10,?))/power(10,?),",
                         "                    xcce206a = ceil(xcce206a*power(10,?))/power(10,?),",
                         "                    xcce206b = ceil(xcce206b*power(10,?))/power(10,?),",
                         "                    xcce206c = ceil(xcce206c*power(10,?))/power(10,?),",
                         "                    xcce206d = ceil(xcce206d*power(10,?))/power(10,?),",
                         "                    xcce206e = ceil(xcce206e*power(10,?))/power(10,?),",
                         "                    xcce206f = ceil(xcce206f*power(10,?))/power(10,?),",
                         "                    xcce206g = ceil(xcce206g*power(10,?))/power(10,?),",
                         "                    xcce206h = ceil(xcce206h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E    
   END CASE
   PREPARE s_axcp500_avg1_set_xcce_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcce_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcce_1_p2')
   END IF   
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcce_1_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcce_1_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcce_1_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcce_1_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcce_1_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcce_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcce_1_p2')
   END IF
   #160923-00047#1-e-add   


   #更新 xcce207/xcce208 一般退料
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp ",
               "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel,   ", #Mod zhangllc 150730 add clevel
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h",
               "                FROM xcck_tmp,sfaa_tmp,sfac_tmp2     ",     #Mod zhangllc 150730 add sfac_tmp2                     
               "                WHERE (xcck020 = '303' AND xcck012 <> 'asft322' OR ",
               "                       xcck020 = '114' OR xcck020 = '107') ", 
               "                  AND xcckent = sfaaent ",  #add 150916
               "                  AND xcck047 = sfaadocno ",
               "                  AND xcck001 = '",p_seq,"'",               
               "                  AND sfaa042 = ? ", 
               "                  AND sfaadocno=sfacdocno ",  #add zhangllc 150730一张工单的主件即时多特征，也只指定一个成本阶
               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel ", #Mod zhangllc 150730 add clevel
               "                ) b ",
               "          ON ( xcceent = ",g_enterprise,
               "         AND   xcceld  = '",g_ld,"'",
               "         AND   xcce001 = '",p_seq,"'",
               "         AND   xcce002 = b.xcck002  ",
               "         AND   xcce003 = '",g_xcat001,"'",
               "         AND   xcce004 = ",g_yy,
               "         AND   xcce005 = ",g_pp,
               "         AND   xcce006 = b.xcck047  ",       #工单
               "         AND   xcce007 = b.xcck010  ",
               "         AND   xcce008 = b.xcck011  ",
               "         AND   xcce009 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   b.sfaa010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", 
               #"         AND   (b.sfaa010,b.clevel) IN ( SELECT imaa001,xcbb006 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", 
               "         AND   b.clevel = ",p_xcbb006," ) ", #mod zhangllc SBS4 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到
               #mod zhangllc 150730 --end 
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcce207  = nvl(b.xcck201 ,0) ,  ",
               "                xcce208  = nvl(b.xcck202 ,0) ,  ",
               "                xcce208a = nvl(b.xcck202a,0) ,  ",
               "                xcce208b = nvl(b.xcck202b,0) ,  ",
               "                xcce208c = nvl(b.xcck202c,0) ,  ",
               "                xcce208d = nvl(b.xcck202d,0) ,  ",
               "                xcce208e = nvl(b.xcck202e,0) ,  ",
               "                xcce208f = nvl(b.xcck202f,0) ,  ",
               "                xcce208g = nvl(b.xcck202g,0) ,  ",
               "                xcce208h = nvl(b.xcck202h,0)    "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_2_2_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_2_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  


   EXECUTE s_axcp500_avg1_wip_2_2_p3  USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_2_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   
   
   #160923-00047#1-s-add 
   #xcce208~xcce208h 金額取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcce_tmp SET xcce208  = round(xcce208 ,? ), xcce208a = round(xcce208a,? ), xcce208b = round(xcce208b,? ), ",
                         "                    xcce208c = round(xcce208c,? ), xcce208d = round(xcce208d,? ), ",
                         "                    xcce208e = round(xcce208e,? ), xcce208f = round(xcce208f,? ), ",
                         "                    xcce208g = round(xcce208g,? ), xcce208h = round(xcce208h,? )  "
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcce_tmp SET xcce208  = trunc(xcce208 ,? ), xcce208a = trunc(xcce208a,? ), xcce208b = trunc(xcce208b,? ), ",
                         "                    xcce208c = trunc(xcce208c,? ), xcce208d = trunc(xcce208d,? ), ",
                         "                    xcce208e = trunc(xcce208e,? ), xcce208f = trunc(xcce208f,? ), ",
                         "                    xcce208g = trunc(xcce208g,? ), xcce208h = trunc(xcce208h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce208  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce208,?) ",
                         "                                                          ELSE ROUND(xcce208,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce208,?)",
                         "                                END ),",
                         "                    xcce208a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce208a,?) ",
                         "                                                         ELSE ROUND(xcce208a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce208a,?)",
                         "                                END ),",
                         "                    xcce208b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce208b,?) ",
                         "                                                         ELSE ROUND(xcce208b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce208b,?)",
                         "                                END ),",
                         "                    xcce208c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce208c,?) ",
                         "                                                         ELSE ROUND(xcce208c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce208c,?)",
                         "                                END ),",
                         "                    xcce208d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce208d,?) ",
                         "                                                         ELSE ROUND(xcce208d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce208d,?)",
                         "                                END ),",
                         "                    xcce208e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce208e,?) ",
                         "                                                         ELSE ROUND(xcce208e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce208e,?)",
                         "                                END ),",
                         "                    xcce208f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce208f,?) ",
                         "                                                         ELSE ROUND(xcce208f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce208f,?)",
                         "                                END ),",
                         "                    xcce208g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce208g,?) ",
                         "                                                         ELSE ROUND(xcce208g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce208g,?)",
                         "                                END ),",
                         "                    xcce208h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce208h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce208h,?) ",
                         "                                                         ELSE ROUND(xcce208h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce208h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce208  = ceil(xcce208 *power(10,?))/power(10,?),",
                         "                    xcce208a = ceil(xcce208a*power(10,?))/power(10,?),",
                         "                    xcce208b = ceil(xcce208b*power(10,?))/power(10,?),",
                         "                    xcce208c = ceil(xcce208c*power(10,?))/power(10,?),",
                         "                    xcce208d = ceil(xcce208d*power(10,?))/power(10,?),",
                         "                    xcce208e = ceil(xcce208e*power(10,?))/power(10,?),",
                         "                    xcce208f = ceil(xcce208f*power(10,?))/power(10,?),",
                         "                    xcce208g = ceil(xcce208g*power(10,?))/power(10,?),",
                         "                    xcce208h = ceil(xcce208h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E    
   END CASE
   PREPARE s_axcp500_avg1_set_xcce_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcce_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcce_1_p3')
   END IF   
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcce_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcce_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcce_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcce_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcce_1_p3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcce_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcce_1_p3')
   END IF   
   

   #160923-00047#1-e-add    
   #更新 xcce209/xcce210 超领
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp ",
               "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel,   ", #Mod zhangllc 150730 add clevel
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h",
               "                FROM xcck_tmp,sfaa_tmp,sfac_tmp2     ",     #Mod zhangllc 150730 add sfac_tmp2                    
               "                WHERE (xcck020 = '302' AND xcck012 = 'asft312' ",
               "                   OR  xcck020 = '303' AND xcck012 = 'asft322') ",
               "                  AND xcckent = sfaaent ",  #add 150916
               "                  AND xcck047 = sfaadocno ",
               "                  AND xcck001 = '",p_seq,"'",               
               "                  AND sfaa042 = ? ", 
               "                  AND sfaadocno=sfacdocno ",  #add zhangllc 150730一张工单的主件即时多特征，也只指定一个成本阶           
               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel ", #Mod zhangllc 150730 add clevel
               "                ) b ",
               "          ON ( xcceent = ",g_enterprise,
               "         AND   xcceld  = '",g_ld,"'",
               "         AND   xcce001 = '",p_seq,"'",
               "         AND   xcce002 = b.xcck002  ",
               "         AND   xcce003 = '",g_xcat001,"'",
               "         AND   xcce004 = ",g_yy,
               "         AND   xcce005 = ",g_pp,
               "         AND   xcce006 = b.xcck047  ",       #工单
               "         AND   xcce007 = b.xcck010  ",
               "         AND   xcce008 = b.xcck011  ",
               "         AND   xcce009 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   b.sfaa010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", 
               #"         AND   (b.sfaa010,b.clevel) IN ( SELECT imaa001,xcbb006 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               "         AND   b.clevel = ",p_xcbb006," ) ", #mod zhangllc SBS4 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到
               #mod zhangllc 150730 --end 
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcce209  = nvl(b.xcck201 ,0) ,  ",
               "                xcce210  = nvl(b.xcck202 ,0) ,  ",
               "                xcce210a = nvl(b.xcck202a,0) ,  ",
               "                xcce210b = nvl(b.xcck202b,0) ,  ",
               "                xcce210c = nvl(b.xcck202c,0) ,  ",
               "                xcce210d = nvl(b.xcck202d,0) ,  ",
               "                xcce210e = nvl(b.xcck202e,0) ,  ",
               "                xcce210f = nvl(b.xcck202f,0) ,  ",
               "                xcce210g = nvl(b.xcck202g,0) ,  ",
               "                xcce210h = nvl(b.xcck202h,0)    "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_2_2_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_2_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  


   EXECUTE s_axcp500_avg1_wip_2_2_p4  USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_2_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   
   
   #160923-00047#1-s-add 
   #xcce210~xcce210h 金額取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcce_tmp SET xcce210  = round(xcce210 ,? ), xcce210a = round(xcce210a,? ), xcce210b = round(xcce210b,? ), ",
                         "                    xcce210c = round(xcce210c,? ), xcce210d = round(xcce210d,? ), ",
                         "                    xcce210e = round(xcce210e,? ), xcce210f = round(xcce210f,? ), ",
                         "                    xcce210g = round(xcce210g,? ), xcce210h = round(xcce210h,? )  "
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcce_tmp SET xcce210  = trunc(xcce210 ,? ), xcce210a = trunc(xcce210a,? ), xcce210b = trunc(xcce210b,? ), ",
                         "                    xcce210c = trunc(xcce210c,? ), xcce210d = trunc(xcce210d,? ), ",
                         "                    xcce210e = trunc(xcce210e,? ), xcce210f = trunc(xcce210f,? ), ",
                         "                    xcce210g = trunc(xcce210g,? ), xcce210h = trunc(xcce210h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce210  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce210,?) ",
                         "                                                          ELSE ROUND(xcce210,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce210,?)",
                         "                                END ),",
                         "                    xcce210a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce210a,?) ",
                         "                                                         ELSE ROUND(xcce210a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce210a,?)",
                         "                                END ),",
                         "                    xcce210b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce210b,?) ",
                         "                                                         ELSE ROUND(xcce210b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce210b,?)",
                         "                                END ),",
                         "                    xcce210c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce210c,?) ",
                         "                                                         ELSE ROUND(xcce210c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce210c,?)",
                         "                                END ),",
                         "                    xcce210d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce210d,?) ",
                         "                                                         ELSE ROUND(xcce210d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce210d,?)",
                         "                                END ),",
                         "                    xcce210e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce210e,?) ",
                         "                                                         ELSE ROUND(xcce210e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce210e,?)",
                         "                                END ),",
                         "                    xcce210f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce210f,?) ",
                         "                                                         ELSE ROUND(xcce210f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce210f,?)",
                         "                                END ),",
                         "                    xcce210g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce210g,?) ",
                         "                                                         ELSE ROUND(xcce210g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce210g,?)",
                         "                                END ),",
                         "                    xcce210h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce210h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce210h,?) ",
                         "                                                         ELSE ROUND(xcce210h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce210h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce210  = ceil(xcce210 *power(10,?))/power(10,?),",
                         "                    xcce210a = ceil(xcce210a*power(10,?))/power(10,?),",
                         "                    xcce210b = ceil(xcce210b*power(10,?))/power(10,?),",
                         "                    xcce210c = ceil(xcce210c*power(10,?))/power(10,?),",
                         "                    xcce210d = ceil(xcce210d*power(10,?))/power(10,?),",
                         "                    xcce210e = ceil(xcce210e*power(10,?))/power(10,?),",
                         "                    xcce210f = ceil(xcce210f*power(10,?))/power(10,?),",
                         "                    xcce210g = ceil(xcce210g*power(10,?))/power(10,?),",
                         "                    xcce210h = ceil(xcce210h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E    
   END CASE
   PREPARE s_axcp500_avg1_set_xcce_1_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcce_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcce_1_p4')
   END IF   
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcce_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcce_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcce_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcce_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcce_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcce_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcce_1_p4')
   END IF  


   #160923-00047#1-e-add
   #更新 xcce307/xcce308 盘差
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp ",
               "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel,   ", #Mod zhangllc 150730 add clevel
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h",
               "                FROM xcck_tmp,sfaa_tmp,sfac_tmp2     ",     #Mod zhangllc 150730 add sfac_tmp2                   
               "                WHERE xcck020 = '501' ",
               "                  AND xcckent = sfaaent ",  #add 150916
               "                  AND xcck047 = sfaadocno ",
               "                  AND xcck001 = '",p_seq,"'",               
               "                  AND sfaa042 = ? ",
               "                  AND sfaadocno=sfacdocno ",  #add zhangllc 150730一张工单的主件即时多特征，也只指定一个成本阶
               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel ", #Mod zhangllc 150730 add clevel
               "                ) b ",
               "          ON ( xcceent = ",g_enterprise,
               "         AND   xcceld  = '",g_ld,"'",
               "         AND   xcce001 = '",p_seq,"'",
               "         AND   xcce002 = b.xcck002  ",
               "         AND   xcce003 = '",g_xcat001,"'",
               "         AND   xcce004 = ",g_yy,
               "         AND   xcce005 = ",g_pp,
               "         AND   xcce006 = b.xcck047  ",       #工单
               "         AND   xcce007 = b.xcck010  ",
               "         AND   xcce008 = b.xcck011  ",
               "         AND   xcce009 = b.xcck017  ",
               #mod zhangllc 150730 --begin
               #"         AND   b.sfaa010 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", 
               #"         AND   (b.sfaa010,b.clevel) IN ( SELECT imaa001,xcbb006 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               "         AND   b.clevel = ",p_xcbb006," ) ", #mod zhangllc SBS4 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到 
               #mod zhangllc 150730 --end 
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcce307  = nvl(b.xcck201 ,0) ,  ",
               "                xcce308  = nvl(b.xcck202 ,0) ,  ",
               "                xcce308a = nvl(b.xcck202a,0) ,  ",
               "                xcce308b = nvl(b.xcck202b,0) ,  ",
               "                xcce308c = nvl(b.xcck202c,0) ,  ",
               "                xcce308d = nvl(b.xcck202d,0) ,  ",
               "                xcce308e = nvl(b.xcck202e,0) ,  ",
               "                xcce308f = nvl(b.xcck202f,0) ,  ",
               "                xcce308g = nvl(b.xcck202g,0) ,  ",
               "                xcce308h = nvl(b.xcck202h,0)    "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_2_2_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_2_2_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  


   EXECUTE s_axcp500_avg1_wip_2_2_p5  USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_2_2_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF


   #160923-00047#1-s-add
   #xcce308,xcce308c,xcce308e,xcce308g金額取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcce_tmp SET xcce308  = round(xcce308 ,? ), xcce308a = round(xcce308a,? ), xcce308b = round(xcce308b,? ), ",
                         "                    xcce308c = round(xcce308c,? ), xcce308d = round(xcce308d,? ), ",
                         "                    xcce308e = round(xcce308e,? ), xcce308f = round(xcce308f,? ), ",
                         "                    xcce308g = round(xcce308g,? ), xcce308h = round(xcce308h,? )  "
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcce_tmp SET xcce308  = trunc(xcce308 ,? ), xcce308a = trunc(xcce308a,? ), xcce308b = trunc(xcce308b,? ), ",
                         "                    xcce308c = trunc(xcce308c,? ), xcce308d = trunc(xcce308d,? ), ",
                         "                    xcce308e = trunc(xcce308e,? ), xcce308f = trunc(xcce308f,? ), ",
                         "                    xcce308g = trunc(xcce308g,? ), xcce308h = trunc(xcce308h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce308  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce308,?) ",
                         "                                                          ELSE ROUND(xcce308,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce308,?)",
                         "                                END ),",
                         "                    xcce308a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce308a,?) ",
                         "                                                         ELSE ROUND(xcce308a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce308a,?)",
                         "                                END ),",
                         "                    xcce308b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce308b,?) ",
                         "                                                         ELSE ROUND(xcce308b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce308b,?)",
                         "                                END ),",
                         "                    xcce308c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce308c,?) ",
                         "                                                         ELSE ROUND(xcce308c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce308c,?)",
                         "                                END ),",
                         "                    xcce308d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce308d,?) ",
                         "                                                         ELSE ROUND(xcce308d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce308d,?)",
                         "                                END ),",
                         "                    xcce308e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce308e,?) ",
                         "                                                         ELSE ROUND(xcce308e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce308e,?)",
                         "                                END ),",
                         "                    xcce308f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce308f,?) ",
                         "                                                         ELSE ROUND(xcce308f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce308f,?)",
                         "                                END ),",
                         "                    xcce308g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce308g,?) ",
                         "                                                         ELSE ROUND(xcce308g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce308g,?)",
                         "                                END ),",
                         "                    xcce308h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce308h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce308h,?) ",
                         "                                                         ELSE ROUND(xcce308h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce308h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce308  = ceil(xcce308 *power(10,?))/power(10,?),",
                         "                    xcce308a = ceil(xcce308a*power(10,?))/power(10,?),",
                         "                    xcce308b = ceil(xcce308b*power(10,?))/power(10,?),",
                         "                    xcce308c = ceil(xcce308c*power(10,?))/power(10,?),",
                         "                    xcce308d = ceil(xcce308d*power(10,?))/power(10,?),",
                         "                    xcce308e = ceil(xcce308e*power(10,?))/power(10,?),",
                         "                    xcce308f = ceil(xcce308f*power(10,?))/power(10,?),",
                         "                    xcce308g = ceil(xcce308g*power(10,?))/power(10,?),",
                         "                    xcce308h = ceil(xcce308h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E    
   END CASE
   PREPARE s_axcp500_avg1_set_xcce_1_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcce_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcce_1_p5')
   END IF  
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_set_xcce_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcce_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcce_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcce_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcce_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcce_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcce_1_p5')
   END IF   
   #160923-00047#1-e-add


   #xcce901/xcce902
   CALL s_axcp500_avg1_sum_xcce(p_xcbb006,p_seq) 
        RETURNING l_success
       

#   LET g_stat_end = TIME
#   CALL s_axcp500_avg1_stats_cnt(21,g_stat_begin,g_stat_end,g_stat_cnt) 
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 产生xccz & xccz期初
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_3(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_3(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()
   #--151125--polly--add

   create index sfba_i01 on sfba_tmp(sfbaent,sfbadocno,sfbaseq,sfba006)  #mod zhangllc 151205 add sfba006 #ODI-ORA#
   IF cl_db_generate_analyze("sfba_tmp") THEN END IF 
   
   IF cl_db_generate_analyze("inaj_tmp") THEN END IF   #171005-00021#1 add
   
   #--151125--polly--add
   #整批插入xccz(各数量/金额为0)
   LET g_sql = "INSERT INTO xccz_tmp (xcczent,  xcczcomp, xcczld,   xccz001,  xccz002, ",
               "                   xccz003,  xccz004,  xccz005,  xccz006,  xccz007, ",
               "                   xccz008,  xccz009,  xccz010,  xccz011,           ",
               "                   xccz101,  xccz201,  xccz205,  xccz207,  xccz209, ",
               "                   xccz301,  xccz303,  xccz307,  xccz901  )         ",              
              #" SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,",                    #161114-00003#1 mark
              #" SELECT /*+ PARALLEL(4) */ UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,", #161114-00003#1 add  #170110-00028#1             
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,", #170110-00028#1             
               "              '",g_xcat001,"',",g_yy,",",g_pp,",inaj020,inaj005,",               
               "                 inaj006,inaj010,sfdc002,sfbaseq1,",
               "                 0,0,0,0,0,0,0,0,0  ",
               #"   FROM inaj_tmp,sfba_tmp,sfdc_t,sfdd_t,sfaa_tmp ",
               "   FROM inaj_tmp,sfba_tmp,sfdc_tmp,sfdd_tmp,sfaa_tmp ", #mod zhangllc 151205 效能可变：临时表快还是实体表快
               #mod zhangllc 151205 -s
               #"  WHERE sfdcent   = sfddent AND sfdcent = inajent ",
               #"    AND sfdcdocno = sfdddocno",                  #发料单号
               #"    AND sfdcseq   = sfddseq  ",                  #发料项次
               #"    AND sfbaent   = sfdcent  ",  #add 150916
               #"    AND sfbadocno = sfdc001  ",
               #"    AND sfbaseq   = sfdc002  ",
               #"    AND sfdd001   = sfba006  ",               
               #"    AND inaj001   = sfdddocno",
               #"    AND inaj002   = sfddseq  ",
               #"    AND inaj003   = sfddseq1 ",
               #"    AND inajsite  = sfddsite ",
               #"    AND sfaaent   = sfbaent   ",  #add 150916
               #"    AND sfaadocno = sfbadocno ",
               #"    AND sfaa003 <> '3'        "                  #非拆件工单
               "  WHERE sfdcent   = sfddent AND sfdcdocno = sfdddocno AND sfdcseq   = sfddseq  ", 
               "    AND sfaaent   = sfbaent AND sfaadocno = sfbadocno ",
               #"    AND sfbaseq1 = sfdc003 ",   #161216-00008#1 add #170504-00004#1 mark
               "    AND sfddent   = inajent AND sfddsite  = inajsite ",           
               "    AND sfdddocno = inaj001 AND sfddseq   = inaj002  AND sfddseq1  = inaj003 ",  
               "    AND sfbaent   = sfdcent AND sfbadocno = sfdc001  AND sfbaseq   = sfdc002  ",
               "    AND sfdd001   = sfba006  ",    
               "    AND sfaa003 <> '3'        "                  #非拆件工单     
               #mod zhangllc 151205 -e
   
   PREPARE s_axcp500_avg1_wip_3_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p1
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   
   
#180606-00035#1---mark---s   
#02295--与02111确认这段已经不再需要故mark
#   #170504-00004#1 add start -----
#   LET g_sql = "UPDATE xccz_tmp ",
#               "   SET xccz011 = nvl((SELECT MIN (sfbaseq1) ",  #170617-00494#1 add nvl
#               "                    FROM sfba_tmp ",
#               "                   WHERE sfbaent = xcczent  AND sfbadocno = xccz006 ",
#               #"                     AND sfbaseq = xccz010 AND sfbaseq1 <> 0) ", #170617-00494#1 mark
#               #170617-00494#1 add start -----
#               "                     AND sfbaseq1 NOT IN (SELECT b.xccz011 ",
#               "                                            FROM xccz_tmp b ",
#               "                                           WHERE sfbaent = b.xcczent AND sfbadocno = b.xccz006 ",
#               "                                             AND sfbaseq = b.xccz010 AND sfbaseq = b.xccz010)),1) ",#170617-00494#1 add 1 #抓不到资料时给1
#               #170617-00494#1 add end   -----
#               " WHERE (SELECT COUNT(*) ",
#               "          FROM sfba_tmp ",
#               "         WHERE sfbaent = xcczent AND sfbadocno = xccz006 ",
#               "           AND sfbaseq = xccz010 AND sfbaseq = xccz010) > 1 ",
#               "           AND xccz011 = 0 "
#   
#   PREPARE s_axcp500_avg1_wip_3_p1_upd_xccz011 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p1_upd_xccz011"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#   END IF  
#
#   EXECUTE s_axcp500_avg1_wip_3_p1_upd_xccz011
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p1_upd_xccz011"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#   END IF                  
#   #170504-00004#1 add end   -----
#180606-00035#1---mark---e

#161208-00030#1 wujie 161207 --begin 补委外代买
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp T1 ",
               "    USING (SELECT DISTINCT inaj005,inaj006,inaj010,inaj020,inaj999,sfbaseq,sfbaseq1 ",
               "      FROM inaj_tmp,sfba_tmp ", 
               "     WHERE inajent   = sfbaent ",
               "       AND inajsite  = sfbasite ",
               "       AND inaj020   = sfbadocno ", 
               "       AND inaj036   = '302' ",
               "       AND (inaj035  = 'apmt531' OR inaj035 = 'apmt571') ",
               "       AND inaj005   = sfba006 ",
               "       AND inaj006   = sfba021 ",
               "       AND sfba015 > 0 ) T2 " ,
               "   ON (xcczent = ",g_enterprise,
               "   AND   xcczld  = '",g_ld,"'",
               "   AND   xccz001 = '",p_seq,"'",
               "   AND   xccz002 = T2.inaj999  ",
               "   AND   xccz003 = '",g_xcat001,"'",
               "   AND   xccz004 = ",g_yy,
               "   AND   xccz005 = ",g_pp,
               "   AND   xccz006 = T2.inaj020 ",       #工单
               "   AND   xccz007 = T2.inaj005 ",
               "   AND   xccz008 = T2.inaj006 ",
               "   AND   xccz009 = T2.inaj010 ",
               "   AND   xccz010 = T2.sfbaseq ",
               "   AND   xccz011 = T2.sfbaseq1 ) ",
               "  WHEN NOT MATCHED THEN ",
               "       INSERT VALUES ( ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',T2.inaj999,",
               "                      '",g_xcat001,"',",g_yy,",",g_pp,",T2.inaj020,T2.inaj005,",               
               "                         T2.inaj006,T2.inaj010,T2.sfbaseq,T2.sfbaseq1,",
               "                         0,0,0,0,0,0,0,0,0) "  #190513-00024#1 add
               #190513-00024#1 mark-S
#               "                         0,0,0,0,0,0,0,0,0 ,",
#               "                         '','','','','', ",
#               "                         '','','','','', ",
#               "                         '','','','','', ",
#               "                         '','','','','', ",
#               "                         '','','','','', ",
#               "                         '','','','',''  )"
               #190513-00024#1 mark-E
   #PGS(D)-00824 --- end ---

   PREPARE s_axcp500_avg1_wip_3_p1_1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p1_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p1_1
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p1_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
#161208-00030#1 wujie 161207 --end

   #期初处理
   #mark zhangllc 151116 --begin
   #LET g_sql = " MERGE INTO xccz_tmp a   ",
   #            "       USING xccz_t b    ",
   #            "          ON ( a.xcczent = b.xcczent         ",
   #            "          AND  a.xcczld  = b.xcczld          ",
   #            "          AND  a.xccz001 = b.xccz001         ",
   #            "          AND  a.xccz002 = b.xccz002         ",
   #            "          AND  a.xccz003 = b.xccz003         ",
   #            "          AND  a.xccz006 = b.xccz006         ",
   #            "          AND  a.xccz007 = b.xccz007         ",
   #            "          AND  a.xccz008 = b.xccz008         ",
   #            "          AND  a.xccz009 = b.xccz009         ",
   #            "          AND  a.xccz010 = b.xccz010         ",
   #            "          AND  a.xccz011 = b.xccz011  )      ",
   #            "  WHEN MATCHED THEN                          ",
   #            "       UPDATE SET a.xccz101  = nvl(b.xccz901,0) ,    ",
   #            "                  a.xccz901  = nvl(b.xccz901,0)      ",               
   #            "        WHERE b.xccz004 = ",g_last_yy,
   #            "          AND b.xccz005 = ",g_last_pp,              
   #            "  WHEN NOT MATCHED THEN                      ",
   #            "       INSERT VALUES(b.xcczent,b.xcczcomp,b.xcczld, b.xccz001,b.xccz002,    ",  
   #            "                     b.xccz003,",g_yy,",",g_pp,",b.xccz006,b.xccz007,       ",
   #            "                     b.xccz008,b.xccz009, b.xccz010,b.xccz011,              ",
   #            "                     b.xccz901,               ",               #101.期初  
   #            "                     0,0,0,0,0,0,0,           ",    
   #            "                     b.xccz901,               ",               #901.期末结存
   #            "        '','','','','','','','','','','','','','','',  ",      #自定义字段
   #            "        '','','','','','','','','','','','','','',''  )",
   #            "        WHERE b.xccz006 IN (SELECT sfaadocno FROM sfaa_tmp ) ",
   #            "          AND b.xcczent = ",g_enterprise,
   #            "          AND b.xcczld  = '",g_ld,"'",
   #            "          AND b.xccz001 = '",p_seq,"'",
   #            "          AND b.xccz003 = '",g_xcat001,"'",
   #            "          AND b.xccz004 = ",g_last_yy,
   #            "          AND b.xccz005 = ",g_last_pp 
   #mark zhangllc 151116 --end
   IF cl_db_generate_analyze("xccz_tmp") THEN END IF #191128-00004#1
   #add zhangllc 151116 --begin
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp a   ",
               "       USING (SELECT * FROM xccz_t ",
               "               WHERE xcczent = ",g_enterprise,
            #   "                 AND xccz006 IN (SELECT sfaadocno FROM sfaa_tmp ) ",  #191126-00022#1 mark
               "                 AND EXISTS (SELECT sfaadocno FROM sfaa_tmp WHERE sfaadocno = xccz006) ",  #191126-00022#1  add
               "                 AND xcczld  = '",g_ld,"'",
               "                 AND xccz001 = '",p_seq,"'",
               "                 AND xccz003 = '",g_xcat001,"'",
               "                 AND xccz004 = ",g_last_yy,
               "                 AND xccz005 = ",g_last_pp,
               "                 AND xccz901 <> 0 ",   #200408-00002#1 add
               #"               ORDER BY xccz006,xccz007,xccz008,xccz009,xccz010,xccz011 ",   #190305-00034#1 add  #200408-00002#1 mark
               "             ) b    ",
               "          ON ( a.xcczent = b.xcczent         ",
               "          AND  a.xcczld  = b.xcczld          ",
               "          AND  a.xccz001 = b.xccz001         ",
               "          AND  a.xccz002 = b.xccz002         ",
               "          AND  a.xccz003 = b.xccz003         ",
               "          AND  a.xccz006 = b.xccz006         ",
               "          AND  a.xccz007 = b.xccz007         ",
               "          AND  a.xccz008 = b.xccz008         ",
               "          AND  a.xccz009 = b.xccz009         ",
               "          AND  a.xccz010 = b.xccz010         ",
               "          AND  a.xccz011 = b.xccz011  )      ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccz101  = nvl(b.xccz901,0) ,    ",
               "                  a.xccz901  = nvl(b.xccz901,0)      ",        
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xcczent,b.xcczcomp,b.xcczld, b.xccz001,b.xccz002,    ",  
               "                     b.xccz003,",g_yy,",",g_pp,",b.xccz006,b.xccz007,       ",
               "                     b.xccz008,b.xccz009, b.xccz010,b.xccz011,              ",
               "                     b.xccz901,               ",               #101.期初  
               "                     0,0,0,0,0,0,0,           ",
               "                     b.xccz901)               "                #901.期末结存  #190513-00024#1 add               
               #190513-00024#1 mark-S               
#               "                     b.xccz901,               ",               #901.期末结存
#               "        '','','','','','','','','','','','','','','',  ",      #自定义字段
#               "        '','','','','','','','','','','','','','',''  )"
               #190513-00024#1 mark-E
   #PGS(D)-00824 --- end ---
   #add zhangllc 151116 --end
               
   PREPARE s_axcp500_avg1_wip_3_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #add zhangllc 160526 --s SBS1 在制开账的部分没写入xccz表的期初,在制开账增加表xcgb对应xccz，有xccb分摊而来
   #从上期的xcgb中结转期初值
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp a   ",
               #190411-00017#1 A mark-S
#               "       USING ( SELECT xcgb_t.* FROM xcgb_t,sfaa_tmp ",
#               "                WHERE xcgbent = sfaaent ",
#               "                  AND xcgb006 = sfaadocno ",
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
               "       USING ( SELECT xcgb_t.* FROM xcgb_t ",
               "                WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xcgbent AND sfaadocno = xcgb006) ",
               #190411-00017#1 A add-E
               "                  AND xcgbent = ",g_enterprise,
               "                  AND xcgbld  = '",g_ld,"'",
               "                  AND xcgb001 = '",p_seq,"'",
               "                  AND xcgb003 = '",g_xcat001,"'",
               "                  AND xcgb004 = ",g_last_yy,
               "                  AND xcgb005 = ",g_last_pp,
--             "                  AND xcgb101 <> 0  ",
               "              ) b    ",
               "          ON ( a.xcczent = b.xcgbent         ",
               "          AND  a.xcczld  = b.xcgbld          ",
               "          AND  a.xccz001 = b.xcgb001         ",
               "          AND  a.xccz002 = b.xcgb002         ",
               "          AND  a.xccz003 = b.xcgb003         ",
               "          AND  a.xccz006 = b.xcgb006         ",
               "          AND  a.xccz007 = b.xcgb007         ",
               "          AND  a.xccz008 = b.xcgb008         ",
               "          AND  a.xccz009 = b.xcgb009         ",
               "          AND  a.xccz010 = b.xcgb010         ",
               "          AND  a.xccz011 = b.xcgb011 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccz101  = nvl(b.xcgb101 ,0) ,   ",
               "                  a.xccz901  = nvl(b.xcgb101 ,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xcgbent,b.xcgbcomp,b.xcgbld, b.xcgb001,b.xcgb002,    ",
               "                     b.xcgb003,",g_yy,",",g_pp,",b.xcgb006,b.xcgb007,    ",
               "                     b.xcgb008,b.xcgb009 ,b.xcgb010,b.xcgb011,     ",
               "                     b.xcgb101,   ", #101.期初
               "                     0,0,0,0,0,0,0, ", #201.本期投入/205.本期当站下线/207.本期一般退料/209.本期超领退/301.本期转出/303.差异转出/307.盘差
               "                     b.xcgb101)   "  #901.期末结存 #190513-00024#1 add
               #190513-00024#1 mark-S
#               "                     b.xcgb101,   ", #901.期末结存
#               "                     '','','','','','','','','','', ",  #自定义字段
#               "                     0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 , 0,0 , ",  #自定义字段
#               "                     '','','','','','','','','',''  ) " #自定义字段
               #190513-00024#1 mark-E
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_3_p2_2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p2_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p2_2
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p2_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   #add zhangllc 160526 --e
   
   #180420-00005#1--add--s
   IF cl_db_generate_analyze("xccz_tmp") THEN END IF  
   IF cl_db_generate_analyze("sfdc_tmp") THEN END IF  
   IF cl_db_generate_analyze("sfdd_tmp") THEN END IF 
   #180420-00005#1--add--e

   #更新各xccz的数量
   #更新201.本期投入數量
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp ",
               "       USING (SELECT inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1, ",
              #161208-00069#1　-s-add 
              #170705-00006#1 mark(S)
               #"                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)  ",
               #"                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002) ",
               #"                                                           ELSE round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               #"                                                         END )",
               #"                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)",
               #"                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)  ",
               "                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002) ",
               "                                                           ELSE round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               "                                                         END )",
               "                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)",
               "                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 add(E)
               "                          END )) qty ",                              
               "                FROM inaj_tmp LEFT OUTER JOIN imaa_t ON imaaent = inajent AND imaa001 = inaj005  ", 
               "                              LEFT OUTER JOIN ooca_t ON oocaent = inajent AND ooca001 = imaa006, ",
               #"                     sfba_tmp,sfdc_t,sfdd_t ",     #180420-00005#1 mark
               "                     sfba_tmp,sfdc_tmp,sfdd_tmp ",  #180420-00005#1 add
              #161208-00069#1　-e-add               
              #"                     SUM(inaj011*inaj014*inaj004*-1) qty ",           #160518-00033#2 mark
              #161208-00069#1-s-mark
              #"                     SUM(inaj011*inaj048/inaj049*inaj004*-1) qty ",   #160518-00033#2 add               
              #"                FROM inaj_tmp,sfba_tmp,sfdc_t,sfdd_t     ",           #151205 效能可变：这边发现用临时表慢
              #161208-00069#1-e-mark
              #"                FROM inaj_tmp,sfba_tmp,sfdc_tmp,sfdd_tmp     ",       #151205  
               #mod zhangllc 151205 -s
               #"               WHERE sfdcent   = sfddent AND sfdcent = inajent ",
               #"                 AND sfdcdocno = sfdddocno",                  #发料单号
               #"                 AND sfdcseq   = sfddseq  ",                  #发料项次
               #"                 AND sfbaent   = sfdcent  ",  #add 150916
               #"                 AND sfbadocno = sfdc001  ",
               #"                 AND sfbaseq   = sfdc002  ",
               #"                 AND sfdd001   = sfba006  ",   
               #"                 AND inajent   = sfddent  ",  #add 150916               
               #"                 AND inaj001   = sfdddocno",
               #"                 AND inaj002   = sfddseq  ",
               #"                 AND inaj003   = sfddseq1 ",
               #"                 AND inajsite  = sfddsite ",                                      
               #"                 AND inaj036 = '302' AND inaj015 <> 'asft312' ",
               "               WHERE sfdcent   = sfddent AND sfdcdocno = sfdddocno AND sfdcseq   = sfddseq ",
               "                 AND sfddent   = inajent AND sfddsite  = inajsite  ", 
               "                 AND sfdddocno = inaj001 AND sfddseq   = inaj002   AND sfddseq1  = inaj003  ",
               "                 AND sfbaent   = sfdcent AND sfbadocno = sfdc001   AND sfbaseq   = sfdc002  ",
               "                 AND sfdd001   = sfba006  ",                                    
               "                 AND inaj036 = '302' AND inaj015 <> 'asft312' ",
               #mod zhangllc 151205 -e
               #"                 AND sfdc003 = sfbaseq1 ",   #170629-00054#1 add      #180205-00026#1 mark    
               "                GROUP BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",
               "                ORDER BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",  #add zhangllc 151205 效能可变：用实体表加order快，用临时表发现不加快，具体加不加看实际效果
               "                ) b ",
               "          ON ( xcczent = ",g_enterprise,
               "         AND   xcczld  = '",g_ld,"'",
               "         AND   xccz001 = '",p_seq,"'",
               "         AND   xccz002 = b.inaj999  ",
               "         AND   xccz003 = '",g_xcat001,"'",
               "         AND   xccz004 = ",g_yy,
               "         AND   xccz005 = ",g_pp,
               "         AND   xccz006 = b.inaj020  ",       #工单
               "         AND   xccz007 = b.inaj005  ",
               "         AND   xccz008 = b.inaj006  ",
               "         AND   xccz009 = b.inaj010  ",
               "         AND   xccz010 = b.sfdc002    ",
               "         AND   xccz011 = b.sfbaseq1 )  ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccz201  = nvl(b.qty,0)   "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_3_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p3 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   

#161208-00030#1 wujie 161207 --begin 补委外代买
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp ",
               "       USING (SELECT inaj999,inaj020,inaj005,inaj006,inaj010,sfbaseq,sfbaseq1, ",
              #161208-00069#1-s-mark 
              #"                     SUM(inaj011*inaj048/inaj049*inaj004*-1) qty ",  
              #"                FROM inaj_tmp,sfba_tmp ",  
              #161208-00069#1-e-mark  
              #161208-00069#1　-s-add  
              #170705-00006#1 mark(S)
               #"               SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)  ",
               #"                         WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002) ",
               #"                                                     ELSE round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               #"                                                   END )",
               #"                         WHEN ooca004 = '3'  THEN trunc(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)",
               #"                         WHEN ooca004 = '4'  THEN ceil(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "               SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)  ",
               "                         WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002) ",
               "                                                     ELSE round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               "                                                   END )",
               "                         WHEN ooca004 = '3'  THEN trunc(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)",
               "                         WHEN ooca004 = '4'  THEN ceil(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 add(E)
               "                    END )) qty ",                              
               "                FROM inaj_tmp LEFT OUTER JOIN imaa_t ON imaaent = inajent AND imaa001 = inaj005  ", 
               "                              LEFT OUTER JOIN ooca_t ON oocaent = inajent AND ooca001 = imaa006, ",
               "                     sfba_tmp ",
              #161208-00069#1　-e-add               
               "               WHERE inajent   = sfbaent ",
               "                 AND inajsite  = sfbasite ",
               "                 AND inaj020   = sfbadocno ", 
               "                 AND inaj036   = '302' ",
               "                 AND (inaj035  = 'apmt531' OR inaj035 = 'apmt571') ",
               "                 AND inaj005   = sfba006 ",
               "                 AND inaj006   = sfba021 ",
               "                 AND sfba015 > 0  ",
               "                GROUP BY inaj999,inaj020,inaj005,inaj006,inaj010,sfbaseq,sfbaseq1",
               "                ORDER BY inaj999,inaj020,inaj005,inaj006,inaj010,sfbaseq,sfbaseq1", 
               "                ) b ",
               "          ON ( xcczent = ",g_enterprise,
               "         AND   xcczld  = '",g_ld,"'",
               "         AND   xccz001 = '",p_seq,"'",
               "         AND   xccz002 = b.inaj999  ",
               "         AND   xccz003 = '",g_xcat001,"'",
               "         AND   xccz004 = ",g_yy,
               "         AND   xccz005 = ",g_pp,
               "         AND   xccz006 = b.inaj020  ",       #工单
               "         AND   xccz007 = b.inaj005  ",
               "         AND   xccz008 = b.inaj006  ",
               "         AND   xccz009 = b.inaj010  ",
               "         AND   xccz010 = b.sfbaseq   ",
               "         AND   xccz011 = b.sfbaseq1 )  ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccz201  = xccz201 + nvl(b.qty,0)   "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_3_p3_1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p3_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p3_1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p3_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
#161208-00030#1 wujie 161207 --end

   #更新205.本期當站下線數量
   IF g_sys_6016 = 'N' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xccz_tmp ",
                  "       USING (SELECT inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1, ",
                 #161208-00069#1　-s-add
                 #170705-00006#1 mark(S)
                  #"                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)  ",
                  #"                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002) ",
                  #"                                                           ELSE round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
                  #"                                                         END )",
                  #"                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)",
                  #"                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6)*power(10,ooca002))/power(10,ooca002) ",
                  #170705-00006#1 mark(E)
                  #170705-00006#1 add(S)
                  "                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)  ",
                  "                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002) ",
                  "                                                           ELSE round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
                  "                                                         END )",
                  "                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)",
                  "                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6)*power(10,ooca002))/power(10,ooca002) ",
                  #170705-00006#1 add(E)
                  "                          END )) qty ",                              
                  "                FROM inaj_tmp LEFT OUTER JOIN imaa_t ON imaaent = inajent AND imaa001 = inaj005  ", 
                  "                              LEFT OUTER JOIN ooca_t ON oocaent = inajent AND ooca001 = imaa006, ",
                  "                     sfba_tmp,sfdc_t,sfdd_t ",
                 #161208-00069#1　-e-add                   
                  #"                     SUM(inaj011*inaj014*inaj004*-1) qty ",           #160518-00033#2 mark
                 #161208-00069#1-s-mark
                 #"                     SUM(inaj011*inaj048/inaj049*inaj004*-1) qty ",    #160518-00033#2 add
                 #"                FROM inaj_tmp,sfba_tmp,sfdc_t,sfdd_t     ",     #151205 效能可变：这边发现用临时表慢
                 #161208-00069#1-e-mark 
                  #"                FROM inaj_tmp,sfba_tmp,sfdc_tmp,sfdd_tmp     ",  #151205
                  #mod zhangllc 151205 -s
                  #"               WHERE sfdcent   = sfddent AND sfdcent = inajent ",
                  #"                 AND sfdcdocno = sfdddocno",                  #发料单号
                  #"                 AND sfdcseq   = sfddseq  ",                  #发料项次
                  #"                 AND sfbaent   = sfdcent  ",  #add 150916
                  #"                 AND sfbadocno = sfdc001  ",
                  #"                 AND sfbaseq   = sfdc002  ",
                  #"                 AND sfdd001   = sfba006  ",               
                  #"                 AND inaj001   = sfdddocno",
                  #"                 AND inaj002   = sfddseq  ",
                  #"                 AND inaj003   = sfddseq1 ",
                  #"                 AND inajsite  = sfddsite ",                                      
                  #"                 AND inaj036 = '115'  ",
                  "               WHERE sfdcent   = sfddent AND sfdcdocno = sfdddocno AND sfdcseq   = sfddseq ",
                  "                 AND sfddent   = inajent AND sfddsite  = inajsite  ", 
                  "                 AND sfdddocno = inaj001 AND sfddseq   = inaj002   AND sfddseq1  = inaj003  ",
                  "                 AND sfbaent   = sfdcent AND sfbadocno = sfdc001   AND sfbaseq   = sfdc002  ",
                  "                 AND sfdd001   = sfba006  ",                                    
                  "                 AND inaj036 = '115'  ",
                  #mod zhangllc 151205 -e
                  "                GROUP BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",
                  "                ORDER BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",  #add zhangllc 151205 效能可变：用实体表加order快，用临时表发现不加快，具体加不加看实际效果
                  "                ) b ",
                  "          ON ( xcczent = ",g_enterprise,
                  "         AND   xcczld  = '",g_ld,"'",
                  "         AND   xccz001 = '",p_seq,"'",
                  "         AND   xccz002 = b.inaj999  ",
                  "         AND   xccz003 = '",g_xcat001,"'",
                  "         AND   xccz004 = ",g_yy,
                  "         AND   xccz005 = ",g_pp,
                  "         AND   xccz006 = b.inaj020  ",       #工单
                  "         AND   xccz007 = b.inaj005  ",
                  "         AND   xccz008 = b.inaj006  ",
                  "         AND   xccz009 = b.inaj010  ",
                  "         AND   xccz010 = b.sfdc002   ",
                  "         AND   xccz011 = b.sfbaseq1 )",
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xccz205  = nvl(b.qty,0)   "   
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_wip_3_p4 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p4"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg1_wip_3_p4 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p4"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF   
   END IF
      
   #更新207.本期一般退料數量
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp ",
               "       USING (SELECT inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1, ",
              #161208-00069#1　-s-add
              #170705-00006#1 mark(S)
               #"                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)  ",
               #"                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002) ",
               #"                                                           ELSE round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               #"                                                         END )",
               #"                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)",
               #"                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)  ",
               "                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002) ",
               "                                                           ELSE round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               "                                                         END )",
               "                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)",
               "                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 add(E)
               "                          END )) qty ",                              
               "                FROM inaj_tmp LEFT OUTER JOIN imaa_t ON imaaent = inajent AND imaa001 = inaj005  ", 
               "                              LEFT OUTER JOIN ooca_t ON oocaent = inajent AND ooca001 = imaa006, ",
               "                     sfba_tmp,sfdc_t,sfdd_t ",
              #161208-00069#1　-e-add                
               #"                     SUM(inaj011*inaj014*inaj004*-1) qty ",            #160518-00033#2 mark
              #161208-00069#1-s-mark
               #"                     SUM(inaj011*inaj048/inaj049*inaj004*-1) qty ",     #160518-00033#2 add
               #"                FROM inaj_tmp,sfba_tmp,sfdc_t,sfdd_t     ",             #151205 效能可变：这边发现用临时表慢
              #161208-00069#1-e-mark
               #"                FROM inaj_tmp,sfba_tmp,sfdc_tmp,sfdd_tmp     ",  #151205 
               #mod zhangllc 151205 -s
               #"               WHERE sfdcent   = sfddent AND sfdcent = inajent ",
               #"                 AND sfdcdocno = sfdddocno",                  #发料单号
               #"                 AND sfdcseq   = sfddseq  ",                  #发料项次
               #"                 AND sfbaent   = sfdcent  ",  #add 150916
               #"                 AND sfbadocno = sfdc001  ",
               #"                 AND sfbaseq   = sfdc002  ",
               #"                 AND sfdd001   = sfba006  ",               
               #"                 AND inaj001   = sfdddocno",
               #"                 AND inaj002   = sfddseq  ",
               #"                 AND inaj003   = sfddseq1 ",
               #"                 AND inajsite  = sfddsite ",                                      
               #"                 AND (inaj036 = '303' AND inaj015 <> 'asft322' OR ",
               #"                      inaj036 = '114' OR inaj036 = '107' ) ",
               "               WHERE sfdcent   = sfddent AND sfdcdocno = sfdddocno AND sfdcseq   = sfddseq ",
               "                 AND sfddent   = inajent AND sfddsite  = inajsite  ", 
               "                 AND sfdddocno = inaj001 AND sfddseq   = inaj002   AND sfddseq1  = inaj003  ",
               "                 AND sfbaent   = sfdcent AND sfbadocno = sfdc001   AND sfbaseq   = sfdc002  ",
               "                 AND sfdd001   = sfba006  ",                           
               "                 AND (inaj036 = '303' AND inaj015 <> 'asft322' OR ",
               "                      inaj036 = '114' OR inaj036 = '107' ) ",
               #mod zhangllc 151205 -e
               "                GROUP BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",
               "                ORDER BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",  #add zhangllc 151205 效能可变：用实体表加order快，用临时表发现不加快，具体加不加看实际效果
               "                ) b ",
               "          ON ( xcczent = ",g_enterprise,
               "         AND   xcczld  = '",g_ld,"'",
               "         AND   xccz001 = '",p_seq,"'",
               "         AND   xccz002 = b.inaj999  ",
               "         AND   xccz003 = '",g_xcat001,"'",
               "         AND   xccz004 = ",g_yy,
               "         AND   xccz005 = ",g_pp,
               "         AND   xccz006 = b.inaj020  ",       #工单
               "         AND   xccz007 = b.inaj005  ",
               "         AND   xccz008 = b.inaj006  ",
               "         AND   xccz009 = b.inaj010  ",
               "         AND   xccz010 = b.sfdc002  ",
               "         AND   xccz011 = b.sfbaseq1)",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccz207  = nvl(b.qty,0)   "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_3_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   #更新209.本期超領退數量
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp ",
               "       USING (SELECT inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1, ",
              #161208-00069#1　-s-add
              #170705-00006#1 mark(S) 
               #"                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)  ",
               #"                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002) ",
               #"                                                           ELSE round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               #"                                                         END )",
               #"                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)",
               #"                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)  ",
               "                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002) ",
               "                                                           ELSE round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               "                                                         END )",
               "                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)",
               "                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 add(E)
               "                          END )) qty ",                              
               "                FROM inaj_tmp LEFT OUTER JOIN imaa_t ON imaaent = inajent AND imaa001 = inaj005  ", 
               "                              LEFT OUTER JOIN ooca_t ON oocaent = inajent AND ooca001 = imaa006, ",
               "                     sfba_tmp,sfdc_t,sfdd_t ",
              #161208-00069#1　-e-add                
               #"                     SUM(inaj011*inaj014*inaj004*-1) qty ",   #160518-00033#2 mark
              #161208-00069#1-s-mark
               #"                     SUM(inaj011*inaj048/inaj049*inaj004*-1) qty ",   #160518-00033#2 add
               #"                FROM inaj_tmp,sfba_tmp,sfdc_t,sfdd_t     ",  
              #161208-00069#1-e-mark 
               #"                FROM inaj_tmp,sfba_tmp,sfdc_tmp,sfdd_tmp     ",   #151205    #151205 效能可变：这边发现用临时表慢
               #mod zhangllc 151205 -s
               #"               WHERE sfdcent   = sfddent AND sfdcent = inajent ",
               #"                 AND sfdcdocno = sfdddocno",                  #发料单号
               #"                 AND sfdcseq   = sfddseq  ",                  #发料项次
               #"                 AND sfbaent   = sfdcent  ",  #add 150916
               #"                 AND sfbadocno = sfdc001  ",
               #"                 AND sfbaseq   = sfdc002  ",
               #"                 AND sfdd001   = sfba006  ",               
               #"                 AND inaj001   = sfdddocno",
               #"                 AND inaj002   = sfddseq  ",
               #"                 AND inaj003   = sfddseq1 ",
               #"                 AND inajsite  = sfddsite ",                                      
               #"                 AND (inaj036 = '302' AND inaj015 = 'asft312'   ",
               #"                  OR  inaj036 = '303' AND inaj015 = 'asft322' ) ",
               "               WHERE sfdcent   = sfddent AND sfdcdocno = sfdddocno AND sfdcseq   = sfddseq ",
               "                 AND sfddent   = inajent AND sfddsite  = inajsite  ", 
               "                 AND sfdddocno = inaj001 AND sfddseq   = inaj002   AND sfddseq1  = inaj003  ",
               "                 AND sfbaent   = sfdcent AND sfbadocno = sfdc001   AND sfbaseq   = sfdc002  ",
               "                 AND sfdd001   = sfba006  ",                       
               "                 AND (inaj036 = '302' AND inaj015 = 'asft312'   ",
               "                  OR  inaj036 = '303' AND inaj015 = 'asft322' ) ",
               #mod zhangllc 151205 -e
               "                GROUP BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",
               "                ORDER BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",  #add zhangllc 151205 效能可变：用实体表加order快，用临时表发现不加快，具体加不加看实际效果
               "                ) b ",
               "          ON ( xcczent = ",g_enterprise,
               "         AND   xcczld  = '",g_ld,"'",
               "         AND   xccz001 = '",p_seq,"'",
               "         AND   xccz002 = b.inaj999  ",
               "         AND   xccz003 = '",g_xcat001,"'",
               "         AND   xccz004 = ",g_yy,
               "         AND   xccz005 = ",g_pp,
               "         AND   xccz006 = b.inaj020  ",       #工单
               "         AND   xccz007 = b.inaj005  ",
               "         AND   xccz008 = b.inaj006  ",
               "         AND   xccz009 = b.inaj010  ",
               "         AND   xccz010 = b.sfdc002  ",
               "         AND   xccz011 = b.sfbaseq1 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccz209  = nvl(b.qty,0)   "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_3_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #更新307.盤差數量
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp ",
               "       USING (SELECT inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1, ",
              #161208-00069#1　-s-add
              #170705-00006#1 mark(S)
               #"                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)  ",
               #"                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002) ",
               #"                                                           ELSE round(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               #"                                                         END )",
               #"                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6),ooca002)",
               #"                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(inaj011*inaj048/inaj049*inaj004*-1,0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "                     SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)  ",
               "                               WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002) ",
               "                                                           ELSE round(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)-(inaj004*1/power(10,ooca002)) ",
               "                                                         END )",
               "                               WHEN ooca004 = '3'  THEN trunc(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6),ooca002)",
               "                               WHEN ooca004 = '4'  THEN ceil(round(COALESCE(( CASE inaj049*inaj004 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*inaj004*-1 END),0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 add(E)
               "                          END )) qty ",                              
               "                FROM inaj_tmp LEFT OUTER JOIN imaa_t ON imaaent = inajent AND imaa001 = inaj005  ", 
               "                              LEFT OUTER JOIN ooca_t ON oocaent = inajent AND ooca001 = imaa006, ",
               "                     sfba_tmp,sfdc_t,sfdd_t ",
              #161208-00069#1　-e-add                 
               #"                     SUM(inaj011*inaj014*inaj004*-1) qty ",     #160518-00033#2 mark
              #161208-00069#1-s-mark 
              #"                     SUM(inaj011*inaj048/inaj049*inaj004*-1) qty ",     #160518-00033#2 add
              #"                FROM inaj_tmp,sfba_tmp,sfdc_t,sfdd_t     ",     #151205 效能可变：这边发现用临时表慢
              #161208-00069#1-e-mark 
               #"                FROM inaj_tmp,sfba_tmp,sfdc_tmp,sfdd_tmp    ",    #151205
               #mod zhangllc 151205 -s
               #"               WHERE sfdcent   = sfddent AND sfdcent = inajent ",
               #"                 AND sfdcdocno = sfdddocno",                  #发料单号
               #"                 AND sfdcseq   = sfddseq  ",                  #发料项次
               #"                 AND sfbaent   = sfdcent  ",  #add 150916
               #"                 AND sfbadocno = sfdc001  ",
               #"                 AND sfbaseq   = sfdc002  ",
               #"                 AND sfdd001   = sfba006  ",               
               #"                 AND inaj001   = sfdddocno",
               #"                 AND inaj002   = sfddseq  ",
               #"                 AND inaj003   = sfddseq1 ",
               #"                 AND inajsite  = sfddsite ",                                      
               #"                 AND inaj036   = '501'    ",
               "               WHERE sfdcent   = sfddent AND sfdcdocno = sfdddocno AND sfdcseq   = sfddseq ",
               "                 AND sfddent   = inajent AND sfddsite  = inajsite  ", 
               "                 AND sfdddocno = inaj001 AND sfddseq   = inaj002   AND sfddseq1  = inaj003  ",
               "                 AND sfbaent   = sfdcent AND sfbadocno = sfdc001   AND sfbaseq   = sfdc002  ",
               "                 AND sfdd001   = sfba006  ",  
               "                 AND inaj036   = '501'    ",
               #mod zhangllc 151205 -e
               "                GROUP BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",
               "                ORDER BY inaj999,inaj020,inaj005,inaj006,inaj010,sfdc002,sfbaseq1",  #add zhangllc 151205 效能可变：用实体表加order快，用临时表发现不加快，具体加不加看实际效果
               "                ) b ",
               "          ON ( xcczent = ",g_enterprise,
               "         AND   xcczld  = '",g_ld,"'",
               "         AND   xccz001 = '",p_seq,"'",
               "         AND   xccz002 = b.inaj999  ",
               "         AND   xccz003 = '",g_xcat001,"'",
               "         AND   xccz004 = ",g_yy,
               "         AND   xccz005 = ",g_pp,
               "         AND   xccz006 = b.inaj020  ",       #工单
               "         AND   xccz007 = b.inaj005  ",
               "         AND   xccz008 = b.inaj006  ",
               "         AND   xccz009 = b.inaj010  ",
               "         AND   xccz010 = b.sfdc002  ",
               "         AND   xccz011 = b.sfbaseq1) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccz307  = nvl(b.qty,0)   "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_3_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_3_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_3_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_3_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 下阶料BY主件入库数量转出- 数量处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_4_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_4_1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010
   DEFINE l_cnt           LIKE type_t.num5    #160726-00001#1 add
   DEFINE l_fin_9027      LIKE type_t.chr1    #200310-00068#1 add
   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()
   

   DROP TABLE wip4_tmp1; #ODI-ORA#

   DROP TABLE wip4_tmp2; #ODI-ORA#

   DROP TABLE wip4_tmp3; #ODI-ORA#

   DROP TABLE wip4_tmp4;   #DL+OH+SUB #ODI-ORA#

   DROP TABLE wip4_tmp5;   #ADJUST  add zhangllc 160526 SBS1 #ODI-ORA#

   DROP TABLE wip4_tmp6;   #SET取替代轉出量   #160726-00001#11 add #ODI-ORA#
#PGS-(D)-03080-----s
#PGS-(D)-03080-----e
   
   #170504-00046#1--add-----s
   IF g_sys_6007 MATCHES '[2]' THEN
      #170705-00006#1 mark(S)
      #LET g_sql = " SELECT sfbadocno,sfbaseq,SUM((sfba013)/sfba022) sfba013,sfaa012,",
      #            #        对主件的QPA                                已入库数量
      #            "        DECODE(sfaa012,0,1,SUM((sfba013)/sfba022)/sfaa012) qpa,(xccd301+xccd303) * -1 xccd301,",
      #            #        本次应转出总量
      #            "        DECODE(sfaa012,0,1,SUM((sfba013)/sfba022)/sfaa012) * (xccd301+xccd303) * -1 qty  ",
      #170705-00006#1 mark(E)
      #170705-00006#1 add(S)
      LET g_sql = " SELECT sfbadocno,sfbaseq,SUM( CASE sfba022 WHEN 0 THEN 0 ELSE (sfba013)/sfba022 END) sfba013,sfaa012,",
                  #        对主件的QPA                                已入库数量
                  "        DECODE(sfaa012,0,1, SUM( CASE sfba022 WHEN 0 THEN 0 ELSE (sfba013)/sfba022 END)/sfaa012) qpa,(xccd301+xccd303) * -1 xccd301,",
                  #        本次应转出总量
                  "        DECODE(sfaa012,0,1, SUM( CASE sfba022 WHEN 0 THEN 0 ELSE (sfba013)/sfba022 END)/sfaa012) * (xccd301+xccd303) * -1 qty  ",            
      #170705-00006#1 add(E)            
                  "   FROM sfba_tmp,sfaa_tmp,xccd_tmp ",
                  "  WHERE sfbadocno = sfaadocno ",
                  "    AND sfbaent   = sfaaent ",  
                  "    AND xccdent   = sfaaent ", 
                  "    AND xccd006   = sfaadocno ",
                  "    AND sfaa012 <> 0 AND sfba022 <> 0 ",  #PGS-(D)-03080 need TQC
                  "  GROUP BY sfbadocno,sfbaseq,sfaa012,xccd301,xccd303 ",
                  "   INTO TEMP wip4_tmp1 "   
   ELSE
   #170504-00046#1--add----e
      #主TABLE：KEY 值（工单单号，项次）
                  #        工单      项次    应发数量                               生产主件数量
      #161208-00030#1 wujie 161207  --begin
      #LET g_sql = " SELECT sfbadocno,sfbaseq,SUM((sfba013-sfba015)/sfba022) sfba013,sfaa012,",
      #LET g_sql = " SELECT sfbadocno,sfbaseq,SUM((sfba013)/sfba022) sfba013,sfaa012,", #170705-00006#1 mark
      LET g_sql = " SELECT sfbadocno,sfbaseq,SUM( CASE sfba022 WHEN 0 THEN 0 ELSE (sfba013)/sfba022 END) sfba013,sfaa012,", #170705-00006#1 add
      #161208-00030#1 wujie 161207 --end
   #wujie 160520 --begin  处理sfaa012=0的情况
                  #        对主件的QPA                                已入库数量
                  #161208-00030#1 wujie 161207  --begin
                  #"        DECODE(sfaa012,0,1,SUM((sfba013-sfba015)/sfba022)/sfaa012) qpa,xccd301 * -1 xccd301,",
                  #"        DECODE(sfaa012,0,1,SUM((sfba013)/sfba022)/sfaa012) qpa,xccd301 * -1 xccd301,", #170705-00006#1 mark
                  "        DECODE(sfaa012,0,1, SUM( CASE sfba022 WHEN 0 THEN 0 ELSE (sfba013)/sfba022 END)/sfaa012) qpa,xccd301 * -1 xccd301,", #170705-00006#1 add
                  #161208-00030#1 wujie 161207 --end
   #               "        SUM((sfba013-sfba015)/sfba022)/sfaa012 qpa,xccd301 * -1 xccd301,",
   #wujie 160520 --end
   #wujie 160520 --begin  处理sfaa012=0的情况
                  #        本次应转出总量
                  #161208-00030#1 wujie 161207  --begin
                  #"        DECODE(sfaa012,0,1,SUM((sfba013-sfba015)/sfba022)/sfaa012) * xccd301 * -1 qty  ",
                  #"        DECODE(sfaa012,0,1,SUM((sfba013)/sfba022)/sfaa012) * xccd301 * -1 qty  ", #170705-00006#1 mark
                  "        DECODE(sfaa012,0,1, SUM( CASE sfba022 WHEN 0 THEN 0 ELSE (sfba013)/sfba022 END)/sfaa012) * xccd301 * -1 qty  ", #170705-00006#1 add
                  #161208-00030#1 wujie 161207 --end
   #               "        SUM((sfba013-sfba015)/sfba022)/sfaa012 * xccd301 * -1 qty  ",
   #wujie 160520 --end
                  "   FROM sfba_tmp,sfaa_tmp,xccd_tmp ",
                  "  WHERE sfbadocno = sfaadocno ",
                  "    AND sfbaent   = sfaaent ",  #add 150916
                  "    AND xccdent   = sfaaent ",  #add 150916
                  "    AND xccd006   = sfaadocno ",
                  "    AND sfaa012 <> 0 AND sfba022 <> 0 ",  #PGS-(D)-03080 need TQC
                  "  GROUP BY sfbadocno,sfbaseq,sfaa012,xccd301 ",
                  "   INTO TEMP wip4_tmp1 "
   END IF #170504-00046#1--add--              
   PREPARE s_axcp500_avg1_wip_4_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     
   #161114-00003#1-s-add
#PGS-(D)-03080-----s
#PGS-(D)-03080-----e


#PGS-(D)-03080-----s
#PGS-(D)-03080-----e

   #b add by zwr 16.10.20 增加索引

   CREATE INDEX wip4_tmp1_i01 ON wip4_tmp1(sfbadocno,sfbaseq);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX wip4_tmp1_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   IF cl_db_generate_analyze("wip4_tmp1") THEN END IF   
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add
   
  #171127-00005#1 mark (s) 
  ##若应发数量或是本次应转数量为0，则此工单项次不处理   
  #DELETE FROM wip4_tmp1 WHERE sfba013 <=0 OR qty <= 0
  #IF SQLCA.sqlcode THEN
  #   INITIALIZE g_errparam TO NULL
  #   LET g_errparam.code   = SQLCA.sqlcode
  #   LET g_errparam.extend = "DELETE FROM wip4_tmp1"
  #   LET g_errparam.popup  = TRUE
  #   CALL cl_err()
# #   RETURN r_success
  #END IF
  #171127-00005#1 mark (e)  

  #191016-00049#1 add ---s---
   #先開TEMP TABLE
   CREATE TEMP TABLE wip4_tmp2(
   sfbadocno     LIKE sfba_t.sfbadocno,
   sfbaseq       LIKE sfba_t.sfbaseq,
   sfbaseq1      LIKE sfba_t.sfbaseq1,
   seq2          LIKE sfba_t.sfbaseq,
   xcce002       LIKE xcce_t.xcce002,
   xcce007       LIKE xcce_t.xcce007,
   xcce008       LIKE xcce_t.xcce008,
   xcce009       LIKE xcce_t.xcce009,
   qty2          LIKE xccz_t.xccz101,
   sfba022       LIKE sfba_t.sfba022,
   qty1          LIKE sfba_t.sfba022,
   qty3          LIKE sfba_t.sfba022,
   qty4          LIKE sfba_t.sfba022,
   qty5          LIKE sfba_t.sfba022,
   sfba014       LIKE sfba_t.sfba014,
   imaa006       LIKE imaa_t.imaa006,
   rate          LIKE sfba_t.sfba022
   );
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'wip4_tmp2'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF
  #191016-00049#1 add ---e---

   #元件TABLE：KEY 值（工单单号，项次，项序，发料料号，特征，批号 = 同xccz_t的KEY值）
   #                    工单      项次    项序     序号（用于计算累计已发量）
  #LET g_sql = " SELECT sfbadocno,sfbaseq,sfbaseq1,ROW_NUMBER() OVER ( PARTITION BY sfbadocno ORDER BY sfbaseq,sfbaseq1 ) seq2,", #191016-00049#1 mark
   LET g_sql = " INSERT INTO wip4_tmp2 SELECT sfbadocno,sfbaseq,sfbaseq1,ROW_NUMBER() OVER ( PARTITION BY sfbadocno ORDER BY sfbaseq,sfbaseq1 ) seq2,", #191016-00049#1 add
   #                    成本域  发料料号 特征   批次      已发量（考虑替代率）--qty2 
               #"        xcce002,xcce007,xcce008,xcce009,xccz101 + xccz201 + xccz207 + xccz209 qty2,",   #180206-00033#1 mark
               "        xcce002,xcce007,xcce008,xcce009,xccz101 + xccz201 + xccz207 qty2,",              #180206-00033#1 add 
   #                    替代率  已发量（不管替代率）--qty1                         累计已发量 qty3
               #"        sfba022,(xccz101 + xccz201 + xccz207 + xccz209) / sfba022 qty1,0 qty3,", #170705-00006#1 mark
               #"        sfba022, (CASE sfba022 WHEN 0 THEN 0 ELSE (xccz101 + xccz201 + xccz207 + xccz209) / sfba022 END) qty1,0 qty3,", #170705-00006#1 add #180206-00033#1 mark
               "        sfba022, (CASE sfba022 WHEN 0 THEN 0 ELSE (xccz101 + xccz201 + xccz207) / sfba022 END) qty1,0 qty3,", #180206-00033#1 add 
   #                    转出量(不考虑替代率）    转出量（考虑替代率）        
               "        0 qty4,                0 qty5,",
   #                    单位    基础单位 单位换算率
               "        sfba014,imaa006,0 rate ",   #add zhangllc 150909 
               "  FROM sfba_tmp,xcce_tmp,xccz_tmp,imaa_t ",  #mod zhangllc 150909 add imaa_t
               " WHERE sfbadocno = xcce006 AND xcce006 = xccz006 ",
               "   AND sfbaent   = xcceent  ",  #add 150919
               "   AND sfba006   = xcce007 AND xcce007 = xccz007 ",
               "   AND xcce008   = xccz008 AND xcce009 = xccz009 ",
               "   AND xccz010   = sfbaseq AND xccz011 = sfbaseq1 ",
               "   AND xccz002   = xcce002 ",
              #191016-00049#1 modify ---s---
              #"   AND imaaent   = sfbaent AND imaa001=sfba006 ", #add zhangllc 150909 
              #"   INTO TEMP wip4_tmp2 "
               "   AND imaaent   = sfbaent AND imaa001=sfba006 "
              #191016-00049#1 modify ---e---
               
   PREPARE s_axcp500_avg1_wip_4_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

#200810-00030#6 add -S-
CREATE INDEX sfba_tmp_test ON sfba_tmp (sfbaent,sfbadocno,sfbaseq,sfbaseq1,sfba006)
CREATE INDEX xcce_tmp_test ON xcce_tmp (xcceent,xcce002,xcce006,xcce007,xcce008,xcce009)
CREATE INDEX xccz_tmp_test ON xccz_tmp (xccz002,xccz006,xccz007,xccz008,xccz009,xccz010,xccz011)
#200810-00030#6 add -E-

   EXECUTE s_axcp500_avg1_wip_4_1_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     
   #161114-00003#1-s-add
   #b add by zwr 16.10.20 增加索引

   CREATE INDEX wip4_tmp2_i01 ON wip4_tmp2(sfbadocno,sfbaseq,seq2);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX wip4_tmp2_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   IF cl_db_generate_analyze("wip4_tmp2") THEN END IF
   #e add by zwr 16.10.20
   #161114-00003#1-e-add
   
   #171127-00005#1 mark (s) 
   #若已发料（不管替代率）<=0 ，则不处理
   #DELETE FROM wip4_tmp2 WHERE qty1 <=0
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "DELETE FROM wip4_tmp2"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
#  #   RETURN r_success
   #END IF
   #171127-00005#1 mark (e)    

   #add zhangllc 150909 --begin
   #计算单位换算率--单位相同的给1
   LET g_sql = " UPDATE wip4_tmp2 SET rate = 1 ",
               "  WHERE sfba014 = imaa006  ",
               "    AND rate    = 0  "
   PREPARE s_axcp500_avg1_wip_4_1_rate_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_rate_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   EXECUTE s_axcp500_avg1_wip_4_1_rate_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_rate_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #计算单位换算率--不同单位的计算（取料件的单位换算）
   #mod zhangllc 151116
   #LET g_sql = " UPDATE wip4_tmp2 SET rate = ( SELECT imad005/imad003 FROM imad_t ",
   #            "                                WHERE xcce007 = imad001  ", #发料料号
   #            "                                  AND sfba014 = imad002  ", #来源单位
   #            "                                  AND imaa006 = imad004  ", #目的单位
   #            "                                  AND imadent = ",g_enterprise,
   #            "                                  AND imadstus = 'Y' ) ",
   #            "  WHERE rate    = 0  "
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO wip4_tmp2 a   ",
               "       USING (SELECT * FROM imad_t ",
               "               WHERE imadent = ",g_enterprise,
               "                 AND imadstus = 'Y' ",
               "             ) b    ",
               "          ON ( a.xcce007 = b.imad001   ", #发料料号
               "          AND  a.sfba014 = b.imad002   ", #来源单位
               "          AND  a.imaa006 = b.imad004 ) ", #目的单位
               "  WHEN MATCHED THEN                          ",
               #"       UPDATE SET a.rate  = b.imad005/b.imad003  ", #170705-00006#1 mark
               "       UPDATE SET a.rate  = ( CASE b.imad003 WHEN 0 THEN 0 ELSE b.imad005/b.imad003 END)  ", #170705-00006#1 add
               "        WHERE a.rate = 0  "
   #PGS(D)-00824 --- end ---
   #mod zhangllc 151116 end
   PREPARE s_axcp500_avg1_wip_4_1_rate_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_rate_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   EXECUTE s_axcp500_avg1_wip_4_1_rate_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_rate_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #计算单位换算率--不同单位的计算（取单位换算 不看料）
   #mod zhangllc 151116 begin
   #LET g_sql = " UPDATE wip4_tmp2 SET rate = ( SELECT oocc004/oocc002 FROM oocc_t ",
   #            "                                WHERE sfba014 = oocc001  ", #来源单位
   #            "                                  AND imaa006 = oocc003  ", #目的单位
   #            "                                  AND ooccent = ",g_enterprise,
   #            "                                  AND ooccstus = 'Y' ) ",
   #            "  WHERE rate    = 0  "
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO wip4_tmp2 a   ",
               "       USING (SELECT * FROM oocc_t ",
               "               WHERE ooccent = ",g_enterprise,
               "                 AND ooccstus = 'Y' ",
               "             ) b    ",
               "          ON ( a.sfba014 = b.oocc001   ", #来源单位
               "          AND  a.imaa006 = b.oocc003 ) ", #目的单位
               "  WHEN MATCHED THEN                          ",
               #"       UPDATE SET a.rate  = b.oocc004/b.oocc002  ", #170705-00006#1 mark
               "       UPDATE SET a.rate  = ( CASE b.oocc002 WHEN 0 THEN 0 ELSE b.oocc004/b.oocc002 END)  ", #170705-00006#1 add
               "        WHERE a.rate = 0  "
   #PGS(D)-00824 --- end ---
   #mod zhangllc 151116 end
   PREPARE s_axcp500_avg1_wip_4_1_rate_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_rate_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   EXECUTE s_axcp500_avg1_wip_4_1_rate_p3 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_rate_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #计算单位换算率--未获取换算单位的赋1
   LET g_sql = " UPDATE wip4_tmp2 SET rate = 1 ",
               "  WHERE rate = 0  "
   PREPARE s_axcp500_avg1_wip_4_1_rate_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_rate_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   EXECUTE s_axcp500_avg1_wip_4_1_rate_p4
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_rate_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #add zhangllc 150909 --end
   
   #更新累计已发量 qty3                                    已发量（不管替代率，即已经按替代率换成成了主料的数量了）
   #mod zhangllc 160529--s SBS3 sql效能优化
   #LET g_sql = " UPDATE wip4_tmp2 a SET a.qty3 = ( SELECT SUM(b.qty1) FROM wip4_tmp2 b ",
   #            "                                    WHERE a.sfbadocno = b.sfbadocno  ",
   #            "                                      AND a.sfbaseq   = b.sfbaseq    ",
   #            "                                      AND a.seq2     >= b.seq2 )     "
   #PGS(D)-00824 ---start---
   LET g_sql = "  MERGE INTO wip4_tmp2 c ",
               "  USING (SELECT noa sfbadocno ,seqa sfbaseq,seq2a seq2,SUM(d.qty1) qty       ", --获取sfbadocno，sfbaseq及各个seq2自己坐在数字应有的累计qty1
               "           FROM ( SELECT a.qty3,a.sfbadocno noa,a.sfbaseq seqa,a.seq2 seq2a,  ", 
               "                        b.qty1,b.sfbadocno nob,b.sfbaseq seqb,b.seq2 seq2b   ",
               "                   FROM wip4_tmp2 a,wip4_tmp2 b                              ",
               "                  WHERE a.sfbadocno = b.sfbadocno                            ",
               "                    AND a.sfbaseq   = b.sfbaseq                              ",
               "                    AND a.seq2     >= b.seq2                                 ",
               "                  ORDER BY a.sfbaseq,a.seq2                                  ",
               "                 ) d                                                         ",
               "           GROUP BY noa ,seqa,seq2a                                          ",
               "       ) e                                                                   ",
               "    ON (c.sfbadocno = e.sfbadocno                                            ",
               "        AND c.sfbaseq   = e.sfbaseq                                          ",
               "        AND c.seq2  = e.seq2)                                                ",
               "  WHEN MATCHED THEN UPDATE SET c.qty3 =e.qty                                 "
   #PGS(D)-00824 --- end ---
   #mod zhangllc 160529--e
   PREPARE s_axcp500_avg1_wip_4_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p3 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                                          
                                      

   #若wip4_tmp2的qty3(累计已发量）<= wip4_tmp1(本次应转出数量 qty)，则直接全部转出qty4=qty1,qty5=qty2
   #LET g_sql = " UPDATE wip4_tmp2 a SET a.qty4 = a.qty1, a.qty5 = a.qty2   ",   #PGS-(D)-03080 mark
   LET g_sql = " UPDATE wip4_tmp2 a SET qty4 = a.qty1, qty5 = a.qty2   ",   #PGS-(D)-03080 
               "  WHERE EXISTS ( SELECT 1 FROM wip4_tmp1 b           ",
               "                  WHERE a.sfbadocno = b.sfbadocno    ",
               "                    AND a.sfbaseq   = b.sfbaseq      ",
               #"                    AND a.qty3     <= b.qty )        "   #180206-00033#1 mark
               "                    AND a.qty3     <= b.qty AND b.qty<>0)        "   #180206-00033#1 add 
   PREPARE s_axcp500_avg1_wip_4_1_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                                                    
   
#wujie 160523 --begin  test 转出实体表为排查下列sql效能
   LET g_sql = " CREATE TABLE axcp500_wip4_tmp2 AS SELECT * FROM wip4_tmp2 "
   
   PREPARE s_axcp500_avg_execute_p211 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "s_axcp500_avg_execute_p211"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   EXECUTE s_axcp500_avg_execute_p211
   FREE s_axcp500_avg_execute_p211
   
   LET g_sql = " CREATE TABLE axcp500_wip4_tmp1 AS SELECT * FROM wip4_tmp1 "
   
   PREPARE s_axcp500_avg_execute_p212 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "s_axcp500_avg_execute_p212"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   EXECUTE s_axcp500_avg_execute_p212 
   FREE s_axcp500_avg_execute_p212   
#wujie 160523 --end

   #上面处理的项序，都是完全转出，但是完全转出后，还不满足“总应转数量”，则要考虑后续项序的部分转出
   #LET g_sql = " UPDATE wip4_tmp2 a SET a.qty4 = ( SELECT b.qty - ( SELECT SUM(c.qty4) FROM wip4_tmp2 c ",   #PGS-(D)-03080 mark
   LET g_sql = " UPDATE wip4_tmp2 a SET qty4 = ( SELECT b.qty - ( SELECT SUM(c.qty4) FROM wip4_tmp2 c ",   #PGS-(D)-03080
               "                                                     WHERE c.sfbadocno = a.sfbadocno AND c.sfbaseq = a.sfbaseq ) ",
               "                                     FROM wip4_tmp1 b   ",
               "                                    WHERE b.sfbadocno = a.sfbadocno  ",
               "                                      AND b.sfbaseq   = a.sfbaseq )  ",
               " WHERE a.seq2 = ( SELECT MIN(d.seq2) FROM wip4_tmp2 d ",
               #191206-00002#1---mod---s
               #"                   WHERE d.sfbadocno = a.sfbadocno AND d.sfbaseq = a.sfbaseq AND d.qty4 = 0 ) ",
               "                   WHERE d.sfbadocno = a.sfbadocno AND d.sfbaseq = a.sfbaseq ",
               "                     AND d.qty1 <> 0 AND d.qty4 = 0 ) ",               
               #191206-00002#1---mod---s
               "   AND a.qty4 = 0 "
   PREPARE s_axcp500_avg1_wip_4_1_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   #上面那句SQL只更新了qty4(转出量--不考虑替代率），本句要更新qty5(转出量--考虑替代率）
#  UPDATE wip4_tmp2 SET qty5 = qty4 / sfba022
   UPDATE wip4_tmp2 SET qty5 = qty4 * sfba022
    WHERE qty4 <> 0 AND qty5 = 0
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp2 SET qty5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    
   
#   #若下阶多发了,但是主件数量全部转出,则下阶也全部转出
#   UPDATE wip4_tmp2 SET qty5 = qty2
#    WHERE sfbadocno IN ( SELECT xccd006 FROM xccd_tmp WHERE xccd301 = -1 *(xccd101+xccd201) AND xccd301 <> 0)
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE wip4_tmp2 SET qty5"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF      
   
   #更新xccz上的301                                (*rate换算成成本计算的基础单位)
   #mod zhangllc 151116 begin
   #UPDATE xccz_tmp SET xccz301 = ( SELECT qty5 * -1 * rate FROM wip4_tmp2  #mod zhangllc 150909 add rate
   #                                 WHERE sfbadocno = xccz006
   #                                   AND xcce002   = xccz002
   #                                   AND xcce007   = xccz007
   #                                   AND xcce008   = xccz008
   #                                   AND xcce009   = xccz009
   #                                   AND sfbaseq   = xccz010
   #                                   AND sfbaseq1  = xccz011 )
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp a   ",
               "       USING wip4_tmp2 b    ",
               "          ON ( b.sfbadocno = a.xccz006   ", 
               "          AND  b.xcce002   = a.xccz002 ",
               "          AND  b.xcce007   = a.xccz007 ", 
               "          AND  b.xcce008   = a.xccz008 ", 
               "          AND  b.xcce009   = a.xccz009 ", 
               "          AND  b.sfbaseq   = a.xccz010 ", 
               "          AND  b.sfbaseq1  = a.xccz011 )",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccz301  = b.qty5 * -1 * b.rate  "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_1_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   #mod zhangllc 151116 end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccz_tmp SET xccz301"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    

   #160726-00001#11 add --(S)--
   #處理SET取替代轉出量
   LET g_sql = " SELECT a.sfbadocno,a.sfbaseq,a.sfbaseq1,",
   #                    发料料号   特征             
               "        a.sfba006,NVL(b.xcce008,a.sfba021) xcce008,",
   #                    已发量（不管替代率）qty1  已发量（考虑替代率）qty2 累计已发量 qty3
               "        NVL(b.qty1,0) qty1,      NVL(b.qty2,0) qty2,    NVL(d.qty3,0)+NVL(b.qty2,0) qty3,", 
   #                    转出量(不考虑替代率）  转出量（考虑替代率）          
               "        NVL(b.qty4,0) qty4,   NVL(b.qty5,0) qty5,",
   #                    累計已發套數  SET取替代群組套數  SET取替代群組總套數  SET取替代轉出量     
               "        0  qty6,     0  qty7,          0  qty8,            0 qty9, ",
   #                    单位                              单位换算率            累計轉出量                   累計套數   SET取替代群組累計總套數
               "        NVL(b.sfba014,a.sfba014) sfba014, NVL(b.rate,1) rate,  NVL(d.qty10,0) * -1 qty10,  0 qty11,  0 qty12,               ",
   #                    剩餘轉出套數   主件本次轉出套數             主件累計轉出套數            主件剩餘轉出套數
               "        0 qty13,      NVL(c.qty14,0) * -1 qty14, NVL(e.qty15,0) * -1 qty15,  0 qty16, ",
   #                    QPA分子   QPA分母    SET替代狀態 SET替代群組  SET被替代群組  SET替代套數       
               "        a.sfba010,a.sfba011,a.sfba026,  a.sfba027,  a.sfba034,    a.sfba035 ",    
               "   FROM sfba_tmp a LEFT JOIN wip4_tmp2 b ON a.sfbadocno = b.sfbadocno AND a.sfbaseq = b.sfbaseq AND a.sfbaseq1  = b.sfbaseq1 ",
               "                   LEFT JOIN (SELECT xccz006,xccz010,xccz011,sum(xccz201-xccz901) qty3,sum(xccz301) qty10 ",
               "                                FROM xccz_t ", 
               "                               WHERE xcczent = ",g_enterprise,
               "                                AND ((xccz004 < ",g_yy,") OR (xccz004 = ",g_yy," AND xccz005 < ",g_pp,")) ",
               "                              GROUP BY xccz006,xccz010,xccz011) d ON d.xccz006=a.sfbadocno AND d.xccz010 = a.sfbaseq AND d.xccz011 = a.sfbaseq1 ",
               "                   LEFT JOIN (SELECT xccd006,sum(xccd301+xccd303) qty15 ",
               "                                FROM xccd_t ", 
               "                               WHERE xccdent = ",g_enterprise,
               "                                AND ((xccd004 < ",g_yy,") OR (xccd004 = ",g_yy," AND xccd005 < ",g_pp,")) ",
               "                              GROUP BY xccd006) e ON e.xccd006=a.sfbadocno ",
               "                   LEFT JOIN (SELECT xccdent,xccd006,(xccd301+xccd303) qty14  FROM xccd_tmp) c  ON c.xccdent = a.sfbaent AND c.xccd006 = a.sfbadocno  ",  
               "  WHERE a.sfba008 IN ('1' ,'2') ",
               "    AND a.sfba026 <> '1' ",
               "   INTO TEMP wip4_tmp6 "
               
   PREPARE s_axcp500_avg1_wip_4_1_p10 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p10"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p10 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p10"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF     
   
   #增加索引

   CREATE INDEX wip4_tmp6_i01 ON wip4_tmp6(sfbadocno,sfbaseq,sfbaseq1);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX wip4_tmp6_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   IF cl_db_generate_analyze("wip4_tmp6") THEN END IF
   
   LET l_cnt = 0
   
   SELECT COUNT(1) INTO l_cnt FROM wip4_tmp6
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
   
   IF l_cnt > 0 THEN
   
      IF s_axcp500_avg1_getsetout() THEN
         
         #將SET取替代的轉出量更新至xccz_tmp的xccz301
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xccz_tmp a   ",
                     "       USING (SELECT DISTINCT sfbadocno,sfbaseq,sfbaseq1,qty9,rate FROM wip4_tmp6) b ",
                     "          ON ( b.sfbadocno = a.xccz006 ",  #工單編號  
                     "          AND  b.sfbaseq   = a.xccz010 ",  #項次
                     "          AND  b.sfbaseq1  = a.xccz011 )", #項序
                     "  WHEN MATCHED THEN                          ",
                     "       UPDATE SET a.xccz301  = b.qty9 * -1 * b.rate  "
         #PGS(D)-00824 --- end ---
         PREPARE s_axcp500_avg1_wip_4_1_p11 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p11"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF  

         EXECUTE s_axcp500_avg1_wip_4_1_p11 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p11"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF   
                     
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "CALL s_axcp500_avg1_getsetout"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF       
   END IF            
   #160726-00001#11 add --(E)--
                
   #180613-00026#1---add---s
   #对xccz301转出数量进行单位的小数取位              
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccz_tmp a   ",
               " USING (SELECT xcczld,xccz001,xccz002,xccz003,xccz004,xccz005,xccz006,xccz007,xccz008,xccz009,xccz010,xccz011,",
               "               (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xccz301,0),6),ooca002) " ,
               "                     WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xccz301,0),6),ooca002),(2/power(10,ooca002)))=0 ",
               "                                                 THEN round(round(COALESCE(xccz301,0),6),ooca002) ",
               "                                                 ELSE round(round(COALESCE(xccz301,0),6),ooca002)-(-1/power(10,ooca002)) ",
               "                                             END )",
               "                     WHEN ooca004 = 3 THEN trunc(round(COALESCE(xccz301,0),6),ooca002)",
               "                     WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xccz301,0),6)*power(10,ooca002))/power(10,ooca002)",
               "                END) qty ",
               "          FROM xccz_tmp,imaa_t,ooca_t",
               "         WHERE xcczent=imaaent AND xccz007=imaa001 ",
               "           AND imaaent = oocaent AND imaa006=ooca001) b " ,
               "   ON  (a.xcczld  = b.xcczld          ",
               "   AND  a.xccz001 = b.xccz001         ",
               "   AND  a.xccz002 = b.xccz002         ",
               "   AND  a.xccz003 = b.xccz003         ",
               "   AND  a.xccz006 = b.xccz006         ",
               "   AND  a.xccz007 = b.xccz007         ",
               "   AND  a.xccz008 = b.xccz008         ",
               "   AND  a.xccz009 = b.xccz009         ",
               "   AND  a.xccz010 = b.xccz010         ",
               "   AND  a.xccz011 = b.xccz011  )      ",
               "  WHEN MATCHED THEN                   ",
               "       UPDATE SET a.xccz301  = nvl(b.qty,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_1_xccz301 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_xccz301"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_xccz301 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_xccz301"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF     
   #180613-00026#1---add---e
   
   UPDATE xccz_tmp SET xccz901 = xccz101 + xccz201 + xccz205 + xccz207 +
                                 xccz209 + xccz301 + xccz303 + xccz307
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccz_tmp SET xccz901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                                 
   
   #产生wip4_tmp3的TABLE
   #元件TABLE：KEY 值（工单单号，成本域，料件，特征，批号）
   #                    本位币顺序           成本域  工单              重工否   料件    特征    批号    成本阶
   LET g_sql = " SELECT '",p_seq,"' xcce001,xcce002,sfbadocno xcce006,sfaa042,xcce007,xcce008,xcce009,0 xcbb006,",
               #        转出数量(*rate换算成成本计算的基础单位)
               "        SUM(qty5*-1*rate) xcce301, ",   #mod zhangllc 150909 add rate
               "        imaa006,ooca002,ooca004, ",     #170629-00045#1 add      
               #        转出成本(xcce302)
               "        0 xcce302,0 xcce302a,0 xcce302b,0 xcce302c,0 xcce302d,0 xcce302e,",
               "        0 xcce302f,0 xcce302g,0 xcce302h ",
               #"   FROM wip4_tmp2,xccd_tmp,sfaa_tmp ",  #170629-00045#1 mark 
               "   FROM wip4_tmp2 LEFT JOIN ooca_t ON oocaent = ",g_enterprise," AND ooca001=imaa006,xccd_tmp,sfaa_tmp ",  #170629-00045#1  add               
               "  WHERE sfbadocno = xccd006 ",
               "    AND sfaaent   = xccdent ",  #add 150916
               "    AND sfaadocno = xccd006 ",
               "  GROUP BY xcce002,sfbadocno,sfaa042,xcce007,xcce008,xcce009 ",
               "           ,imaa006,ooca002,ooca004",   #170629-00045#1  add
               "   INTO TEMP wip4_tmp3 "
   PREPARE s_axcp500_avg1_wip_4_1_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    
   
   #161114-00003#1-s-add
   #b add by zwr 16.10.20 增加索引

   CREATE INDEX wip4_tmp3_i01 ON wip4_tmp3(xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,sfaa042,xcbb006);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX wip4_tmp3_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#      RETURN r_success
   END IF
   IF cl_db_generate_analyze("wip4_tmp3") THEN END IF   
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add
   
   
   #200310-00068#1---add---s
   LET l_fin_9027 = cl_get_para(g_enterprise,g_comp,'S-FIN-9027')
   IF l_fin_9027 = 'Y' THEN 
   #200310-00068#1---add---e
      #170629-00045#1---add---s
      #对元件转出数量进行单位的小数取位
      #180620-00045#1---mod---s
      #LET g_sql = " UPDATE wip4_tmp3 ",
      #            "    SET xcce301 = (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xcce301,0),6),ooca002) " ,
      #            "                        WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xcce301,0),6),ooca002),(2/power(10,ooca002)))=0 ",
      #            "                                                    THEN round(round(COALESCE(xcce301,0),6),ooca002) ",
      #            "                                                    ELSE round(round(COALESCE(xcce301,0),6),ooca002)-(-1/power(10,ooca002)) ",
      #            "                                                END )",
      #            "                        WHEN ooca004 = 3 THEN trunc(round(COALESCE(xcce301,0),6),ooca002)",
      #            "                        WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xcce301,0),6)*power(10,ooca002))/power(10,ooca002)",
      #            "                    END )"               
      LET g_sql = " UPDATE wip4_tmp3 ",
                  "    SET xcce301 = round(round(COALESCE(xcce301,0),6),3)"
                 ,"  WHERE ooca002 <= 3"  #190809-00016#1
      #180620-00045#1---mod---e
      PREPARE s_axcp500_avg1_wip_4_1_p9 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p9"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
    
      EXECUTE s_axcp500_avg1_wip_4_1_p9 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p9"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF     
      #170629-00045#1---add---e
      
      #201119-00005#1 add--s           
      LET g_sql = " UPDATE wip4_tmp3 ",
                  "    SET xcce301 = (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xcce301,0),6),ooca002) " ,
                  #"                        WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xcce301,0),6),ooca002),(2/power(10,ooca002)))=0 ", #200922-00036#1 mark
                  "                        WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xcce301,0),6),ooca002),CAST((2/power(10, 2)) as number))=0 ", #200922-00036#1 
                  "                                                    THEN round(round(COALESCE(xcce301,0),6),ooca002) ",
                  "                                                    ELSE round(round(COALESCE(xcce301,0),6),ooca002)-(-1/power(10,ooca002)) ",
                  "                                                END )",
                  "                        WHEN ooca004 = 3 THEN trunc(round(COALESCE(xcce301,0),6),ooca002)",
                  "                        WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xcce301,0),6)*power(10,ooca002))/power(10,ooca002)",
                  "                    END )",
                  "  WHERE ooca002 > 3"       
      #201119-00005#1 add--e       
      PREPARE s_axcp500_avg1_wip_4_1_p92 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p92"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
    
      EXECUTE s_axcp500_avg1_wip_4_1_p92 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p92"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF        
      #190809-00016#1---add---e
   #200310-00068#1---add---s   
   ELSE
      #201119-00005#1 add--s           
      LET g_sql = " UPDATE wip4_tmp3 ",
                  "    SET xcce301 = (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xcce301,0),6),ooca002) " ,
                  #"                        WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xcce301,0),6),ooca002),(2/power(10,ooca002)))=0 ", #200922-00036#1 mark
                  "                        WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xcce301,0),6),ooca002),CAST((2 / power(10, 2)) as number))=0 ", #200922-00036#1 
                  "                                                    THEN round(round(COALESCE(xcce301,0),6),ooca002) ",
                  "                                                    ELSE round(round(COALESCE(xcce301,0),6),ooca002)-(-1/power(10,ooca002)) ",
                  "                                                END )",
                  "                        WHEN ooca004 = 3 THEN trunc(round(COALESCE(xcce301,0),6),ooca002)",
                  "                        WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xcce301,0),6)*power(10,ooca002))/power(10,ooca002)",
                  "                    END )"       
      #201119-00005#1 add--e       
      PREPARE s_axcp500_avg1_wip_4_1_p93 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p93"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
    
      EXECUTE s_axcp500_avg1_wip_4_1_p93
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p93"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF   
   END IF
   #200310-00068#1---add---e
   #180613-00026#1---add---s

   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO wip4_tmp3 a ",
               "       USING (SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,   ",
               "                     xcce101,",
               "                     nvl(SUM(xcck009 * - 1 * xcck201 ),0) xcck201 ",   
               "                FROM xcce_tmp LEFT OUTER JOIN xcck_tmp     ",
               "                                     ON  xcck020 IN ('302','303','114','107')  ", #发料，退料，回收入库，委外回收入库
               "                                     AND xcce001 = xcck001 ",
               "                                     AND xcce002 = xcck002 ",
               "                                     AND xcce006 = xcck047 ",
               "                                     AND xcce007 = xcck010 ",
               "                                     AND xcce008 = xcck011 ",
               "                                     AND xcce009 = xcck017 ",
               "                GROUP BY xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,",
               "                         xcce101 ",
               "                ) b ",
               "          ON ( a.xcce001 = b.xcce001 ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",      
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009 )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301 = (b.xcck201 + b.xcce101)*-1", 
               "      WHERE ABS(b.xcck201 + b.xcce101) < ABS(a.xcce301) "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_1_p12 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p12 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF                     
   #180613-00026#1---add---e
   
   #更新wip4_tmp3中的xcbb006值
   #mod 150730 zhangllc --begin
   #UPDATE wip4_tmp3 SET xcbb006 = ( SELECT UNIQUE xcbb006 FROM s_axcp500_tmp,xccd_tmp
   #                                  WHERE xccd006 = xcce006  #工单
   #                                    AND xccd007 = imaa001  #料件
   #                               )
   
   #mod zhangllc 151116 begin
   #UPDATE wip4_tmp3 SET xcbb006 = ( SELECT UNIQUE clevel FROM sfac_tmp2
   #                                  WHERE sfacdocno = xcce006  #工单
   #                               )
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO wip4_tmp3 a   ",
               "       USING sfac_tmp2 b    ",
               "          ON ( b.sfacdocno = a.xcce006 )",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcbb006  = b.clevel  "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_1_p8 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_1_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_1_p8 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_1_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   #mod zhangllc 151116 end


   #mod 150730 zhangllc --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 xcbb006"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF

   #建立临时表wip4_tmp4 用于DL+OH+SUB的转出
   CREATE TEMP TABLE wip4_tmp4(
   xcce001     LIKE xcce_t.xcce001,    #本位币顺序
   xcce002     LIKE xcce_t.xcce002,    #成本域
   xcce006     LIKE xcce_t.xcce006,    #工单
   xcce007     LIKE xcce_t.xcce007,    #料件
   xcce008     LIKE xcce_t.xcce008,    #特征
   xcce009     LIKE xcce_t.xcce009,    #批号
   xccd101     LIKE xccd_t.xccd101,    #期初数量
   xccd201     LIKE xccd_t.xccd101,    #本期投入数量
   xccd301     LIKE xccd_t.xccd301,    #转出数量
   xcbi103     LIKE xcbi_t.xcbi103,    #约当数
   rate1       LIKE type_t.num26_10,   #比率1(人工/制费)
   rate2       LIKE type_t.num26_10,   #比率2(加工)
   rate3       LIKE type_t.num26_10    #比率3(xcce301更新的比例)
   );

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create wip4_tmp4'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   

   #161114-00003#1-s-add
   #b add by zwr 16.10.20 增加索引

   CREATE INDEX wip4_tmp4_i01 ON wip4_tmp4(xcce001,xcce002,xcce006,xcce007,xcce008,xcce009);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX wip4_tmp4_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add
   
   #add zhangllc 160526--s SBS1
   #建立临时表wip4_tmp5 用于ADJUST的转出,存储当前成本阶计算的工单
   CREATE TEMP TABLE wip4_tmp5(
   xcce001     LIKE xcce_t.xcce001,    #本位币顺序
   xcce002     LIKE xcce_t.xcce002,    #成本域
   xcce006     LIKE xcce_t.xcce006,    #工单
   xcce007     LIKE xcce_t.xcce007,    #料件
   xcce008     LIKE xcce_t.xcce008,    #特征
   xcce009     LIKE xcce_t.xcce009,    #批号
   xccd101     LIKE xccd_t.xccd101,    #期初数量
   xccd201     LIKE xccd_t.xccd101,    #本期投入数量
   xccd301     LIKE xccd_t.xccd301     #转出数量
   );
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create wip4_tmp5'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   
   #add zhangllc 160526--e SBS1
   #161114-00003#1-s-add
   #b add by zwr 16.10.20 增加索引

   CREATE INDEX wip4_tmp5_i01 ON wip4_tmp5(xcce001,xcce002,xcce006,xcce007,xcce008,xcce009);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX wip4_tmp5_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 下阶料BY主件入库数量转出- 成本处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_4_2(p_flag,p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_flag         重工否
#                : p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-17 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_4_2(p_flag,p_xcbb006,p_seq)
   DEFINE p_flag          LIKE type_t.chr1
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   #DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_date          LIKE type_t.dat   #mod zhangllc 160527 SBS2  以下均用于日期型，非日期时间型
   DEFINE l_xcce010       LIKE xcce_t.xcce010

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = g_edate + 1
   
   #每次成本阶处理时,全部清空
   TRUNCATE TABLE wip4_tmp4
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'TRUNCATE TABLE wip4_tmp4'
      LET g_errparam.popup = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   #add zhangllc 160526 --s SBS1 
   TRUNCATE TABLE wip4_tmp5
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'TRUNCATE TABLE wip4_tmp5'
      LET g_errparam.popup = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
   #add zhangllc 160526 --e SBS1  
   
   #更新wip4_tmp3的转出成本 xcce302~xcce30h
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO wip4_tmp3 a ",
               "       USING (SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,   ",
               "                     xcce101,xcce102,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h,",
               "                     nvl(SUM(xcck009 * - 1 * xcck201 ),0) xcck201, nvl(SUM(xcck009 * - 1 * xcck202 ),0) xcck202,  ",
               "                     nvl(SUM(xcck009 * - 1 * xcck202a),0) xcck202a,nvl(SUM(xcck009 * - 1 * xcck202b),0) xcck202b, ",
               "                     nvl(SUM(xcck009 * - 1 * xcck202c),0) xcck202c,nvl(SUM(xcck009 * - 1 * xcck202d),0) xcck202d, ",
               "                     nvl(SUM(xcck009 * - 1 * xcck202e),0) xcck202e,nvl(SUM(xcck009 * - 1 * xcck202f),0) xcck202f, ",
               "                     nvl(SUM(xcck009 * - 1 * xcck202g),0) xcck202g,nvl(SUM(xcck009 * - 1 * xcck202h),0) xcck202h",   
               "                FROM xcce_tmp LEFT OUTER JOIN xcck_tmp     ",
               "                                     ON  xcck020 IN ('302','303','114','107')  ", #发料，退料，回收入库，委外回收入库
               "                                     AND xcck012 <> 'asft312' AND xcck012 <> 'asft322' ", #191114-00039#1
               "                                     AND xcce001 = xcck001 ",
               "                                     AND xcce002 = xcck002 ",
               "                                     AND xcce006 = xcck047 ",
               "                                     AND xcce007 = xcck010 ",
               "                                     AND xcce008 = xcck011 ",
               "                                     AND xcce009 = xcck017 ",
               "                GROUP BY xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,",
               "                         xcce101,xcce102,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h ",
               "                ) b ",
               "          ON ( a.xcce001 = b.xcce001 ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009  ",
               "         AND   a.sfaa042 = ? ",
               "         AND   a.xcbb006 = ",p_xcbb006," )",
               "  WHEN MATCHED THEN    ",
               #170705-00006#1 mark(S)
               #"     UPDATE SET a.xcce302  = (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302a = (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302b = (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302c = (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302d = (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302e = (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302f = (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302g = (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302h = (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * a.xcce301    ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "     UPDATE SET a.xcce302  = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302a = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302b = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302c = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302d = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302e = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302f = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302g = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302h = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * a.xcce301 END)    ",
               #170705-00006#1 add(E)
               "      WHERE b.xcck201 + b.xcce101 <> 0 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_2_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_2_p1 USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF       


   #对xcce302进行取位
   #xcce302a~xcce302h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE wip4_tmp3 SET xcce302  = round(xcce302 ,? ), xcce302a = round(xcce302a,? ), xcce302b = round(xcce302b,? ), ",
                         "                     xcce302c = round(xcce302c,? ), xcce302d = round(xcce302d,? ), ",
                         "                     xcce302e = round(xcce302e,? ), xcce302f = round(xcce302f,? ), ",
                         "                     xcce302g = round(xcce302g,? ), xcce302h = round(xcce302h,? )  "

                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE wip4_tmp3 SET xcce302  = trunc(xcce302 ,? ), xcce302a = trunc(xcce302a,? ), xcce302b = trunc(xcce302b,? ), ",
                         "                     xcce302c = trunc(xcce302c,? ), xcce302d = trunc(xcce302d,? ), ",
                         "                     xcce302e = trunc(xcce302e,? ), xcce302f = trunc(xcce302f,? ), ",
                         "                     xcce302g = trunc(xcce302g,? ), xcce302h = trunc(xcce302h,? )  "

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE wip4_tmp3 SET xcce302  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce302,?) ",
                         "                                                          ELSE ROUND(xcce302,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce302,?)",
                         "                                END ),",
                         "                    xcce302a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302a,?) ",
                         "                                                         ELSE ROUND(xcce302a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302a,?)",
                         "                                END ),",
                         "                    xcce302b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302b,?) ",
                         "                                                         ELSE ROUND(xcce302b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302b,?)",
                         "                                END ),",
                         "                    xcce302c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302c,?) ",
                         "                                                         ELSE ROUND(xcce302c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302c,?)",
                         "                                END ),",
                         "                    xcce302d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302d,?) ",
                         "                                                         ELSE ROUND(xcce302d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302d,?)",
                         "                                END ),",
                         "                    xcce302e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302e,?) ",
                         "                                                         ELSE ROUND(xcce302e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302e,?)",
                         "                                END ),",
                         "                    xcce302f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302f,?) ",
                         "                                                         ELSE ROUND(xcce302f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302f,?)",
                         "                                END ),",
                         "                    xcce302g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302g,?) ",
                         "                                                         ELSE ROUND(xcce302g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302g,?)",
                         "                                END ),",
                         "                    xcce302h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302h,?) ",
                         "                                                         ELSE ROUND(xcce302h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE wip4_tmp3 SET xcce302  = ceil(xcce302 *power(10,?))/power(10,?),",
                         "                    xcce302a = ceil(xcce302a*power(10,?))/power(10,?),",
                         "                    xcce302b = ceil(xcce302b*power(10,?))/power(10,?),",
                         "                    xcce302c = ceil(xcce302c*power(10,?))/power(10,?),",
                         "                    xcce302d = ceil(xcce302d*power(10,?))/power(10,?),",
                         "                    xcce302e = ceil(xcce302e*power(10,?))/power(10,?),",
                         "                    xcce302f = ceil(xcce302f*power(10,?))/power(10,?),",
                         "                    xcce302g = ceil(xcce302g*power(10,?))/power(10,?),",
                         "                    xcce302h = ceil(xcce302h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E    
                         
   END CASE                         
   PREPARE s_axcp500_avg1_wip_4_2_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_wip_4_2_p5')         
#     RETURN r_success
   END IF


   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_4_2_p5')         
#     RETURN r_success
   END IF     
   
#   #修正xcce302a的值 xcce302a = xcce302 - (xcce302b~xcce302h)
#   UPDATE wip4_tmp3 SET xcce302a = xcce302 - (xcce302b+xcce302c+xcce302d+xcce302e+xcce302f+xcce302g+xcce302h)
#    WHERE sfaa042 = p_flag
#      AND xcbb006 = p_xcbb006
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF       

   #20180605-add-s
   #修正xcce302的值-先修至xcce302a,若xcce302a为零,则修正xcce302b......
   UPDATE wip4_tmp3 
      SET xcce302a = xcce302 - (xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h)   
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302a) >= ABS(xcce302b) AND ABS(xcce302a) >= ABS(xcce302c)
      AND ABS(xcce302a) >= ABS(xcce302d) AND ABS(xcce302a) >= ABS(xcce302e)
      AND ABS(xcce302a) >= ABS(xcce302f) AND ABS(xcce302a) >= ABS(xcce302g)
      AND ABS(xcce302a) >= ABS(xcce302h)
      AND sfaa042 = p_flag
      AND xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE wip4_tmp3 
      SET xcce302b = xcce302 - (xcce302a + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h)   
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302b) >= ABS(xcce302c)
      AND ABS(xcce302b) >= ABS(xcce302d) AND ABS(xcce302b) >= ABS(xcce302e)
      AND ABS(xcce302b) >= ABS(xcce302f) AND ABS(xcce302b) >= ABS(xcce302g)
      AND ABS(xcce302b) >= ABS(xcce302h)
      AND sfaa042 = p_flag
      AND xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE wip4_tmp3 
      SET xcce302c = xcce302 - (xcce302a + xcce302b + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h)   
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302c) >= ABS(xcce302d) AND ABS(xcce302c) >= ABS(xcce302e)
      AND ABS(xcce302c) >= ABS(xcce302f) AND ABS(xcce302c) >= ABS(xcce302g)
      AND ABS(xcce302c) >= ABS(xcce302h)
      AND sfaa042 = p_flag
      AND xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
         
   UPDATE wip4_tmp3 
      SET xcce302d = xcce302 - (xcce302a + xcce302b + xcce302c + xcce302e + xcce302f + xcce302g + xcce302h)   
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302d) >= ABS(xcce302e)
      AND ABS(xcce302d) >= ABS(xcce302f) AND ABS(xcce302d) >= ABS(xcce302g)
      AND ABS(xcce302d) >= ABS(xcce302h)      
      AND sfaa042 = p_flag
      AND xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE wip4_tmp3 
      SET xcce302e = xcce302 - (xcce302a + xcce302b + xcce302c + xcce302d + xcce302f + xcce302g + xcce302h)   
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302e) >= ABS(xcce302f) AND ABS(xcce302e) >= ABS(xcce302g)
      AND ABS(xcce302e) >= ABS(xcce302h)
      AND sfaa042 = p_flag
      AND xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
         
   UPDATE wip4_tmp3 
      SET xcce302f = xcce302 - (xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302g + xcce302h)   
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302f) >= ABS(xcce302g)
      AND ABS(xcce302f) >= ABS(xcce302h)      
      AND sfaa042 = p_flag
      AND xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE wip4_tmp3 
      SET xcce302g = xcce302 - (xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302h)   
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302g) >= ABS(xcce302h)  
      AND sfaa042 = p_flag
      AND xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE wip4_tmp3 
      SET xcce302h = xcce302 - (xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g)   
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND sfaa042 = p_flag
      AND xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp3 SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #20180605-add-e

   #用wip4_tmp3中的转出数量及成本更新xcce_tmp
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING wip4_tmp3 b ",
               "          ON ( a.xcce001 = b.xcce001 ",
               "         AND   a.xcce002 = b.xcce002 ",
               "         AND   a.xcce006 = b.xcce006 ",       #工单
               "         AND   a.xcce007 = b.xcce007 ",
               "         AND   a.xcce008 = b.xcce008 ",
               "         AND   a.xcce009 = b.xcce009 ",
               "         AND   b.xcbb006 = ",p_xcbb006,
               "         AND   b.sfaa042 = ? ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = nvl(b.xcce301 ,0) ,  ",
               "                a.xcce302  = nvl(b.xcce302 ,0) ,  ",
               "                a.xcce302a = nvl(b.xcce302a,0) ,  ",
               "                a.xcce302b = nvl(b.xcce302b,0) ,  ",
               "                a.xcce302c = nvl(b.xcce302c,0) ,  ",
               "                a.xcce302d = nvl(b.xcce302d,0) ,  ",
               "                a.xcce302e = nvl(b.xcce302e,0) ,  ",
               "                a.xcce302f = nvl(b.xcce302f,0) ,  ",
               "                a.xcce302g = nvl(b.xcce302g,0) ,  ",
               "                a.xcce302h = nvl(b.xcce302h,0)    "       
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_2_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  


   EXECUTE s_axcp500_avg1_wip_4_2_p2 USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   #add zhangllc 160526--s SBS1
   #将本成本阶的所有ADJUST插入wip4_tmp5中
   #190411-00017#1 A mark-S
#   INSERT INTO wip4_tmp5
#    SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301
#      FROM xcce_tmp,xccd_tmp,sfaa_tmp,sfac_tmp2  #mod zhangllc 150730 add sfac_tmp2
#     WHERE xccd001 = xcce001 AND xccd001 = p_seq
#       AND xccd006 = xcce006      #工单编号
#       AND xcce007 = 'ADJUST'     #元件
#       AND xcce008 = ' '          #特性
#       AND xcce009 = ' '          #批号
#       AND sfaaent   = xccdent  #add 150916
#       AND sfaadocno = xccd006
#       AND sfaa042   = p_flag
#       AND sfaadocno = sfacdocno  #add zhangllc 150730
#       #mod zhangllc 150730 --begin
#       #AND xccd007 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006)
#       #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
#       #AND EXISTS (SELECT 1 FROM s_axcp500_tmp
#       #             WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xcbb006=sfac_tmp2.clevel
#       #               AND s_axcp500_tmp.xcbb006 = p_xcbb006)
#       AND sfac_tmp2.clevel = p_xcbb006
#       #mod zhangllc 160528 SBS4--e
#       #mod zhangllc 150730 --end
   #190411-00017#1 A mark-E
   #190411-00017#1 A add-S
   INSERT INTO wip4_tmp5
    SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301
      FROM xcce_tmp,xccd_tmp  
     WHERE xccd001 = xcce001 AND xccd001 = p_seq
       AND xccd006 = xcce006      #工单编号
       AND xcce007 = 'ADJUST'     #元件
       AND xcce008 = ' '          #特性
       AND xcce009 = ' '          #批号
       AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xccdent AND sfaadocno = xccd006 AND sfaa042 = p_flag)
       AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xccd006 AND clevel = p_xcbb006)
   #190411-00017#1 A add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "INSERT INTO wip4_tmp5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   #ADJUST调整资料本期有入库就全部转出，没入库就不转出         
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING wip4_tmp5 b ",
               "          ON ( a.xcce001 = b.xcce001  ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009 ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = (a.xcce101  + a.xcce201 ) * -1 ,  ",
               "                a.xcce302  = (a.xcce102  + a.xcce202 ) * -1 ,  ",
               "                a.xcce302a = (a.xcce102a + a.xcce202a) * -1 ,  ",
               "                a.xcce302b = (a.xcce102b + a.xcce202b) * -1 ,  ",
               "                a.xcce302d = (a.xcce102d + a.xcce202d) * -1 ,  ",
               "                a.xcce302e = (a.xcce102e + a.xcce202e) * -1 ,  ",
               "                a.xcce302f = (a.xcce102f + a.xcce202f) * -1 ,  ",
               "                a.xcce302g = (a.xcce102g + a.xcce202g) * -1 ,  ",
               "                a.xcce302h = (a.xcce102h + a.xcce202h) * -1 ,  ",       
               "                a.xcce302c = (a.xcce102c + a.xcce202c) * -1 ,  ",
               "                a.xcce901  = a.xcce901  - a.xcce101  - a.xcce201  , ",
               "                a.xcce902  = a.xcce902  - a.xcce102  - a.xcce202  , ",
               "                a.xcce902a = a.xcce902a - a.xcce102a - a.xcce202a , ",
               "                a.xcce902b = a.xcce902b - a.xcce102b - a.xcce202b , ",
               "                a.xcce902d = a.xcce902d - a.xcce102d - a.xcce202d , ",
               "                a.xcce902e = a.xcce902e - a.xcce102e - a.xcce202e , ",
               "                a.xcce902f = a.xcce902f - a.xcce102f - a.xcce202f , ",
               "                a.xcce902g = a.xcce902g - a.xcce102g - a.xcce202g , ",
               "                a.xcce902h = a.xcce902h - a.xcce102h - a.xcce202h , ",
               "                a.xcce902c = a.xcce902c - a.xcce102c - a.xcce202c   ",
               "      WHERE b.xccd301 <> 0 "     #调整转出时需检查本期是否有入库,若有入库,则转出,没有则不转出
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_2_p4_0 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p4_0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_2_p4_0
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p4_0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   #add zhangllc 160526--e SBS1
   
   #160805-00033#1 add --s
   #如果本期有工单入库，有回收料的需全部转出
#170316-00003#1 mark start -----
#   UPDATE xcce_tmp SET xcce301  = (xcce101  + xcce207 ) * -1,
#                       xcce302  = (xcce102  + xcce208 ) * -1,
#                       xcce302a = (xcce102a + xcce208a) * -1,
#                       xcce302b = (xcce102b + xcce208b) * -1,
#                       xcce302c = (xcce102d + xcce208c) * -1,
#                       xcce302d = (xcce102e + xcce208d) * -1,
#                       xcce302e = (xcce102f + xcce208e) * -1,
#                       xcce302f = (xcce102g + xcce208f) * -1,
#                       xcce302g = (xcce102h + xcce208g) * -1,
#                       xcce302h = (xcce102c + xcce208h) * -1,
#170316-00003#1 mark end   -----
#170411-00032#1--mark----s
##170316-00003#1 add start -----
#   UPDATE xcce_tmp SET xcce301  = (xcce101  + xcce201 + xcce207 ) * -1,
#                       xcce302  = (xcce102  + xcce202 + xcce208 ) * -1,
#                       xcce302a = (xcce102a + xcce202a + xcce208a) * -1,   
#                       xcce302b = (xcce102b + xcce202b + xcce208b) * -1, 
#                       xcce302c = (xcce102c + xcce202c + xcce208c) * -1, 
#                       xcce302d = (xcce102d + xcce202d + xcce208d) * -1, 
#                       xcce302e = (xcce102e + xcce202e + xcce208e) * -1, 
#                       xcce302f = (xcce102f + xcce202f + xcce208f) * -1, 
#                       xcce302g = (xcce102g + xcce202g + xcce208g) * -1, 
#                       xcce302h = (xcce102h + xcce202h +xcce208h) * -1,  #170504-00004#1 add
#                       #xcce302h = (xcce102h + xccc202h +xcce208h) * -1, #170504-00004#1 mark
##170316-00003#1 add end    -----
#                       xcce901  = xcce901  - xcce101  - xcce201  ,
#                       xcce902  = xcce902  - xcce102  - xcce202  ,
#                       xcce902a = xcce902a - xcce102a - xcce202a ,
#                       xcce902b = xcce902b - xcce102b - xcce202b ,
#                       xcce902d = xcce902d - xcce102d - xcce202d ,
#                       xcce902e = xcce902e - xcce102e - xcce202e ,
#                       xcce902f = xcce902f - xcce102f - xcce202f ,
#                       xcce902g = xcce902g - xcce102g - xcce202g ,
#                       xcce902h = xcce902h - xcce102h - xcce202h ,
#                       xcce902c = xcce902c - xcce102c - xcce202c  
#    WHERE EXISTS (SELECT 1 FROM sfac_t a     #代表回收料
#                   #160929-00019#1--s
#                   #WHERE a.sfacent=g_enterprise AND a.sfacdocno=xcce006 AND a.sfac001=xcce007 AND a.sfac006=xcce008)  
#                   WHERE a.sfacent=g_enterprise AND a.sfacdocno=xcce006 AND a.sfac001=xcce007 AND a.sfac006=xcce008 AND a.sfac002='5')
#                   #160929-00019#1---e
#      AND EXISTS (SELECT 1 FROM wip4_tmp1    #本月有入库的
#                   WHERE sfbadocno=xcce006 AND xccd301 <>0 )
#      AND EXISTS (SELECT 1 FROM sfac_tmp2 b  #当前成本阶
#                   WHERE b.sfacdocno=xcce006 AND b.clevel = p_xcbb006)
#   #160805-00033#1 add --e
#170411-00032#1--mark----s   
   #170411-00032#1--add----s
   #回收料的部分用參數S_FIN-6026，3個轉出時間點：
   #1.當期全數轉出（T100目前的方式） 
   #2.依工單QPA比率轉出 -> 回收料的預計生產量和該張工單生產數量(sfaa012)的比例
   #3.結案月轉出（TIPTOP的方式）
   #範例
   #工單生產數量100，生產入庫數量60。回收料預計產量50，回收料入庫20
   #1.當期轉出
   #  回收料投入-20(退料)，轉出20
   #2.依工單QPA比率轉出
   #  回收料投入-20(退料)，轉出20*50/100=10
   #3.結案月轉出
   #  回收料投入-20(退料)，轉出0，期末結存20
   #  結案月：依結案轉出參數轉至入庫轉出或差異轉出
   #更新 xcce207/xcce208 一般退料
   CASE g_sys_6026
      WHEN '1'
         #191008-00013#1---mark---s
         #UPDATE xcce_tmp SET xcce301  = (xcce101  + xcce201 + xcce207 ) * -1,
         #                    xcce302  = (xcce102  + xcce202 + xcce208 ) * -1,
         #                    xcce302a = (xcce102a + xcce202a + xcce208a) * -1,   
         #                    xcce302b = (xcce102b + xcce202b + xcce208b) * -1, 
         #                    xcce302c = (xcce102c + xcce202c + xcce208c) * -1, 
         #                    xcce302d = (xcce102d + xcce202d + xcce208d) * -1, 
         #                    xcce302e = (xcce102e + xcce202e + xcce208e) * -1, 
         #                    xcce302f = (xcce102f + xcce202f + xcce208f) * -1, 
         #                    xcce302g = (xcce102g + xcce202g + xcce208g) * -1, 
         #                    xcce302h = (xcce102h + xcce202h +xcce208h) * -1,  
         #                    xcce901  = xcce901  - xcce101  - xcce201  ,
         #                    xcce902  = xcce902  - xcce102  - xcce202  ,
         #                    xcce902a = xcce902a - xcce102a - xcce202a ,
         #                    xcce902b = xcce902b - xcce102b - xcce202b ,
         #                    xcce902d = xcce902d - xcce102d - xcce202d ,
         #                    xcce902e = xcce902e - xcce102e - xcce202e ,
         #                    xcce902f = xcce902f - xcce102f - xcce202f ,
         #                    xcce902g = xcce902g - xcce102g - xcce202g ,
         #                    xcce902h = xcce902h - xcce102h - xcce202h ,
         #                    xcce902c = xcce902c - xcce102c - xcce202c  
         # WHERE EXISTS (SELECT 1 FROM sfac_t a     #代表回收料
         #                WHERE a.sfacent=g_enterprise AND a.sfacdocno=xcce006 AND a.sfac001=xcce007 AND a.sfac006=xcce008 AND a.sfac002='5')
         #   AND EXISTS (SELECT 1 FROM wip4_tmp1    #本月有入库的
         #                WHERE sfbadocno=xcce006 AND xccd301 <>0 )
         #   AND EXISTS (SELECT 1 FROM sfac_tmp2 b  #当前成本阶
         #                WHERE b.sfacdocno=xcce006 AND b.clevel = p_xcbb006)   
         #   AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xcceent AND sfaadocno = xcce006 AND sfaa042 = p_flag ) #190702-00024#1 
         #   #190705-00016#1---add---str---
         #   AND NOT EXISTS (SELECT 1 FROM sfba_t c
         #                WHERE c.sfbaent=g_enterprise AND c.sfbadocno=xcce006 AND c.sfba005=xcce007)
         #   #190705-00016#1---add---end--- 
         #191008-00013#1---mark---e   
         #191008-00013#1---add---s
         #20200612-02295---add---s
         LET g_sql = "UPDATE xcce_tmp a SET a.xcce301  = (a.xcce101  + a.xcce201  + a.xcce207 ) * -1, ",
                     "                      a.xcce302  = (a.xcce102  + a.xcce202  + a.xcce208 ) * -1, ",
                     "                      a.xcce302a = (a.xcce102a + a.xcce202a + a.xcce208a) * -1, ",  
                     "                      a.xcce302b = (a.xcce102b + a.xcce202b + a.xcce208b) * -1, ",
                     "                      a.xcce302c = (a.xcce102c + a.xcce202c + a.xcce208c) * -1, ",
                     "                      a.xcce302d = (a.xcce102d + a.xcce202d + a.xcce208d) * -1, ",
                     "                      a.xcce302e = (a.xcce102e + a.xcce202e + a.xcce208e) * -1, ",
                     "                      a.xcce302f = (a.xcce102f + a.xcce202f + a.xcce208f) * -1, ",
                     "                      a.xcce302g = (a.xcce102g + a.xcce202g + a.xcce208g) * -1, ",
                     "                      a.xcce302h = (a.xcce102h + a.xcce202h + a.xcce208h) * -1, ", 
                     "                      a.xcce901  = a.xcce901  - a.xcce101  - a.xcce201  ,",
                     "                      a.xcce902  = a.xcce902  - a.xcce102  - a.xcce202  ,",
                     "                      a.xcce902a = a.xcce902a - a.xcce102a - a.xcce202a ,",
                     "                      a.xcce902b = a.xcce902b - a.xcce102b - a.xcce202b ,",
                     "                      a.xcce902d = a.xcce902d - a.xcce102d - a.xcce202d ,",
                     "                      a.xcce902e = a.xcce902e - a.xcce102e - a.xcce202e ,",
                     "                      a.xcce902f = a.xcce902f - a.xcce102f - a.xcce202f ,",
                     "                      a.xcce902g = a.xcce902g - a.xcce102g - a.xcce202g ,",
                     "                      a.xcce902h = a.xcce902h - a.xcce102h - a.xcce202h ,",
                     "                      a.xcce902c = a.xcce902c - a.xcce102c - a.xcce202c  ",
                     " WHERE EXISTS (SELECT 1 FROM sfac_t b ",    #代表回收料
                     "                WHERE b.sfacent= a.xcceent AND b.sfacdocno=a.xcce006 AND b.sfac001=a.xcce007 AND b.sfac006=a.xcce008 AND b.sfac002='5') ",
                     "   AND EXISTS (SELECT 1 FROM wip4_tmp1",    #本月有入库的
                     "                WHERE sfbadocno=a.xcce006 AND xccd301 <>0 )",
                     "   AND EXISTS (SELECT 1 FROM sfac_tmp2 ",  #当前成本阶
                     "                WHERE sfacdocno=a.xcce006 AND clevel = ?) ",  
                     "   AND EXISTS (SELECT 1 FROM sfaa_tmp WHERE sfaaent = a.xcceent AND sfaadocno = a.xcce006 AND sfaa042 = ? ) ", 
                     "   AND NOT EXISTS(SELECT 1 FROM wip4_tmp3 c",
                     "                   WHERE a.xcce001 = c.xcce001 AND a.xcce002 = c.xcce002  ",
                     "                     AND a.xcce006 = c.xcce006 AND a.xcce007 = c.xcce007  ",
                     "                     AND a.xcce008 = c.xcce008 AND a.xcce009 = c.xcce009) " 
         #20200612-02295---add---e            
         PREPARE s_axcp500_avg1_wip_4_2_p16_0 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p16_0"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF  
         
         EXECUTE s_axcp500_avg1_wip_4_2_p16_0  USING p_xcbb006,p_flag
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p16_0"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF                     
         #191008-00013#1---add---e
      WHEN '2'
         #171013-00022#1 mark-S
         #LET g_sql = " MERGE INTO xcce_tmp ",
         #            "       USING (SELECT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,c.clevel,   ",
         #            "                     SUM(xcck201*xcck009 *-1) * SUM(d.sfac003) / SUM(sfaa012) xcck201 ",   
         #            "                FROM xcck_tmp,sfaa_tmp,sfac_tmp2 c ,sfac_t d   ",                      
         #            "                WHERE xcck020 = '114'  ",
         #            "                  AND xcckent = sfaaent ",  
         #            "                  AND xcck047 = sfaadocno ",
         #            "                  AND xcck001 = '",p_seq,"'",               
         #            "                  AND sfaa042 = ? ", 
         #            "                  AND sfaadocno=c.sfacdocno ",  
         #            "                  AND sfaaent = ",g_enterprise,
         #            "                  AND sfaaent = d.sfacent AND sfaadocno = d.sfacdocno AND xcck010 = d.sfac001 AND d.sfac002 = '5' ",
         #            "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,clevel ", 
         #            "                ) b ",
         #            "          ON ( xcceent = ",g_enterprise,
         #            "         AND   xcceld  = '",g_ld,"'",
         #            "         AND   xcce001 = '",p_seq,"'",
         #            "         AND   xcce002 = b.xcck002  ",
         #            "         AND   xcce003 = '",g_xcat001,"'",
         #            "         AND   xcce004 = ",g_yy,
         #            "         AND   xcce005 = ",g_pp,
         #            "         AND   xcce006 = b.xcck047  ",       #工单
         #            "         AND   xcce007 = b.xcck010  ",
         #            "         AND   xcce008 = b.xcck011  ",
         #            "         AND   xcce009 = b.xcck017  ",
         #            "         AND   b.clevel = ",p_xcbb006," ) ", 
         #            "  WHEN MATCHED THEN    ",
         #            "     UPDATE SET xcce301  = xcce301  + nvl(b.xcck201 ,0) * -1 ",
         #            " WHERE EXISTS (SELECT 1 FROM sfac_t a     ", #代表回收料
         #            "                WHERE a.sfacent=",g_enterprise," AND a.sfacdocno=xcce006 AND a.sfac001=xcce007 AND a.sfac006=xcce008 AND a.sfac002='5') ",
         #            "   AND EXISTS (SELECT 1 FROM wip4_tmp1   ", #本月有入库的
         #            "                WHERE sfbadocno=xcce006 AND xccd301 <>0 ) ",
         #            "   AND EXISTS (SELECT 1 FROM sfac_tmp2 e ", #当前成本阶
         #            "                WHERE e.sfacdocno=xcce006 AND e.clevel = ",p_xcbb006," ) "
         #171013-00022#1 mark-E
         #191008-00013#1---mark---s
         ##171013-00022#1 add-S 回收料部分处理
         #LET g_sql = " MERGE INTO xcce_tmp ",
         #            "       USING (SELECT xccdent,xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006,sfaa010,c.clevel,d.sfac001,d.sfac006, ",
         #            "                     SUM(xccd301) * SUM(d.sfac003) / SUM(sfaa012) xccd301",
         #            "                FROM xccd_tmp,sfaa_tmp,sfac_tmp2 c ,sfac_t d",
         #            "                WHERE xccdent = ",g_enterprise,
         #            "                  AND xccdld  = '",g_ld,"'",
         #            "                  AND xccd001 = '",p_seq,"'",
         #            "                  AND xccd003 = '",g_xcat001,"'",
         #            "                  AND xccd004 = ",g_yy,
         #            "                  AND xccd005 = ",g_pp,
         #            "                  AND xccd006 = sfaadocno  ",       #工单
         #            "                  AND xccd007 = sfaa010 ",            
         #            "                  AND sfaa042 = ? ", 
         #            "                  AND sfaadocno=c.sfacdocno ",  
         #            "                  AND sfaaent = ",g_enterprise,
         #            "                  AND sfaaent = d.sfacent AND sfaadocno = d.sfacdocno AND d.sfac002 = '5' ",
         #            "                GROUP BY xccdent,xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006,sfaa010,clevel,d.sfac001,d.sfac006 ", 
         #            "                ) b ",
         #            "          ON ( xcceent = b.xccdent ",
         #            "         AND   xcceld  = b.xccdld ",
         #            "         AND   xcce001 = b.xccd001 ",
         #           #"         AND   xcce002 = b.xccd002 ", #171024-00046#1 mark
         #            "         AND   xcce003 = b.xccd003 ",
         #            "         AND   xcce004 = b.xccd004 ",
         #            "         AND   xcce005 = b.xccd005 ",
         #            "         AND   xcce006 = b.xccd006 ",       #工单
         #            "         AND   xcce007 = b.sfac001  ",
         #            "         AND   xcce008 = b.sfac006  ",
         #            "         AND   b.clevel = ",p_xcbb006," ) ", 
         #            "  WHEN MATCHED THEN    ",
         #            "     UPDATE SET xcce301  = xcce301  + nvl(b.xccd301 ,0) * -1 ",
#        #             "     UPDATE SET xcce301  = xcce301  + (CASE WHEN NVL(b.xccd301,0)>NVL(b.sfec009,0) THEN NVL(b.sfec009,0) ELSE nvl(b.xccd301 ,0) END )* -1 ", 
         #            " WHERE EXISTS (SELECT 1 FROM sfac_t a     ", #代表回收料
         #            "                WHERE a.sfacent=",g_enterprise," AND a.sfacdocno=xcce006 AND a.sfac001=xcce007 AND a.sfac006=xcce008 AND a.sfac002='5') ",
         #            "   AND EXISTS (SELECT 1 FROM wip4_tmp1   ", #本月有入库的
         #            "                WHERE sfbadocno=xcce006 AND xccd301 <>0 ) ",
         #            "   AND EXISTS (SELECT 1 FROM sfac_tmp2 e ", #当前成本阶
         #            "                WHERE e.sfacdocno=xcce006 AND e.clevel = ",p_xcbb006," ) " 
         #            #190705-00016#1---add---str---
         #           ,"   AND NOT EXISTS (SELECT 1 FROM sfba_t c ",
         #            "                   WHERE c.sfbaent = ",g_enterprise," AND c.sfbadocno=xcce006 AND c.sfba005=xcce007) "
         #            #190705-00016#1---add---end---                     
         ##171013-00022#1 add-E        
         #191008-00013#1---mark---e
         #191008-00013#1---add---s
         #回收料部分处理
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xcce_tmp a ",
                     "       USING (SELECT xccdent,xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006,sfaa010,c.clevel,d.sfac001,d.sfac006, ",
                     "                     SUM(xccd301) * SUM(d.sfac003) / SUM(sfaa012) xccd301",
                     "                FROM xccd_tmp,sfaa_tmp,sfac_tmp2 c ,sfac_t d",
                     "                WHERE xccdent = ",g_enterprise,
                     "                  AND xccdld  = '",g_ld,"'",
                     "                  AND xccd001 = '",p_seq,"'",
                     "                  AND xccd003 = '",g_xcat001,"'",
                     "                  AND xccd004 = ",g_yy,
                     "                  AND xccd005 = ",g_pp,
                     "                  AND xccd006 = sfaadocno  ",       #工单
                     "                  AND xccd007 = sfaa010 ",            
                     "                  AND sfaa042 = ? ", 
                     "                  AND sfaadocno=c.sfacdocno ",  
                     "                  AND sfaaent = ",g_enterprise,
                     "                  AND sfaaent = d.sfacent AND sfaadocno = d.sfacdocno AND d.sfac002 = '5' ",
                     "                GROUP BY xccdent,xccdld,xccd001,xccd002,xccd003,xccd004,xccd005,xccd006,sfaa010,clevel,d.sfac001,d.sfac006 ", 
                     "                ) b ",
                     "          ON ( a.xcceent = b.xccdent ",
                     "         AND   a.xcceld  = b.xccdld ",
                     "         AND   a.xcce001 = b.xccd001 ",
                     "         AND   a.xcce003 = b.xccd003 ",
                     "         AND   a.xcce004 = b.xccd004 ",
                     "         AND   a.xcce005 = b.xccd005 ",
                     "         AND   a.xcce006 = b.xccd006 ",       #工单
                     "         AND   a.xcce007 = b.sfac001  ",
                     "         AND   a.xcce008 = b.sfac006  ",
                     "         AND   b.clevel = ? ) ", 
                     "  WHEN MATCHED THEN    ",
                     "     UPDATE SET a.xcce301  = a.xcce301  + nvl(b.xccd301 ,0) * -1 ",
                     " WHERE EXISTS (SELECT 1 FROM sfac_t c     ", #代表回收料
                     "                WHERE c.sfacent= a.xcceent AND c.sfacdocno=a.xcce006 ",
                     "                  AND c.sfac001 = a.xcce007 AND c.sfac006= a.xcce008 AND c.sfac002='5') ",
                     "   AND EXISTS (SELECT 1 FROM wip4_tmp1   ", #本月有入库的
                     "                WHERE sfbadocno=xcce006 AND xccd301 <>0 ) ",
                     "   AND EXISTS (SELECT 1 FROM sfac_tmp2  ", #当前成本阶
                     "                WHERE sfacdocno = a.xcce006 AND clevel = ? ) ",
                     "   AND NOT EXISTS(SELECT 1 FROM wip4_tmp3 d ",
                     "                   WHERE a.xcce001 = d.xcce001 AND a.xcce002 = d.xcce002  ",
                     "                     AND a.xcce006 = d.xcce006 AND a.xcce007 = d.xcce007  ",
                     "                     AND a.xcce008 = d.xcce008 AND a.xcce009 = d.xcce009)  "
         #PGS(D)-00824 --- end ---
         #191008-00013#1---add---e
         PREPARE s_axcp500_avg1_wip_4_2_p16 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p16"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF  
         
         #EXECUTE s_axcp500_avg1_wip_4_2_p16  USING p_flag  #191008-00013#1 mark
         EXECUTE s_axcp500_avg1_wip_4_2_p16  USING p_flag,p_xcbb006,p_xcbb006  #191008-00013#1 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p16"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xcce_tmp a ",
                     "       USING (SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009, clevel,  ",
                     "                     xcce101,xcce102,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h,",
                     "                     nvl(SUM(xcck009 * - 1 * xcck201 ),0) xcck201, nvl(SUM(xcck009 * - 1 * xcck202 ),0) xcck202,  ",
                     "                     nvl(SUM(xcck009 * - 1 * xcck202a),0) xcck202a,nvl(SUM(xcck009 * - 1 * xcck202b),0) xcck202b, ",
                     "                     nvl(SUM(xcck009 * - 1 * xcck202c),0) xcck202c,nvl(SUM(xcck009 * - 1 * xcck202d),0) xcck202d, ",
                     "                     nvl(SUM(xcck009 * - 1 * xcck202e),0) xcck202e,nvl(SUM(xcck009 * - 1 * xcck202f),0) xcck202f, ",
                     "                     nvl(SUM(xcck009 * - 1 * xcck202g),0) xcck202g,nvl(SUM(xcck009 * - 1 * xcck202h),0) xcck202h",   
                     #171013-00022#1 mark-S   
#                     "                FROM xcce_tmp ,xcck_tmp ,sfaa_tmp , sfac_tmp2     ",         
#                     "               WHERE xcck020 IN ('302','303','114','107')  ", #发料，退料，回收入库，委外回收入库
#                     "                 AND xcce001 = xcck001 ",
#                     "                 AND xcce002 = xcck002 ",
#                     "                 AND xcce006 = xcck047 ",
#                     "                 AND xcce007 = xcck010 ",
#                     "                 AND xcce008 = xcck011 ",
#                     "                 AND xcce009 = xcck017 ",
#                     "                 AND xcceent = sfaaent ",  
#                     "                 AND xcck047 = sfaadocno ",
#                     "                 AND xcck001 = '",p_seq,"'",               
#                     "                 AND sfaa042 = ? ", 
#                     "                 AND sfacdocno = xcck047 ",
                     #171013-00022#1 mark-E
                     #171013-00022#1 add-S
                     "                FROM xcce_tmp LEFT OUTER JOIN xcck_tmp ",
                     "                           ON  xcck020 IN ('302','303','114','107')  ", #发料，退料，回收入库，委外回收入库
                     "                                AND xcce001 = xcck001 ",
                     "                                AND xcce002 = xcck002 ",
                     "                                AND xcce006 = xcck047 ",
                     "                                AND xcce007 = xcck010 ",
                     "                                AND xcce008 = xcck011 ",
                     "                               AND xcce009 = xcck017 ",
                     #190411-00017#1 A mark-S                     
#                     "                      ,sfaa_tmp , sfac_tmp2     ",
#                     "              WHERE xcceent = sfaaent AND xcce006 = sfaadocno AND sfaa042 = ? AND sfacdocno = xcce006 ",
                     #190411-00017#1 A mark-E
                     #190411-00017#1 A add-S
                     "                       , sfac_tmp2     ",
                    #"              WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xcccent AND xcce006 = sfaadocno AND sfaa042 = ?)", #190802-00019#1 mark
                     "              WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xcceent AND xcce006 = sfaadocno AND sfaa042 = ?)", #190802-00019#1 add
                     "                AND sfacdocno = xcce006 ",
                     #190411-00017#1 A add-E
                     #171013-00022#1 A add-E
                     "                GROUP BY xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,clevel,",
                     "                         xcce101,xcce102,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h ",
                     "                ) b ",
                     "          ON ( a.xcce001 = b.xcce001 ",
                     "         AND   a.xcce002 = b.xcce002  ",
                     "         AND   a.xcce006 = b.xcce006  ",       #工单
                     "         AND   a.xcce007 = b.xcce007  ",
                     "         AND   a.xcce008 = b.xcce008  ",
                     "         AND   a.xcce009 = b.xcce009  ",
                     "         AND   b.clevel = ",p_xcbb006," )",
                     "  WHEN MATCHED THEN    ",
                     "     UPDATE SET a.xcce302  = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
                     "                a.xcce302a = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
                     "                a.xcce302b = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
                     "                a.xcce302c = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
                     "                a.xcce302d = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
                     "                a.xcce302e = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
                     "                a.xcce302f = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
                     "                a.xcce302g = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
                     "                a.xcce302h = (CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * a.xcce301 END)    ",
                     "      WHERE b.xcck201 + b.xcce101 <> 0 "
         #PGS(D)-00824 --- end ---
         PREPARE s_axcp500_avg1_wip_4_2_p17 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p17"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF  
         
         EXECUTE s_axcp500_avg1_wip_4_2_p17  USING p_flag
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p17"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF 


         #171013-00022#1---add---s         
         #对xcce302进行取位
         #xcce302a~xcce302h进行取位
         CASE g_round_type
              WHEN '1'   #四舍五入
                   LET g_sql = "UPDATE xcce_tmp SET xcce302  = round(xcce302 ,? ), xcce302a = round(xcce302a,? ), xcce302b = round(xcce302b,? ), ",
                               "                    xcce302c = round(xcce302c,? ), xcce302d = round(xcce302d,? ), ",
                               "                    xcce302e = round(xcce302e,? ), xcce302f = round(xcce302f,? ), ",
                               "                    xcce302g = round(xcce302g,? ), xcce302h = round(xcce302h,? )  "
         
                               
              WHEN '3'   #无条件截位
                   LET g_sql = "UPDATE xcce_tmp SET xcce302  = trunc(xcce302 ,? ), xcce302a = trunc(xcce302a,? ), xcce302b = trunc(xcce302b,? ), ",
                               "                    xcce302c = trunc(xcce302c,? ), xcce302d = trunc(xcce302d,? ), ",
                               "                    xcce302e = trunc(xcce302e,? ), xcce302f = trunc(xcce302f,? ), ",
                               "                    xcce302g = trunc(xcce302g,? ), xcce302h = trunc(xcce302h,? )  "
         
              #180802-00015#1 add-S
              WHEN '2'  #四舍六入五成双
              #201119-00005#1 add--s           
                   LET g_sql = "UPDATE xcce_tmp SET xcce302  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                          THEN ROUND(xcce302,?) ",
                               "                                                          ELSE ROUND(xcce302,?)-(1/power(10,?)) ",
                               "                                                     END) ",
                               "                                      ELSE ROUND(xcce302,?)",
                               "                                END ),",
                               "                    xcce302a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                         THEN ROUND(xcce302a,?) ",
                               "                                                         ELSE ROUND(xcce302a,?)-(1/power(10,?)) ",
                               "                                                    END) ",
                               "                                     ELSE ROUND(xcce302a,?)",
                               "                                END ),",
                               "                    xcce302b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                         THEN ROUND(xcce302b,?) ",
                               "                                                         ELSE ROUND(xcce302b,?)-(1/power(10,?)) ",
                               "                                                    END) ",
                               "                                     ELSE ROUND(xcce302b,?)",
                               "                                END ),",
                               "                    xcce302c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                         THEN ROUND(xcce302c,?) ",
                               "                                                         ELSE ROUND(xcce302c,?)-(1/power(10,?)) ",
                               "                                                    END) ",
                               "                                     ELSE ROUND(xcce302c,?)",
                               "                                END ),",
                               "                    xcce302d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                         THEN ROUND(xcce302d,?) ",
                               "                                                         ELSE ROUND(xcce302d,?)-(1/power(10,?)) ",
                               "                                                    END) ",
                               "                                     ELSE ROUND(xcce302d,?)",
                               "                                END ),",
                               "                    xcce302e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                         THEN ROUND(xcce302e,?) ",
                               "                                                         ELSE ROUND(xcce302e,?)-(1/power(10,?)) ",
                               "                                                    END) ",
                               "                                     ELSE ROUND(xcce302e,?)",
                               "                                END ),",
                               "                    xcce302f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                         THEN ROUND(xcce302f,?) ",
                               "                                                         ELSE ROUND(xcce302f,?)-(1/power(10,?)) ",
                               "                                                    END) ",
                               "                                     ELSE ROUND(xcce302f,?)",
                               "                                END ),",
                               "                    xcce302g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                         THEN ROUND(xcce302g,?) ",
                               "                                                         ELSE ROUND(xcce302g,?)-(1/power(10,?)) ",
                               "                                                    END) ",
                               "                                     ELSE ROUND(xcce302g,?)",
                               "                                END ),",
                               "                    xcce302h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                               "                                                         THEN ROUND(xcce302h,?) ",
                               "                                                         ELSE ROUND(xcce302h,?)-(1/power(10,?)) ",
                               "                                                    END) ",
                               "                                     ELSE ROUND(xcce302h,?)",
                               "                                END )"
              #201119-00005#1 add--e               
              WHEN '4'  #无条件进位
                   LET g_sql = "UPDATE xcce_tmp SET xcce302  = ceil(xcce302 *power(10,?))/power(10,?),",
                               "                    xcce302a = ceil(xcce302a*power(10,?))/power(10,?),",
                               "                    xcce302b = ceil(xcce302b*power(10,?))/power(10,?),",
                               "                    xcce302c = ceil(xcce302c*power(10,?))/power(10,?),",
                               "                    xcce302d = ceil(xcce302d*power(10,?))/power(10,?),",
                               "                    xcce302e = ceil(xcce302e*power(10,?))/power(10,?),",
                               "                    xcce302f = ceil(xcce302f*power(10,?))/power(10,?),",
                               "                    xcce302g = ceil(xcce302g*power(10,?))/power(10,?),",
                               "                    xcce302h = ceil(xcce302h*power(10,?))/power(10,?) " 
              #180802-00015#1 add-E           
                               
         END CASE                         
         PREPARE s_axcp500_avg1_wip_4_2_p18 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p18"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL s_axcp500_ins_error('','','','','','','','','','','',
                                     '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_wip_4_2_p18')         
#           RETURN r_success
         END IF
         
         #180802-00015#1 mark-S
#         EXECUTE s_axcp500_avg1_wip_4_2_p18 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                 g_curr[p_seq].digit2
         #180802-00015#1 mark-E
         #180802-00015#1 add-S
         CASE g_round_type
            WHEN '1'
               EXECUTE s_axcp500_avg1_wip_4_2_p18 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
            WHEN '2'
               EXECUTE s_axcp500_avg1_wip_4_2_p18 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
            WHEN '3'
               EXECUTE s_axcp500_avg1_wip_4_2_p18 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
            WHEN '4'
               EXECUTE s_axcp500_avg1_wip_4_2_p18 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
         END CASE
         #180802-00015#1 add-E
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p18"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL s_axcp500_ins_error('','','','','','','','','','','',
                                     '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_4_2_p18')         
#           RETURN r_success
         END IF


         #修正xcce302a的值 xcce302a = xcce302 - (xcce302b~xcce302h)
         UPDATE xcce_tmp SET xcce302a = xcce302 - (xcce302b+xcce302c+xcce302d+xcce302e+xcce302f+xcce302g+xcce302h)
          WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302a"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF          
         #171013-00022#1---add---e                  
   END CASE
   #170411-00032#1--add----e


   #将本成本阶的所有DL+OH+SUB插入wip4_tmp4中
   #170704-00015#1 add start -----
   IF g_sys_6007 MATCHES '[2]' THEN
      #190411-00017#1 A mark-S
#      INSERT INTO wip4_tmp4
#        SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301+xccd303,0,0,-1,0
#          FROM xcce_tmp,xccd_tmp,sfaa_tmp,sfac_tmp2
#         WHERE xccd001 = xcce001 AND xccd001 = p_seq
#           AND xccd006 = xcce006      #工单编号
#           AND xcce007 = 'DL+OH+SUB'  #元件
#           AND xcce008 = ' '          #特性
#           AND xcce009 = ' '          #批号
#           AND sfaaent   = xccdent
#           AND sfaadocno = xccd006
#           AND sfaa042   = p_flag
#           AND sfaadocno = sfacdocno
#           AND sfac_tmp2.clevel = p_xcbb006
      #190411-00017#1 A mark-E
      #190411-00017#1 A add-S
      INSERT INTO wip4_tmp4
        SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301+xccd303,0,0,-1,0
          FROM xcce_tmp,xccd_tmp
         WHERE xccd001 = xcce001 AND xccd001 = p_seq
           AND xccd006 = xcce006      #工单编号
           AND xcce007 = 'DL+OH+SUB'  #元件
           AND xcce008 = ' '          #特性
           AND xcce009 = ' '          #批号
           AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xccdent AND sfaadocno = xccd006 AND sfaa042 = p_flag)
           AND EXISTS(SELECT 1 FROM sfac_tmp2 a WHERE a.sfacdocno = xccd006 AND a.clevel = p_xcbb006)
      #190411-00017#1 A add-E
   ELSE
   #170704-00015#1 add end   ----- 
      #190411-00017#1 A mark-S  
#      INSERT INTO wip4_tmp4
#   #    SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301,0,-1,-1,0
#       SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301,0,0,-1,0
#         FROM xcce_tmp,xccd_tmp,sfaa_tmp,sfac_tmp2  #mod zhangllc 150730 add sfac_tmp2
#        WHERE xccd001 = xcce001 AND xccd001 = p_seq
#          AND xccd006 = xcce006      #工单编号
#          AND xcce007 = 'DL+OH+SUB'  #元件
#          AND xcce008 = ' '          #特性
#          AND xcce009 = ' '          #批号
#          AND sfaaent   = xccdent  #add 150916
#          AND sfaadocno = xccd006
#          AND sfaa042   = p_flag
#          AND sfaadocno = sfacdocno  #add zhangllc 150730
#          #mod zhangllc 150730 --begin
#          #AND xccd007 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006)
#          #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
#          #AND EXISTS (SELECT 1 FROM s_axcp500_tmp
#          #             WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xcbb006=sfac_tmp2.clevel
#          #               AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
#          AND sfac_tmp2.clevel = p_xcbb006
#          #mod zhangllc 160528 SBS4--e
#          #mod zhangllc 150730 --end
      #190411-00017#1 A mark-E
      #190411-00017#1 A add-S
      INSERT INTO wip4_tmp4
       SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301,0,0,-1,0
         FROM xcce_tmp,xccd_tmp  
        WHERE xccd001 = xcce001 AND xccd001 = p_seq
          AND xccd006 = xcce006      #工单编号
          AND xcce007 = 'DL+OH+SUB'  #元件
          AND xcce008 = ' '          #特性
          AND xcce009 = ' '          #批号
          AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xccdent AND sfaadocno = xccd006 AND sfaa042 = p_flag)
          AND EXISTS(SELECT 1 FROM sfac_tmp2 a WHERE a.sfacdocno = xccd006 AND a.clevel = p_xcbb006 )
      #190411-00017#1 A add-E
   END IF #170704-00015#1 add          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "INSERT INTO wip4_tmp4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    
   
   CASE g_sys_6014  #在制人工制费分摊方式
        WHEN '1'  #1:期末在制按约当量计算
             #180611-00091#1 mark-S
#             LET g_sql = " MERGE INTO wip4_tmp4 a ",
#                         "       USING (SELECT xcbi002,nvl(SUM(xcbi103),0) xcbi103 ",
#                         "                FROM xcbh_t,xcbi_t     ", 
#                         "               WHERE xcbhent   = xcbient AND xcbient = ",g_enterprise,
#                         "                 AND xcbhdocno = xcbidocno ",
#                         "                 AND xcbh001   BETWEEN '",g_bdate,"' AND '",g_edate,"'",
#                         "                 AND xcbhstus  = 'Y' ",                          
#                         "                GROUP BY xcbi002 ",
#                         "                ) b ",
#                         "          ON ( xcce006 = b.xcbi002)   ",       #工单         
#                         "  WHEN MATCHED THEN    ",
##                        "     UPDATE SET rate1  = nvl(xcbi103,0) / 100 - 1   "  
#                         "     UPDATE SET a.xcbi103 = b.xcbi103 ,",
#                         "                rate1     = decode(xccd301-b.xcbi103,0,0,xccd301 / (xccd301 - b.xcbi103) * -1)  "      #xccd301为负数,xcbi103为正数 
#--                         "      WHERE xccd301 - xcbi103 <> 0 "
             #180611-00091#1 mark-E
             #180611-00091#1 add-S
             #PGS(D)-00824 ---start---
             LET g_sql = " MERGE INTO wip4_tmp4 a ",
                         "       USING (SELECT xcbi002,NVL(SUM(xcbi100),0) xcbi100,NVL(SUM(xcbi103),0) xcbi103,",
                         #"                     nvl(SUM(DECODE(xcbi100+xcbi103,0,0,(SELECT COUNT(DISTINCT sffb009) FROM sffb_t WHERE sffbent = xcbient AND xcbi002 = sffb005 AND sffb030 =xcbi001 AND sffbstus = 'Y' AND sffb012 BETWEEN '",g_bdate,"' AND '",g_edate,"')/(xcbi100+xcbi103))),0) xcbi100_xcbi103, ", #190805-00002#1 mark
                         "                     nvl(SUM(DECODE(xcbi100+xcbi103,0,0,(SELECT DECODE(COUNT(DISTINCT sffb009),0,1,COUNT(DISTINCT sffb009)) FROM sffb_t WHERE sffbent = xcbient AND xcbi002 = sffb005 AND sffb030 =xcbi001 AND sffbstus = 'Y' AND sffb012 BETWEEN '",g_bdate,"' AND '",g_edate,"')/(xcbi100+xcbi103))),0) xcbi100_xcbi103, ", #190805-00002#1 add
                         #"                     (SELECT SUM(COUNT(DISTINCT sffb009)) FROM sffb_t WHERE sffbent = xcbient AND xcbi002 = sffb005 AND sffbstus = 'Y' AND sffb012 BETWEEN '",g_bdate,"' AND '",g_edate,"' GROUP BY sffb030) sffb_cnt ",  #总报工站数  #190219-00019#1 mark
                         "                     NVL((SELECT SUM(COUNT(DISTINCT sffb009)) FROM sffb_t WHERE sffbent = xcbient AND xcbi002 = sffb005 AND sffbstus = 'Y' AND sffb012 BETWEEN '",g_bdate,"' AND '",g_edate,"' GROUP BY sffb030),0) sffb_cnt ",  #总报工站数  #190219-00019#1
                         "                FROM xcbh_t,xcbi_t     ", 
                         "               WHERE xcbhent   = xcbient AND xcbient = ",g_enterprise,
                         "                 AND xcbhdocno = xcbidocno ",
                         "                 AND xcbh001   BETWEEN '",g_bdate,"' AND '",g_edate,"'",
                         "                 AND xcbhstus  = 'Y' ",                          
                         "                GROUP BY xcbient,xcbi002 ",
                         "                ) b ",
                         "          ON ( xcce006 = b.xcbi002)   ",       #工单         
                         "  WHEN MATCHED THEN    ",
                         "     UPDATE SET a.xcbi103 = b.xcbi103 ,",
                         #"                rate1     = xccd301*decode(b.sffb_cnt,0,0, b.xcbi100_xcbi103 / b.sffb_cnt )  "      #轉出比率=(轉出數量*(SUM(報工站數/(入庫數量+約當量)))/總報工站數)  #190219-00019#1 mark
                         "                rate1=decode(b.sffb_cnt,0,xccd301/(xccd101+xccd201),xccd301*b.xcbi100_xcbi103 / b.sffb_cnt) "      #190219-00019#1
             #PGS(D)-00824 --- end ---
             #180611-00091#1 add-E
             PREPARE s_axcp500_avg1_wip_4_2_p3 FROM g_sql
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p3"
                LET g_errparam.popup  = TRUE
                CALL cl_err()
          #     RETURN r_success
             END IF  
          
             EXECUTE s_axcp500_avg1_wip_4_2_p3 
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p3"
                LET g_errparam.popup  = TRUE
                CALL cl_err()
          #     RETURN r_success
             END IF                            
                                          
        WHEN '2'  #2:期末在制按投入计算
             #UPDATE wip4_tmp4 SET rate1 = xccd301 / (xccd101 + xccd201) #170705-00006#1 mark
             UPDATE wip4_tmp4 SET rate1 = ( CASE (xccd101 + xccd201) WHEN 0 THEN 0 ELSE xccd301 / (xccd101 + xccd201) END) #170705-00006#1 add
              WHERE xccd101 + xccd201 <> 0
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.extend = "UPDATE wip4_tmp4 SET rate1"
                LET g_errparam.popup  = TRUE
                CALL cl_err()
          #     RETURN r_success
             END IF 
       WHEN '3'  #3:期末在制按产出计算
             UPDATE wip4_tmp4 SET rate1 = -1
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.extend = "UPDATE wip4_tmp4 SET rate1"
                LET g_errparam.popup  = TRUE
                CALL cl_err()
          #     RETURN r_success
             END IF                     
   END CASE
   
#   #更新rate2
##   UPDATE wip4_tmp4 SET rate2 = xccd301 / (xccd101 + xccd201)
#   UPDATE wip4_tmp4 SET rate2 = 1
#    WHERE xccd101 + xccd201 <> 0   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE wip4_tmp4 SET rate2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF           
   #180305-00062#1---add---s
   #1.工单是整张委外时,委外加工费的转出比例为-1
   #2.工单是工单委外时,委外加工费的转出参考人工制費转出原则的参数设定做转出
   UPDATE wip4_tmp4 SET rate2 = rate1
    WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE xcce006 = sfaadocno AND sfaa057 <> '2')
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE wip4_tmp4 SET rate2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF      
   #180305-00062#1---add---e
   
   #若委外加工费为0,则以人工/制费为准
   LET g_sql = "   UPDATE wip4_tmp4 a SET rate3 = rate1           ",
               "    WHERE EXISTS ( SELECT 1 FROM xcce_tmp b       ", 
               "                    WHERE a.xcce001 = b.xcce001   ",
               "                      AND a.xcce002 = b.xcce002   ",
               "                      AND a.xcce006 = b.xcce006   ",
               "                      AND a.xcce007 = b.xcce007   ",
               "                      AND a.xcce007 = 'DL+OH+SUB' ",
               "                      AND b.xcce202c = 0)         "
   PREPARE s_axcp500_avg1_wip_4_2_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_2_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF          
                      
   #若委外加工费非0,则以委外为准
   LET g_sql = "   UPDATE wip4_tmp4 a SET rate3 = rate2           ",
               "    WHERE EXISTS ( SELECT 1 FROM xcce_tmp b       ", 
               "                    WHERE a.xcce001 = b.xcce001   ",
               "                      AND a.xcce002 = b.xcce002   ",
               "                      AND a.xcce006 = b.xcce006   ",
               "                      AND a.xcce007 = b.xcce007   ",
               "                      AND a.xcce007 = 'DL+OH+SUB' ",
               "                      AND b.xcce202c <> 0)         "
   PREPARE s_axcp500_avg1_wip_4_2_p8 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_2_p8 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                    
             

   #更新DL+OH+SUB的转出成本
   #用wip4_tmp3中的转出数量及成本更新xcce_tmp
   #若主件本期没入库时,DL+OH+SUB转出至差异字段
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING wip4_tmp4 b ",
               "          ON ( a.xcce001 = b.xcce001  ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009 ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = (a.xcce101  + a.xcce201  ) * b.rate3, ",
               "                a.xcce302b = (a.xcce102b + a.xcce202b ) * b.rate1 , ",
               "                a.xcce302d = (a.xcce102d + a.xcce202d ) * b.rate1,  ",
               "                a.xcce302e = (a.xcce102e + a.xcce202e ) * b.rate1,  ",
               "                a.xcce302f = (a.xcce102f + a.xcce202f ) * b.rate1,  ",
               "                a.xcce302g = (a.xcce102g + a.xcce202g ) * b.rate1,  ",
               "                a.xcce302h = (a.xcce102h + a.xcce202h ) * b.rate1,  ",       
               "                a.xcce302c = (a.xcce102c + a.xcce202c ) * b.rate2   ",
               "      WHERE b.xccd301 <> 0 "     #人工制费转出时需检查本期是否有入库,若有入库,则转出,没有则转差异
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_2_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_2_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   #200506-00035#1---add---s
   #整单委外,当期无入库,只有委外仓退单时,加工费需要做转出
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING wip4_tmp4 b ",
               "          ON ( a.xcce001 = b.xcce001  ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009  ",
               "         AND   b.xccd301 = 0 ) ",     #xccd301=0 表示整单委外工单当期无入库
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce302c = (a.xcce102c + a.xcce202c ) * b.rate2   ",
               "      WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE a.xcce006 = sfaadocno AND sfaa057 = '2') "
   PREPARE s_axcp500_avg1_wip_4_2_p4_c FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p4_c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_2_p4_c 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p4_c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
   #200506-00035#1---add---e   
   
   IF g_sys_6008 = 'N' OR g_sys_6022 = 'N' THEN  #170329-00068#1 add
      #mod zhangllc 160519 -s
      #1.先处理金额的转出
      IF g_sys_6014 = '3' THEN   #在制人工制费分摊方式 #3:期末在制按产出计算
         #mod SBS11 如果有人工制费的，数量一起转出；如果没有人工制费，只有加工的，本期没入库，就不转出数量
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xcce_tmp   a ",
                    #"       USING wip4_tmp4 b ",    #161206-00025#1 mark
                     #161206-00025#1-s-add
                     #增加判斷：已成本結案的工單才轉差異
                     "       USING (SELECT wip4_tmp4.* FROM wip4_tmp4,sfaa_t ",
                     "               WHERE sfaaent = ",g_enterprise,
                     "                 AND xcce006 = sfaadocno ",
                     "                 AND sfaa048 IS NOT NULL ",
                     "                 AND sfaa048 >= '",g_bdate,"' AND sfaa048 < '",l_date,"') b",
                     #161206-00025#1-e-add
                     "          ON ( a.xcce001 = b.xcce001  ",
                     "         AND   a.xcce002 = b.xcce002  ",
                     "         AND   a.xcce006 = b.xcce006  ",       #工单
                     "         AND   a.xcce007 = b.xcce007  ",
                     "         AND   a.xcce008 = b.xcce008  ",
                     "         AND   a.xcce009 = b.xcce009 ) ",
                     "  WHEN MATCHED THEN    ",
                     "     UPDATE SET ",   #a.xcce303  = a.xcce303  + (a.xcce101  + a.xcce201  ) * b.rate3, ",  #mark zhangllc SBS11 数量先不转出，后面再判断
                     "                a.xcce304b = a.xcce304b + (a.xcce102b + a.xcce202b ) * b.rate1 , ",
                     "                a.xcce304d = a.xcce304d + (a.xcce102d + a.xcce202d ) * b.rate1,  ",
                     "                a.xcce304e = a.xcce304e + (a.xcce102e + a.xcce202e ) * b.rate1,  ",
                     "                a.xcce304f = a.xcce304f + (a.xcce102f + a.xcce202f ) * b.rate1,  ",
                     "                a.xcce304g = a.xcce304g + (a.xcce102g + a.xcce202g ) * b.rate1,  ",
                     "                a.xcce304h = a.xcce304h + (a.xcce102h + a.xcce202h ) * b.rate1,  ",       #wujie 160520 remove , #161206-00025#1 add , 
                     "                a.xcce304c = a.xcce304c + (a.xcce102c + a.xcce202c ) * b.rate2   ",       #161206-00025#1 remark
                     "      WHERE b.xccd301 = 0 "           #人工制费转出时需检查本期是否有入库,若有入库,则转出,没有则转差异
         #PGS(D)-00824 --- end ---
      ELSE
      #mod zhangllc 160519 -e
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xcce_tmp   a ",
                    #"       USING wip4_tmp4 b ",           #161206-00025#1 mark
                     #161206-00025#1-s-add
                     #增加判斷：已成本結案的工單才轉差異
                     "       USING (SELECT wip4_tmp4.* FROM wip4_tmp4,sfaa_t ",
                     "               WHERE sfaaent = ",g_enterprise,
                     "                 AND xcce006 = sfaadocno ",
                     "                 AND sfaa048 IS NOT NULL ",
                     "                 AND sfaa048 >= '",g_bdate,"' AND sfaa048 < '",l_date,"') b",
                     #161206-00025#1-e-add
                     "          ON ( a.xcce001 = b.xcce001  ",
                     "         AND   a.xcce002 = b.xcce002  ",
                     "         AND   a.xcce006 = b.xcce006  ",       #工单
                     "         AND   a.xcce007 = b.xcce007  ",
                     "         AND   a.xcce008 = b.xcce008  ",
                     "         AND   a.xcce009 = b.xcce009 ) ",
                     "  WHEN MATCHED THEN    ",
                     "     UPDATE SET ",   #a.xcce303  = a.xcce303  + (a.xcce101  + a.xcce201  ) * b.rate3, ",   #mark zhangllc SBS11 数量先不转出，后面再判断
                     "                a.xcce304b = a.xcce304b + (a.xcce102b + a.xcce202b ) * b.rate1 , ",
                     "                a.xcce304d = a.xcce304d + (a.xcce102d + a.xcce202d ) * b.rate1,  ",
                     "                a.xcce304e = a.xcce304e + (a.xcce102e + a.xcce202e ) * b.rate1,  ",
                     "                a.xcce304f = a.xcce304f + (a.xcce102f + a.xcce202f ) * b.rate1,  ",
                     "                a.xcce304g = a.xcce304g + (a.xcce102g + a.xcce202g ) * b.rate1,  ",
                     "                a.xcce304h = a.xcce304h + (a.xcce102h + a.xcce202h ) * b.rate1,  ",       
                     "                a.xcce304c = a.xcce304c + (a.xcce102c + a.xcce202c ) * b.rate2   ",
                     "      WHERE b.xccd301 = 0 "           #人工制费转出时需检查本期是否有入库,若有入库,则转出,没有则转差异
         #PGS(D)-00824 --- end ---
      END IF  #add zhangllc 160519
                  
    
      PREPARE s_axcp500_avg1_wip_4_2_p9 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p9"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
    
      EXECUTE s_axcp500_avg1_wip_4_2_p9 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p9"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF
   END IF   #170329-00068#1 add
   #2.再处理数量的转出
   #add zhangllc SBS11--s     如果有人工制费的，数量一起转出；如果没有人工制费，只有加工的，本期没入库，就不转出数量
   #                          即有金额转出的，数量才转出
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING wip4_tmp4 b ",
               "          ON ( a.xcce001 = b.xcce001  ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009 ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce303  = a.xcce303  + (a.xcce101  + a.xcce201  ) * b.rate3 ", 
               "      WHERE b.xccd301 = 0 ",          #人工制费转出时需检查本期是否有入库,若有入库,则转出,没有则转差异
               "        AND a.xcce304b + a.xcce304d + a.xcce304e + a.xcce304f + a.xcce304g + a.xcce304h + a.xcce304c > 0 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_2_p9_2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p9_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_4_2_p9_2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p9_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   #add zhangllc SBS11--e
   
   #180611-00091#1 add-S 对转出数量进行取位
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp a",
               " USING (SELECT DISTINCT xcceent,xcceld,xcce001,xcce002,xcce003,xcce004,xcce005,xcce006,xcce007,xcce008,xcce009, ",
               "               (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xcce301,0),6),ooca002) " ,
               "                     WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xcce301,0),6),ooca002),(2/power(10,ooca002)))=0 ",
               "                                                 THEN round(round(COALESCE(xcce301,0),6),ooca002) ",
               "                                                 ELSE round(round(COALESCE(xcce301,0),6),ooca002)-(-1/power(10,ooca002)) ",
               "                                             END )",
               "                     WHEN ooca004 = 3 THEN trunc(round(COALESCE(xcce301,0),6),ooca002)",
               "                     WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xcce301,0),6)*power(10,ooca002))/power(10,ooca002)",
               "               END ) xcce301 ",
               #190411-00017#1 A mark-S
#               "          FROM xcce_tmp,sfaa_t,imaa_t ",
#               "          LEFT OUTER JOIN ooca_t ON oocaent = imaaent AND ooca001 = imaa006 ",  
#               "         WHERE xcceent = imaaent AND sfaa010 = imaa001 ",
#               "           AND xcce006 = sfaadocno AND sfaaent = xcceent ",
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
               "          FROM xcce_tmp,imaa_t ",
               "          LEFT OUTER JOIN ooca_t ON oocaent = imaaent AND ooca001 = imaa006 ",  
               "         WHERE xcceent = imaaent ",
               #"           AND EXISTS(SELECT 1 FROM sfaa_t WHERE sfaa010 = imaa001 AND xcce006 = sfaadocno AND sfaaent = xcceent) ", #190607-00003#1 mark
               #190607-00003#1 add start -----
               "           AND EXISTS(SELECT 1 FROM sfaa_t WHERE sfaa010 = imaa001 AND xcce006 = sfaadocno AND sfaaent = xcceent AND sfaa042 = '",p_flag,"' ) ", 
               "           AND EXISTS ( SELECT 1 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ",
               "                         WHERE xccd006 = sfacdocno AND clevel = ",p_xcbb006,"",
               "                           AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"'",
               "                           AND xcce006 = xccd006 ) ",
               #190607-00003#1 add end    -----               
               #190411-00017#1 A add-E
               "           AND xcceent = ",g_enterprise,
               "           AND xcceld  = '",g_ld,"'",
               "           AND xcce001 = '",p_seq,"'",
               "           AND xcce003 = '",g_xcat001,"'",
               "           AND xcce004 = ",g_yy,
               "           AND xcce005 = ",g_pp,
               "           AND xcce007 = 'DL+OH+SUB' ",
               "         ) b",                  
               "       ON (a.xcceent = b.xcceent ",
               "       AND a.xcceld  = b.xcceld  ",
               "       AND a.xcce001 = b.xcce001 ",
               "       AND a.xcce002 = b.xcce002 ",
               "       AND a.xcce003 = b.xcce003 ",
               "       AND a.xcce004 = b.xcce004 ",
               "       AND a.xcce005 = b.xcce005 ",
               "       AND a.xcce006 = b.xcce006 ",
               "       AND a.xcce007 = b.xcce007 ",
               "       AND a.xcce008 = b.xcce008 ",
               "       AND a.xcce009 = b.xcce009)",          
               "  WHEN MATCHED THEN ",
               "     UPDATE SET a.xcce301 = nvl(b.xcce301,0) "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_4_2_xcce301_p61 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_xcce301_p61"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF


   EXECUTE s_axcp500_avg1_wip_4_2_xcce301_p61                                         
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_xcce301_p61"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_4_2_xcce301_p61') 
   END IF     
   #180611-00091#1 add-E
   #xcce302a~xcce302h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = round(xcce302 ,? ), xcce302a = round(xcce302a,? ), xcce302b = round(xcce302b,? ), ",
                         "                    xcce302c = round(xcce302c,? ), xcce302d = round(xcce302d,? ), ",
                         "                    xcce302e = round(xcce302e,? ), xcce302f = round(xcce302f,? ), ",
                         "                    xcce302g = round(xcce302g,? ), xcce302h = round(xcce302h,? ), ",
                         "                    xcce304  = round(xcce304 ,? ), xcce304a = round(xcce304a,? ), xcce304b = round(xcce304b,? ), ",
                         "                    xcce304c = round(xcce304c,? ), xcce304d = round(xcce304d,? ), ",
                         "                    xcce304e = round(xcce304e,? ), xcce304f = round(xcce304f,? ), ",
                         "                    xcce304g = round(xcce304g,? ), xcce304h = round(xcce304h,? )  ",                         
                         " WHERE xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'",
                         #mod zhangllc 160528 SBS4-s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
                         #"   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp ",
                         #"                     WHERE xccd007 = imaa001   AND xcbb006 = ",p_xcbb006 ,
                         ##"                       AND xccd008 = xccc007 ",  #特征 add zhangllc 150730 xccd不存特征的
                         #"                       AND xccdent = sfaaent ",  #add 150916
                         #"                       AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"')"                        
                        #"   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ",                    #161114-00003#1 mark
                         #"   AND xcce006 IN ( SELECT /*+ PARALLEL(4) */ xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ", #161114-00003#1 add   #170110-00028#1                      
                         "   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ",  #170110-00028#1                      
                         "                     WHERE xccd006 = sfacdocno   AND clevel = ",p_xcbb006 ,
                         "                       AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"')"
                         #mod zhangllc 160528 SBS4--e
                         
                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = trunc(xcce302 ,? ), xcce302a = trunc(xcce302a,? ), xcce302b = trunc(xcce302b,? ), ",
                         "                    xcce302c = trunc(xcce302c,? ), xcce302d = trunc(xcce302d,? ), ",
                         "                    xcce302e = trunc(xcce302e,? ), xcce302f = trunc(xcce302f,? ), ",
                         "                    xcce302g = trunc(xcce302g,? ), xcce302h = trunc(xcce302h,? ), ",
                         "                    xcce304  = trunc(xcce304 ,? ), xcce304a = trunc(xcce304a,? ), xcce304b = trunc(xcce304b,? ), ",
                         "                    xcce304c = trunc(xcce304c,? ), xcce304d = trunc(xcce304d,? ), ",
                         "                    xcce304e = trunc(xcce304e,? ), xcce304f = trunc(xcce304f,? ), ",
                         #"                    xcce304g = trunc(xcce304g,? ), xcce304h = trunc(xcce304h,? ), ",   #190520-00024#1 mark                        
                         "                    xcce304g = trunc(xcce304g,? ), xcce304h = trunc(xcce304h,? ) ",    #190520-00024#1
                         " WHERE xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'", 
                         #mod zhangllc 160528 SBS4-s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
                         #"   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp ",
                         #"                     WHERE xccd007 = imaa001   AND xcbb006 = ",p_xcbb006 ,
                         ##"                       AND xccd008 = xccc007 ",  #特征 add zhangllc 150730 xccd不存特征的
                         #"                       AND xccdent = sfaaent ",  #add 150916
                         #"                       AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"')"                          
                        #"   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ",                    #161114-00003#1 mark
                        #"   AND xcce006 IN ( SELECT /*+ PARALLEL(4) */ xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ", #161114-00003#1 add  #170110-00028#1                         
                         "   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ", #170110-00028#1                         
                         "                     WHERE xccd006 = sfacdocno   AND clevel = ",p_xcbb006 ,
                         "                       AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"')"
                         #mod zhangllc 160528 SBS4--e   

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce302,?) ",
                         "                                                          ELSE ROUND(xcce302,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce302,?)",
                         "                                END ),",
                         "                    xcce302a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302a,?) ",
                         "                                                         ELSE ROUND(xcce302a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302a,?)",
                         "                                END ),",
                         "                    xcce302b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302b,?) ",
                         "                                                         ELSE ROUND(xcce302b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302b,?)",
                         "                                END ),",
                         "                    xcce302c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302c,?) ",
                         "                                                         ELSE ROUND(xcce302c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302c,?)",
                         "                                END ),",
                         "                    xcce302d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302d,?) ",
                         "                                                         ELSE ROUND(xcce302d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302d,?)",
                         "                                END ),",
                         "                    xcce302e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302e,?) ",
                         "                                                         ELSE ROUND(xcce302e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302e,?)",
                         "                                END ),",
                         "                    xcce302f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302f,?) ",
                         "                                                         ELSE ROUND(xcce302f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302f,?)",
                         "                                END ),",
                         "                    xcce302g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302g,?) ",
                         "                                                         ELSE ROUND(xcce302g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302g,?)",
                         "                                END ),",
                         "                    xcce302h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302h,?) ",
                         "                                                         ELSE ROUND(xcce302h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302h,?)",
                         "                                END ),",
                         "                   xcce304  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce304,?) ",
                         "                                                          ELSE ROUND(xcce304,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce304,?)",
                         "                                END ),",
                         "                    xcce304a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304a,?) ",
                         "                                                         ELSE ROUND(xcce304a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304a,?)",
                         "                                END ),",
                         "                    xcce304b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304b,?) ",
                         "                                                         ELSE ROUND(xcce304b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304b,?)",
                         "                                END ),",
                         "                    xcce304c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304c,?) ",
                         "                                                         ELSE ROUND(xcce304c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304c,?)",
                         "                                END ),",
                         "                    xcce304d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304d,?) ",
                         "                                                         ELSE ROUND(xcce304d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304d,?)",
                         "                                END ),",
                         "                    xcce304e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304e,?) ",
                         "                                                         ELSE ROUND(xcce304e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304e,?)",
                         "                                END ),",
                         "                    xcce304f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304f,?) ",
                         "                                                         ELSE ROUND(xcce304f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304f,?)",
                         "                                END ),",
                         "                    xcce304g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304g,?) ",
                         "                                                         ELSE ROUND(xcce304g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304g,?)",
                         "                                END ),",
                         "                    xcce304h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304h,?) ",
                         "                                                         ELSE ROUND(xcce304h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304h,?)",
                         "                                END )",                         
                         " WHERE xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'", 
                         "   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ",                   
                         "                     WHERE xccd006 = sfacdocno   AND clevel = ",p_xcbb006 ,
                         "                       AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"')"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = ceil(xcce302 *power(10,?))/power(10,?),",
                         "                    xcce302a = ceil(xcce302a*power(10,?))/power(10,?),",
                         "                    xcce302b = ceil(xcce302b*power(10,?))/power(10,?),",
                         "                    xcce302c = ceil(xcce302c*power(10,?))/power(10,?),",
                         "                    xcce302d = ceil(xcce302d*power(10,?))/power(10,?),",
                         "                    xcce302e = ceil(xcce302e*power(10,?))/power(10,?),",
                         "                    xcce302f = ceil(xcce302f*power(10,?))/power(10,?),",
                         "                    xcce302g = ceil(xcce302g*power(10,?))/power(10,?),",
                         "                    xcce302h = ceil(xcce302h*power(10,?))/power(10,?),",  
                         "                    xcce304  = ceil(xcce304 *power(10,?))/power(10,?),",
                         "                    xcce304a = ceil(xcce304a*power(10,?))/power(10,?),",
                         "                    xcce304b = ceil(xcce304b*power(10,?))/power(10,?),",
                         "                    xcce304c = ceil(xcce304c*power(10,?))/power(10,?),",
                         "                    xcce304d = ceil(xcce304d*power(10,?))/power(10,?),",
                         "                    xcce304e = ceil(xcce304e*power(10,?))/power(10,?),",
                         "                    xcce304f = ceil(xcce304f*power(10,?))/power(10,?),",
                         "                    xcce304g = ceil(xcce304g*power(10,?))/power(10,?),",
                         "                    xcce304h = ceil(xcce304h*power(10,?))/power(10,?) ",                         
                         " WHERE xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'", 
                         "   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ",                   
                         "                     WHERE xccd006 = sfacdocno   AND clevel = ",p_xcbb006 ,
                         "                       AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"')"
        #180802-00015#1 add-E    
                         
   END CASE                        
   PREPARE s_axcp500_avg1_wip_4_2_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_wip_4_2_p6')         
#     RETURN r_success
   END IF

   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2
   #180802-00015#1 mark-E 
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202h
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E                                           
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_4_2_p6')         
#     RETURN r_success
   END IF     
   
   UPDATE xcce_tmp SET xcce302 = xcce302a + xcce302b + xcce302c + xcce302d + 
                                 xcce302e + xcce302f + xcce302g + xcce302h,
                       xcce304 = xcce304a + xcce304b + xcce304c + xcce304d + 
                                 xcce304e + xcce304f + xcce304g + xcce304h          
    WHERE xcce007 = 'DL+OH+SUB'
      AND xcce001 = p_seq
      #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
      #AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
      #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
      #                    #AND xccd008 = xccc007   #特征 add zhangllc 150730 xccd不存特征的
      #                    AND xccdent = sfaaent    #add 150916
      #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag)
      AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
                        WHERE xccd006 = sfacdocno  AND clevel = p_xcbb006
                          AND xccdent = sfaaent    AND xccd006 = sfaadocno AND sfaa042 = p_flag)
      #mod zhangllc 160528 SBS4--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302 "
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

#170504-00046#1--mark-s
#   #170120-00013#1---s
#   #1.參數下拉選項改成1.結案月轉出、2.當月轉出，金額轉入庫存成本、3.當月轉出，金額轉至在製差異轉出
#   #2.函式s_axcp500_avg1_wip_4_2內，處理s_axcp500_avg1_sum_xcce前，判斷參數「當站報廢轉出」= 2或3時，做下面處理
#   #  a.抓取asft335的報廢數量(sffb018)，開工日期(sffb012)在該期別內的已確認之報工單，數量合計
#   #  b.差異數量xccd303 = xccd303 + 合計的報廢數量 * (-1)
#   #    参数为2时，报废金额转至入库金额上，参数为3时，报废金额转至差异金额上  #170504-00046#1 add
#   #  c.換算元件報廢數量：SUM((sfba013)/sfba022)/sfaa012)*合計的報廢數量 * (-1)
#   #  d.參數「當站報廢轉出」= 2.當月轉出，金額轉入庫存成本
#   #    xcce301 = xcce301 + 元件報廢數量
#   #    xcce302 = xcce302 + 元件報廢金額(仿照上面wip4_tmp3的轉出成本計算金額)
#   #    (a~h也要計算)
#   #  e.參數「當站報廢轉出」= 3.當月轉出，金額轉至在製差異轉出
#   #    xcce303 = xcce303 + 元件報廢數量
#   #    xcce304 = xcce304 + 元件報廢金額(仿照上面wip4_tmp3的轉出成本計算金額)
#   #    (a~h也要計算)
#   IF g_sys_6007 MATCHES '[23]' THEN
#      LET g_sql = " MERGE INTO xccd_tmp a  ",
#                  #170504-00046#1--modify---s
#                  #"       USING ( SELECT sffbent,sffb005,SUM(COALESCE(sffb018 ,0)) * (-1) sffb018 , ",
#                  #"                      c.sfaa042,c.xcbb006 ",
#                  "       USING ( SELECT sffbent,sffb005,SUM(qty) * (-1) sffb018 ,d.c1_sfaa042 d1_sfaa042,d.c1_xcbb006 d1_xcbb006",
#                  "              FROM (",
#                  "                  SELECT DISTINCT sffbent,sffb005,COALESCE(sffb018 ,0) qty ,c.sfaa042 c1_sfaa042,c.xcbb006 c1_xcbb006",
#                  #170504-00046#1--modify---e
#                  "                  FROM sffb_t , wip4_tmp3 c ",
#                  "                  WHERE sffbent = ",g_enterprise,
#                  "                    AND sffbstus = 'Y' AND sffb001 ='3' ",
#                  "                    AND sffb012 >= '",g_bdate,"' ",
#                  "                    AND sffb012 <= '",g_edate,"' ",
#                  "                    AND EXISTS (SELECT 1 FROM wip4_tmp3 e,xcce_tmp f  ",
#                  "                                  WHERE e.xcce001 = f.xcce001",
#                  "                                    AND e.xcce002 = f.xcce002",
#                  "                                    AND e.xcce006 = f.xcce006",       #工单
#                  "                                    AND e.xcce007 = f.xcce007",
#                  "                                    AND e.xcce008 = f.xcce008",
#                  "                                    AND e.xcce009 = f.xcce009",
#                  "                                    AND e.sfaa042 = ? ",
#                  "                                    AND e.xcbb006 = ",p_xcbb006 ," )  ",
#                  "                   AND c.xcce006=sffb005 ",
#                  #170504-00046#1--modify---s
#                  #"               GROUP BY sffbent,sffb005,c.sfaa042,c.xcbb006 ) b",
#                  "                  ) d ",
#                   "               GROUP BY sffbent,sffb005 ,d.c1_sfaa042,d.c1_xcbb006) b",
#                  #170504-00046#1--modify---e
#                  "   ON ( a.xccdent = b.sffbent ",
#		            "   AND  a.xccd006 = b.sffb005 ",
#                  #170504-00046#1--modify---s
#                  #"   AND  b.sfaa042 = ? ",
#                  #"   AND  b.xcbb006 = ",p_xcbb006 ," )  ",      #工单
#                  "   AND  b.d1_sfaa042 = ? ",
#                  "   AND  b.d1_xcbb006 = ",p_xcbb006 ," )  ",      #工单
#                  #170504-00046#1--modify---e
#                  "  WHEN MATCHED THEN    ",
#                  "     UPDATE SET xccd303  = xccd303 + b.sffb018 "  
#                  
#      PREPARE s_axcp500_avg1_wip_4_2_p11 FROM g_sql
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p11"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
#      END IF  
#      
#      EXECUTE s_axcp500_avg1_wip_4_2_p11 USING p_flag,p_flag 
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p11"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
#      END IF 
#      IF g_sys_6007 = '2' THEN
#         LET g_sql = " MERGE INTO xcce_tmp a  ",
#                     "     USING ( SELECT g.xcceld,g.xcce003,g.xcce001,g.xcce002,g.xcce006,g.xcce007,g.xcce008,g.xcce009,   ",
#                     "                    g.xcce101,g.xcce102,g.xcce102a,g.xcce102b,g.xcce102c,g.xcce102d,g.xcce102e,g.xcce102f,g.xcce102g,g.xcce102h,",
#                     #170504-00046#1----mark---s
#                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck201 ),0) xcck201, COALESCE(SUM(xcck009 * - 1 * xcck202 ),0) xcck202,  ",
#                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202a),0) xcck202a,COALESCE(SUM(xcck009 * - 1 * xcck202b),0) xcck202b, ",
#                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202c),0) xcck202c,COALESCE(SUM(xcck009 * - 1 * xcck202d),0) xcck202d, ",
#                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202e),0) xcck202e,COALESCE(SUM(xcck009 * - 1 * xcck202f),0) xcck202f, ",
#                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202g),0) xcck202g,COALESCE(SUM(xcck009 * - 1 * xcck202h),0) xcck202h, ",   
#                     #170504-00046#1----mark---s
#                     "                    d.qty1 qty,e.sfaa042,e.xcbb006",
#                     "                FROM xcce_tmp g ",
#                     #170504-00046#1----mark---s
#                     #"                       LEFT OUTER JOIN xcck_tmp  ", 
#                     #"                                     ON  xcck020 IN ('302','303','114','107')  ", #发料，退料，回收入库，委外回收入库
#                     #"                                     AND g.xcce001 = xcck001 ",
#                     #"                                     AND g.xcce002 = xcck002 ",
#                     #"                                     AND g.xcce006 = xcck047 ",
#                     #"                                     AND g.xcce007 = xcck010 ",
#                     #"                                     AND g.xcce008 = xcck011 ",
#                     #"                                     AND g.xcce009 = xcck017 ",
#                     #170504-00046#1----mark---s
#                     "                    ,  ",
#                     "                    ( SELECT sfbaent,sfbadocno,sfba006,sfba021,sfaa012, ",
#                     #"                            DECODE(sfaa012,0,1,SUM((sfba013)/sfba022)/sfaa012) * SUM(c.sffb018) * -1 qty1  ", #xianghui-20170528-mark
#                     "                            DECODE(sfaa012,0,1,SUM((sfba013)/sfba022) OVER ( PARTITION BY sfbadocno,sfbaseq)/sfaa012)*c.sffb018* -1 qty1  ", #xianghui-20170528-add
#                     "                       FROM sfba_tmp,sfaa_tmp,(SELECT sffbent,sffb005,SUM(COALESCE(sffb018 ,0)) sffb018 ",
#                     "                                                FROM sffb_t ",
#                     "                                                WHERE sffbent = ",g_enterprise,
#                     "                                                  AND sffbstus = 'Y' AND sffb001 ='3' ",
#                     "                                                  AND sffb012 >= '",g_bdate,"' ",
#                     "                                                  AND sffb012 <= '",g_edate,"' ",
#                     "                                                GROUP BY sffbent,sffb005 ) c ",
#                     "                       WHERE sfbadocno = sfaadocno ",
#                     "                         AND sfbaent = sfaaent ",   
#                     "                         AND sfbaent = c.sffbent AND sfbadocno = c.sffb005 ", 
#                     #"                     GROUP BY sfbaent,sfbadocno,sfba006,sfba021,sfaa012 ",  #xianghui-20170528-mark            
#                     "                    ) d ,",
#                     "                    wip4_tmp3 e ",
#                     "                WHERE g.xcceent = d.sfbaent ",
#                     "                  AND g.xcce006 = d.sfbadocno ",       #工单
#                     "                  AND g.xcce007 = d.sfba006 ",
#                     "                  AND COALESCE(g.xcce008,' ') = COALESCE(d.sfba021,' ') ",
#                     "                  AND e.xcce001 = g.xcce001 ",
#                     "                  AND e.xcce002 = g.xcce002  ",
#                     "                  AND e.xcce006 = g.xcce006  ",       #工单
#                     "                  AND e.xcce007 = g.xcce007  ",
#                     "                  AND e.xcce008 = g.xcce008  ",
#                     "                  AND e.xcce009 = g.xcce009  ",
#                     "                  AND e.sfaa042 = ? ",
#                     "                  AND e.xcbb006 = ",p_xcbb006,
#                     "                GROUP BY g.xcceld,g.xcce003,g.xcce001,g.xcce002,g.xcce006,g.xcce007,g.xcce008,g.xcce009,",
#                     "                         g.xcce101,g.xcce102,g.xcce102a,g.xcce102b,g.xcce102c,g.xcce102d,g.xcce102e,g.xcce102f,g.xcce102g,g.xcce102h,d.qty1,e.sfaa042,e.xcbb006 ",
#                     "                ) b ",
#                     "          ON ( a.xcce001 = b.xcce001 ",
#                     "         AND   a.xcce002 = b.xcce002  ",
#                     "         AND   a.xcce006 = b.xcce006  ",       #工单
#                     "         AND   a.xcce007 = b.xcce007  ",
#                     "         AND   a.xcce008 = b.xcce008  ",
#                     "         AND   a.xcce009 = b.xcce009  ",
#                     "         AND   a.xcce003 = b.xcce003 ",
#                     "         AND   a.xcceld = b.xcceld ",
#                     "         AND   b.sfaa042 = ? ",
#                     "         AND   b.xcbb006 = ",p_xcbb006," )",
#                     "  WHEN MATCHED THEN    ",
#                     #170504-00046#1----modify---s
#                     #若入庫轉出數+報廢轉出超過投入數，則報廢轉出=投入-入庫轉出
#                     #"     UPDATE SET a.xcce301  = a.xcce301 + b.qty , " ,
#                     #"                a.xcce302  = a.xcce302 + (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
#                     #"                a.xcce302a = a.xcce302a+ (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
#                     #"                a.xcce302b = a.xcce302b+ (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
#                     #"                a.xcce302c = a.xcce302c+ (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
#                     #"                a.xcce302d = a.xcce302d+ (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
#                     #"                a.xcce302e = a.xcce302e+ (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
#                     #"                a.xcce302f = a.xcce302f+ (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
#                     #"                a.xcce302g = a.xcce302g+ (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
#                     #"                a.xcce302h = a.xcce302h+ (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * b.qty    ",
#                     #"      WHERE b.xcck201 + b.xcce101 <> 0 "
#                     #投入-入库转出（转出为负数，所以用加号），报废数量在计算时已经乘以了-1为负数，在判断时需再乘以-1,得正数与投入-入库转出比较，判断大小
#                     #(报废数量/（元件期初数量+元件投入数量）) * （元件期初金额+元件投入金额）
#                     #(b.qty /(xcce101+xcce201)) * (xcce102+xcce202)
#                     "     UPDATE SET a.xcce301  = a.xcce301 + (CASE WHEN (a.xcce201 + a.xcce301) <= b.qty *(-1) THEN (a.xcce201 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
#                     "                a.xcce302  = a.xcce302 + (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202 + a.xcce302)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
#                     "                a.xcce302a = a.xcce302a+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202a + a.xcce302a)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
#                     "                a.xcce302b = a.xcce302b+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202b + a.xcce302b)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
#                     "                a.xcce302c = a.xcce302c+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202c + a.xcce302c)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
#                     "                a.xcce302d = a.xcce302d+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202d + a.xcce302d)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
#                     "                a.xcce302e = a.xcce302e+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202e + a.xcce302e)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
#                     "                a.xcce302f = a.xcce302f+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202f + a.xcce302f)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
#                     "                a.xcce302g = a.xcce302g+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202g + a.xcce302g)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
#                     "                a.xcce302h = a.xcce302h+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202h + a.xcce302h)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " , 
#                     "      WHERE b.qty <> 0 "
#                     #170504-00046#1----modify---e
#      END IF
#191129-00042#1---remark---s      
   IF g_sys_6007 = '3' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xcce_tmp a  ",
                  "     USING ( SELECT g.xcceld,g.xcce003,g.xcce001,g.xcce002,g.xcce006,g.xcce007,g.xcce008,g.xcce009,   ",
                  "                    g.xcce101,g.xcce102,g.xcce102a,g.xcce102b,g.xcce102c,g.xcce102d,g.xcce102e,g.xcce102f,g.xcce102g,g.xcce102h,",
                  #170504-00046#1----mark---s
                  #"                    COALESCE(SUM(xcck009 * - 1 * xcck201 ),0) xcck201, COALESCE(SUM(xcck009 * - 1 * xcck202 ),0) xcck202,  ",
                  #"                    COALESCE(SUM(xcck009 * - 1 * xcck202a),0) xcck202a,COALESCE(SUM(xcck009 * - 1 * xcck202b),0) xcck202b, ",
                  #"                    COALESCE(SUM(xcck009 * - 1 * xcck202c),0) xcck202c,COALESCE(SUM(xcck009 * - 1 * xcck202d),0) xcck202d, ",
                  #"                    COALESCE(SUM(xcck009 * - 1 * xcck202e),0) xcck202e,COALESCE(SUM(xcck009 * - 1 * xcck202f),0) xcck202f, ",
                  #"                    COALESCE(SUM(xcck009 * - 1 * xcck202g),0) xcck202g,COALESCE(SUM(xcck009 * - 1 * xcck202h),0) xcck202h, ",   
                  #170504-00046#1----mark---e
                  "                    d.qty1 qty,e.sfaa042,e.xcbb006",
                  "                FROM xcce_tmp g ",
                  #170504-00046#1----mark---s
                  #"                   LEFT OUTER JOIN xcck_tmp  ", 
                  #"                                     ON  xcck020 IN ('302','303','114','107')  ", #发料，退料，回收入库，委外回收入库
                  #"                                     AND g.xcce001 = xcck001 ",
                  #"                                     AND g.xcce002 = xcck002 ",
                  #"                                     AND g.xcce006 = xcck047 ",
                  #"                                     AND g.xcce007 = xcck010 ",
                  #"                                     AND g.xcce008 = xcck011 ",
                  #"                                     AND g.xcce009 = xcck017 ",
                  #170504-00046#1----mark---e
                  "                    ,  ",
                  "                    ( SELECT sfbaent,sfbadocno,sfba006,sfba021,sfaa012, ",
                  #"                            DECODE(sfaa012,0,1,SUM((sfba013)/sfba022)/sfaa012) * SUM(c.sffb018) * -1 qty1  ", #xianghui-20170528-mark
                  #"                            DECODE(sfaa012,0,1,SUM((sfba013)/sfba022) OVER ( PARTITION BY sfbadocno,sfbaseq)/sfaa012)*c.sffb018* -1 qty1  ", #xianghui-20170528-add  #200522-00051#1 mark
                  "                            DECODE(sfaa012,0,1,SUM((sfba013)/sfba022) OVER ( PARTITION BY sfbadocno,sfba006)/sfaa012)*c.sffb018* -1 qty1  ",  #200522-00051#1
                  "                       FROM sfba_tmp,sfaa_tmp,(SELECT sffbent,sffb005,SUM(COALESCE(sffb018 ,0)) sffb018 ",
                  "                                                FROM sffb_t ",
                  "                                                WHERE sffbent = ",g_enterprise,
                  "                                                  AND sffbstus = 'Y' AND sffb001 ='3' ",
                  "                                                  AND sffb012 >= '",g_bdate,"' ",
                  "                                                  AND sffb012 <= '",g_edate,"' ",
                  "                                                GROUP BY sffbent,sffb005 ) c ",
                  "                       WHERE sfbadocno = sfaadocno ",
                  "                         AND sfbaent = sfaaent ",   
                  "                         AND sfbaent = c.sffbent AND sfbadocno = c.sffb005 ", 
                  #"                     GROUP BY sfbaent,sfbadocno,sfba006,sfba021,sfaa012 ",   #xianghui-20170528-mark             
                  "                    ) d ,",
                  "                    wip4_tmp3 e ",
                  "                WHERE g.xcceent = d.sfbaent ",
                  "                  AND g.xcce006 = d.sfbadocno ",       #工单
                  "                  AND g.xcce007 = d.sfba006 ",
                  "                  AND COALESCE(g.xcce008,' ') = COALESCE(d.sfba021,' ') ",
                  "                  AND e.xcce001 = g.xcce001 ",
                  "                  AND e.xcce002 = g.xcce002  ",
                  "                  AND e.xcce006 = g.xcce006  ",       #工单
                  "                  AND e.xcce007 = g.xcce007  ",
                  "                  AND e.xcce008 = g.xcce008  ",
                  "                  AND e.xcce009 = g.xcce009  ",
                  "                  AND e.sfaa042 = ? ",
                  "                  AND e.xcbb006 = ",p_xcbb006,
                  "                GROUP BY g.xcceld,g.xcce003,g.xcce001,g.xcce002,g.xcce006,g.xcce007,g.xcce008,g.xcce009,",
                  "                         g.xcce101,g.xcce102,g.xcce102a,g.xcce102b,g.xcce102c,g.xcce102d,g.xcce102e,g.xcce102f,g.xcce102g,g.xcce102h,d.qty1,e.sfaa042,e.xcbb006 ",
                  "                ) b ",
                  "          ON ( a.xcce001 = b.xcce001 ",
                  "         AND   a.xcce002 = b.xcce002  ",
                  "         AND   a.xcce006 = b.xcce006  ",       #工单
                  "         AND   a.xcce007 = b.xcce007  ",
                  "         AND   a.xcce008 = b.xcce008  ",
                  "         AND   a.xcce009 = b.xcce009  ",
                  "         AND   a.xcce003 = b.xcce003 ",
                  "         AND   a.xcceld = b.xcceld ",
                  "         AND   b.sfaa042 = ? ",
                  "         AND   b.xcbb006 = ",p_xcbb006," )",
                  "  WHEN MATCHED THEN    ",
                  #170504-00046#1----modify---s
                  #"     UPDATE SET a.xcce303  = a.xcce303 + b.qty , " ,
                  #"                a.xcce304  = a.xcce304 + (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                  #"                a.xcce304a = a.xcce304a+ (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                  #"                a.xcce304b = a.xcce304b+ (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                  #"                a.xcce304c = a.xcce304c+ (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                  #"                a.xcce304d = a.xcce304d+ (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                  #"                a.xcce304e = a.xcce304e+ (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                  #"                a.xcce304f = a.xcce304f+ (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                  #"                a.xcce304g = a.xcce304g+ (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                  #"                a.xcce304h = a.xcce304h+ (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * b.qty    ",
                  #"      WHERE b.xcck201 + b.xcce101 <> 0 "
                  #投入-入库转出（转出为负数，所以用加号），报废数量在计算时已经乘以了-1为负数，在判断时需再乘以-1,得正数与投入-入库转出比较，判断大小
                  #(报废数量/（元件期初数量+元件投入数量）) * （元件期初金额+元件投入金额）
                  #(b.qty /(xcce101+xcce201)) * (xcce102+xcce202)
                  #200706-00060#1 mark(s)
                  #"     UPDATE SET a.xcce303  = a.xcce303 + (CASE WHEN (a.xcce201 + a.xcce301) <= b.qty *(-1) THEN (a.xcce201 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
                  #"                a.xcce304  = a.xcce304 + (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202 + a.xcce302)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
                  #"                a.xcce304a = a.xcce304a+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202a + a.xcce302a)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
                  #"                a.xcce304b = a.xcce304b+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202b + a.xcce302b)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
                  #"                a.xcce304c = a.xcce304c+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202c + a.xcce302c)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
                  #"                a.xcce304d = a.xcce304d+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202d + a.xcce302d)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
                  #"                a.xcce304e = a.xcce304e+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202e + a.xcce302e)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
                  #"                a.xcce304f = a.xcce304f+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202f + a.xcce302f)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
                  #"                a.xcce304g = a.xcce304g+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202g + a.xcce302g)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
                  #"                a.xcce304h = a.xcce304h+ (CASE WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202h + a.xcce302h)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " , 
                  #200706-00060#1 mark(e)
                  #200706-00060#1 add(s)
                  "     UPDATE SET a.xcce303  = a.xcce303 + (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) <= b.qty *(-1) THEN (a.xcce101+a.xcce201 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
                  "                a.xcce304  = a.xcce304 + (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202 + a.xcce302)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
                  "                a.xcce304a = a.xcce304a+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202a + a.xcce302a)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
                  "                a.xcce304b = a.xcce304b+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202b + a.xcce302b)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
                  "                a.xcce304c = a.xcce304c+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202c + a.xcce302c)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
                  "                a.xcce304d = a.xcce304d+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202d + a.xcce302d)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
                  "                a.xcce304e = a.xcce304e+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202e + a.xcce302e)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
                  "                a.xcce304f = a.xcce304f+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202f + a.xcce302f)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
                  "                a.xcce304g = a.xcce304g+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202g + a.xcce302g)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
                  "                a.xcce304h = a.xcce304h+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202h + a.xcce302h)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " ,
                  #200706-00060#1 add(e)
                  "      WHERE b.qty <> 0 "
                  #170504-00046#1----modify---e
      #PGS(D)-00824 --- end ---
   
      PREPARE s_axcp500_avg1_wip_4_2_p12 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p12"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
      
      EXECUTE s_axcp500_avg1_wip_4_2_p12 USING p_flag,p_flag
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p12"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
   END IF
#191129-00042#1---remark---e      
#      #170504-00046#1----add---s   
#      #更新DL+OH+SUB ,ADJUST
#      IF g_sys_6007 = '2' THEN
#         LET g_sql = " MERGE INTO xcce_tmp   a ",
#                     "       USING (SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,SUM(sffb018)* -1 qty FROM wip4_tmp4,sffb_t ",
#                     "               WHERE sffbent = ",g_enterprise,
#                     "                 AND sffb005 = xcce006 ",
#                     "                 AND sffbstus = 'Y' AND sffb001 ='3' ",
#                     "                 AND sffb012 >= '",g_bdate,"' ",
#                     "                 AND sffb012 <= '",g_edate,"' ",
#                     "               GROUP BY xcce001,xcce002,xcce006,xcce007,xcce008,xcce009 ",
#                     "                 ) b",
#                     "          ON ( a.xcce001 = b.xcce001  ",
#                     "         AND   a.xcce002 = b.xcce002  ",
#                     "         AND   a.xcce006 = b.xcce006  ",       #工单
#                     "         AND   a.xcce007 = b.xcce007  ",
#                     "         AND   a.xcce008 = b.xcce008  ",
#                     "         AND   a.xcce009 = b.xcce009 ) ",
#                     "  WHEN MATCHED THEN    ",   
#                     #投入-入库转出（转出为负数，所以用加号），报废数量在计算时已经乘以了-1为负数，在判断时需再乘以-1,得正数与投入-入库转出比较，判断大小
#                     #(报废数量/（元件期初数量+元件投入数量）) * （元件期初金额+元件投入金额）
#                     #(b.qty /(xcce101+xcce201)) * (xcce102+xcce202)
#                     "     UPDATE SET a.xcce302  = a.xcce302 + (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202 + a.xcce302)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
#                     "                a.xcce302a = a.xcce302a+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202a + a.xcce302a)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
#                     "                a.xcce302b = a.xcce302b+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202b + a.xcce302b)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
#                     "                a.xcce302c = a.xcce302c+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202c + a.xcce302c)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
#                     "                a.xcce302d = a.xcce302d+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202d + a.xcce302d)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
#                     "                a.xcce302e = a.xcce302e+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202e + a.xcce302e)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
#                     "                a.xcce302f = a.xcce302f+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202f + a.xcce302f)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
#                     "                a.xcce302g = a.xcce302g+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202g + a.xcce302g)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
#                     "                a.xcce302h = a.xcce302h+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202h + a.xcce302h)*(-1)  ",
#                     "                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " , 
#                     "      WHERE b.qty <> 0 "
# 
#      END IF
#191129-00042#1---remark---s     
   IF g_sys_6007 = '3' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xcce_tmp   a ",
                  "       USING (SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,SUM(sffb018)* -1 qty FROM wip4_tmp4,sffb_t ",
                  "               WHERE sffbent = ",g_enterprise,
                  "                 AND sffb005 = xcce006 ",
                  "                 AND sffbstus = 'Y' AND sffb001 ='3' ",
                  "                 AND sffb012 >= '",g_bdate,"' ",
                  "                 AND sffb012 <= '",g_edate,"' ",
                  "               GROUP BY xcce001,xcce002,xcce006,xcce007,xcce008,xcce009 ",
                  "                 ) b",
                  "          ON ( a.xcce001 = b.xcce001  ",
                  "         AND   a.xcce002 = b.xcce002  ",
                  "         AND   a.xcce006 = b.xcce006  ",       #工单
                  "         AND   a.xcce007 = b.xcce007  ",
                  "         AND   a.xcce008 = b.xcce008  ",
                  "         AND   a.xcce009 = b.xcce009 ) ",
                  "  WHEN MATCHED THEN    ",   
                  #投入-入库转出（转出为负数，所以用加号），报废数量在计算时已经乘以了-1为负数，在判断时需再乘以-1,得正数与投入-入库转出比较，判断大小
                  #(报废数量/（元件期初数量+元件投入数量）) * （元件期初金额+元件投入金额）
                  #(b.qty /(xcce101+xcce201)) * (xcce102+xcce202)
                  #200706-00060#1 mark(s)
                  #"     UPDATE SET a.xcce304  = a.xcce304 + (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202 + a.xcce302)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
                  #"                a.xcce304a = a.xcce304a+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202a + a.xcce302a)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
                  #"                a.xcce304b = a.xcce304b+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202b + a.xcce302b)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
                  #"                a.xcce304c = a.xcce304c+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202c + a.xcce302c)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
                  #"                a.xcce304d = a.xcce304d+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202d + a.xcce302d)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
                  #"                a.xcce304e = a.xcce304e+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202e + a.xcce302e)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
                  #"                a.xcce304f = a.xcce304f+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202f + a.xcce302f)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
                  #"                a.xcce304g = a.xcce304g+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202g + a.xcce302g)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
                  #"                a.xcce304h = a.xcce304h+ (CASE WHEN (a.xcce201 + a.xcce301) = 0 THEN (a.xcce202h + a.xcce302h)*(-1)  ",
                  #"                                               WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
                  #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " , 
                  #200706-00060#1 mark(e)
                  #200706-00060#1 add(s)
                  "     UPDATE SET a.xcce304  = a.xcce304 + (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202 + a.xcce302)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
                  "                a.xcce304a = a.xcce304a+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202a + a.xcce302a)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
                  "                a.xcce304b = a.xcce304b+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202b + a.xcce302b)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
                  "                a.xcce304c = a.xcce304c+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202c + a.xcce302c)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
                  "                a.xcce304d = a.xcce304d+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202d + a.xcce302d)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
                  "                a.xcce304e = a.xcce304e+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202e + a.xcce302e)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
                  "                a.xcce304f = a.xcce304f+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202f + a.xcce302f)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
                  "                a.xcce304g = a.xcce304g+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202g + a.xcce302g)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
                  "                a.xcce304h = a.xcce304h+ (CASE WHEN (a.xcce101+a.xcce201 + a.xcce301) = 0 THEN (a.xcce202h + a.xcce302h)*(-1)  ",
                  "                                               WHEN (a.xcce101+a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101+a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
                  "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " ,
                  #200706-00060#1 add(e)
                  "      WHERE b.qty <> 0 "
      #PGS(D)-00824 --- end ---
   
      PREPARE s_axcp500_avg1_wip_4_2_p14 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p14"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
      
      EXECUTE s_axcp500_avg1_wip_4_2_p14 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p14"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
   END IF   
#191129-00042#1---remark---e

#      #170504-00046#1----add---e 
#   END IF
#170504-00046#1---mark--e
#190823-00038#1---mark---s
##170504-00046#1---add--s
#   #工单未结案,当月没有入库,但是有报废的,且参数设定报废转出入库转出中时,此时需要增加一笔xcck的资料
#   IF g_sys_6007 MATCHES '[2]' THEN
#         #根据xcck012单据类型='DIFF'可以判断为调整的，或者根据xcck055判断
#         LET g_sql = "INSERT INTO xcck_tmp ",                                         
#                     #                           企业编号 site组织 法人组织 账套 账套本位币顺序                      #161114-00003#1 add  #170110-00028#1                    
#                     #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,", #170110-00028#1 #170825-00011#1 mark
#                     " SELECT xcceent,sfaa_tmp.sfaasite,xccecomp,xcceld,xcce001,", #170825-00011#1 add                      
#                     #        成本域  成本计算类型 年度 期别 
#                     "        xcce002,xcce003,xcce004,xcce005, ",
#                     #        参考单号 项次                                    #参考单号=工单单号 项次为同个工单+1
#                     "        xccd006 ,ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 )   , ",
#                     #        项序 出入库码  料号
#                     "        0   ,1       ,xccd007, ",
#                     #特性：不能直接用xccd008，xccd上是不存特征的，肯定是空格，但实际工单上的主件不一定是有空格的，都有特征，那这样写入xcck后，最后汇总到xccc时，特征就会匹配不到，这部分也就会计入不到xccc中
#                     #              所以需再关联sfac_tmp去获取一个特征,用sfac006。尽量关联相同成本阶的那个特征
#                     #      再如果工单有多产出主件，则只要抓一笔就行了，这部分差异转出的部分只要有个主件认领就可以了
#                     #"        sfac_tmp.sfac006, ", #170825-00011#1 mark
#                     "        sfaa_tmp.sfaa011, ",  #170825-00011#1 add
#                     #        单据类型 单据日期 时间 仓库 储位                  #单据类型xcck012='DIFF'
#                     "        'DIFF' ,''      ,'' ,' ' ,' ' ,  ",
#                     #        批号    异动类型  原因码 交易对象 客群
#                     "        xccd009,'1100'  ,' '   ,' '    ,' ',  ",        #xcck020异动类型='1100'本月无入库差异转出的类型
#                     #        区域 成本中心 经营类别 渠道 品类
#                     "        ' ' ,' '     ,' '     ,' ' ,' '  ,  ",
#                     #        品牌              项目号 WBS 存货科目 费用成本科目
#                     "        nvl(imaa126,' '),' '   ,' ',' '     ,' '         ,  ",
#                     #        收入科目 交易币种 本位币种   汇率  交易单位            
#                     "        ' '    ,xccd011,xccd011,1      ,imaa006,  ",
#                     #        成本单位 换算率 交易数量 工单号码 重复性生产-计划编号        
#                     "        imaa006 ,1    ,0      ,xccd006,' '    ,  ",
#                     #        重复性生产-生产料号 BOM特性 产品特征
#                     "        ' '              ,' '    ,' '    ,  ",
#                     #        xccc类型                                                                                              本期异动数量
#                     #"        CASE '",p_flag,"' WHEN 'Y' THEN '2090' ELSE '2050' END IF, 0, ",   #xcck055异动类型=本月无入库差异转出的类型 '2050'一般工单 '2090'重工工单  #本期异动数量=0
#                     "        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END IF, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型
#                     #        本期异动数量金额    
#                     #"        xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h, ", #170618-00372#1 mark
#                     "        xcce302*(-1),xcce302a*(-1),xcce302b*(-1),xcce302c*(-1),xcce302d*(-1),xcce302e*(-1),xcce302f*(-1),xcce302g*(-1),xcce302h*(-1), ", #170618-00372#1 add
#                     #        本期异动单价        
#                     #"        xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h, ", #170618-00372#1 mark
#                     "        xcce302*(-1),xcce302a*(-1),xcce302b*(-1),xcce302c*(-1),xcce302d*(-1),xcce302e*(-1),xcce302f*(-1),xcce302g*(-1),xcce302h*(-1), ", #170618-00372#1 add                    
#                     #        已耗数量金额          结存数量金额          结存单位成本        结存调整金额
#                     "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, ",
#                     #        资料所有者      部门         录入者       部门  创建日 更改者 最近更改日 状态码
#                     "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"','','','','Y', ",
#                     #        自定义字段
#                     "        '','','','','','','','','','','','','','','', ",
#                     "        '','','','','','','','','','','','','','','', ",
#                     "        '',",    #成本代销单号  160509-00004#76
#                     "        ' ' ",   #库存管理特征 for xccq use
#                     "    FROM xcce_tmp LEFT OUTER JOIN imaa_t ON imaaent = xcceent AND imaa001 = xcce007,xccd_tmp, ",
#                     #170825-00011#1 mark start -----
#                     #"         (SELECT * ",
#                     #"            FROM ( SELECT sfacdocno,sfacsite,sfac001,sfac006,clevel,ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) num FROM sfac_tmp WHERE clevel =",p_xcbb006,") a ",  #mod zhangllc SBS7 add sfacsite
#                     #"           WHERE num=1 ",
#                     #"         ) sfac_tmp, ",
#                     #170825-00011#1 mark end   -----
#                     #190411-00017#1 A mark-S
##                     "         (SELECT sfaa_tmp.* FROM sfaa_tmp,sfac_tmp2 ",
##                     "           WHERE sfaaent = ",g_enterprise,
##                     "             AND sfaadocno=sfacdocno ",
##                     "             AND clevel= ",p_xcbb006,
##                     "             AND sfaa042 = '",p_flag,"' ",
##                     #"             AND sfaa048 >= '",g_bdate,"'  AND sfaa048 < '",l_date,"'  ",  #170618-00372#1 mark
##                     "          ) sfaa_tmp ",
#                     #190411-00017#1 A mark-E
#                     #190411-00017#1 A add-S
#                     "         (SELECT sfaa_tmp.* FROM sfaa_tmp ",
#                     "           WHERE sfaaent = ",g_enterprise,
#                     "             AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfaadocno = sfacdocno AND clevel = ",p_xcbb006,") ",
#                     "             AND sfaa042 = '",p_flag,"' ",
#                     "          ) sfaa_tmp ",
#                     #190411-00017#1 A add-E
#                     "   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce002=xccd002 AND xcce003=xccd003 ",
#                     "     AND xcce004 = xccd004 AND xcce005=xccd005 AND xcce006=xccd006 ",
#                     #"     AND sfacdocno = xccd006 AND sfac001=xccd007 ",  #关联sfac_tmp #170825-00011#1 mark
#                     "     AND xcce001 ='",p_seq,"' ",
#                     "     AND xcceent = sfaaent AND xcce006 = sfaadocno ", #关联sfaa_tmp
#                     #"     AND xcce902 != 0 ", #170618-00372#1 mark
#                     "     AND xcce302 != 0 ",  #170618-00372#1 add
#                     "     AND sfaa003 <> '4' ", ##180320-00059#1 add
#                     "     AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
#                     "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
#                     "                     AND inaj020 = xcce006 ",
#                     "                     ) "
#                     #170618-00372#1 add start -----
#                     #當月有報廢
#                    ,"     AND EXISTS (SELECT 1 FROM sffb_t ",
#                     "                  WHERE sffbent = xccdent ",
#                     "                    AND sffb005 = xccd006 ",
#                     "                    AND sffb012 >= '",g_bdate,"' AND sffb012 < '",l_date,"' ",
#                     "                    AND sffb018 > 0 ",
#                     "                    AND sffbstus=  'Y' AND sffb001 = '3' ) "
#                     #170618-00372#1 add end   -----                     
#         PREPARE s_axcp500_avg1_wip_4_2_p11 FROM g_sql
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code   = SQLCA.sqlcode
#            LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p11"
#            LET g_errparam.popup  = TRUE
#            CALL cl_err()     
#         END IF     
#         EXECUTE s_axcp500_avg1_wip_4_2_p11
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code   = SQLCA.sqlcode
#            LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p11"
#            LET g_errparam.popup  = TRUE
#            CALL cl_err()      
#         END IF   
#   END IF
##170504-00046#1---add--e
#190823-00038#1---mark---s
   #190708-00008#1---mark---s
   ##※參數「超領轉出方式」（S-FIN-6023）的調整
   ##1.參數下拉選項為1.結案月轉出、2.當月有入庫即轉出
   ##2.函式s_axcp500_avg1_wip_4_2內，處理s_axcp500_avg1_sum_xcce前，判斷參數「超領轉出方式」=2且當月有入庫數量時，
   ##  xcce301 = xcce301 + xcce209 * (-1)
   ##  xcce302 = xcce302 + xcce210 * (-1)
   ##  (a~h也要計算)
   #IF g_sys_6023 = '2' THEN
   #   #170618-00446#1--modify---s
   #   #UPDATE xcce_tmp 
   #   #     SET xcce301  = xcce301  + xcce209  * (-1) , 
   #   #         xcce302  = xcce302  + xcce210  * (-1) , 
   #   #         xcce302a = xcce302a + xcce210a * (-1) , 
   #   #         xcce302b = xcce302b + xcce210b * (-1) , 
   #   #         xcce302c = xcce302c + xcce210c * (-1) , 
   #   #         xcce302d = xcce302d + xcce210d * (-1) , 
   #   #         xcce302e = xcce302e + xcce210e * (-1) , 
   #   #         xcce302f = xcce302f + xcce210f * (-1) , 
   #   #         xcce302g = xcce302g + xcce210g * (-1) , 
   #   #         xcce302h = xcce302h + xcce210h * (-1) 
   #   #  WHERE EXISTS (SELECT 1 FROM wip4_tmp3 b  #当前成本阶
   #   #             WHERE b.xcce001 = xcce001 
   #   #               AND b.xcce002 = xcce002 
   #   #               AND b.xcce006 = xcce006       #工单
   #   #               AND b.xcce007 = xcce007 
   #   #               AND b.xcce008 = xcce008 
   #   #               AND b.xcce009 = xcce009 
   #   #               AND b.sfaa042 = p_flag
   #   #               AND b.xcbb006 = p_xcbb006 )     
   #   LET g_sql = " MERGE INTO xcce_tmp a ",
   #            "       USING wip4_tmp3 b ",
   #            "          ON ( a.xcce001 = b.xcce001 ",
   #            "         AND   a.xcce002 = b.xcce002 ",
   #            "         AND   a.xcce006 = b.xcce006 ",       #工单
   #            "         AND   a.xcce007 = b.xcce007 ",
   #            "         AND   a.xcce008 = b.xcce008 ",
   #            "         AND   a.xcce009 = b.xcce009 ",
   #            "         AND   b.xcbb006 = ",p_xcbb006,
   #            "         AND   b.sfaa042 = ? ) ",
   #            "  WHEN MATCHED THEN    ",
   #            "     UPDATE SET a.xcce301  = a.xcce301  + a.xcce209  * (-1) ,  ",
   #            "                a.xcce302  = a.xcce302  + a.xcce210  * (-1) ,  ",
   #            "                a.xcce302a = a.xcce302a + a.xcce210a * (-1) ,  ",
   #            "                a.xcce302b = a.xcce302b + a.xcce210b * (-1) ,  ",
   #            "                a.xcce302c = a.xcce302c + a.xcce210c * (-1) ,  ",
   #            "                a.xcce302d = a.xcce302d + a.xcce210d * (-1) ,  ",
   #            "                a.xcce302e = a.xcce302e + a.xcce210e * (-1) ,  ",
   #            "                a.xcce302f = a.xcce302f + a.xcce210f * (-1) ,  ",
   #            "                a.xcce302g = a.xcce302g + a.xcce210g * (-1) ,  ",
   #            "                a.xcce302h = a.xcce302h + a.xcce210h * (-1)   " ,
   #            #"  WHERE a.xcce301 <> 0 "  #170618-00382#1 add  #180131-00016#1 mark
   #            #180131-00016#1---add---s
   #            "   WHERE EXISTS ( SELECT 1 FROM inaj_tmp ",  #有入库
   #            "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
   #            "                     AND inaj020 = a.xcce006 ",
   #            "                 )  "             
   #            #180131-00016#1---add---e
   #   PREPARE s_axcp500_avg1_wip_4_2_p15 FROM g_sql
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code   = SQLCA.sqlcode
   #      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p15"
   #      LET g_errparam.popup  = TRUE
   #      CALL cl_err()
   #   END IF  
   #   
   #   EXECUTE s_axcp500_avg1_wip_4_2_p15 USING p_flag
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code   = SQLCA.sqlcode
   #      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p15"
   #      LET g_errparam.popup  = TRUE
   #      CALL cl_err()
   #   END IF              
   #   #170618-00446#1--modify---e   
   #   #180808-00024#1--add--s 
   #   #※參數「超領轉出方式」（S-FIN-6023）的調整
   #   #1.參數下拉選項為1.結案月轉出、2.當月有入庫即轉出
   #   #2.函式s_axcp500_avg1_wip_4_2內，處理s_axcp500_avg1_sum_xcce前，判斷參數「超領轉出方式」=2且當月有入庫數量時
   #   #超龄的转入到xcce301之后,xccz的没有做转出,会到导致xcce和xccz的数据不对,
   #   #这样在下一个月的计算xcce301转出时因为期初xccz101与xcce301不一样而不对
   #   LET g_sql = " MERGE INTO xccz_tmp a ",
   #            "       USING wip4_tmp3 b ",
   #            "          ON ( a.xccz001 = b.xcce001 ",
   #            "         AND   a.xccz002 = b.xcce002 ",
   #            "         AND   a.xccz006 = b.xcce006 ",       #工单
   #            "         AND   a.xccz007 = b.xcce007 ",
   #            "         AND   a.xccz008 = b.xcce008 ",
   #            "         AND   a.xccz009 = b.xcce009 ",
   #            "         AND   b.xcbb006 = ",p_xcbb006,
   #            "         AND   b.sfaa042 = ? ) ",
   #            "  WHEN MATCHED THEN    ",
   #            "     UPDATE SET a.xccz301  = a.xccz301  + a.xccz209  * (-1)   ",
   #            "   WHERE EXISTS ( SELECT 1 FROM inaj_tmp ",  #有入库
   #            "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
   #            "                     AND inaj020 = a.xccz006 ",
   #            "                 )  "     
   #   PREPARE s_axcp500_avg1_wip_4_2_p15_xccz FROM g_sql
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code   = SQLCA.sqlcode
   #      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p15_xccz"
   #      LET g_errparam.popup  = TRUE
   #      CALL cl_err()
   #   END IF  
   #   
   #   EXECUTE s_axcp500_avg1_wip_4_2_p15_xccz USING p_flag
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code   = SQLCA.sqlcode
   #      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p15_xccz"
   #      LET g_errparam.popup  = TRUE
   #      CALL cl_err()
   #   END IF
   #   #180808-00024#1--add--s       
   #END IF
   #190708-00008#1---mark---e
   
   #※參數「下階料報廢轉出方式」（S-FIN-6024）的調整	 
   #1.參數下拉選項為1.結案月轉出、2.當月轉出，金額轉入庫存成本、3.當月轉出，金額轉至在製差異轉出
   #2.函式s_axcp500_avg1_wip_4_2內，處理s_axcp500_avg1_sum_xcce前，判斷參數「下階料報廢轉出方式」= 2或3時，做下面處理
   #  a.抓取asft339的報廢數量(sfjb006)，過帳日期(sfja003)在該期別內的已過帳、預計處理方式(sfjb010)=1或2之資料，數量合計
   #  b.參數「下階料報廢轉出方式」= 2.當月轉出，金額轉入庫存成本
   #    xcce301 = xcce301 + 報廢數量
   #    xcce302 = xcce302 + 報廢金額(仿照上面wip4_tmp3的轉出成本計算金額)
   #    (a~h也要計算)
   #  c.參數「下階料報廢轉出方式」= 3.當月轉出，金額轉至在製差異轉出
   #    xcce303 = xcce303 + 報廢數量
   #    xcce304 = xcce304 + 報廢金額(仿照上面wip4_tmp3的轉出成本計算金額)
   #    (a~h也要計算)
   IF g_sys_6024 MATCHES '[23]' THEN
      IF g_sys_6024 = '2' THEN
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xcce_tmp a  ",
                     "     USING ( SELECT g.xcceld,g.xcce003,g.xcce001,g.xcce002,g.xcce006,g.xcce007,g.xcce008,g.xcce009,  ",
                     "                    g.xcce101,g.xcce102,g.xcce102a,g.xcce102b,g.xcce102c,g.xcce102d,g.xcce102e,g.xcce102f,g.xcce102g,g.xcce102h,",
                     #170504-00046#1----mark---s
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck201 ),0) xcck201, COALESCE(SUM(xcck009 * - 1 * xcck202 ),0) xcck202,  ",
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202a),0) xcck202a,COALESCE(SUM(xcck009 * - 1 * xcck202b),0) xcck202b, ",
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202c),0) xcck202c,COALESCE(SUM(xcck009 * - 1 * xcck202d),0) xcck202d, ",
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202e),0) xcck202e,COALESCE(SUM(xcck009 * - 1 * xcck202f),0) xcck202f, ",
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202g),0) xcck202g,COALESCE(SUM(xcck009 * - 1 * xcck202h),0) xcck202h, ", 
                     #170504-00046#1----mark---e
                     "                    c.sfjb006 qty,d.sfaa042,d.xcbb006",
                     "                FROM xcce_tmp g ",
                     #170504-00046#1----mark---s
                     #"                   LEFT OUTER JOIN xcck_tmp  ", 
                     #"                                     ON  xcck020 IN ('302','303','114','107')  ", #发料，退料，回收入库，委外回收入库
                     #"                                     AND g.xcce001 = xcck001 ",
                     #"                                     AND g.xcce002 = xcck002 ",
                     #"                                     AND g.xcce006 = xcck047 ",
                     #"                                     AND g.xcce007 = xcck010 ",
                     #"                                     AND g.xcce008 = xcck011 ",
                     #"                                     AND g.xcce009 = xcck017 ",
                     #170504-00046#1----mark---s
                     "                    ,  ",
                     #190606-00019#1---mark---s
                     #"                    ( SELECT sfjbent,sfjb001,sfjb003,sfjb004, ",
                     #"                             COALESCE(SUM(sfjb006 * - 1),0) sfjb006  ",
                     #"                        FROM sfjb_t,sfja_t ",
                     #"                       WHERE sfjaent = sfjbent AND sfjadocno = sfjbdocno ",
                     #"                         AND sfjbent = ",g_enterprise,
                     #"                         AND sfjastus = 'S' AND (sfjb010 = '1' OR sfjb010 = '2' )",
                     #"                         AND sfja003 >= '",g_bdate,"' ",
                     #"                         AND sfja003 <= '",g_edate,"' ",
                     #"                       GROUP BY sfjbent,sfjb001,sfjb003,sfjb004 ",           
                     #"                    ) c ,",
                     #190606-00019#1---mark---e
                     #190606-00019#1---add---s
                     "                    ( SELECT sfjbent,sfjb001,sfjb003,sfjb004, ",
                     "                             COALESCE(SUM(sfjb006),0) sfjb006  ",
                     "                        FROM (",
                     "                              SELECT sfjbent,sfjb001,sfjb003,",
                     "                                     (CASE WHEN '",g_sys_6013,"'='Y' THEN sfjb004 ELSE ' ' END) sfjb004,",
                     "                                     COALESCE(SUM(sfjb006 * - 1),0) sfjb006  ", 
                     "                                FROM sfjb_t,sfja_t ",
                     "                               WHERE sfjaent = sfjbent AND sfjadocno = sfjbdocno ",
                     "                                 AND sfjbent = ",g_enterprise,
                     "                                 AND sfjastus = 'S' AND (sfjb010 = '1' OR sfjb010 = '2' )",
                     "                                 AND sfja003 >= '",g_bdate,"' ",
                     "                                 AND sfja003 <= '",g_edate,"' ",
                     "                               GROUP BY sfjbent,sfjb001,sfjb003,sfjb004 ", 
                     "                             ) t52 ",  #200708-00088#1 add t52  
                     "                       GROUP BY sfjbent,sfjb001,sfjb003,sfjb004",                     
                     "                    ) c ,",
                     #190606-00019#1---add---e                     
                     "                    wip4_tmp3 d ",
                     "                WHERE g.xcceent = c.sfjbent ",
                     "                  AND g.xcce006 = c.sfjb001 ",       #工单
                     "                  AND g.xcce007 = c.sfjb003 ",
                     "                  AND COALESCE(g.xcce008,' ') = COALESCE(c.sfjb004,' ') ",
                     "                  AND d.xcce001 = g.xcce001 ",
                     "                  AND d.xcce002 = g.xcce002  ",
                     "                  AND d.xcce006 = g.xcce006  ",       #工单
                     "                  AND d.xcce007 = g.xcce007  ",
                     "                  AND d.xcce008 = g.xcce008  ",
                     "                  AND d.xcce009 = g.xcce009  ",
                     "                  AND d.sfaa042 = ? ",
                     "                  AND d.xcbb006 = ",p_xcbb006,
                     "                GROUP BY g.xcceld,g.xcce003,g.xcce001,g.xcce002,g.xcce006,g.xcce007,g.xcce008,g.xcce009,",
                     "                         g.xcce101,g.xcce102,g.xcce102a,g.xcce102b,g.xcce102c,g.xcce102d,g.xcce102e,g.xcce102f,g.xcce102g,g.xcce102h,c.sfjb006,d.sfaa042,d.xcbb006 ",
                     "                ) b ",
                     "          ON ( a.xcce001 = b.xcce001 ",
                     "         AND   a.xcce002 = b.xcce002  ",
                     "         AND   a.xcce006 = b.xcce006  ",       #工单
                     "         AND   a.xcce007 = b.xcce007  ",
                     "         AND   a.xcce008 = b.xcce008  ",
                     "         AND   a.xcce009 = b.xcce009  ",
                     "         AND   a.xcce003 = b.xcce003 ",
                     "         AND   a.xcceld = b.xcceld ",
                     "         AND   b.sfaa042 = ? ",
                     "         AND   b.xcbb006 = ",p_xcbb006," )",
                     "  WHEN MATCHED THEN    ",
                     #170504-00046#1----modify---s
                     #"     UPDATE SET a.xcce301  = a.xcce301 + b.qty ," ,
                     #"                a.xcce302  = a.xcce302 + (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce302a = a.xcce302a+ (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce302b = a.xcce302b+ (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce302c = a.xcce302c+ (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce302d = a.xcce302d+ (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce302e = a.xcce302e+ (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce302f = a.xcce302f+ (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce302g = a.xcce302g+ (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce302h = a.xcce302h+ (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * b.qty    ",
                     #"      WHERE b.xcck201 + b.xcce101 <> 0 "
                     #投入-入库转出（转出为负数，所以用加号），报废数量在计算时已经乘以了-1为负数，在判断时需再乘以-1,得正数与投入-入库转出比较，判断大小
                     #(报废数量/（元件期初数量+元件投入数量）) * （元件期初金额+元件投入金额）
                     #(b.qty /(xcce101+xcce201)) * (xcce102+xcce202)
                     #170620-00028#1--modify-s
                     #"     UPDATE SET a.xcce301  = a.xcce301 + (CASE WHEN (a.xcce201 + a.xcce301) <= b.qty *(-1) THEN (a.xcce201 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
                     #"                a.xcce302  = a.xcce302 + (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202 + a.xcce302)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
                     #"                a.xcce302a = a.xcce302a+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202a + a.xcce302a)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
                     #"                a.xcce302b = a.xcce302b+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202b + a.xcce302b)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
                     #"                a.xcce302c = a.xcce302c+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202c + a.xcce302c)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
                     #"                a.xcce302d = a.xcce302d+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202d + a.xcce302d)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
                     #"                a.xcce302e = a.xcce302e+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202e + a.xcce302e)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
                     #"                a.xcce302f = a.xcce302f+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202f + a.xcce302f)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
                     #"                a.xcce302g = a.xcce302g+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202g + a.xcce302g)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
                     #"                a.xcce302h = a.xcce302h+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202h + a.xcce302h)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " , 
                     #180509-00052#1---mod---s
#                     "     UPDATE SET a.xcce301  = a.xcce301 + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
#                     "                a.xcce302  = a.xcce302 + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202 + a.xcce302)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
#                     "                a.xcce302a = a.xcce302a+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202a + a.xcce302a)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
#                     "                a.xcce302b = a.xcce302b+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202b + a.xcce302b)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
#                     "                a.xcce302c = a.xcce302c+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202c + a.xcce302c)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
#                     "                a.xcce302d = a.xcce302d+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202d + a.xcce302d)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
#                     "                a.xcce302e = a.xcce302e+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202e + a.xcce302e)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
#                     "                a.xcce302f = a.xcce302f+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202f + a.xcce302f)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
#                     "                a.xcce302g = a.xcce302g+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202g + a.xcce302g)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
#                     "                a.xcce302h = a.xcce302h+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202h + a.xcce302h)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " , 
                     "     UPDATE SET a.xcce301  = a.xcce301 + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
                     "                a.xcce302   =  a.xcce302 + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102+a.xcce202+a.xcce206+a.xcce208+a.xcce210+a.xcce302)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102+a.xcce202+a.xcce206+a.xcce208+a.xcce210)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,                      
                     "                a.xcce302a  = a.xcce302a + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102a+a.xcce202a+a.xcce206a+a.xcce208a+a.xcce210a+a.xcce302a)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102a+a.xcce202a+a.xcce206a+a.xcce208a+a.xcce210a)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,  
                     "                a.xcce302b  = a.xcce302b + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102b+a.xcce202b+a.xcce206b+a.xcce208b+a.xcce210b+a.xcce302b)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102b+a.xcce202b+a.xcce206b+a.xcce208b+a.xcce210b)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce302c  = a.xcce302c + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102c+a.xcce202c+a.xcce206c+a.xcce208c+a.xcce210c+a.xcce302c)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102c+a.xcce202c+a.xcce206c+a.xcce208c+a.xcce210c)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce302d  = a.xcce302d + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102d+a.xcce202d+a.xcce206d+a.xcce208d+a.xcce210d+a.xcce302d)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102d+a.xcce202d+a.xcce206d+a.xcce208d+a.xcce210d)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce302e  = a.xcce302e + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102e+a.xcce202e+a.xcce206e+a.xcce208e+a.xcce210e+a.xcce302e)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102e+a.xcce202e+a.xcce206e+a.xcce208e+a.xcce210e)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce302f  = a.xcce302f + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102f+a.xcce202f+a.xcce206f+a.xcce208f+a.xcce210f+a.xcce302f)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102f+a.xcce202f+a.xcce206f+a.xcce208f+a.xcce210f)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce302g  = a.xcce302g + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102g+a.xcce202g+a.xcce206g+a.xcce208g+a.xcce210g+a.xcce302g)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102g+a.xcce202g+a.xcce206g+a.xcce208g+a.xcce210g)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce302h  = a.xcce302h + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102h+a.xcce202h+a.xcce206h+a.xcce208h+a.xcce210h+a.xcce302h)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102h+a.xcce202h+a.xcce206h+a.xcce208h+a.xcce210h)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END )  " ,
                     #180509-00052#1---mod---e                     
                     #170620-00028#1--modify-e
                     "      WHERE b.qty <> 0 "
                     #170504-00046#1----modify---e
         #PGS(D)-00824 --- end ---
      END IF
      
      IF g_sys_6024 = '3' THEN
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xcce_tmp a  ",
                     "     USING ( SELECT g.xcceld,g.xcce003,g.xcce001,g.xcce002,g.xcce006,g.xcce007,g.xcce008,g.xcce009,   ",
                     "                    g.xcce101,g.xcce102,g.xcce102a,g.xcce102b,g.xcce102c,g.xcce102d,g.xcce102e,g.xcce102f,g.xcce102g,g.xcce102h, ",
                     #170504-00046#1----mark---s
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck201 ),0) xcck201, COALESCE(SUM(xcck009 * - 1 * xcck202 ),0) xcck202,  ",
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202a),0) xcck202a,COALESCE(SUM(xcck009 * - 1 * xcck202b),0) xcck202b, ",
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202c),0) xcck202c,COALESCE(SUM(xcck009 * - 1 * xcck202d),0) xcck202d, ",
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202e),0) xcck202e,COALESCE(SUM(xcck009 * - 1 * xcck202f),0) xcck202f, ",
                     #"                    COALESCE(SUM(xcck009 * - 1 * xcck202g),0) xcck202g,COALESCE(SUM(xcck009 * - 1 * xcck202h),0) xcck202h, ",
                     #170504-00046#1----mark---e                     
                     "                    c.sfjb006 qty,d.sfaa042,d.xcbb006",
                     "                FROM xcce_tmp g ",
                     #170504-00046#1----mark---e
                     #"                   LEFT OUTER JOIN xcck_tmp  ", 
                     #"                                     ON  xcck020 IN ('302','303','114','107')  ", #发料，退料，回收入库，委外回收入库
                     #"                                     AND g.xcce001 = xcck001 ",
                     #"                                     AND g.xcce002 = xcck002 ",
                     #"                                     AND g.xcce006 = xcck047 ",
                     #"                                     AND g.xcce007 = xcck010 ",
                     #"                                     AND g.xcce008 = xcck011 ",
                     #"                                     AND g.xcce009 = xcck017 ",
                     #170504-00046#1----mark---e
                     "                    ,  ",
                     "                    ( SELECT sfjbent,sfjb001,sfjb003,sfjb004, ",
                     "                             COALESCE(SUM(sfjb006 * - 1),0) sfjb006  ",
                     "                        FROM sfjb_t,sfja_t ",
                     "                       WHERE sfjaent = sfjbent AND sfjadocno = sfjbdocno ",
                     "                         AND sfjbent = ",g_enterprise,
                     "                         AND sfjastus = 'S' AND (sfjb010 = '1' OR sfjb010 = '2' )",
                     "                         AND sfja003 >= '",g_bdate,"' ",
                     "                         AND sfja003 <= '",g_edate,"' ",
                     "                       GROUP BY sfjbent,sfjb001,sfjb003,sfjb004 ",           
                     "                    ) c ,",
                     "                    wip4_tmp3 d ",
                     "                WHERE g.xcceent = c.sfjbent ",
                     "                  AND g.xcce006 = c.sfjb001 ",       #工单
                     "                  AND g.xcce007 = c.sfjb003 ",
                     "                  AND COALESCE(g.xcce008,' ') = COALESCE(c.sfjb004,' ') ",
                     "                  AND d.xcce001 = g.xcce001 ",
                     "                  AND d.xcce002 = g.xcce002  ",
                     "                  AND d.xcce006 = g.xcce006  ",       #工单
                     "                  AND d.xcce007 = g.xcce007  ",
                     "                  AND d.xcce008 = g.xcce008  ",
                     "                  AND d.xcce009 = g.xcce009  ",
                     "                  AND d.sfaa042 = ? ",
                     "                  AND d.xcbb006 = ",p_xcbb006,
                     "                GROUP BY g.xcceld,g.xcce003,g.xcce001,g.xcce002,g.xcce006,g.xcce007,g.xcce008,g.xcce009,",
                     "                        g.xcce101,g.xcce102,g.xcce102a,g.xcce102b,g.xcce102c,g.xcce102d,g.xcce102e,g.xcce102f,g.xcce102g,g.xcce102h, c.sfjb006,d.sfaa042,d.xcbb006 ",
                     "                ) b ",
                     "          ON ( a.xcce001 = b.xcce001 ",
                     "         AND   a.xcce002 = b.xcce002  ",
                     "         AND   a.xcce006 = b.xcce006  ",       #工单
                     "         AND   a.xcce007 = b.xcce007  ",
                     "         AND   a.xcce008 = b.xcce008  ",
                     "         AND   a.xcce009 = b.xcce009  ",
                     "         AND   a.xcce003 = b.xcce003 ",
                     "         AND   a.xcceld = b.xcceld ",
                     "         AND   b.sfaa042 = ? ",
                     "         AND   b.xcbb006 = ",p_xcbb006," )",
                     "  WHEN MATCHED THEN    ",
                     #170504-00046#1----modify---s
                     #"     UPDATE SET a.xcce303  = a.xcce303 + b.qty ," ,
                     #"                a.xcce304  = a.xcce304 + (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce304a = a.xcce304a+ (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce304b = a.xcce304b+ (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce304c = a.xcce304c+ (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce304d = a.xcce304d+ (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce304e = a.xcce304e+ (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce304f = a.xcce304f+ (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce304g = a.xcce304g+ (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * b.qty ,  ",
                     #"                a.xcce304h = a.xcce304h+ (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * b.qty    ",
                     #"      WHERE b.xcck201 + b.xcce101 <> 0 "
                     #投入-入库转出（转出为负数，所以用加号），报废数量在计算时已经乘以了-1为负数，在判断时需再乘以-1,得正数与投入-入库转出比较，判断大小
                     #(报废数量/（元件期初数量+元件投入数量）) * （元件期初金额+元件投入金额）
                     #(b.qty /(xcce101+xcce201)) * (xcce102+xcce202)
                     #170620-00028#1--modify-s
                     #"     UPDATE SET a.xcce303  = a.xcce303 + (CASE WHEN (a.xcce201 + a.xcce301) <= b.qty *(-1) THEN (a.xcce201 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
                     #"                a.xcce304  = a.xcce304 + (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202 + a.xcce302)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
                     #"                a.xcce304a = a.xcce304a+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202a + a.xcce302a)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
                     #"                a.xcce304b = a.xcce304b+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202b + a.xcce302b)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
                     #"                a.xcce304c = a.xcce304c+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202c + a.xcce302c)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
                     #"                a.xcce304d = a.xcce304d+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202d + a.xcce302d)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
                     #"                a.xcce304e = a.xcce304e+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202e + a.xcce302e)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
                     #"                a.xcce304f = a.xcce304f+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202f + a.xcce302f)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
                     #"                a.xcce304g = a.xcce304g+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202g + a.xcce302g)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
                     #"                a.xcce304h = a.xcce304h+ (CASE WHEN (a.xcce201 + a.xcce301) < b.qty *(-1) THEN (((a.xcce201 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
                     #"                                               WHEN (a.xcce201 + a.xcce301) = b.qty *(-1) THEN (a.xcce202h + a.xcce302h)*(-1)  ",
                     #"                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " , 
                     #180509-00052#1---mod---s
#                     "     UPDATE SET a.xcce303  = a.xcce303 + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
#                     "                a.xcce304  = a.xcce304 + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202 + a.xcce302)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102+a.xcce202)) END ) , " ,
#                     "                a.xcce304a = a.xcce304a+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202a + a.xcce302a)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102a+a.xcce202a)) END ) , " ,
#                     "                a.xcce304b = a.xcce304b+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202b + a.xcce302b)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102b+a.xcce202b)) END ) , " ,
#                     "                a.xcce304c = a.xcce304c+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202c + a.xcce302c)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102c+a.xcce202c)) END ) , " ,
#                     "                a.xcce304d = a.xcce304d+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202d + a.xcce302d)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102d+a.xcce202d)) END ) , " ,
#                     "                a.xcce304e = a.xcce304e+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202e + a.xcce302e)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102e+a.xcce202e)) END ) , " ,
#                     "                a.xcce304f = a.xcce304f+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202f + a.xcce302f)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102f+a.xcce202f)) END ) , " ,
#                     "                a.xcce304g = a.xcce304g+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202g + a.xcce302g)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102g+a.xcce202g)) END ) , " ,
#                     "                a.xcce304h = a.xcce304h+ (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) < b.qty *(-1) THEN (((a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) ",
#                     "                                               WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) = b.qty *(-1) THEN (a.xcce202h + a.xcce302h)*(-1)  ",
#                     "                                               ELSE ((b.qty /(a.xcce101+a.xcce201)) * (a.xcce102h+a.xcce202h)) END )  " , 
                     "     UPDATE SET a.xcce303  = a.xcce303 + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301)*(-1) ELSE b.qty END ) , " ,
                     "                a.xcce304   =  a.xcce304 + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102+a.xcce202+a.xcce206+a.xcce208+a.xcce210+a.xcce302)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102+a.xcce202+a.xcce206+a.xcce208+a.xcce210)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,                      
                     "                a.xcce304a  = a.xcce304a + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102a+a.xcce202a+a.xcce206a+a.xcce208a+a.xcce210a+a.xcce302a)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102a+a.xcce202a+a.xcce206a+a.xcce208a+a.xcce210a)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,  
                     "                a.xcce304b  = a.xcce304b + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102b+a.xcce202b+a.xcce206b+a.xcce208b+a.xcce210b+a.xcce302b)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102b+a.xcce202b+a.xcce206b+a.xcce208b+a.xcce210b)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce304c  = a.xcce304c + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102c+a.xcce202c+a.xcce206c+a.xcce208c+a.xcce210c+a.xcce302c)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102c+a.xcce202c+a.xcce206c+a.xcce208c+a.xcce210c)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce304d  = a.xcce304d + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102d+a.xcce202d+a.xcce206d+a.xcce208d+a.xcce210d+a.xcce302d)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102d+a.xcce202d+a.xcce206d+a.xcce208d+a.xcce210d)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce304e  = a.xcce304e + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102e+a.xcce202e+a.xcce206e+a.xcce208e+a.xcce210e+a.xcce302e)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102e+a.xcce202e+a.xcce206e+a.xcce208e+a.xcce210e)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce304f  = a.xcce304f + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102f+a.xcce202f+a.xcce206f+a.xcce208f+a.xcce210f+a.xcce302f)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102f+a.xcce202f+a.xcce206f+a.xcce208f+a.xcce210f)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce304g  = a.xcce304g + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102g+a.xcce202g+a.xcce206g+a.xcce208g+a.xcce210g+a.xcce302g)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102g+a.xcce202g+a.xcce206g+a.xcce208g+a.xcce210g)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END ) , " ,
                     "                a.xcce304h  = a.xcce304h + (CASE WHEN (a.xcce101 + a.xcce201 + a.xcce205 + a.xcce207 + a.xcce209 + a.xcce301) <= b.qty *(-1) THEN (a.xcce102h+a.xcce202h+a.xcce206h+a.xcce208h+a.xcce210h+a.xcce302h)*(-1)  ",
                     "                                               ELSE (b.qty*(a.xcce102h+a.xcce202h+a.xcce206h+a.xcce208h+a.xcce210h)/(a.xcce101+a.xcce201+a.xcce205+a.xcce207+a.xcce209)) END )  " ,
                     #180509-00052#1---mod---e
                     #170620-00028#1--modify-e
                     "      WHERE b.qty <> 0 "
                     #170504-00046#1----modify---e
         #PGS(D)-00824 --- end ---
      END IF
      PREPARE s_axcp500_avg1_wip_4_2_p13 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p13"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
      
      EXECUTE s_axcp500_avg1_wip_4_2_p13 USING p_flag,p_flag
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p13"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF   
   END IF      
   #170120-00013#1---e
   
   #190708-00008#1---add---s
   #※參數「超領轉出方式」（S-FIN-6023）的調整
   #1.參數下拉選項為1.結案月轉出、2.當月有入庫即轉出
   #2.函式s_axcp500_avg1_wip_4_2內，處理s_axcp500_avg1_sum_xcce前，判斷參數「超領轉出方式」=2且當月有入庫數量時，
   #  xcce301 = xcce301 + xcce209 * (-1)
   #  xcce302 = xcce302 + xcce210 * (-1)
   #  (a~h也要計算)
   IF g_sys_6023 = '2' THEN
      #170618-00446#1--modify---s
      #UPDATE xcce_tmp 
      #     SET xcce301  = xcce301  + xcce209  * (-1) , 
      #         xcce302  = xcce302  + xcce210  * (-1) , 
      #         xcce302a = xcce302a + xcce210a * (-1) , 
      #         xcce302b = xcce302b + xcce210b * (-1) , 
      #         xcce302c = xcce302c + xcce210c * (-1) , 
      #         xcce302d = xcce302d + xcce210d * (-1) , 
      #         xcce302e = xcce302e + xcce210e * (-1) , 
      #         xcce302f = xcce302f + xcce210f * (-1) , 
      #         xcce302g = xcce302g + xcce210g * (-1) , 
      #         xcce302h = xcce302h + xcce210h * (-1) 
      #  WHERE EXISTS (SELECT 1 FROM wip4_tmp3 b  #当前成本阶
      #             WHERE b.xcce001 = xcce001 
      #               AND b.xcce002 = xcce002 
      #               AND b.xcce006 = xcce006       #工单
      #               AND b.xcce007 = xcce007 
      #               AND b.xcce008 = xcce008 
      #               AND b.xcce009 = xcce009 
      #               AND b.sfaa042 = p_flag
      #               AND b.xcbb006 = p_xcbb006 )     
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xcce_tmp a ",
               "       USING wip4_tmp3 b ",
               "          ON ( a.xcce001 = b.xcce001 ",
               "         AND   a.xcce002 = b.xcce002 ",
               "         AND   a.xcce006 = b.xcce006 ",       #工单
               "         AND   a.xcce007 = b.xcce007 ",
               "         AND   a.xcce008 = b.xcce008 ",
               "         AND   a.xcce009 = b.xcce009 ",
               "         AND   b.xcbb006 = ",p_xcbb006,
               "         AND   b.sfaa042 = ? ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = a.xcce301  + (a.xcce209  + a.xcce303 ) * (-1) ,  ",
               "                a.xcce302  = a.xcce302  + (a.xcce210  + a.xcce304 ) * (-1) ,  ",
               "                a.xcce302a = a.xcce302a + (a.xcce210a + a.xcce304a) * (-1) ,  ",
               "                a.xcce302b = a.xcce302b + (a.xcce210b + a.xcce304b) * (-1) ,  ",
               "                a.xcce302c = a.xcce302c + (a.xcce210c + a.xcce304c) * (-1) ,  ",
               "                a.xcce302d = a.xcce302d + (a.xcce210d + a.xcce304d) * (-1) ,  ",
               "                a.xcce302e = a.xcce302e + (a.xcce210e + a.xcce304e) * (-1) ,  ",
               "                a.xcce302f = a.xcce302f + (a.xcce210f + a.xcce304f) * (-1) ,  ",
               "                a.xcce302g = a.xcce302g + (a.xcce210g + a.xcce304g) * (-1) ,  ",
               "                a.xcce302h = a.xcce302h + (a.xcce210h + a.xcce304h) * (-1)   " ,
               #"  WHERE a.xcce301 <> 0 "  #170618-00382#1 add  #180131-00016#1 mark
               #180131-00016#1---add---s
               "   WHERE EXISTS ( SELECT 1 FROM inaj_tmp ",  #有入库
               "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
               "                     AND inaj020 = a.xcce006 ",
               "                 )  "             
               #180131-00016#1---add---e
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_wip_4_2_p15 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p15"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
      
      EXECUTE s_axcp500_avg1_wip_4_2_p15 USING p_flag
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p15"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF              
      #170618-00446#1--modify---e   
      #180808-00024#1--add--s 
      #※參數「超領轉出方式」（S-FIN-6023）的調整
      #1.參數下拉選項為1.結案月轉出、2.當月有入庫即轉出
      #2.函式s_axcp500_avg1_wip_4_2內，處理s_axcp500_avg1_sum_xcce前，判斷參數「超領轉出方式」=2且當月有入庫數量時
      #超龄的转入到xcce301之后,xccz的没有做转出,会到导致xcce和xccz的数据不对,
      #这样在下一个月的计算xcce301转出时因为期初xccz101与xcce301不一样而不对
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xccz_tmp a ",
               "       USING wip4_tmp3 b ",
               "          ON ( a.xccz001 = b.xcce001 ",
               "         AND   a.xccz002 = b.xcce002 ",
               "         AND   a.xccz006 = b.xcce006 ",       #工单
               "         AND   a.xccz007 = b.xcce007 ",
               "         AND   a.xccz008 = b.xcce008 ",
               "         AND   a.xccz009 = b.xcce009 ",
               "         AND   b.xcbb006 = ",p_xcbb006,
               "         AND   b.sfaa042 = ? ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xccz301  = a.xccz301  + (a.xccz209 + a.xccz303)  * (-1)   ",
               "   WHERE EXISTS ( SELECT 1 FROM inaj_tmp ",  #有入库
               "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
               "                     AND inaj020 = a.xccz006 ",
               "                 )  "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_wip_4_2_p15_xccz FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p15_xccz"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
      
      EXECUTE s_axcp500_avg1_wip_4_2_p15_xccz USING p_flag
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p15_xccz"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
      #180808-00024#1--add--s       
   END IF
   #190708-00008#1---add---e   

   
   #170504-00046#1--add--s
   #对xcce302进行取位
   #xcce302a~xcce302h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             #LET g_sql = "UPDATE wip4_tmp3 SET xcce302  = round(xcce302 ,? ), xcce302a = round(xcce302a,? ), xcce302b = round(xcce302b,? ), ",  #171013-00022#1 mark
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = round(xcce302 ,? ), xcce302a = round(xcce302a,? ), xcce302b = round(xcce302b,? ), ",  #171013-00022#1 add
                         "                    xcce302c = round(xcce302c,? ), xcce302d = round(xcce302d,? ), ",
                         "                    xcce302e = round(xcce302e,? ), xcce302f = round(xcce302f,? ), ",
                         "                    xcce302g = round(xcce302g,? ), xcce302h = round(xcce302h,? )  "
                         #180329-00007#1---add---s
                         ,"                   ,xcce304  = round(xcce304 ,? ), xcce304a = round(xcce304a,? ), xcce304b = round(xcce304b,? ), ",  
                         "                    xcce304c = round(xcce304c,? ), xcce304d = round(xcce304d,? ), ",
                         "                    xcce304e = round(xcce304e,? ), xcce304f = round(xcce304f,? ), ",
                         "                    xcce304g = round(xcce304g,? ), xcce304h = round(xcce304h,? )  "
                         #180329-00007#1---add---e

                         
        WHEN '3'   #无条件截位
             #LET g_sql = "UPDATE wip4_tmp3 SET xcce302  = trunc(xcce302 ,? ), xcce302a = trunc(xcce302a,? ), xcce302b = trunc(xcce302b,? ), ",  #171013-00022#1 mark
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = trunc(xcce302 ,? ), xcce302a = trunc(xcce302a,? ), xcce302b = trunc(xcce302b,? ), ",  #171013-00022#1 add
                         "                     xcce302c = trunc(xcce302c,? ), xcce302d = trunc(xcce302d,? ), ",
                         "                     xcce302e = trunc(xcce302e,? ), xcce302f = trunc(xcce302f,? ), ",
                         "                     xcce302g = trunc(xcce302g,? ), xcce302h = trunc(xcce302h,? )  "
                         #180329-00007#1---add---s
                         ,"                   ,xcce304  = trunc(xcce304 ,? ), xcce304a = trunc(xcce304a,? ), xcce304b = trunc(xcce304b,? ), ", 
                         "                    xcce304c = trunc(xcce304c,? ), xcce304d = trunc(xcce304d,? ), ",
                         "                    xcce304e = trunc(xcce304e,? ), xcce304f = trunc(xcce304f,? ), ",
                         "                    xcce304g = trunc(xcce304g,? ), xcce304h = trunc(xcce304h,? )  "
                         #180329-00007#1---add---e
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce302,?) ",
                         "                                                          ELSE ROUND(xcce302,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce302,?)",
                         "                                END ),",
                         "                    xcce302a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302a,?) ",
                         "                                                         ELSE ROUND(xcce302a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302a,?)",
                         "                                END ),",
                         "                    xcce302b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302b,?) ",
                         "                                                         ELSE ROUND(xcce302b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302b,?)",
                         "                                END ),",
                         "                    xcce302c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302c,?) ",
                         "                                                         ELSE ROUND(xcce302c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302c,?)",
                         "                                END ),",
                         "                    xcce302d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302d,?) ",
                         "                                                         ELSE ROUND(xcce302d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302d,?)",
                         "                                END ),",
                         "                    xcce302e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302e,?) ",
                         "                                                         ELSE ROUND(xcce302e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302e,?)",
                         "                                END ),",
                         "                    xcce302f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302f,?) ",
                         "                                                         ELSE ROUND(xcce302f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302f,?)",
                         "                                END ),",
                         "                    xcce302g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302g,?) ",
                         "                                                         ELSE ROUND(xcce302g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302g,?)",
                         "                                END ),",
                         "                    xcce302h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302h,?) ",
                         "                                                         ELSE ROUND(xcce302h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302h,?)",
                         "                                END ),",
                         "                   xcce304  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce304,?) ",
                         "                                                          ELSE ROUND(xcce304,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce304,?)",
                         "                                END ),",
                         "                    xcce304a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304a,?) ",
                         "                                                         ELSE ROUND(xcce304a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304a,?)",
                         "                                END ),",
                         "                    xcce304b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304b,?) ",
                         "                                                         ELSE ROUND(xcce304b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304b,?)",
                         "                                END ),",
                         "                    xcce304c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304c,?) ",
                         "                                                         ELSE ROUND(xcce304c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304c,?)",
                         "                                END ),",
                         "                    xcce304d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304d,?) ",
                         "                                                         ELSE ROUND(xcce304d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304d,?)",
                         "                                END ),",
                         "                    xcce304e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304e,?) ",
                         "                                                         ELSE ROUND(xcce304e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304e,?)",
                         "                                END ),",
                         "                    xcce304f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304f,?) ",
                         "                                                         ELSE ROUND(xcce304f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304f,?)",
                         "                                END ),",
                         "                    xcce304g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304g,?) ",
                         "                                                         ELSE ROUND(xcce304g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304g,?)",
                         "                                END ),",
                         "                    xcce304h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304h,?) ",
                         "                                                         ELSE ROUND(xcce304h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = ceil(xcce302 *power(10,?))/power(10,?),",
                         "                    xcce302a = ceil(xcce302a*power(10,?))/power(10,?),",
                         "                    xcce302b = ceil(xcce302b*power(10,?))/power(10,?),",
                         "                    xcce302c = ceil(xcce302c*power(10,?))/power(10,?),",
                         "                    xcce302d = ceil(xcce302d*power(10,?))/power(10,?),",
                         "                    xcce302e = ceil(xcce302e*power(10,?))/power(10,?),",
                         "                    xcce302f = ceil(xcce302f*power(10,?))/power(10,?),",
                         "                    xcce302g = ceil(xcce302g*power(10,?))/power(10,?),",
                         "                    xcce302h = ceil(xcce302h*power(10,?))/power(10,?),",  
                         "                    xcce304  = ceil(xcce304 *power(10,?))/power(10,?),",
                         "                    xcce304a = ceil(xcce304a*power(10,?))/power(10,?),",
                         "                    xcce304b = ceil(xcce304b*power(10,?))/power(10,?),",
                         "                    xcce304c = ceil(xcce304c*power(10,?))/power(10,?),",
                         "                    xcce304d = ceil(xcce304d*power(10,?))/power(10,?),",
                         "                    xcce304e = ceil(xcce304e*power(10,?))/power(10,?),",
                         "                    xcce304f = ceil(xcce304f*power(10,?))/power(10,?),",
                         "                    xcce304g = ceil(xcce304g*power(10,?))/power(10,?),",
                         "                    xcce304h = ceil(xcce304h*power(10,?))/power(10,?) "
        #180802-00015#1 add-E    
                         
   END CASE                         
   PREPARE s_axcp500_avg1_wip_4_2_p52 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p52"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_wip_4_2_p5')         
#     RETURN r_success
   END IF

   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_wip_4_2_p52 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                            g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                            g_curr[p_seq].digit2
#                                            #180329-00007#1---add---s
#                                            ,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                            g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                            g_curr[p_seq].digit2
#                                            #180329-00007#1---add---e
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_wip_4_2_p52 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_wip_4_2_p52 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_wip_4_2_p52 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_wip_4_2_p52 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202h
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p52"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_4_2_p52')         
#     RETURN r_success
   END IF  
   #170504-00046#1----e
   
   #180305-00001#1 add start -----
   UPDATE xcce_tmp SET xcce301  = (xcce101  + xcce201  + xcce205  + xcce207 + xcce209  + xcce307) * -1
    WHERE xcce001 = p_seq
      AND xcce301 != 0  
      AND (xcce101  + xcce201  + xcce205  + xcce207 + xcce209 + xcce307 ) < xcce301*-1      
      AND EXISTS ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
                        WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
                          AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
                          AND xcce006 = xccd006 )
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce301"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #180305-00001#1 add end   -----

   #190117-00035#1 add start -----
   #171013-00022#1---add---s
   ##修正xcce302a的值 xcce302a = xcce302 - (xcce302b~xcce302h)
   #UPDATE xcce_tmp SET xcce302a = xcce302 - (xcce302b+xcce302c+xcce302d+xcce302e+xcce302f+xcce302g+xcce302h)
   # WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302a"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
#  #   RETURN r_success
   #END IF          
   ##171013-00022#1---add---e 
   #190117-00035#1 add end   -----

   #190117-00035#1 add start -----
   UPDATE xcce_tmp SET xcce302a = xcce302 - (xcce302b+xcce302c+xcce302d+xcce302e+xcce302f+xcce302g+xcce302h)
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302a) >= ABS(xcce302b) AND ABS(xcce302a) >= ABS(xcce302c)
      AND ABS(xcce302a) >= ABS(xcce302d) AND ABS(xcce302a) >= ABS(xcce302e)
      AND ABS(xcce302a) >= ABS(xcce302f) AND ABS(xcce302a) >= ABS(xcce302g)
      AND ABS(xcce302a) >= ABS(xcce302h)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF

   UPDATE xcce_tmp SET xcce302b = xcce302 - (xcce302a+xcce302c+xcce302d+xcce302e+xcce302f+xcce302g+xcce302h)
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302b) >= ABS(xcce302c)
      AND ABS(xcce302b) >= ABS(xcce302d) AND ABS(xcce302b) >= ABS(xcce302e)
      AND ABS(xcce302b) >= ABS(xcce302f) AND ABS(xcce302b) >= ABS(xcce302g)
      AND ABS(xcce302b) >= ABS(xcce302h)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE xcce_tmp SET xcce302c = xcce302 - (xcce302a+xcce302b+xcce302d+xcce302e+xcce302f+xcce302g+xcce302h)
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302c) >= ABS(xcce302d) AND ABS(xcce302c) >= ABS(xcce302e)
      AND ABS(xcce302c) >= ABS(xcce302f) AND ABS(xcce302c) >= ABS(xcce302g)
      AND ABS(xcce302c) >= ABS(xcce302h)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE xcce_tmp SET xcce302d = xcce302 - (xcce302a+xcce302b+xcce302c+xcce302e+xcce302f+xcce302g+xcce302h)
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302d) >= ABS(xcce302e)
      AND ABS(xcce302d) >= ABS(xcce302f) AND ABS(xcce302d) >= ABS(xcce302g)
      AND ABS(xcce302d) >= ABS(xcce302h)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE xcce_tmp SET xcce302e = xcce302 - (xcce302a+xcce302b+xcce302c+xcce302d+xcce302f+xcce302g+xcce302h)
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302e) >= ABS(xcce302f) AND ABS(xcce302e) >= ABS(xcce302g)
      AND ABS(xcce302e) >= ABS(xcce302h)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF      
   
   UPDATE xcce_tmp SET xcce302f = xcce302 - (xcce302a+xcce302b+xcce302c+xcce302d+xcce302e+xcce302g+xcce302h)
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302f) >= ABS(xcce302g)
      AND ABS(xcce302f) >= ABS(xcce302h)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE xcce_tmp SET xcce302g = xcce302 - (xcce302a+xcce302b+xcce302c+xcce302d+xcce302e+xcce302f+xcce302h)
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
      AND ABS(xcce302g) >= ABS(xcce302h)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   
   UPDATE xcce_tmp SET xcce302h = xcce302 - (xcce302a+xcce302b+xcce302c+xcce302d+xcce302e+xcce302f+xcce302g)
    WHERE xcce302 <> xcce302a + xcce302b + xcce302c + xcce302d + xcce302e + xcce302f + xcce302g + xcce302h
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF               
   #190117-00035#1 add end   -----
   
   #180329-00007#1---add---s
   #修正xcce304a的值 xcce304a = xcce304 - (xcce304b~xcce304h)
   UPDATE xcce_tmp SET xcce304a = xcce304 - (xcce304b+xcce304c+xcce304d+xcce304e+xcce304f+xcce304g+xcce304h)
    WHERE xcce304 <> xcce304a + xcce304b + xcce304c + xcce304d + xcce304e + xcce304f + xcce304g + xcce304h
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce304a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF 
   #180329-00007#1---add---e
   
   #180329-00007#1---add---s
   #修正xcce304a的值 xcce304a = xcce304 - (xcce304b~xcce304h)
   UPDATE xcce_tmp SET xcce304a = xcce304 - (xcce304b+xcce304c+xcce304d+xcce304e+xcce304f+xcce304g+xcce304h)
    WHERE xcce304 <> xcce304a + xcce304b + xcce304c + xcce304d + xcce304e + xcce304f + xcce304g + xcce304h
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce304a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF 
   #180329-00007#1---add---e
   
   #180131-00016#1---add---s
   #判断如果投入的数量与xcce302转出的数量一样，但是金额不相等，则将xcce302的金额等于投入的总金额
   UPDATE xcce_tmp SET xcce302  = (xcce102  + xcce202  + xcce206  + xcce208 + 
                                   xcce210  + xcce308) * -1,
                       xcce302a = (xcce102a + xcce202a + xcce206a + xcce208a + 
                                  xcce210a + xcce308a) * -1,
                       xcce302b = (xcce102b + xcce202b + xcce206b + xcce208b + 
                                  xcce210b + xcce308b) * -1,
                       xcce302c = (xcce102c + xcce202c + xcce206c + xcce208c + 
                                  xcce210c + xcce308c) * -1,
                       xcce302d = (xcce102d + xcce202d + xcce206d + xcce208d + 
                                  xcce210d + xcce308d) * -1,
                       xcce302e = (xcce102e + xcce202e + xcce206e + xcce208e + 
                                  xcce210e + xcce308e) * -1,
                       xcce302f = (xcce102f + xcce202f + xcce206f + xcce208f + 
                                  xcce210f + xcce308f) * -1,
                       xcce302g = (xcce102g + xcce202g + xcce206g + xcce208g + 
                                  xcce210g + xcce308g) * -1,
                       xcce302h = (xcce102h + xcce202h + xcce206h + xcce208h + 
                                  xcce210h + xcce308h) * -1
    WHERE xcce001 = p_seq
      AND xcce301 <> 0  #180413-00008#1 add
      #AND EXISTS ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp #180314-00064#1 mark
      AND (EXISTS ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp #180314-00064#1 add
                        WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
                          AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
                          #AND sfaa048 >= g_bdate  AND sfaa048 < l_date #180314-00064#1 add   #181205-00001#1 mark                         
                          AND xcce006 = xccd006 )  
               #180610-00024#1---mod---s
               ##180314-00064#1 add start -----
               #OR (EXISTS (SELECT 1 FROM inaj_tmp 
               #              WHERE inaj036 IN ('110','111','112','113','103','104','105','106') 
               #                AND inaj020 = xcce006)))
               ##180314-00064#1 add end   -----  
               OR (EXISTS (SELECT 1 FROM inaj_tmp,sfac_tmp2,sfaa_tmp 
                             WHERE inaj036 IN ('110','111','112','113','103','104','105','106')
                               AND inaj020 = sfacdocno AND clevel = p_xcbb006  
                               AND inajent = sfaaent AND inaj020 = sfaadocno AND sfaa042 = p_flag                               
                               AND inaj020 = xcce006)))
               #180610-00024#1---mod---e
      AND (xcce101  + xcce201  + xcce205  + xcce207 + xcce209 + xcce301 + xcce307 ) = 0
      AND ((xcce102  + xcce202  + xcce206  + xcce208 + xcce210 + xcce302 + xcce308) <> 0 #190815-00023#1 add (
      #190815-00023#1 add start -----
       OR (xcce102a  + xcce202a  + xcce206a  + xcce208a + xcce210a + xcce302a + xcce308a) <> 0
       OR (xcce102b  + xcce202b  + xcce206b  + xcce208b + xcce210b + xcce302b + xcce308b) <> 0
       OR (xcce102c  + xcce202c  + xcce206c  + xcce208c + xcce210c + xcce302c + xcce308c) <> 0
       OR (xcce102d  + xcce202d  + xcce206d  + xcce208d + xcce210d + xcce302d + xcce308d) <> 0
       OR (xcce102e  + xcce202e  + xcce206e  + xcce208e + xcce210e + xcce302e + xcce308e) <> 0
       OR (xcce102f  + xcce202f  + xcce206f  + xcce208f + xcce210f + xcce302f + xcce308f) <> 0
       OR (xcce102g  + xcce202g  + xcce206g  + xcce208g + xcce210g + xcce302g + xcce308g) <> 0
       OR (xcce102h  + xcce202h  + xcce206h  + xcce208h + xcce210h + xcce302h + xcce308h) <> 0)
      #190815-00023#1 add end   -----
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF                     
   #180131-00016#1---add---e 
   
   #180330-00010#1---add---s
   UPDATE xcce_tmp SET xcce301  = (xcce101  + xcce201 + xcce205 + xcce207 + 
                                   xcce209  + xcce307 + xcce303) * -1,
                       xcce302  = (xcce102  + xcce202 + xcce206 + xcce208 + 
                                   xcce210  + xcce308 + xcce304) * -1,
                       xcce302a = (xcce102a + xcce202a + xcce206a + xcce208a + 
                                   xcce210a + xcce308a + xcce304a) * -1,
                       xcce302b = (xcce102b + xcce202b + xcce206b + xcce208b + 
                                   xcce210b + xcce308b + xcce304b) * -1,
                       xcce302c = (xcce102c + xcce202c + xcce206c + xcce208c + 
                                   xcce210c + xcce308c + xcce304c) * -1,
                       xcce302d = (xcce102d + xcce202d + xcce206d + xcce208d + 
                                   xcce210d + xcce308d + xcce304d) * -1,
                       xcce302e = (xcce102e + xcce202e + xcce206e + xcce208e + 
                                   xcce210e + xcce308e + xcce304e) * -1,
                       xcce302f = (xcce102f + xcce202f + xcce206f + xcce208f + 
                                   xcce210f + xcce308f + xcce304f) * -1,
                       xcce302g = (xcce102g + xcce202g + xcce206g + xcce208g + 
                                   xcce210g + xcce308g + xcce304g) * -1,
                       xcce302h = (xcce102h + xcce202h + xcce206h + xcce208h + 
                                   xcce210h + xcce308h + xcce304h) * -1
    WHERE xcce001 = p_seq
      AND EXISTS ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp 
                        WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
                          AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
                          #AND sfaa048 >= g_bdate  AND sfaa048 < l_date      #181205-00001#1 mark                       
                          AND xcce006 = xccd006 )                          
      #AND (xcce101  + xcce201  + xcce205  + xcce207 + xcce209 + xcce307) < (xcce301+xcce303)*-1    #180918-00031#1 mark
      AND ABS(xcce101  + xcce201  + xcce205  + xcce207 + xcce209 + xcce307) < ABS(xcce301+xcce303)  #180918-00031#1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce301"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF    
   #180330-00010#1---add---s
   
   
   CALL s_axcp500_avg1_sum_xcce(p_xcbb006,p_seq) 
        RETURNING l_success


   #180627-00020#1---add---s
   #IF g_sys_6024 = '2' THEN  #200506-00035#1 mark
   #IF g_sys_6024 = '2' OR g_sys_6007 = '2' OR g_sys_6014 = '2' THEN  #200506-00035#1 #201012-00033#1 mark
   IF g_sys_6024 = '2' OR g_sys_6007 = '2' OR g_sys_6014 MATCHES '[23]' THEN  #201012-00033#1 add
       #根据xcck012单据类型='DIFF'可以判断为调整的，或者根据xcck055判断
       LET g_sql = "INSERT INTO xcck_tmp ",                                         
                   #                           企业编号 site组织 法人组织 账套 账套本位币顺序                      #161114-00003#1 add  #170110-00028#1                    
                   #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,", #170110-00028#1 #170825-00011#1 mark
                   " SELECT xcceent,sfaa_tmp.sfaasite,xccecomp,xcceld,xcce001,", #170825-00011#1 add                      
                   #        成本域  成本计算类型 年度 期别 
                   "        xcce002,xcce003,xcce004,xcce005, ",
                   #        参考单号 项次                                    #参考单号=工单单号 项次为同个工单+1
                   "        xccd006 ,(ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 ))+ ",
                   "        NVL((SELECT MAX(xcck007) FROM xcck_tmp ",
                   "              WHERE xcckent=xcceent AND xcckld=xcceld AND xcck001=xcce001 AND xcck002=xcce002",
                   "                AND xcck003=xcce003 AND xcck004=xcce004 AND xcck005=xcce005 ",
                   "                AND xcck006=xcce006 AND xcck008=0 AND xcck009=1 AND xcck012='DIFF'),0) xcck007,",
                   #        项序 出入库码  料号
                   "        0   ,1       ,xccd007, ",
                   #特性：不能直接用xccd008，xccd上是不存特征的，肯定是空格，但实际工单上的主件不一定是有空格的，都有特征，那这样写入xcck后，最后汇总到xccc时，特征就会匹配不到，这部分也就会计入不到xccc中
                   #              所以需再关联sfac_tmp去获取一个特征,用sfac006。尽量关联相同成本阶的那个特征
                   #      再如果工单有多产出主件，则只要抓一笔就行了，这部分差异转出的部分只要有个主件认领就可以了
                   #"        sfac_tmp.sfac006, ", #170825-00011#1 mark
                   "        sfaa_tmp.sfaa011, ",  #170825-00011#1 add
                   #        单据类型 单据日期 时间 仓库 储位                  #单据类型xcck012='DIFF'
                   #"        'DIFF' ,''      ,'' ,' ' ,' ' ,  ",#200708-00088#1 mark
                   "        'DIFF' ,NULL    ,'' ,' ' ,' ' ,  ",     #200708-00088#1-add
                   #        批号    异动类型  原因码 交易对象 客群
                   "        xccd009,'1100'  ,' '   ,' '    ,' ',  ",        #xcck020异动类型='1100'本月无入库差异转出的类型
                   #        区域 成本中心 经营类别 渠道 品类
                   "        ' ' ,' '     ,' '     ,' ' ,' '  ,  ",
                   #        品牌              项目号 WBS 存货科目 费用成本科目
                   "        nvl(imaa126,' '),' '   ,' ',' '     ,' '         ,  ",
                   #        收入科目 交易币种 本位币种   汇率  交易单位            
                   "        ' '    ,xccd011,xccd011,1      ,imaa006,  ",
                   #        成本单位 换算率 交易数量 工单号码 重复性生产-计划编号        
                   "        imaa006 ,1    ,0      ,xccd006,' '    ,  ",
                   #        重复性生产-生产料号 BOM特性 产品特征
                   "        ' '              ,' '    ,' '    ,  ",
                   #        xccc类型                                                                                              本期异动数量
                   #"        CASE '",p_flag,"' WHEN 'Y' THEN '2090' ELSE '2050' END IF, 0, ",   #xcck055异动类型=本月无入库差异转出的类型 '2050'一般工单 '2090'重工工单  #本期异动数量=0
                   #"        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END IF, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型 #200708-00088#1 mark
                   "        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END , 0, ",     #mod zhangllc 160608 SBS2 增加2030返工入库类型  #200708-00088#1 add
                   #        本期异动数量金额    
                   #"        xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h, ", #170618-00372#1 mark
                   "        xcce302*(-1),xcce302a*(-1),xcce302b*(-1),xcce302c*(-1),xcce302d*(-1),xcce302e*(-1),xcce302f*(-1),xcce302g*(-1),xcce302h*(-1), ", #170618-00372#1 add
                   #        本期异动单价        
                   #"        xcce301,xcce302a,xcce302b,xcce302c,xcce302d,xcce302e,xcce302f,xcce302g,xcce302h, ", #170618-00372#1 mark
                   "        xcce302*(-1),xcce302a*(-1),xcce302b*(-1),xcce302c*(-1),xcce302d*(-1),xcce302e*(-1),xcce302f*(-1),xcce302g*(-1),xcce302h*(-1), ", #170618-00372#1 add                    
                   #        已耗数量金额          结存数量金额          结存单位成本        结存调整金额
                   "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, ",
                   #        资料所有者      部门         录入者       部门  创建日 更改者 最近更改日 状态码
                   #"        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"','','','','Y', ", #200708-00088#1 mark
                   "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"',NULL,'',NULL,'Y', ",  #200708-00088#1 add
                   #        自定义字段
                   #"        '','','','','','','','','','','','','','','', ",      #200708-00088#1 mark
                   "        '','','','','','','','','','',0,0,0,0,0, ",           #200708-00088#1 add
                   #"        '','','','','','','','','','','','','','','', ",      #200708-00088#1 mark
                   "        0,0,0,0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, ",  #200708-00088#1 add
                   "        '',",    #成本代销单号  160509-00004#76
                   "        ' ' ",   #库存管理特征 for xccq use
                   #"    FROM xcce_tmp LEFT OUTER JOIN imaa_t ON imaaent = xcceent AND imaa001 = xcce007,xccd_tmp, ",  #191205-00053#1 mark
                   "    FROM xcce_tmp,xccd_tmp LEFT OUTER JOIN imaa_t ON imaaent = xccdent AND imaa001 = xccd007, ",  #191205-00053#1
                   #170825-00011#1 mark start -----
                   #"         (SELECT * ",
                   #"            FROM ( SELECT sfacdocno,sfacsite,sfac001,sfac006,clevel,ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) num FROM sfac_tmp WHERE clevel =",p_xcbb006,") a ",  #mod zhangllc SBS7 add sfacsite
                   #"           WHERE num=1 ",
                   #"         ) sfac_tmp, ",
                   #170825-00011#1 mark end   -----
                   #190411-00017#1 A mark-S
#                   "         (SELECT sfaa_tmp.* FROM sfaa_tmp,sfac_tmp2 ",
#                   "           WHERE sfaaent = ",g_enterprise,
#                   "             AND sfaadocno=sfacdocno ",
#                   "             AND clevel= ",p_xcbb006,
#                   "             AND sfaa042 = '",p_flag,"' ",
#                   #"             AND sfaa048 >= '",g_bdate,"'  AND sfaa048 < '",l_date,"'  ",  #170618-00372#1 mark
#                   "          ) sfaa_tmp ",
                   #190411-00017#1 A mark-E
                   #190411-00017#1 A add-S
                   "         (SELECT sfaa_tmp.* FROM sfaa_tmp ",
                   "           WHERE sfaaent = ",g_enterprise,
                   "             AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = sfaadocno AND clevel = ",p_xcbb006,")",
                   "             AND sfaa042 = '",p_flag,"' ",
                   "          ) sfaa_tmp ",
                   #190411-00017#1 A add-E
                   "   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce002=xccd002 AND xcce003=xccd003 ",
                   "     AND xcce004 = xccd004 AND xcce005=xccd005 AND xcce006=xccd006 ",
                   #"     AND sfacdocno = xccd006 AND sfac001=xccd007 ",  #关联sfac_tmp #170825-00011#1 mark
                   "     AND xcce001 ='",p_seq,"' ",
                   "     AND xcceent = sfaaent AND xcce006 = sfaadocno ", #关联sfaa_tmp
                   #"     AND xcce902 != 0 ", #170618-00372#1 mark
                   #"     AND xcce302 != 0 ",  #170618-00372#1 add #200604-00071#1 mark
                   "     AND (xcce302<>0 OR xcce302a<>0 OR xcce302b<>0 OR xcce302c<>0 OR xcce302d<>0 OR xcce302e<>0 OR xcce302f<>0 OR xcce302g<>0 OR xcce302h<>0)",   #200604-00071#1
                   "     AND sfaa003 <> '4' ", ##180320-00059#1 add
                   "     AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
                   "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
                   "                     AND inaj020 = xcce006 ",
                   "                     ) ",
                   #當月有報廢
                   #"     AND EXISTS (SELECT 1 FROM sfja_t,sfjb_t ",   #190823-00038#1 mark
                   "     AND (EXISTS (SELECT 1 FROM sfja_t,sfjb_t ",   #190823-00038#1
                   "                  WHERE sfjaent = sfjbent AND sfjadocno = sfjbdocno",
                   #"                    AND sfjbent = xccdent AND sfjb001 = xccd006 ",  #190823-00038#1 mark
                   "                    AND sfjbent = xcceent AND sfjb001 = xcce006 AND sfjb003 = xcce007 ",  #190823-00038#1 
                   #"                    AND (('",g_sys_6013,"'='Y' AND sfjb004 = xcce007) OR '",g_sys_6013,"'='N') ", #190823-00038#1  #200115-00003#1 mark
                   "                    AND (('",g_sys_6013,"'='Y' AND sfjb004 = xcce008) OR '",g_sys_6013,"'='N') ",  #200115-00003#1
                   "                    AND sfjaent = ",g_enterprise,
                   "                    AND sfja003 >= '",g_bdate,"' AND sfja003 <= '",g_edate,"' ",
                   "                    AND sfjb006 > 0 AND sfjastus = 'S' AND (sfjb010 = '1' OR sfjb010 = '2' ))" 
                 #,"      OR ('",g_sys_6014,"'='2' AND xccd301 =0) "  #200506-00035#1 add  #201012-00033#1 mark
                  ,"      OR (('",g_sys_6014,"'='2' OR '",g_sys_6014,"'='3') AND xccd301 =0) " #201012-00033#1 add
                   #190823-00038#1---add---s
                  ,"       OR EXISTS (SELECT 1 FROM sffb_t ",
                   "                    WHERE sffbent = xccdent ",
                   "                      AND sffb005 = xccd006 ",
                   "                      AND sffb012 >= '",g_bdate,"' AND sffb012 < '",l_date,"' ",
                   "                      AND sffb018 > 0 ",
                   "                      AND sffbstus=  'Y' AND sffb001 = '3' ) )"  
                   #190823-00038#1---add---e                   
       PREPARE s_axcp500_avg1_wip_4_2_p19 FROM g_sql
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p19"
          LET g_errparam.popup  = TRUE
          CALL cl_err()     
       END IF     
       EXECUTE s_axcp500_avg1_wip_4_2_p19
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p19"
          LET g_errparam.popup  = TRUE
          CALL cl_err()      
       END IF   
   END IF
   #180627-00020#1---add---e


   #工单结案,把结余转至差异或是入库
   #说明:工单结案时,若有结余,则要处理结余
   #     若参数g_sys_6008 = 'Y' (工单结案在制差异转入主件当期入库),则把结余转至xccd302
   #                     = 'N',则把结余至到xccd304
   # 但有一个例外,若g_sys_6008 = 'Y',但是本月没有入库,那转至xccd302后,无法正常结转至xccc中,会出现对不平的现象
   #             若遇这种现象时,即使参数='Y',也要结至xccd304
   IF g_sys_6008 = 'Y' THEN
      IF g_sys_6022 = 'N' THEN  #本月无入库的在制差异转入主件当期入库='N' #add zhangllc 160527 SBS2
         #本月有入库,则结转至xcce302
         UPDATE xcce_tmp SET xcce301  = xcce301  + xcce901 * -1,
                             xcce302  = xcce302  + xcce902 * -1,
                             xcce302a = xcce302a + xcce902a * -1,
                             xcce302b = xcce302b + xcce902b * -1,
                             xcce302c = xcce302c + xcce902c * -1,
                             xcce302d = xcce302d + xcce902d * -1,
                             xcce302e = xcce302e + xcce902e * -1,
                             xcce302f = xcce302f + xcce902f * -1,
                             xcce302g = xcce302g + xcce902g * -1,
                             xcce302h = xcce302h + xcce902h * -1
          WHERE xcce001 = p_seq
            #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
            #AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
            #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
            #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
            #                    AND xccdent = sfaaent    #add 150916
            #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
            #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
                              WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
                                AND xccdent = sfaaent   AND xccd006 = sfaadocno AND sfaa042 = p_flag
                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #mod zhangllc 160528 SBS4--e
            AND EXISTS ( SELECT 1 FROM inaj_tmp   #有入库
                          WHERE inaj036 IN ('110','111','112','113','103','104','105','106')
                            AND inaj020 = xcce006
                        )
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xcce_tmp SET xcce301"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF
         
         #本月无入库,则结转至xcce304
         UPDATE xcce_tmp SET xcce303  = xcce303  + xcce901 * -1,
                             xcce304  = xcce304  + xcce902 * -1,
                             xcce304a = xcce304a + xcce902a * -1,
                             xcce304b = xcce304b + xcce902b * -1,
                             xcce304c = xcce304c + xcce902c * -1,
                             xcce304d = xcce304d + xcce902d * -1,
                             xcce304e = xcce304e + xcce902e * -1,
                             xcce304f = xcce304f + xcce902f * -1,
                             xcce304g = xcce304g + xcce902g * -1,
                             xcce304h = xcce304h + xcce902h * -1
          WHERE xcce001 = p_seq
            #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
            #AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
            #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
            #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
            #                    AND xccdent = sfaaent    #add 150916
            #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
            #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )  
            AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
                              WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
                                AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date )  
            #mod zhangllc 160528 SBS4--e 
            AND NOT EXISTS ( SELECT 1 FROM inaj_tmp   #无入库
                          WHERE inaj036 IN ('110','111','112','113','103','104','105','106')
                            AND inaj020 = xcce006
                            )
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xcce_tmp SET xcce303"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF
      #add zhangllc 160527 SBS2--s
      ELSE #本月无入库的在制差异转入主件当期入库='Y'
         #将本月无入库的部分写入一笔新的xcck
         #根据xcck012单据类型='DIFF'可以判断为调整的，或者根据xcck055判断
         LET g_sql = "INSERT INTO xcck_tmp ",                                         
                    #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,",  #Mod zhangllc SBS7 xccksite存入sfacsite #161114-00003#1 mark
                     #                           企业编号 site组织 法人组织 账套 账套本位币顺序 
                     #" SELECT /*+ PARALLEL(4) */ xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,",                       #161114-00003#1 add  #170110-00028#1                    
                     #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,",          #170110-00028#1     #180910-00065#1 mark                 
                     " SELECT xcceent,sfaa_tmp.sfaasite,xccecomp,xcceld,xcce001,",      #180910-00065#1
                     #        成本域  成本计算类型 年度 期别 
                     "        xcce002,xcce003,xcce004,xcce005, ",
                     #        参考单号 项次                                    #参考单号=工单单号 项次为同个工单+1
                     #171114-00019#1---mod---s
                     #"        xccd006 ,(ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 )), ",
                     "        xccd006 ,(ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 ))+ ",
                     "        NVL((SELECT MAX(xcck007) FROM xcck_tmp ",
                     "              WHERE xcckent=xcceent AND xcckld=xcceld AND xcck001=xcce001 AND xcck002=xcce002",
                     "                AND xcck003=xcce003 AND xcck004=xcce004 AND xcck005=xcce005 ",
                     "                AND xcck006=xcce006 AND xcck008=0 AND xcck009=1 AND xcck012='DIFF'),0) xcck007,",
                     #171114-00019#1---mod---e 
                     #        项序 出入库码  料号
                     "        0   ,1       ,xccd007, ",
                     #特性：不能直接用xccd008，xccd上是不存特征的，肯定是空格，但实际工单上的主件不一定是有空格的，都有特征，那这样写入xcck后，最后汇总到xccc时，特征就会匹配不到，这部分也就会计入不到xccc中
                     #              所以需再关联sfac_tmp去获取一个特征,用sfac006。尽量关联相同成本阶的那个特征
                     #      再如果工单有多产出主件，则只要抓一笔就行了，这部分差异转出的部分只要有个主件认领就可以了
                     #"        sfac_tmp.sfac006, ", #180910-00065#1 mark
                     "        sfaa_tmp.sfaa011, ", #180910-00065#1
                     #        单据类型 单据日期 时间 仓库 储位                  #单据类型xcck012='DIFF'
                     #"        'DIFF' ,''      ,'' ,' ' ,' ' ,  ",    #200708-00088#1 mark
                     "        'DIFF' ,NULL    ,'' ,' ' ,' ' ,  ",    #200708-00088#1 add
                     #        批号    异动类型  原因码 交易对象 客群
                     "        xccd009,'1100'  ,' '   ,' '    ,' ',  ",        #xcck020异动类型='1100'本月无入库差异转出的类型
                     #        区域 成本中心 经营类别 渠道 品类
                     "        ' ' ,' '     ,' '     ,' ' ,' '  ,  ",
                     #        品牌              项目号 WBS 存货科目 费用成本科目
                     "        nvl(imaa126,' '),' '   ,' ',' '     ,' '         ,  ",
                     #        收入科目 交易币种 本位币种   汇率  交易单位            
                     "        ' '    ,xccd011,xccd011,1      ,imaa006,  ",
                     #        成本单位 换算率 交易数量 工单号码 重复性生产-计划编号        
                     "        imaa006 ,1    ,0      ,xccd006,' '    ,  ",
                     #        重复性生产-生产料号 BOM特性 产品特征
                     "        ' '              ,' '    ,' '    ,  ",
                     #        xccc类型                                                                                              本期异动数量
                     #"        CASE '",p_flag,"' WHEN 'Y' THEN '2090' ELSE '2050' END IF, 0, ",   #xcck055异动类型=本月无入库差异转出的类型 '2050'一般工单 '2090'重工工单  #本期异动数量=0
                     #"        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END IF, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型  #200708-00088#1 mark
                     "        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END , 0, ",     #mod zhangllc 160608 SBS2 增加2030返工入库类型  #200708-00088#1 add
                     #        本期异动数量金额    
                     "        xcce902,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h, ",
                     #        本期异动单价        
                     "        xcce902,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h,   ",
                     #        已耗数量金额          结存数量金额          结存单位成本        结存调整金额
                     "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, ",
                     #        资料所有者      部门         录入者       部门  创建日 更改者 最近更改日 状态码
                     #"        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"','','','','Y', ",       #200708-00088#1 mark
                     "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"',NULL,'',NULL,'Y', ",     #200708-00088#1 add
                     #        自定义字段
                     #"        '','','','','','','','','','','','','','','', ",    #200708-00088#1 mark
                     "        '','','','','','','','','','',0,0,0,0,0, ",          #200708-00088#1 add
                     #"        '','','','','','','','','','','','','','','', ",    #200708-00088#1 mark
                     "        0,0,0,0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, ",    #200708-00088#1-add
                     "        '',",    #成本代销单号  160509-00004#76
                     "        ' ' ",   #库存管理特征 for xccq use
                     
                     #mod zhangllc 160608 SBS2--s 增加2030类型
                     #"    FROM xcce_tmp LEFT OUTER JOIN imaa_t ON imaaent = xcceent AND imaa001 = xcce007,xccd_tmp, ",
                     #"         (SELECT * ",
                     #"            FROM ( SELECT sfacdocno,sfacsite,sfac001,sfac006,clevel,ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) num FROM sfac_tmp WHERE clevel =",p_xcbb006,") a ",  #mod zhangllc SBS7 add sfacsite
                     #"           WHERE num=1   ) sfac_tmp ",
                     #"   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce002=xccd002 AND xcce003=xccd003 ",
                     #"     AND xcce004 = xccd004 AND xcce005=xccd005 AND xcce006=xccd006 ",
                     #"     AND sfacdocno = xccd006 AND sfac001=xccd007 ",  #关联sfac_tmp
                     #"     AND xcce001 ='",p_seq,"' ",
                     ##mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
                     ##"     AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp ",
                     ##"                       WHERE xccd007 = imaa001   AND xcbb006 = ",p_xcbb006,
                     ###"                         AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
                     ##"                         AND xccdent = sfaaent   ", #add 150916
                     ##"                         AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"' ",
                     ##"                         AND sfaa048 >= '",g_bdate,"'  AND sfaa048 < '",l_date,"' ) ",  
                     #"     AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp ",
                     #"                       WHERE xccd006 = sfacdocno AND clevel = ",p_xcbb006,
                     #"                         AND xccdent = sfaaent  AND xccd006 = sfaadocno AND sfaa042 = '",p_flag,"' ",
                     #"                         AND sfaa048 >= '",g_bdate,"'  AND sfaa048 < '",l_date,"' ) ",  
                     ##mod zhangllc 160528 SBS4--e
                     #"     AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
                     #"                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
                     #"                     AND inaj020 = xcce006 ",
                     #"                     ) "
                     #"    FROM xcce_tmp LEFT OUTER JOIN imaa_t ON imaaent = xcceent AND imaa001 = xcce007,xccd_tmp, ",  #191205-00053#1 mark
                     "    FROM xcce_tmp,xccd_tmp LEFT OUTER JOIN imaa_t ON imaaent = xccdent AND imaa001 = xccd007, ",  #191205-00053#1
                     #180910-00065#1---mark---s
                     #"         (SELECT * ",
                     #"            FROM ( SELECT sfacdocno,sfacsite,sfac001,sfac006,clevel,ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) num FROM sfac_tmp WHERE clevel =",p_xcbb006,") a ",  #mod zhangllc SBS7 add sfacsite
                     #"           WHERE num=1 ",
                     #"         ) sfac_tmp, ",
                     #180910-00065#1---mark---e
                     #190411-00017#1 A mark-S
#                     "         (SELECT sfaa_tmp.* FROM sfaa_tmp,sfac_tmp2 ",
#                     "           WHERE sfaaent = ",g_enterprise,
#                     "             AND sfaadocno=sfacdocno ",
#                     "             AND clevel= ",p_xcbb006,
#                     "             AND sfaa042 = '",p_flag,"' ",
#                     "             AND sfaa048 >= '",g_bdate,"'  AND sfaa048 < '",l_date,"'  ",  
#                     "          ) sfaa_tmp ",
                     #190411-00017#1 A mark-E
                     #190411-00017#1 A add-S
                     "         (SELECT sfaa_tmp.* FROM sfaa_tmp ",
                     "           WHERE sfaaent = ",g_enterprise,
                     "             AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfaadocno = sfacdocno AND clevel = ",p_xcbb006,") ",
                     "             AND sfaa042 = '",p_flag,"' ",
                     "             AND sfaa048 >= '",g_bdate,"'  AND sfaa048 < '",l_date,"'  ",  
                     "          ) sfaa_tmp ",
                     #190411-00017#1 A add-E
                     #"   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce002=xccd002 AND xcce003=xccd003 ", #171228-00050#1 mark
                     "   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce003=xccd003 ", #171228-00050#1 add
                     "     AND xcce004 = xccd004 AND xcce005=xccd005 AND xcce006=xccd006 ",
                     #"     AND sfacdocno = xccd006 AND sfac001=xccd007 ",  #关联sfac_tmp #180910-00065#1 mark
                     "     AND xcce001 ='",p_seq,"' ",
                     "     AND xcceent = sfaaent AND xcce006 = sfaadocno ", #关联sfaa_tmp  
                     #"     AND xcce902 != 0 ",   #170513-00005#1 add  #200604-00071#1 mark
                     "     AND (xcce902<>0 OR xcce902a<>0 OR xcce902b<>0 OR xcce902c<>0 OR xcce902d<>0 OR xcce902e<>0 OR xcce902f<>0 OR xcce902g<>0 OR xcce902h<>0)",   #200604-00071#1
                     "     AND sfaa003 <> '4' ", ##180320-00059#1 add
                     #180918-00031#1---mark---s
                     #前面已经增加171114-00019这个单的处理,此处的判断已经可以拿掉
                     ##170825-00011#1 add start -----
                     #"     AND NOT EXISTS (SELECT 1 FROM xcck_tmp ",
                     #"                       WHERE xcckent = xcceent AND xcckld = xcceld   ",
                     #"                         AND xcck001 = xcce001 AND xcck002 = xcce002 ",
                     #"                         AND xcck003 = xcce003 AND xcck004 = xcce004 ",
                     #"                         AND xcck005 = xcce005 AND xcck006 = xcce006 ",
                     #"                         AND xcck008 = 0 AND xcck009 = 1 AND xcck012 = 'DIFF' )",
                     ##170825-00011#1 add end   -----  
                     #180918-00031#1---mark---e                     
                     "     AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
                     "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
                     "                     AND inaj020 = xcce006 ",
                     "                     ) "
                     #mod zhangllc 160608--e
         PREPARE s_axcp500_avg1_wip_4_2_p10 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p10"
            LET g_errparam.popup  = TRUE
            CALL cl_err()     
         END IF 


         EXECUTE s_axcp500_avg1_wip_4_2_p10
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p10"
            LET g_errparam.popup  = TRUE
            CALL cl_err()      
         END IF


#180918-00031#1---mark---s
#此处处理的情境:期初 数量10  金额 20
#          当期 退料 数量10 金额 18 (当期成本单价低)
#这样会存在差异,期末有结存金额 2,此时结案应该是在上面s_axcp500_avg1_wip_4_2_p10中处理掉
#而此处的逻辑增加是因为#180131-00016#1这个单的处理不完善,现在已经完善,所以现在此处可以mark了
#       #-----------------------180320-00059#1 add--------------
#         #将本月无入库且有報廢且工單結案，的部分写入一笔新的xcck
#         #根据xcck012单据类型='DIFF'可以判断为调整的，或者根据xcck055判断
#         LET g_sql = "INSERT INTO xcck_tmp ",
#                     #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,",  #180910-00065#1 mark                    
#                     " SELECT xcceent,sfaa_tmp.sfaasite,xccecomp,xcceld,xcce001,",   #180910-00065#1
#                     "        xcce002,xcce003,xcce004,xcce005, ",
#                     "        xccd006 ,(ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 ))+ ",
#                     "        NVL((SELECT MAX(xcck007) FROM xcck_tmp ",
#                     "              WHERE xcckent=xcceent AND xcckld=xcceld AND xcck001=xcce001 AND xcck002=xcce002",
#                     "                AND xcck003=xcce003 AND xcck004=xcce004 AND xcck005=xcce005 ",
#                     "                AND xcck006=xcce006 AND xcck008=0 AND xcck009=1 AND xcck012='DIFF'),0) xcck007,",
#                     "        0   ,1       ,xccd007, ",
#                     #"        sfac_tmp.sfac006, ", #180910-00065#1  mark
#                     "        sfaa_tmp.sfaa011, ",  #180910-00065#1
#                     "        'DIFF' ,''      ,'' ,' ' ,' ' ,  ",
#                     "        xccd009,'1100'  ,' '   ,' '    ,' ',  ",        #xcck020异动类型='1100'本月无入库差异转出的类型
#                     "        ' ' ,' '     ,' '     ,' ' ,' '  ,  ",
#                     "        nvl(imaa126,' '),' '   ,' ',' '     ,' '         ,  ",
#                     "        ' '    ,xccd011,xccd011,1      ,imaa006,  ",
#                     "        imaa006 ,1    ,0      ,xccd006,' '    ,  ",
#                     "        ' '              ,' '    ,' '    ,  ",
#                     "        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END IF, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型
#                     "        xcce302*-1,xcce302a*-1,xcce302b*-1,xcce302c*-1,xcce302d*-1,xcce302e*-1,xcce302f*-1,xcce202g*-1,xcce302h*-1, ",
#                     "        xcce302*-1,xcce302a*-1,xcce302b*-1,xcce302c*-1,xcce302d*-1,xcce302e*-1,xcce302f*-1,xcce202g*-1,xcce302h*-1, ",
#                     "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, ",
#                     "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"','','','','Y', ",
#                     "        '','','','','','','','','','','','','','','', ",
#                     "        '','','','','','','','','','','','','','','', ",
#                     "        '',",    #成本代销单号 
#                     "        ' ' ",   #库存管理特征 for xccq use
#                     "    FROM xcce_tmp LEFT OUTER JOIN imaa_t ON imaaent = xcceent AND imaa001 = xcce007,xccd_tmp, ",
#                     #180910-00065#1---mark---s
#                     #"         (SELECT * ",
#                     #"            FROM ( SELECT sfacdocno,sfacsite,sfac001,sfac006,clevel,ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) num FROM sfac_tmp WHERE clevel =",p_xcbb006,") a ",
#                     #"           WHERE num=1 ",
#                     #"         ) sfac_tmp, ",
#                     #180910-00065#1---mark---e
#                     "         (SELECT sfaa_tmp.* FROM sfaa_tmp,sfac_tmp2 ",
#                     "           WHERE sfaaent = ",g_enterprise,
#                     "             AND sfaadocno=sfacdocno ",
#                     "             AND clevel= ",p_xcbb006,
#                     "             AND sfaa042 = '",p_flag,"' ",
#                     "             AND sfaa048 >= '",g_bdate,"'  AND sfaa048 < '",l_date,"'  ",
#                     "          ) sfaa_tmp ",
#                     "   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce002=xccd002 AND xcce003=xccd003 ",
#                     "     AND xcce004 = xccd004 AND xcce005=xccd005 AND xcce006=xccd006 ",
#                     #"     AND sfacdocno = xccd006 AND sfac001=xccd007 ",  #关联sfac_tmp  #180910-00065#1 mark
#                     "     AND xcce001 ='",p_seq,"' ",
#                     "     AND xcceent = sfaaent AND xcce006 = sfaadocno ", #关联sfaa_tmp
#                     "     AND sfaa003 <> '4' ",
#                     #"     AND xcce902=0 AND xcce302 !=0 ",  #180507-00051#1 mark
#                     "     AND xcce302 !=0 ",  #180507-00051#1 add
#                     "     AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
#                     "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
#                     "                     AND inaj020 = xcce006 ",
#                     "                     ) "
#         PREPARE s_axcp500_avg1_wip_4_2_p99 FROM g_sql
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code   = SQLCA.sqlcode
#            LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_4_2_p99"
#            LET g_errparam.popup  = TRUE
#            CALL cl_err()
#         END IF
#         EXECUTE s_axcp500_avg1_wip_4_2_p99
#         IF SQLCA.sqlcode THEN
#            INITIALIZE g_errparam TO NULL
#            LET g_errparam.code   = SQLCA.sqlcode
#            LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_4_2_p99"
#            LET g_errparam.popup  = TRUE
#            CALL cl_err()
#         END IF
#        #-----------------------180320-00059#1 End---------------------------------
#180918-00031#1---mark---e

         #不管本月有无入库,全结转至xcce302
         UPDATE xcce_tmp SET xcce301  = xcce301  + xcce901 * -1,
                             xcce302  = xcce302  + xcce902 * -1,
                             xcce302a = xcce302a + xcce902a * -1,
                             xcce302b = xcce302b + xcce902b * -1,
                             xcce302c = xcce302c + xcce902c * -1,
                             xcce302d = xcce302d + xcce902d * -1,
                             xcce302e = xcce302e + xcce902e * -1,
                             xcce302f = xcce302f + xcce902f * -1,
                             xcce302g = xcce302g + xcce902g * -1,
                             xcce302h = xcce302h + xcce902h * -1
          WHERE xcce001 = p_seq
            #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
            #AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
            #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
            #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
            #                    AND xccdent = sfaaent    #add 150916
            #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
            #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #190411-00017#1 A mark-S
#            AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                              WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
#                                AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #190411-00017#1 A mark-E
            #190411-00017#1 A add-S
            AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp
                              WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                                AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date))
            #190411-00017#1 A add-E
            #mod zhangllc 160528 SBS4--e
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xcce_tmp SET xcce301"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF
       
      END IF
      #add zhangllc 160527 SBS2--e
   ELSE
      UPDATE xcce_tmp SET xcce303  = xcce303  + xcce901 * -1,
                          xcce304  = xcce304  + xcce902 * -1,
                          xcce304a = xcce304a + xcce902a * -1,
                          xcce304b = xcce304b + xcce902b * -1,
                          xcce304c = xcce304c + xcce902c * -1,
                          xcce304d = xcce304d + xcce902d * -1,
                          xcce304e = xcce304e + xcce902e * -1,
                          xcce304f = xcce304f + xcce902f * -1,
                          xcce304g = xcce304g + xcce902g * -1,
                          xcce304h = xcce304h + xcce902h * -1
       WHERE xcce001 = p_seq
         #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
         #AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
         #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
         #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
         #                    AND xccdent = sfaaent    #add 150916
         #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
         #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
         #190411-00017#1 A mark-S
#         AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                           WHERE xccd006 = sfacdocno   AND clevel = p_xcbb006
#                             AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                             AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
         #190411-00017#1 A mark-E
         #mod zhangllc 160528 SBS4--e
         #190411-00017#1 A add-S
         AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp
                           WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                             AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date))
         #190411-00017#1 A add-E
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcce_tmp SET xcce303"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF                             
   END IF
   
   #170316-00053#2--add-s
   #判斷該工單是研發工單時，將入庫轉出的數量金額，轉到差異轉出上
   UPDATE xcce_tmp SET xcce304  = xcce304  + xcce302 ,
                       xcce304a = xcce304a + xcce302a,
                       xcce304b = xcce304b + xcce302b,
                       xcce304c = xcce304c + xcce302c,
                       xcce304d = xcce304d + xcce302d,
                       xcce304e = xcce304e + xcce302e,
                       xcce304f = xcce304f + xcce302f,
                       xcce304g = xcce304g + xcce302g,
                       xcce304h = xcce304h + xcce302h,
                       xcce302  = 0,
                       xcce302a = 0,
                       xcce302b = 0,
                       xcce302c = 0,
                       xcce302d = 0,
                       xcce302e = 0,
                       xcce302f = 0,
                       xcce302g = 0,
                       xcce302h = 0
    WHERE xcce001 = p_seq  
      #190411-00017#1 A mark-S
#      AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                        WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
#                          AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                          AND sfaa003 = '4' )  #研发工单
      #190411-00017#1 A mark-E
      #190411-00017#1 A add-S
      AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp
                        WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                          AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa003 = '4'))
      #190411-00017#1 A add-E
     #------------------180320-00059#1 mark str                     
      #AND EXISTS ( SELECT 1 FROM inaj_tmp   #无入库
      #              WHERE inaj036 IN ('110','111','112','113','103','104','105','106')
      #                AND inaj020 = xcce006
      #                )
     #------------------180320-00059#1 mark end    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce303"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF

   #170316-00053#2--add-e   
   
   UPDATE xcce_tmp SET xcce901  = 0,
                       xcce902  = 0,
                       xcce902a = 0,
                       xcce902b = 0,
                       xcce902c = 0,
                       xcce902d = 0,
                       xcce902e = 0,
                       xcce902f = 0,
                       xcce902g = 0,
                       xcce902h = 0
    WHERE xcce001 = p_seq
      #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
      #AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
      #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
      #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730  xccd不存特征的
      #                    AND xccdent = sfaaent    #add 150916
      #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
      #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
      #190411-00017#1 A mark-S
#      AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                        WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
#                          AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                          AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
      #190411-00017#1 A mark-E
      #190411-00017#1 A add-S
      AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp
                        WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                          AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date))
      #190411-00017#1 A add-E
      #mod zhangllc 160528 SBS4--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF      
   
   IF g_sys_6008 = 'Y' THEN
      IF g_sys_6022 = 'N' THEN  #本月无入库的在制差异转入主件当期入库='N' #add zhangllc 160527 SBS2
         #本月有入库,则结转至xccz301
         UPDATE xccz_tmp SET xccz301  = xccz301 + xccz901 * -1
          WHERE xccz001 = p_seq
            #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
            #AND xccz006 IN  ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
            #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
            #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
            #                    AND xccdent = sfaaent    #add 150916
            #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
            #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #190411-00017#1 A mark-S
#            AND xccz006 IN  ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                              WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
#                                AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #190411-00017#1 A mark-E
            #mod zhangllc 160528 SBS4--e
            #190411-00017#1 A add-S   

#201216-00043#1 mark 不過濾 不為 0 的 值  ---s
#&ifdef is_pgs
#            AND xccz901 <> 0 #201012-00066#1 add
#&endif     
#201216-00043#1 mark 不過濾 不為 0 的 值  ---e

            AND xccz006 IN ( SELECT xccd006 FROM xccd_tmp
                              WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                                AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date))
            #190411-00017#1 A add-E
            AND EXISTS ( SELECT 1 FROM inaj_tmp   #有入库
                          WHERE inaj036 IN ('110','111','112','113','103','104','105','106')
                            AND inaj020 = xccz006
                       )             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xccz_tmp SET xccz301"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF  
         
         #本月无入库,则结转至xccz303
         UPDATE xccz_tmp SET xccz303  = xccz901 * -1
          WHERE xccz001 = p_seq
            #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
            #AND xccz006 IN  ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
            #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
            #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
            #                    AND xccdent = sfaaent    #add 150916
            #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
            #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #190411-00017#1 A mark-S
#            AND xccz006 IN  ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                              WHERE xccd006 = sfacdocno   AND clevel = p_xcbb006
#                                AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #190411-00017#1 A mark-E
            #190411-00017#1 A add-S

#201216-00043#1 mark 不過濾 不為 0 的 值  ---s
#&ifdef is_pgs
#            AND xccz901 <> 0 #201012-00066#1 add
#&endif
#201216-00043#1 mark 不過濾 不為 0 的 值  ---e

            AND xccz006 IN ( SELECT xccd006 FROM xccd_tmp
                              WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                                AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date))
            #190411-00017#1 A add-E
            #mod zhangllc 160528 SBS4--e
            AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  #无入库
                              WHERE inaj036 IN ('110','111','112','113','103','104','105','106')
                                AND inaj020 = xccz006
                            )
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xccz_tmp SET xccz303"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF
      #add zhangllc 160527 SBS2--s
      ELSE #本月无入库的在制差异转入主件当期入库='Y'
         #不管本月有无入库,全结转至xcce302
         UPDATE xccz_tmp SET xccz301  = xccz301 + xccz901 * -1
          WHERE xccz001 = p_seq
            #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
            #AND xccz006 IN  ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
            #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
            #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
            #                    AND xccdent = sfaaent    #add 150916
            #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
            #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #190411-00017#1 A mark-S
#            AND xccz006 IN  (SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                              WHERE xccd006 = sfacdocno   AND clevel = p_xcbb006
#                                AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
            #190411-00017#1 A mark-E
            #190411-00017#1 A add-S
            AND xccz006 IN ( SELECT xccd006 FROM xccd_tmp
                              WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                                AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date))
            #190411-00017#1 A add-E
            #mod zhangllc 160528 SBS4--e
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xcce_tmp SET xcce301"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF
      END IF
      #add zhangllc 160527 SBS2--e
   ELSE
      UPDATE xccz_tmp SET xccz303  = xccz901 * -1
       WHERE xccz001 = p_seq
         #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
         #AND xccz006 IN  ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
         #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
         #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
         #                    AND xccdent = sfaaent    #add 150916
         #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
         #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
         #190411-00017#1 A mark-S
#         AND xccz006 IN  (SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                           WHERE xccd006 = sfacdocno  AND clevel = p_xcbb006
#                             AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                             AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
         #190411-00017#1 A mark-E
         #190411-00017#1 A add-S

#201216-00043#1 mark 不過濾 不為 0 的 值  ---s
#&ifdef is_pgs
#         AND xccz901 <> 0 #201012-00066#1 add
#&endif
#201216-00043#1 mark 不過濾 不為 0 的 值  ---e

         AND xccz006 IN ( SELECT xccd006 FROM xccd_tmp
                           WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                             AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date))
         #190411-00017#1 A add-E
         #mod zhangllc 160528 SBS4--e
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xccz_tmp SET xccz303"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF
   END IF    
   
   UPDATE xccz_tmp SET xccz901  = 0
    WHERE xccz001 = p_seq
      #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
      #AND xccz006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp,sfaa_tmp
      #                  WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
      #                    #AND xccd008 = xccc007  #特征 add zhangllc 150730 xccd不存特征的
      #                    AND xccdent = sfaaent    #add 150916
      #                    AND xccd006 = sfaadocno AND sfaa042 = p_flag
      #                    AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
      #190411-00017#1 A mark-S
#      AND xccz006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                        WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
#                          AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                          AND sfaa048 >= g_bdate  AND sfaa048 < l_date )
      #190411-00017#1 A mark-E
      #190411-00017#1 A add-S


      AND xccz006 IN ( SELECT xccd006 FROM xccd_tmp
                        WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xccd006 = sfacdocno AND clevel = p_xcbb006)
                          AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date))
      #190411-00017#1 A add-E
      #mod zhangllc 160528 SBS4--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccz_tmp SET xccz901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF      

   
   LET r_success = TRUE
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - xccd = SUM(xcce) 
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_5(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_5(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()
   
   #SBS3 增加xcce006索引
   #xccd = SUM(xcce)
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp ",
               "       USING (SELECT xcce006,   ",
               "                 SUM(xcce102)  xcce102,                                            ",   #期初
               "                 SUM(xcce102a) xcce102a,SUM(xcce102b) xcce102b,SUM(xcce102c) xcce102c,SUM(xcce102d) xcce102d, ",
               "                 SUM(xcce102e) xcce102e,SUM(xcce102f) xcce102f,SUM(xcce102g) xcce102g,SUM(xcce102h) xcce102h, ",
               "                 SUM(xcce202) +SUM(xcce206) +SUM(xcce208) +SUM(xcce210)  xcce202 , ",   #本期投入
               "                 SUM(xcce202a)+SUM(xcce206a)+SUM(xcce208a)+SUM(xcce210a) xcce202a, ",
               "                 SUM(xcce202b)+SUM(xcce206b)+SUM(xcce208b)+SUM(xcce210b) xcce202b, ",
               "                 SUM(xcce202c)+SUM(xcce206c)+SUM(xcce208c)+SUM(xcce210c) xcce202c, ",
               "                 SUM(xcce202d)+SUM(xcce206d)+SUM(xcce208d)+SUM(xcce210d) xcce202d, ",
               "                 SUM(xcce202e)+SUM(xcce206e)+SUM(xcce208e)+SUM(xcce210e) xcce202e, ",
               "                 SUM(xcce202f)+SUM(xcce206f)+SUM(xcce208f)+SUM(xcce210f) xcce202f, ",
               "                 SUM(xcce202g)+SUM(xcce206g)+SUM(xcce208g)+SUM(xcce210g) xcce202g, ",
               "                 SUM(xcce202h)+SUM(xcce206h)+SUM(xcce208h)+SUM(xcce210h) xcce202h, ", 
               "                 SUM(xcce302) xcce302,                                             ",   #本期转出
               "                 SUM(xcce302a) xcce302a,SUM(xcce302b) xcce302b,SUM(xcce302c) xcce302c,SUM(xcce302d) xcce302d, ",
               "                 SUM(xcce302e) xcce302e,SUM(xcce302f) xcce302f,SUM(xcce302g) xcce302g,SUM(xcce302h) xcce302h, ",  
               "                                                                          ",
               "                 SUM(xcce304)+SUM(xcce308) xcce304,                               ",   #差异转出
               "                 SUM(xcce304a)+SUM(xcce308a) xcce304a,SUM(xcce304b)+SUM(xcce308b) xcce304b, ",
               "                 SUM(xcce304c)+SUM(xcce308c) xcce304c,SUM(xcce304d)+SUM(xcce308d) xcce304d, ",
               "                 SUM(xcce304e)+SUM(xcce308e) xcce304e,SUM(xcce304f)+SUM(xcce308f) xcce304f, ",
               "                 SUM(xcce304g)+SUM(xcce308g) xcce304g,SUM(xcce304h)+SUM(xcce308h) xcce304h, ",
               "                                                                          ",
               "                 SUM(xcce902)  xcce902,                                            ",   #期末结余
               "                 SUM(xcce902a) xcce902a,SUM(xcce902b) xcce902b,SUM(xcce902c) xcce902c,SUM(xcce902d) xcce902d, ",
               "                 SUM(xcce902e) xcce902e,SUM(xcce902f) xcce902f,SUM(xcce902g) xcce902g,SUM(xcce902h) xcce902h  ",             
               "                FROM xcce_tmp     ",                         
               "                GROUP BY xcce006 ",
               "                ) b ",
               "          ON ( xccdent = ",g_enterprise,
               "         AND   xccdld  = '",g_ld,"'",
               "         AND   xccd001 = '",p_seq,"'",
               "         AND   xccd003 = '",g_xcat001,"'",
               "         AND   xccd004 = ",g_yy,
               "         AND   xccd005 = ",g_pp,
               "         AND   xccd006 = b.xcce006  ",       #工单
               #mod zhangllc 150730 --begin
               #" ) ",  #mark SBS3
               
               #"         AND   xccd007 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccd007,xccd008) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND xccd006 IN (SELECT sfacdocno FROM sfac_tmp2 WHERE clevel=",p_xcbb006,")) ", #150804
               #mod zhangllc 150730 --end
               #add zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
               "          AND EXISTS (SELECT 1 FROM sfac_tmp2 ",
               "                       WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006 ",
               "                         AND sfac_tmp2.clevel   = ",p_xcbb006,") ) ",
               #add zhangllc 160528 SBS4--e SBS3增加此段可提高效能
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccd102  = nvl(b.xcce102 ,0) , xccd102a = nvl(b.xcce102a,0), xccd102b = nvl(b.xcce102b,0), xccd102c = nvl(b.xcce102c,0),  ",
               "                xccd102d = nvl(b.xcce102d,0) , xccd102e = nvl(b.xcce102e,0), xccd102f = nvl(b.xcce102f,0), xccd102g = nvl(b.xcce102g,0),  ",
               "                xccd102h = nvl(b.xcce102h,0) ,   ",  
               "                xccd202  = nvl(b.xcce202 ,0) , xccd202a = nvl(b.xcce202a,0), xccd202b = nvl(b.xcce202b,0), xccd202c = nvl(b.xcce202c,0),  ",
               "                xccd202d = nvl(b.xcce202d,0) , xccd202e = nvl(b.xcce202e,0), xccd202f = nvl(b.xcce202f,0), xccd202g = nvl(b.xcce202g,0),  ",
               "                xccd202h = nvl(b.xcce202h,0) ,   ",  
               "                xccd302  = nvl(b.xcce302 ,0) , xccd302a = nvl(b.xcce302a,0), xccd302b = nvl(b.xcce302b,0), xccd302c = nvl(b.xcce302c,0),  ",
               "                xccd302d = nvl(b.xcce302d,0) , xccd302e = nvl(b.xcce302e,0), xccd302f = nvl(b.xcce302f,0), xccd302g = nvl(b.xcce302g,0),  ",
               "                xccd302h = nvl(b.xcce302h,0) ,   ",  
               "                xccd304  = nvl(b.xcce304 ,0) , xccd304a = nvl(b.xcce304a,0), xccd304b = nvl(b.xcce304b,0), xccd304c = nvl(b.xcce304c,0),  ",
               "                xccd304d = nvl(b.xcce304d,0) , xccd304e = nvl(b.xcce304e,0), xccd304f = nvl(b.xcce304f,0), xccd304g = nvl(b.xcce304g,0),  ",
               "                xccd304h = nvl(b.xcce304h,0) ,   ",  
               "                xccd902  = nvl(b.xcce902 ,0) , xccd902a = nvl(b.xcce902a,0), xccd902b = nvl(b.xcce902b,0), xccd902c = nvl(b.xcce902c,0),  ",
               "                xccd902d = nvl(b.xcce902d,0) , xccd902e = nvl(b.xcce902e,0), xccd902f = nvl(b.xcce902f,0), xccd902g = nvl(b.xcce902g,0),  ",
               "                xccd902h = nvl(b.xcce902h,0)     "  
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_5_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_5_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_5_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_5_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   #161019-00039#1-s-add   
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xccd_tmp SET xccd102  = round(xccd102 ,? ), xccd102a = round(xccd102a,? ), xccd102b = round(xccd102b,? ), ",
                         "                    xccd102c = round(xccd102c,? ), xccd102d = round(xccd102d,? ), xccd102e = round(xccd102e,? ), ",
                         "                    xccd102f = round(xccd102f,? ), xccd102g = round(xccd102g,? ), xccd102h = round(xccd102h,? ), ",
                         "                    xccd202  = round(xccd202 ,? ), xccd202a = round(xccd202a,? ), xccd202b = round(xccd202b,? ), ",
                         "                    xccd202c = round(xccd202c,? ), xccd202d = round(xccd202d,? ), xccd202e = round(xccd202e,? ), ",
                         "                    xccd202f = round(xccd202f,? ), xccd202g = round(xccd202g,? ), xccd202h = round(xccd202h,? ), ",
                         "                    xccd302  = round(xccd302 ,? ), xccd302a = round(xccd302a,? ), xccd302b = round(xccd302b,? ), ",
                         "                    xccd302c = round(xccd302c,? ), xccd302d = round(xccd302d,? ), xccd302e = round(xccd302e,? ), ",
                         "                    xccd302f = round(xccd302f,? ), xccd302g = round(xccd302g,? ), xccd302h = round(xccd302h,? ), ",                         
                         "                    xccd304  = round(xccd304 ,? ), xccd304a = round(xccd304a,? ), xccd304b = round(xccd304b,? ), ",
                         "                    xccd304c = round(xccd304c,? ), xccd304d = round(xccd304d,? ), xccd304e = round(xccd304e,? ), ",
                         "                    xccd304f = round(xccd304f,? ), xccd304g = round(xccd304g,? ), xccd304h = round(xccd304h,? ), ",                           
                         "                    xccd902  = round(xccd902 ,? ), xccd902a = round(xccd902a,? ), xccd902b = round(xccd902b,? ), ",
                         "                    xccd902c = round(xccd902c,? ), xccd902d = round(xccd902d,? ), xccd902e = round(xccd902e,? ), ",
                         "                    xccd902f = round(xccd902f,? ), xccd902g = round(xccd902g,? ), xccd902h = round(xccd902h,? )  "                         

        WHEN '3'   #無條件件截位
             LET g_sql = "UPDATE xccd_tmp SET xccd102  = trunc(xccd102 ,? ), xccd102a = trunc(xccd102a,? ), xccd102b = trunc(xccd102b,? ), ",
                         "                    xccd102c = trunc(xccd102c,? ), xccd102d = trunc(xccd102d,? ), xccd102e = trunc(xccd102e,? ), ",
                         "                    xccd102f = trunc(xccd102f,? ), xccd102g = trunc(xccd102g,? ), xccd102h = trunc(xccd102h,? ), ",
                         "                    xccd202  = trunc(xccd202 ,? ), xccd202a = trunc(xccd202a,? ), xccd202b = trunc(xccd202b,? ), ",
                         "                    xccd202c = trunc(xccd202c,? ), xccd202d = trunc(xccd202d,? ), xccd202e = trunc(xccd202e,? ), ",
                         "                    xccd202f = trunc(xccd202f,? ), xccd202g = trunc(xccd202g,? ), xccd202h = trunc(xccd202h,? ), ",
                         "                    xccd302  = trunc(xccd302 ,? ), xccd302a = trunc(xccd302a,? ), xccd302b = trunc(xccd302b,? ), ",
                         "                    xccd302c = trunc(xccd302c,? ), xccd302d = trunc(xccd302d,? ), xccd302e = trunc(xccd302e,? ), ",
                         "                    xccd302f = trunc(xccd302f,? ), xccd302g = trunc(xccd302g,? ), xccd302h = trunc(xccd302h,? ), ", 
                         "                    xccd304  = trunc(xccd304 ,? ), xccd304a = trunc(xccd304a,? ), xccd304b = trunc(xccd304b,? ), ",
                         "                    xccd304c = trunc(xccd304c,? ), xccd304d = trunc(xccd304d,? ), xccd304e = trunc(xccd304e,? ), ",
                         "                    xccd304f = trunc(xccd304f,? ), xccd304g = trunc(xccd304g,? ), xccd304h = trunc(xccd304h,? ), ",                          
                         "                    xccd902  = trunc(xccd902 ,? ), xccd902a = trunc(xccd902a,? ), xccd902b = trunc(xccd902b,? ), ",
                         "                    xccd902c = trunc(xccd902c,? ), xccd902d = trunc(xccd902d,? ), xccd902e = trunc(xccd902e,? ), ",
                         "                    xccd902f = trunc(xccd902f,? ), xccd902g = trunc(xccd902g,? ), xccd902h = trunc(xccd902h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xccd_tmp SET xccd102  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccd102,?) ",
                         "                                                          ELSE ROUND(xccd102,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccd102,?)",
                         "                                END ),",
                         "                    xccd102a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd102a,?) ",
                         "                                                         ELSE ROUND(xccd102a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd102a,?)",
                         "                                END ),",
                         "                    xccd102b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd102b,?) ",
                         "                                                         ELSE ROUND(xccd102b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd102b,?)",
                         "                                END ),",
                         "                    xccd102c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd102c,?) ",
                         "                                                         ELSE ROUND(xccd102c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd102c,?)",
                         "                                END ),",
                         "                    xccd102d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd102d,?) ",
                         "                                                         ELSE ROUND(xccd102d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd102d,?)",
                         "                                END ),",
                         "                    xccd102e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd102e,?) ",
                         "                                                         ELSE ROUND(xccd102e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd102e,?)",
                         "                                END ),",
                         "                    xccd102f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd102f,?) ",
                         "                                                         ELSE ROUND(xccd102f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd102f,?)",
                         "                                END ),",
                         "                    xccd102g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd102g,?) ",
                         "                                                         ELSE ROUND(xccd102g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd102g,?)",
                         "                                END ),",
                         "                    xccd102h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd102h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd102h,?) ",
                         "                                                         ELSE ROUND(xccd102h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd102h,?)",
                         "                                END ),",
                         "                    xccd202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccd202,?) ",
                         "                                                          ELSE ROUND(xccd202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccd202,?)",
                         "                                END ),",
                         "                    xccd202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202a,?) ",
                         "                                                         ELSE ROUND(xccd202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202a,?)",
                         "                                END ),",
                         "                    xccd202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202b,?) ",
                         "                                                         ELSE ROUND(xccd202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202b,?)",
                         "                                END ),",
                         "                    xccd202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202c,?) ",
                         "                                                         ELSE ROUND(xccd202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202c,?)",
                         "                                END ),",
                         "                    xccd202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202d,?) ",
                         "                                                         ELSE ROUND(xccd202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202d,?)",
                         "                                END ),",
                         "                    xccd202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202e,?) ",
                         "                                                         ELSE ROUND(xccd202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202e,?)",
                         "                                END ),",
                         "                    xccd202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202f,?) ",
                         "                                                         ELSE ROUND(xccd202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202f,?)",
                         "                                END ),",
                         "                    xccd202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202g,?) ",
                         "                                                         ELSE ROUND(xccd202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202g,?)",
                         "                                END ),",
                         "                    xccd202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202h,?) ",
                         "                                                         ELSE ROUND(xccd202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202h,?)",
                         "                                END ),",
                         "                    xccd302  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccd302,?) ",
                         "                                                          ELSE ROUND(xccd302,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccd302,?)",
                         "                                END ),",
                         "                    xccd302a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd302a,?) ",
                         "                                                         ELSE ROUND(xccd302a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd302a,?)",
                         "                                END ),",
                         "                    xccd302b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd302b,?) ",
                         "                                                         ELSE ROUND(xccd302b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd302b,?)",
                         "                                END ),",
                         "                    xccd302c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd302c,?) ",
                         "                                                         ELSE ROUND(xccd302c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd302c,?)",
                         "                                END ),",
                         "                    xccd302d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd302d,?) ",
                         "                                                         ELSE ROUND(xccd302d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd302d,?)",
                         "                                END ),",
                         "                    xccd302e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd302e,?) ",
                         "                                                         ELSE ROUND(xccd302e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd302e,?)",
                         "                                END ),",
                         "                    xccd302f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd302f,?) ",
                         "                                                         ELSE ROUND(xccd302f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd302f,?)",
                         "                                END ),",
                         "                    xccd302g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd302g,?) ",
                         "                                                         ELSE ROUND(xccd302g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd302g,?)",
                         "                                END ),",
                         "                    xccd302h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd302h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd302h,?) ",
                         "                                                         ELSE ROUND(xccd302h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd302h,?)",
                         "                                END ),",
                         "                    xccd304  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccd304,?) ",
                         "                                                          ELSE ROUND(xccd304,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccd304,?)",
                         "                                END ),",
                         "                    xccd304a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd304a,?) ",
                         "                                                         ELSE ROUND(xccd304a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd304a,?)",
                         "                                END ),",
                         "                    xccd304b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd304b,?) ",
                         "                                                         ELSE ROUND(xccd304b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd304b,?)",
                         "                                END ),",
                         "                    xccd304c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd304c,?) ",
                         "                                                         ELSE ROUND(xccd304c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd304c,?)",
                         "                                END ),",
                         "                    xccd304d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd304d,?) ",
                         "                                                         ELSE ROUND(xccd304d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd304d,?)",
                         "                                END ),",
                         "                    xccd304e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd304e,?) ",
                         "                                                         ELSE ROUND(xccd304e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd304e,?)",
                         "                                END ),",
                         "                    xccd304f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd304f,?) ",
                         "                                                         ELSE ROUND(xccd304f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd304f,?)",
                         "                                END ),",
                         "                    xccd304g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd304g,?) ",
                         "                                                         ELSE ROUND(xccd304g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd304g,?)",
                         "                                END ),",
                         "                    xccd304h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd304h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd304h,?) ",
                         "                                                         ELSE ROUND(xccd304h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd304h,?)",
                         "                                END ),",
                         "                    xccd902  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccd902,?) ",
                         "                                                          ELSE ROUND(xccd902,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccd902,?)",
                         "                                END ),",
                         "                    xccd902a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902a,?) ",
                         "                                                         ELSE ROUND(xccd902a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902a,?)",
                         "                                END ),",
                         "                    xccd902b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902b,?) ",
                         "                                                         ELSE ROUND(xccd902b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902b,?)",
                         "                                END ),",
                         "                    xccd902c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902c,?) ",
                         "                                                         ELSE ROUND(xccd902c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902c,?)",
                         "                                END ),",
                         "                    xccd902d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902d,?) ",
                         "                                                         ELSE ROUND(xccd902d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902d,?)",
                         "                                END ),",
                         "                    xccd902e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902e,?) ",
                         "                                                         ELSE ROUND(xccd902e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902e,?)",
                         "                                END ),",
                         "                    xccd902f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902f,?) ",
                         "                                                         ELSE ROUND(xccd902f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902f,?)",
                         "                                END ),",
                         "                    xccd902g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902g,?) ",
                         "                                                         ELSE ROUND(xccd902g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902g,?)",
                         "                                END ),",
                         "                    xccd902h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902h,?) ",
                         "                                                         ELSE ROUND(xccd902h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902h,?)",
                         "                                END ) "
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xccd_tmp SET xccd102  = ceil(xccd102 *power(10,?))/power(10,?),",
                         "                    xccd102a = ceil(xccd102a*power(10,?))/power(10,?),",
                         "                    xccd102b = ceil(xccd102b*power(10,?))/power(10,?),",
                         "                    xccd102c = ceil(xccd102c*power(10,?))/power(10,?),",
                         "                    xccd102d = ceil(xccd102d*power(10,?))/power(10,?),",
                         "                    xccd102e = ceil(xccd102e*power(10,?))/power(10,?),",
                         "                    xccd102f = ceil(xccd102f*power(10,?))/power(10,?),",
                         "                    xccd102g = ceil(xccd102g*power(10,?))/power(10,?),",
                         "                    xccd102h = ceil(xccd102h*power(10,?))/power(10,?),",  
                         "                    xccd202  = ceil(xccd202 *power(10,?))/power(10,?),",
                         "                    xccd202a = ceil(xccd202a*power(10,?))/power(10,?),",
                         "                    xccd202b = ceil(xccd202b*power(10,?))/power(10,?),",
                         "                    xccd202c = ceil(xccd202c*power(10,?))/power(10,?),",
                         "                    xccd202d = ceil(xccd202d*power(10,?))/power(10,?),",
                         "                    xccd202e = ceil(xccd202e*power(10,?))/power(10,?),",
                         "                    xccd202f = ceil(xccd202f*power(10,?))/power(10,?),",
                         "                    xccd202g = ceil(xccd202g*power(10,?))/power(10,?),",
                         "                    xccd202h = ceil(xccd202h*power(10,?))/power(10,?),",  
                         "                    xccd302  = ceil(xccd302 *power(10,?))/power(10,?),",
                         "                    xccd302a = ceil(xccd302a*power(10,?))/power(10,?),",
                         "                    xccd302b = ceil(xccd302b*power(10,?))/power(10,?),",
                         "                    xccd302c = ceil(xccd302c*power(10,?))/power(10,?),",
                         "                    xccd302d = ceil(xccd302d*power(10,?))/power(10,?),",
                         "                    xccd302e = ceil(xccd302e*power(10,?))/power(10,?),",
                         "                    xccd302f = ceil(xccd302f*power(10,?))/power(10,?),",
                         "                    xccd302g = ceil(xccd302g*power(10,?))/power(10,?),",
                         "                    xccd302h = ceil(xccd302h*power(10,?))/power(10,?),",
                         "                    xccd304  = ceil(xccd304 *power(10,?))/power(10,?),",
                         "                    xccd304a = ceil(xccd304a*power(10,?))/power(10,?),",
                         "                    xccd304b = ceil(xccd304b*power(10,?))/power(10,?),",
                         "                    xccd304c = ceil(xccd304c*power(10,?))/power(10,?),",
                         "                    xccd304d = ceil(xccd304d*power(10,?))/power(10,?),",
                         "                    xccd304e = ceil(xccd304e*power(10,?))/power(10,?),",
                         "                    xccd304f = ceil(xccd304f*power(10,?))/power(10,?),",
                         "                    xccd304g = ceil(xccd304g*power(10,?))/power(10,?),",
                         "                    xccd304h = ceil(xccd304h*power(10,?))/power(10,?),",
                         "                    xccd902  = ceil(xccd902 *power(10,?))/power(10,?),",
                         "                    xccd902a = ceil(xccd902a*power(10,?))/power(10,?),",
                         "                    xccd902b = ceil(xccd902b*power(10,?))/power(10,?),",
                         "                    xccd902c = ceil(xccd902c*power(10,?))/power(10,?),",
                         "                    xccd902d = ceil(xccd902d*power(10,?))/power(10,?),",
                         "                    xccd902e = ceil(xccd902e*power(10,?))/power(10,?),",
                         "                    xccd902f = ceil(xccd902f*power(10,?))/power(10,?),",
                         "                    xccd902g = ceil(xccd902g*power(10,?))/power(10,?),",
                         "                    xccd902h = ceil(xccd902h*power(10,?))/power(10,?) "
        #180802-00015#1 add-E                                                                                                        
                      
   END CASE
   PREPARE s_axcp500_avg1_wip_5_p1_1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_5_p1_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_wip_5_p1_1')
   END IF        
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_wip_5_p1_1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,                                              
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2   
   #180802-00015#1 mark-E     
   

   #180802-00015#1 add-S   #五组
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_wip_5_p1_1  USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_wip_5_p1_1  USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_wip_5_p1_1  USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                  g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_wip_5_p1_1  USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202h
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202h
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202h
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202h
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E                                            
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_5_p1_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_5_p1_1')
   END IF   
   #161019-00039#1-e-add

   #170418-00054#1 add start -----
   UPDATE xccd_tmp SET xccd302a = xccd302 - (xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h)
    WHERE xccd302 <> xccd302a + xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h
      #170724-00055#1--mod--s
      #AND xccd302a >= xccd302b AND xccd302a >= xccd302c
      #AND xccd302a >= xccd302d AND xccd302a >= xccd302e
      #AND xccd302a >= xccd302f AND xccd302a >= xccd302g
      #AND xccd302a >= xccd302h
      AND xccd302a <= xccd302b AND xccd302a <= xccd302c
      AND xccd302a <= xccd302d AND xccd302a <= xccd302e
      AND xccd302a <= xccd302f AND xccd302a <= xccd302g
      AND xccd302a <= xccd302h
      #170724-00055#1--mod--e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd302a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd302a')
   END IF      
      
   UPDATE xccd_tmp SET xccd302b = xccd302 - (xccd302a + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h)
    WHERE xccd302 <> xccd302a + xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h
      #170724-00055#1--mod--s
      #AND xccd302b >= xccd302c
      #AND xccd302b >= xccd302d AND xccd302b >= xccd302e
      #AND xccd302b >= xccd302f AND xccd302b >= xccd302g
      #AND xccd302b >= xccd302h
      AND xccd302b <= xccd302c
      AND xccd302b <= xccd302d AND xccd302b <= xccd302e
      AND xccd302b <= xccd302f AND xccd302b <= xccd302g
      AND xccd302b <= xccd302h      
      #170724-00055#1--mod--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd302b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd302b')
   END IF  
   
   UPDATE xccd_tmp SET xccd302c = xccd302 - (xccd302b + xccd302a + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h)
    WHERE xccd302 <> xccd302a + xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h
      #170724-00055#1--mod--s
      #AND xccd302c >= xccd302d AND xccd302c >= xccd302e
      #AND xccd302c >= xccd302f AND xccd302c >= xccd302g
      #AND xccd302c >= xccd302h
      AND xccd302c <= xccd302d AND xccd302c <= xccd302e
      AND xccd302c <= xccd302f AND xccd302c <= xccd302g
      AND xccd302c <= xccd302h      
      #170724-00055#1--mod--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd302c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd302c')
   END IF  
   
   UPDATE xccd_tmp SET xccd302d = xccd302 - (xccd302b + xccd302c + xccd302a + xccd302e + xccd302f + xccd302g + xccd302h)
    WHERE xccd302 <> xccd302a + xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h
      #170724-00055#1--mod--s
      #AND xccd302d >= xccd302e
      #AND xccd302d >= xccd302f AND xccd302d >= xccd302g
      #AND xccd302d >= xccd302h
      AND xccd302d <= xccd302e
      AND xccd302d <= xccd302f AND xccd302d <= xccd302g
      AND xccd302d <= xccd302h      
      #170724-00055#1--mod--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd302d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd302d')
   END IF  
   
   UPDATE xccd_tmp SET xccd302e = xccd302 - (xccd302b + xccd302c + xccd302d + xccd302a + xccd302f + xccd302g + xccd302h)
    WHERE xccd302 <> xccd302a + xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h
      #170724-00055#1--mod--s
      #AND xccd302e >= xccd302f AND xccd302e >= xccd302g
      #AND xccd302e >= xccd302h
      AND xccd302e <= xccd302f AND xccd302e <= xccd302g
      AND xccd302e <= xccd302h      
      #170724-00055#1--mod--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd302e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd302e')
   END IF  
   
   UPDATE xccd_tmp SET xccd302f = xccd302 - (xccd302b + xccd302c + xccd302d + xccd302e + xccd302a + xccd302g + xccd302h)
    WHERE xccd302 <> xccd302a + xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h
      #170724-00055#1--mod--s
      #AND xccd302f >= xccd302g
      #AND xccd302f >= xccd302h
      AND xccd302f <= xccd302g
      AND xccd302f <= xccd302h      
      #170724-00055#1--mod--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd302f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd302f')
   END IF  
   
   UPDATE xccd_tmp SET xccd302g = xccd302 - (xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302a + xccd302h)
    WHERE xccd302 <> xccd302a + xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h
      #170724-00055#1--mod--s
      #AND xccd302g >= xccd302h
      AND xccd302g <= xccd302h
      #170724-00055#1--mod--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd302g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd302g')
   END IF  
   
   UPDATE xccd_tmp SET xccd302h = xccd302 - (xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302a)
    WHERE xccd302 <> xccd302a + xccd302b + xccd302c + xccd302d + xccd302e + xccd302f + xccd302g + xccd302h
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd302h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccd_tmp SET xccd302h')
   END IF                    
   #170418-00054#1 add end   -----

   #本期下阶投入               
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp ",
               "       USING (SELECT xcce006,   ",
               "                     SUM(xcce202) +SUM(xcce206) +SUM(xcce208) +SUM(xcce210)  xcce202 , ",   #本期投入
               "                     SUM(xcce202a)+SUM(xcce206a)+SUM(xcce208a)+SUM(xcce210a) xcce202a, ",
               "                     SUM(xcce202b)+SUM(xcce206b)+SUM(xcce208b)+SUM(xcce210b) xcce202b, ",
               "                     SUM(xcce202c)+SUM(xcce206c)+SUM(xcce208c)+SUM(xcce210c) xcce202c, ",
               "                     SUM(xcce202d)+SUM(xcce206d)+SUM(xcce208d)+SUM(xcce210d) xcce202d, ",
               "                     SUM(xcce202e)+SUM(xcce206e)+SUM(xcce208e)+SUM(xcce210e) xcce202e, ",
               "                     SUM(xcce202f)+SUM(xcce206f)+SUM(xcce208f)+SUM(xcce210f) xcce202f, ",
               "                     SUM(xcce202g)+SUM(xcce206g)+SUM(xcce208g)+SUM(xcce210g) xcce202g, ",
               "                     SUM(xcce202h)+SUM(xcce206h)+SUM(xcce208h)+SUM(xcce210h) xcce202h  ",             
               #190329-00023#1---mod---s
               #"                FROM xcce_tmp,s_axcp500_tmp     ",
               #"               WHERE xcce007 = imaa001 ",
               #"                 AND xcce008 = xccc007 ",  #add zhangllc 150730
               #"                 AND imaa004 = 'A' ", 
               #"                 AND xcce009 = xccc008",   #170511-00056#1 
               "                FROM xcce_tmp     ",
               "               WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp ",
               "                             WHERE xcce007 = imaa001 ",
               "                               AND imaa004 = 'A' ) ",   
               #190329-00023#1---mod---s               
               "                GROUP BY xcce006 ",
               "                ) b ",
               "          ON ( xccdent = ",g_enterprise,
               "         AND   xccdld  = '",g_ld,"'",
               "         AND   xccd001 = '",p_seq,"'",
               "         AND   xccd003 = '",g_xcat001,"'",
               "         AND   xccd004 = ",g_yy,
               "         AND   xccd005 = ",g_pp,
               "         AND   xccd006 = b.xcce006  ",       #工单 
               #mod zhangllc 150730 --begin
               #" ) ",  #mark SBS3
               #"         AND   xccd007 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"         AND   (xccd007,xccd008) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"          AND xccd006 IN (SELECT sfacdocno FROM sfac_tmp2 WHERE clevel=",p_xcbb006,")) ",  #150804
               #mod zhangllc 150730 --end
               #add zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
               "          AND EXISTS (SELECT 1 FROM sfac_tmp2 ",
               "                       WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006 ",
               "                         AND sfac_tmp2.clevel   = ",p_xcbb006,") ) ",
               #add zhangllc 160528 SBS4--e SBS3增加此段可提高效能
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccd204  = nvl(b.xcce202 ,0) , xccd204a = nvl(b.xcce202a,0) , xccd204b = nvl(b.xcce202b,0) , ",
               "                xccd204c = nvl(b.xcce202c,0) , xccd204d = nvl(b.xcce202d,0) , xccd204e = nvl(b.xcce202e,0) , ",
               "                xccd204f = nvl(b.xcce202f,0) , xccd204g = nvl(b.xcce202g,0) , xccd204h = nvl(b.xcce202h,0)     "            
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_wip_5_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_5_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_wip_5_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_5_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF


   #161019-00039#1-s-add   
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xccd_tmp SET xccd204  = round(xccd204 ,? ), xccd204a = round(xccd204a,? ), xccd204b = round(xccd204b,? ), ",
                         "                    xccd204c = round(xccd204c,? ), xccd204d = round(xccd204d,? ), xccd204e = round(xccd204e,? ), ",
                         "                    xccd204f = round(xccd204f,? ), xccd204g = round(xccd204g,? ), xccd204h = round(xccd204h,? )  "
        WHEN '3'   #無條件件截位
             LET g_sql = "UPDATE xccd_tmp SET xccd204  = trunc(xccd204 ,? ), xccd204a = trunc(xccd204a,? ), xccd204b = trunc(xccd204b,? ), ",
                         "                    xccd204c = trunc(xccd204c,? ), xccd204d = trunc(xccd204d,? ), xccd204e = trunc(xccd204e,? ), ",
                         "                    xccd204f = trunc(xccd204f,? ), xccd204g = trunc(xccd204g,? ), xccd204h = trunc(xccd204h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xccd_tmp SET xccd204  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccd204,?) ",
                         "                                                          ELSE ROUND(xccd204,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccd204,?)",
                         "                                END ),",
                         "                    xccd204a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd204a,?) ",
                         "                                                         ELSE ROUND(xccd204a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd204a,?)",
                         "                                END ),",
                         "                    xccd204b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd204b,?) ",
                         "                                                         ELSE ROUND(xccd204b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd204b,?)",
                         "                                END ),",
                         "                    xccd204c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd204c,?) ",
                         "                                                         ELSE ROUND(xccd204c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd204c,?)",
                         "                                END ),",
                         "                    xccd204d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd204d,?) ",
                         "                                                         ELSE ROUND(xccd204d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd204d,?)",
                         "                                END ),",
                         "                    xccd204e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd204e,?) ",
                         "                                                         ELSE ROUND(xccd204e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd204e,?)",
                         "                                END ),",
                         "                    xccd204f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd204f,?) ",
                         "                                                         ELSE ROUND(xccd204f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd204f,?)",
                         "                                END ),",
                         "                    xccd204g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd204g,?) ",
                         "                                                         ELSE ROUND(xccd204g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd204g,?)",
                         "                                END ),",
                         "                    xccd204h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd204h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd204h,?) ",
                         "                                                         ELSE ROUND(xccd204h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd204h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xccd_tmp SET xccd204  = ceil(xccd204 *power(10,?))/power(10,?),",
                         "                    xccd204a = ceil(xccd204a*power(10,?))/power(10,?),",
                         "                    xccd204b = ceil(xccd204b*power(10,?))/power(10,?),",
                         "                    xccd204c = ceil(xccd204c*power(10,?))/power(10,?),",
                         "                    xccd204d = ceil(xccd204d*power(10,?))/power(10,?),",
                         "                    xccd204e = ceil(xccd204e*power(10,?))/power(10,?),",
                         "                    xccd204f = ceil(xccd204f*power(10,?))/power(10,?),",
                         "                    xccd204g = ceil(xccd204g*power(10,?))/power(10,?),",
                         "                    xccd204h = ceil(xccd204h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E             
   END CASE
   PREPARE s_axcp500_avg1_wip_5_p2_1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_5_p2_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_wip_5_p2_1')
   END IF  


   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_wip_5_p2_1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2   
   #180802-00015#1 mark-E   
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_wip_5_p2_1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_wip_5_p2_1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_wip_5_p2_1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_wip_5_p2_1 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E                                              
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_5_p2_1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_5_p2_1')
   END IF  

   

   #161019-00039#1-e-add         
   #   
   UPDATE xccd_tmp SET xccd202  = xccd202  - xccd204,
                       xccd202a = xccd202a - xccd204a,   
                       xccd202b = xccd202b - xccd204b,   
                       xccd202c = xccd202c - xccd204c,   
                       xccd202d = xccd202d - xccd204d,   
                       xccd202e = xccd202e - xccd204e,   
                       xccd202f = xccd202f - xccd204f,   
                       xccd202g = xccd202g - xccd204g,   
                       xccd202h = xccd202h - xccd204h
    #mod zhangllc 150730 --begin
    #WHERE xccd007 IN  ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
    #WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
    #               WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008
    #                 AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end
    #add zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
    WHERE EXISTS (SELECT 1 FROM sfac_tmp2 
                   WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006 
                     AND sfac_tmp2.clevel   = p_xcbb006)
    #add zhangllc 160528 SBS4--e SBS3增加此段可提高效能
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd202  = xccd202  - xccd204"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   #161019-00039#1-s-add   
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xccd_tmp SET xccd202  = round(xccd202 ,? ), xccd202a = round(xccd202a,? ), xccd202b = round(xccd202b,? ), ",
                         "                    xccd202c = round(xccd202c,? ), xccd202d = round(xccd202d,? ), xccd202e = round(xccd202e,? ), ",
                         "                    xccd202f = round(xccd202f,? ), xccd202g = round(xccd202g,? ), xccd202h = round(xccd202h,? )  "
        WHEN '3'   #無條件件截位
             LET g_sql = "UPDATE xccd_tmp SET xccd202  = trunc(xccd202 ,? ), xccd202a = trunc(xccd202a,? ), xccd202b = trunc(xccd202b,? ), ",
                         "                    xccd202c = trunc(xccd202c,? ), xccd202d = trunc(xccd202d,? ), xccd202e = trunc(xccd202e,? ), ",
                         "                    xccd202f = trunc(xccd202f,? ), xccd202g = trunc(xccd202g,? ), xccd202h = trunc(xccd202h,? )  " 
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xccd_tmp SET xccd202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccd202,?) ",
                         "                                                          ELSE ROUND(xccd202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccd202,?)",
                         "                                END ),",
                         "                    xccd202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202a,?) ",
                         "                                                         ELSE ROUND(xccd202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202a,?)",
                         "                                END ),",
                         "                    xccd202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202b,?) ",
                         "                                                         ELSE ROUND(xccd202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202b,?)",
                         "                                END ),",
                         "                    xccd202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202c,?) ",
                         "                                                         ELSE ROUND(xccd202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202c,?)",
                         "                                END ),",
                         "                    xccd202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202d,?) ",
                         "                                                         ELSE ROUND(xccd202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202d,?)",
                         "                                END ),",
                         "                    xccd202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202e,?) ",
                         "                                                         ELSE ROUND(xccd202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202e,?)",
                         "                                END ),",
                         "                    xccd202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202f,?) ",
                         "                                                         ELSE ROUND(xccd202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202f,?)",
                         "                                END ),",
                         "                    xccd202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202g,?) ",
                         "                                                         ELSE ROUND(xccd202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202g,?)",
                         "                                END ),",
                         "                    xccd202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd202h,?) ",
                         "                                                         ELSE ROUND(xccd202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd202h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xccd_tmp SET xccd202  = ceil(xccd202 *power(10,?))/power(10,?),",
                         "                    xccd202a = ceil(xccd202a*power(10,?))/power(10,?),",
                         "                    xccd202b = ceil(xccd202b*power(10,?))/power(10,?),",
                         "                    xccd202c = ceil(xccd202c*power(10,?))/power(10,?),",
                         "                    xccd202d = ceil(xccd202d*power(10,?))/power(10,?),",
                         "                    xccd202e = ceil(xccd202e*power(10,?))/power(10,?),",
                         "                    xccd202f = ceil(xccd202f*power(10,?))/power(10,?),",
                         "                    xccd202g = ceil(xccd202g*power(10,?))/power(10,?),",
                         "                    xccd202h = ceil(xccd202h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E             
   END CASE
   PREPARE s_axcp500_avg1_wip_5_p2_2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_5_p2_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_wip_5_p2_2')
   END IF  
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_wip_5_p2_2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2     
   #180802-00015#1 mark-E     
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_wip_5_p2_2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_wip_5_p2_2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_wip_5_p2_2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_wip_5_p2_2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E                                                 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_5_p2_2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_5_p2_2')
   END IF   
   #161019-00039#1-e-add   
   #xccd901
   UPDATE xccd_tmp SET xccd901  = xccd101  + xccd201  + xccd301  + xccd303 ,
                       xccd902  = xccd102  + xccd202  + xccd204  + xccd302  + xccd304 ,
                       xccd902a = xccd102a + xccd202a + xccd204a + xccd302a + xccd304a ,
                       xccd902b = xccd102b + xccd202b + xccd204b + xccd302b + xccd304b ,
                       xccd902c = xccd102c + xccd202c + xccd204c + xccd302c + xccd304c ,
                       xccd902d = xccd102d + xccd202d + xccd204d + xccd302d + xccd304d ,
                       xccd902e = xccd102e + xccd202e + xccd204e + xccd302e + xccd304e ,
                       xccd902f = xccd102f + xccd202f + xccd204f + xccd302f + xccd304f ,
                       xccd902g = xccd102g + xccd202g + xccd204g + xccd302g + xccd304g ,
                       xccd902h = xccd102h + xccd202h + xccd204h + xccd302h + xccd304h
    #mod zhangllc 150730 --begin
    #WHERE xccd007 IN  ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
    #WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
    #               WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008
    #                 AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
    #mod zhangllc 150730 --end
    #add zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
    WHERE EXISTS (SELECT 1 FROM sfac_tmp2 
                   WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006 
                     AND sfac_tmp2.clevel   = p_xcbb006)
    #add zhangllc 160528 SBS4--e SBS3增加此段可提高效能
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   #161019-00039#1-s-add   
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xccd_tmp SET xccd902  = round(xccd902 ,? ), xccd902a = round(xccd902a,? ), xccd902b = round(xccd902b,? ), ",
                         "                    xccd902c = round(xccd902c,? ), xccd902d = round(xccd902d,? ), xccd902e = round(xccd902e,? ), ",
                         "                    xccd902f = round(xccd902f,? ), xccd902g = round(xccd902g,? ), xccd902h = round(xccd902h,? )  "
        WHEN '3'   #無條件件截位
             LET g_sql = "UPDATE xccd_tmp SET xccd902  = trunc(xccd902 ,? ), xccd902a = trunc(xccd902a,? ), xccd902b = trunc(xccd902b,? ), ",
                         "                    xccd902c = trunc(xccd902c,? ), xccd902d = trunc(xccd902d,? ), xccd902e = trunc(xccd902e,? ), ",
                         "                    xccd902f = trunc(xccd902f,? ), xccd902g = trunc(xccd902g,? ), xccd902h = trunc(xccd902h,? )  "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xccd_tmp SET xccd902  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccd902,?) ",
                         "                                                          ELSE ROUND(xccd902,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccd902,?)",
                         "                                END ),",
                         "                    xccd902a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902a,?) ",
                         "                                                         ELSE ROUND(xccd902a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902a,?)",
                         "                                END ),",
                         "                    xccd902b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902b,?) ",
                         "                                                         ELSE ROUND(xccd902b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902b,?)",
                         "                                END ),",
                         "                    xccd902c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902c,?) ",
                         "                                                         ELSE ROUND(xccd902c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902c,?)",
                         "                                END ),",
                         "                    xccd902d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902d,?) ",
                         "                                                         ELSE ROUND(xccd902d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902d,?)",
                         "                                END ),",
                         "                    xccd902e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902e,?) ",
                         "                                                         ELSE ROUND(xccd902e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902e,?)",
                         "                                END ),",
                         "                    xccd902f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902f,?) ",
                         "                                                         ELSE ROUND(xccd902f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902f,?)",
                         "                                END ),",
                         "                    xccd902g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902g,?) ",
                         "                                                         ELSE ROUND(xccd902g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902g,?)",
                         "                                END ),",
                         "                    xccd902h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccd902h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccd902h,?) ",
                         "                                                         ELSE ROUND(xccd902h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccd902h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xccd_tmp SET xccd902  = ceil(xccd902 *power(10,?))/power(10,?),",
                         "                    xccd902a = ceil(xccd902a*power(10,?))/power(10,?),",
                         "                    xccd902b = ceil(xccd902b*power(10,?))/power(10,?),",
                         "                    xccd902c = ceil(xccd902c*power(10,?))/power(10,?),",
                         "                    xccd902d = ceil(xccd902d*power(10,?))/power(10,?),",
                         "                    xccd902e = ceil(xccd902e*power(10,?))/power(10,?),",
                         "                    xccd902f = ceil(xccd902f*power(10,?))/power(10,?),",
                         "                    xccd902g = ceil(xccd902g*power(10,?))/power(10,?),",
                         "                    xccd902h = ceil(xccd902h*power(10,?))/power(10,?) " 
        #180802-00015#1 add-E              
   END CASE
   PREPARE s_axcp500_avg1_wip_5_p2_3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_wip_5_p2_3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_wip_5_p2_3')
   END IF   


   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg1_wip_5_p2_3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2    
   #180802-00015#1 mark-E        
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_wip_5_p2_3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_wip_5_p2_3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_wip_5_p2_3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                 g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_wip_5_p2_3 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                 g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E                                            
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_wip_5_p2_3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_wip_5_p2_3')
   END IF   
   #161019-00039#1-e-add   
#   #xccd303/xccd304 差异处理
#   UPDATE xccd_tmp SET xccd303  = xccd303  + xccd901  * -1 ,
#                       xccd304  = xccd304  + xccd902  * -1 ,
#                       xccd304a = xccd304a + xccd902a * -1 ,
#                       xccd304b = xccd304b + xccd902b * -1 ,
#                       xccd304c = xccd304c + xccd902c * -1 ,
#                       xccd304d = xccd304d + xccd902d * -1 ,
#                       xccd304e = xccd304e + xccd902e * -1 ,
#                       xccd304f = xccd304f + xccd902f * -1 ,
#                       xccd304g = xccd304g + xccd902g * -1 ,
#                       xccd304h = xccd304h + xccd902h * -1 
#    #mod zhangllc 150730 --begin
#    #WHERE xccd007 IN  ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
#    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
#                   WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008
#                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
#    #mod zhangllc 150730 --end  
#      AND xccd901 = 0 AND xccd902 <> 0 AND xccd301 <> 0   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd901"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF
                
   #            
#   UPDATE xccd_tmp SET xccd901  = 0 ,
#                       xccd902  = 0 ,
#                       xccd902a = 0 ,
#                       xccd902b = 0 ,
#                       xccd902c = 0 ,
#                       xccd902d = 0 ,
#                       xccd902e = 0 ,
#                       xccd902f = 0 ,
#                       xccd902g = 0 ,
#                       xccd902h = 0 
#    #mod zhangllc 150730 --begin
#    #WHERE xccd007 IN  ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 ) 
#    WHERE EXISTS (SELECT 1 FROM s_axcp500_tmp
#                   WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008
#                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
#    #mod zhangllc 150730 --end  
#      AND xccd901 = 0 AND xccd902 <> 0 AND xccd301 <> 0   
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd901  = 0"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF


   LET r_success = TRUE
   RETURN r_success
   
   
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 整批删除在制
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_wip_del(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_wip_del(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010

   WHENEVER ERROR CONTINUE
  
  
   LET r_success = FALSE
   LET l_date = cl_get_today()

  #161004-00022#7-s-mark
  #DELETE FROM xcce_tmp 
  # WHERE EXISTS ( SELECT 1 FROM xccd_tmp
  #                 WHERE xccd101 = 0 AND xccd102 = 0 AND xccd200 = 0 AND xccd201 = 0 AND xccd202 = 0 
  #                   AND xccd204 = 0 AND xccd301 = 0 AND xccd302 = 0 AND xccd303 = 0 AND xccd304 = 0 
  #                   AND xccd901 = 0 AND xccd902 = 0 
  #                   AND xcce006 = xccd006
  #                   #mod zhangllc 150730 --begin
  #                   #AND xccd007 IN  ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  )
  #                   
  #                   #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
  #                   #AND EXISTS (SELECT 1 FROM s_axcp500_tmp
  #                   #             #WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 #AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008  xccd不存特征的
  #                   #             WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008 #mod zhangllc 160526 SBS1 bug 当月有调整，无库存异动的工单会产生有xcce，无xccd的情况
  #                   #               AND s_axcp500_tmp.xcbb006 = p_xcbb006) )
  #                   AND EXISTS (SELECT 1 FROM sfac_tmp2
  #                                WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006
  #                                  AND sfac_tmp2.clevel   = p_xcbb006) )
  #                   #mod zhangllc 160528 SBS4--e
  #                   
  #                   #mod zhangllc 150730 --end  
  #IF SQLCA.sqlcode THEN
  #   INITIALIZE g_errparam TO NULL
  #   LET g_errparam.code   = SQLCA.sqlcode
  #   LET g_errparam.extend = "DELETE FROM xcce_tmp"
  #   LET g_errparam.popup  = TRUE
  #   CALL cl_err()
# #   RETURN r_success
  #END IF                                       
  #                                    
  #DELETE FROM xccz_tmp 
  # WHERE EXISTS ( SELECT 1 FROM xccd_tmp
  #                 WHERE xccd101 = 0 AND xccd102 = 0 AND xccd200 = 0 AND xccd201 = 0 AND xccd202 = 0 
  #                   AND xccd204 = 0 AND xccd301 = 0 AND xccd302 = 0 AND xccd303 = 0 AND xccd304 = 0 
  #                   AND xccd901 = 0 AND xccd902 = 0 
  #                   AND xccz006 = xccd006
  #                   #mod zhangllc 150730 --begin
  #                   #AND xccd007 IN  ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  )
  #                   
  #                   #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
  #                   #AND EXISTS (SELECT 1 FROM s_axcp500_tmp
  #                   #             #WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 #AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008  xccd不存特征的
  #                   #             WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008 #mod zhangllc 160526 SBS1 bug 当月有调整，无库存异动的工单会产生有xcce，无xccd的情况
  #                   #               AND s_axcp500_tmp.xcbb006 = p_xcbb006) )
  #                   AND EXISTS (SELECT 1 FROM sfac_tmp2
  #                                WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006
  #                                  AND sfac_tmp2.clevel   = p_xcbb006) )
  #                   #mod zhangllc 160528 SBS4--e
  #                   
  #                   #mod zhangllc 150730 --end  
  #IF SQLCA.sqlcode THEN
  #   INITIALIZE g_errparam TO NULL
  #   LET g_errparam.code   = SQLCA.sqlcode
  #   LET g_errparam.extend = "DELETE FROM xccz_tmp"
  #   LET g_errparam.popup  = TRUE
  #   CALL cl_err()
# #   RETURN r_success
  #END IF      
  #
  #DELETE FROM xccg_tmp 
  # WHERE EXISTS ( SELECT 1 FROM xccd_tmp
  #                 WHERE xccd101 = 0 AND xccd102 = 0 AND xccd200 = 0 AND xccd201 = 0 AND xccd202 = 0 
  #                   AND xccd204 = 0 AND xccd301 = 0 AND xccd302 = 0 AND xccd303 = 0 AND xccd304 = 0 
  #                   AND xccd901 = 0 AND xccd902 = 0 
  #                   AND xccg006 = xccd006
  #                   #mod zhangllc 150730 --begin
  #                   #AND xccd007 IN  ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  )
  #                   
  #                   #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
  #                   #AND EXISTS (SELECT 1 FROM s_axcp500_tmp
  #                   #             #WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 #AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008 #xccd不存特征的
  #                   #             WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008 #mod zhangllc 160526 SBS1 bug 当月有调整，无库存异动的工单会产生有xcce，无xccd的情况
  #                   #               AND s_axcp500_tmp.xcbb006 = p_xcbb006) )
  #                   AND EXISTS (SELECT 1 FROM sfac_tmp2
  #                                WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006
  #                                  AND sfac_tmp2.clevel   = p_xcbb006) )
  #                   #mod zhangllc 160528 SBS4--e
  #                   
  #                   #mod zhangllc 150730 --end  
  #IF SQLCA.sqlcode THEN
  #   INITIALIZE g_errparam TO NULL
  #   LET g_errparam.code   = SQLCA.sqlcode
  #   LET g_errparam.extend = "DELETE FROM xccg_tmp"
  #   LET g_errparam.popup  = TRUE
  #   CALL cl_err()
# #   RETURN r_success
  #END IF         
  #
  #DELETE FROM xccd_tmp 
  # WHERE xccd101 = 0 AND xccd102 = 0 AND xccd200 = 0 AND xccd201 = 0 AND xccd202 = 0 
  #   AND xccd204 = 0 AND xccd301 = 0 AND xccd302 = 0 AND xccd303 = 0 AND xccd304 = 0 
  #   AND xccd901 = 0 AND xccd902 = 0 
  #   #mod zhangllc 150730 --begin
  #   #AND xccd007 IN  ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
  #   
  #   #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
  #   #AND EXISTS (SELECT 1 FROM s_axcp500_tmp
  #   #             #WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 #AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008 # xccd不存特征的
  #   #             WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008 #mod zhangllc 160526 SBS1 bug 当月有调整，无库存异动的工单会产生有xcce，无xccd的情况
  #   #               AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
  #   AND EXISTS (SELECT 1 FROM sfac_tmp2
  #                WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006
  #                  AND sfac_tmp2.clevel   = p_xcbb006)
  #   #mod zhangllc 160528 SBS4--e
  #                   
  #   #mod zhangllc 150730 --end  
  #IF SQLCA.sqlcode THEN
  #   INITIALIZE g_errparam TO NULL
  #   LET g_errparam.code   = SQLCA.sqlcode
  #   LET g_errparam.extend = "DELETE FROM xccd_tmp"
  #   LET g_errparam.popup  = TRUE
  #   CALL cl_err()
# #   RETURN r_success
  #END IF         
  #161004-00022#7-e-mark  
   #200202-00005#1---add---s
   DELETE FROM xccd_tmp 
    WHERE xccd101 = 0 AND xccd102 = 0 AND xccd200 = 0 AND xccd201 = 0 AND xccd202 = 0 
      AND xccd204 = 0 AND xccd301 = 0 AND xccd302 = 0 AND xccd303 = 0 AND xccd304 = 0 
      AND xccd901 = 0 AND xccd902 = 0 
      AND EXISTS (SELECT 1 FROM sfac_tmp2
                   WHERE sfac_tmp2.sfacdocno= xccd_tmp.xccd006
                     AND sfac_tmp2.clevel   = p_xcbb006)
      AND NOT EXISTS(SELECT 1 FROM xcce_tmp
                      WHERE xcceent = xccdent
                        AND xcceld = xccdld
                        AND xcce001 = xccd001
                        AND xcce003 = xccd003
                        AND xcce004 = xccd004
                        AND xcce005 = xccd005
                        AND xcce006 = xccd006)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DELETE FROM xccd_tmp"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF     
   #200202-00005#1---add---e
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 批次在制处理 - 月加权-重工处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_rework(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_rework(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
#   DEFINE l_sfaa          RECORD LIKE sfaa_t.*  #161124-00048#20 mark
   DEFINE l_sfaa          type_g_sfaa  #170605-00013#1-add
   #170605-00013#1-s-mark 改用type方式
   ##161124-00048#20 add(s)
   #DEFINE l_sfaa RECORD  #工單單頭檔
   #    sfaaent LIKE sfaa_t.sfaaent, #企业编号
   #    sfaaownid LIKE sfaa_t.sfaaownid, #资料所有者
   #    sfaaowndp LIKE sfaa_t.sfaaowndp, #资料所有部门
   #    sfaacrtid LIKE sfaa_t.sfaacrtid, #资料录入者
   #    sfaacrtdp LIKE sfaa_t.sfaacrtdp, #资料录入部门
   #    sfaacrtdt LIKE sfaa_t.sfaacrtdt, #资料创建日
   #    sfaamodid LIKE sfaa_t.sfaamodid, #资料更改者
   #    sfaamoddt LIKE sfaa_t.sfaamoddt, #最近更改日
   #    sfaacnfid LIKE sfaa_t.sfaacnfid, #资料审核者
   #    sfaacnfdt LIKE sfaa_t.sfaacnfdt, #数据审核日
   #    sfaapstid LIKE sfaa_t.sfaapstid, #资料过账者
   #    sfaapstdt LIKE sfaa_t.sfaapstdt, #资料过账日
   #    sfaastus LIKE sfaa_t.sfaastus, #状态码
   #    sfaasite LIKE sfaa_t.sfaasite, #营运据点
   #    sfaadocno LIKE sfaa_t.sfaadocno, #单号
   #    sfaadocdt LIKE sfaa_t.sfaadocdt, #单据日期
   #    sfaa001 LIKE sfaa_t.sfaa001, #变更版本
   #    sfaa002 LIKE sfaa_t.sfaa002, #生管人员
   #    sfaa003 LIKE sfaa_t.sfaa003, #工单类型
   #    sfaa004 LIKE sfaa_t.sfaa004, #发料制度
   #    sfaa005 LIKE sfaa_t.sfaa005, #工单来源
   #    sfaa006 LIKE sfaa_t.sfaa006, #来源单号
   #    sfaa007 LIKE sfaa_t.sfaa007, #来源项次
   #    sfaa008 LIKE sfaa_t.sfaa008, #来源项序
   #    sfaa009 LIKE sfaa_t.sfaa009, #参考客户
   #    sfaa010 LIKE sfaa_t.sfaa010, #生产料号
   #    sfaa011 LIKE sfaa_t.sfaa011, #特性
   #    sfaa012 LIKE sfaa_t.sfaa012, #生产数量
   #    sfaa013 LIKE sfaa_t.sfaa013, #生产单位
   #    sfaa014 LIKE sfaa_t.sfaa014, #BOM版本
   #    sfaa015 LIKE sfaa_t.sfaa015, #BOM有效日期
   #    sfaa016 LIKE sfaa_t.sfaa016, #工艺编号
   #    sfaa017 LIKE sfaa_t.sfaa017, #部门供应商
   #    sfaa018 LIKE sfaa_t.sfaa018, #协作据点
   #    sfaa019 LIKE sfaa_t.sfaa019, #预计开工日
   #    sfaa020 LIKE sfaa_t.sfaa020, #预计完工日
   #    sfaa021 LIKE sfaa_t.sfaa021, #母工单单号
   #    sfaa022 LIKE sfaa_t.sfaa022, #参考原始单号
   #    sfaa023 LIKE sfaa_t.sfaa023, #参考原始项次
   #    sfaa024 LIKE sfaa_t.sfaa024, #参考原始项序
   #    sfaa025 LIKE sfaa_t.sfaa025, #前工单单号
   #    sfaa026 LIKE sfaa_t.sfaa026, #料表批号(PBI)
   #    sfaa027 LIKE sfaa_t.sfaa027, #No Use
   #    sfaa028 LIKE sfaa_t.sfaa028, #项目编号
   #    sfaa029 LIKE sfaa_t.sfaa029, #WBS
   #    sfaa030 LIKE sfaa_t.sfaa030, #活动
   #    sfaa031 LIKE sfaa_t.sfaa031, #理由码
   #    sfaa032 LIKE sfaa_t.sfaa032, #紧急比率
   #    sfaa033 LIKE sfaa_t.sfaa033, #优先级
   #    sfaa034 LIKE sfaa_t.sfaa034, #预计入库库位
   #    sfaa035 LIKE sfaa_t.sfaa035, #预计入库储位
   #    sfaa036 LIKE sfaa_t.sfaa036, #手册编号
   #    sfaa037 LIKE sfaa_t.sfaa037, #保税核准文号
   #    sfaa038 LIKE sfaa_t.sfaa038, #保税核销
   #    sfaa039 LIKE sfaa_t.sfaa039, #备料已生成
   #    sfaa040 LIKE sfaa_t.sfaa040, #生产工艺路线已审核
   #    sfaa041 LIKE sfaa_t.sfaa041, #冻结
   #    sfaa042 LIKE sfaa_t.sfaa042, #返工
   #    sfaa043 LIKE sfaa_t.sfaa043, #备置
   #    sfaa044 LIKE sfaa_t.sfaa044, #FQC
   #    sfaa045 LIKE sfaa_t.sfaa045, #实际开始发料日
   #    sfaa046 LIKE sfaa_t.sfaa046, #最后入库日
   #    sfaa047 LIKE sfaa_t.sfaa047, #生管结案日
   #    sfaa048 LIKE sfaa_t.sfaa048, #成本结案日
   #    sfaa049 LIKE sfaa_t.sfaa049, #已发料套数
   #    sfaa050 LIKE sfaa_t.sfaa050, #已入库合格量
   #    sfaa051 LIKE sfaa_t.sfaa051, #已入库不合格量
   #    sfaa052 LIKE sfaa_t.sfaa052, #Bouns
   #    sfaa053 LIKE sfaa_t.sfaa053, #工单转入数量
   #    sfaa054 LIKE sfaa_t.sfaa054, #工单转出数量
   #    sfaa055 LIKE sfaa_t.sfaa055, #下线数量
   #    sfaa056 LIKE sfaa_t.sfaa056, #报废数量
   #    sfaa057 LIKE sfaa_t.sfaa057, #委外类型
   #    sfaa058 LIKE sfaa_t.sfaa058, #参考数量
   #    sfaa059 LIKE sfaa_t.sfaa059, #预计入库批号
   #    sfaa060 LIKE sfaa_t.sfaa060, #参考单位
   #    sfaa061 LIKE sfaa_t.sfaa061, #工艺
   #    sfaa062 LIKE sfaa_t.sfaa062, #纳入APS计算
   #    sfaa063 LIKE sfaa_t.sfaa063, #来源分批序
   #    sfaa064 LIKE sfaa_t.sfaa064, #参考原始分批序
   #    sfaa065 LIKE sfaa_t.sfaa065, #生管结案状态
   #    sfaa066 LIKE sfaa_t.sfaa066, #多角流程编号
   #    sfaa067 LIKE sfaa_t.sfaa067, #多角流进程号
   #    sfaa068 LIKE sfaa_t.sfaa068, #成本中心
   #    sfaa069 LIKE sfaa_t.sfaa069, #可供给量
   #    sfaa070 LIKE sfaa_t.sfaa070, #原始预计完工日期
   #    sfaa071 LIKE sfaa_t.sfaa071, #齐料套数
   #    sfaa072 LIKE sfaa_t.sfaa072  #保税否
   #END RECORD
   ##161124-00048#20 add(e)
   #170605-00013#1-e-mark
   DEFINE l_close         LIKE type_t.chr1
   DEFINE l_imaa001       LIKE imaa_t.imaa001
   DEFINE l_xcck002       LIKE xcck_t.xcck002
   DEFINE l_xcck010       LIKE xcck_t.xcck010
   DEFINE l_xcck011       LIKE xcck_t.xcck011
   DEFINE l_xcck017       LIKE xcck_t.xcck017
   DEFINE l_date          LIKE type_t.dat
   #170617-00245#1 add(s)
   DEFINE l_str  STRING
   DEFINE l_str1 STRING
   DEFINE l_str2 STRING
   DEFINE l_str3 STRING
   DEFINE i               LIKE type_t.num10
   #170617-00245#1 add(e)
   DEFINE l_cnt           LIKE type_t.num10  #200120-00015#1
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET l_date = g_edate + 1
   
   LET g_stat_cnt = 0
   LET g_stat_begin = TIME
   
   
   #161121-00018#5---add---s
   IF g_sys_6003 = 'Y' THEN 
      CALL s_axcp500_avg_wip_process('Y',p_xcbb006,p_seq)
   ELSE
   #161121-00018#5---add---s    
      #元件投入
      CALL s_axcp500_avg1_wip_2_2('Y',p_xcbb006,p_seq)
           RETURNING l_success
    
      LET g_sfaa028 = NULL   #wujie 160522   #g_sfaa028 要定义在azzi908里
    
      FOREACH s_axcp500_avg_rework_cs1 USING p_xcbb006
#                                        INTO l_sfaa.*,g_gywwrk   #add zhangllc 160131 add g_gywwrk #190513-00024#1 mark 
                                        #190513-00024#1 add-S
                                        INTO l_sfaa.sfaaent,l_sfaa.sfaasite,l_sfaa.sfaadocno,l_sfaa.sfaadocdt,l_sfaa.sfaa003,l_sfaa.sfaa010,l_sfaa.sfaa011,l_sfaa.sfaa012,
                                             l_sfaa.sfaa013,l_sfaa.sfaa028,l_sfaa.sfaa042,l_sfaa.sfaa048,l_sfaa.sfaa057,g_gywwrk
                                        #190513-00024#1 add-E
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = 'FOREACH s_axcp500_avg_rework_cs1'
            LET g_errparam.popup  = TRUE
            CALL cl_err()  
            CALL s_axcp500_ins_error('','','','',l_sfaa.sfaadocno,'','','',l_sfaa.sfaa010,'','',
                                     '',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_rework_cs1')         
            CONTINUE FOREACH     
         END IF
    
#   wujie 160522 --begin
         IF cl_null(l_sfaa.sfaa028) THEN
            LET g_sfaa028 = ' '   #g_sfaa028是s_axcp500_get_xccd里用的，给空格是为了和别的地方调用s_axcp500_get_xccd区分开，其他地方都是null，唯有这里是空格
         ELSE
            LET g_sfaa028 = l_sfaa.sfaa028    
         END IF
#   wujie 160522 --end
    
         IF g_bgjob <> "Y" THEN      
            LET g_mesg = g_stat_msg.msg2 CLIPPED,p_xcbb006 USING "<<&",g_stat_msg.msg7 CLIPPED,':',l_sfaa.sfaadocno
            #170617-00245#1 add(s)
            LET i = 60
            LET l_str = g_mesg
            LET l_str2 = l_str
            WHILE l_str2.getLength()>60 
               LET l_str1 = l_str.subString(1,i)
               LET l_str2 = l_str.subString(i+1,l_str.getLength())
               LET l_str = l_str1,'\n',l_str2
               LET i = i+60+2   #加上\n的两个字符
            END WHILE  
            CALL cl_progress_no_window_ing(l_str) 
            #170617-00245#1 add(e)            
            #CALL cl_progress_no_window_ing(g_mesg)   #170617-00245#1 mark
         END IF         
         
         CALL s_axcp500_get_xccd(p_seq,l_sfaa.sfaasite,l_sfaa.sfaadocno,'','','','',l_sfaa.sfaa010)
              RETURNING g_xccd.* 
    
         #STEP -3 取当期的人工/加工/制费
         CALL s_axcp500_wip_2_3()
              RETURNING l_success   
      
         #STEP -4 取当期的在制成本调整
         #200120-00015#1---add---s
         LET l_cnt = 0
         EXECUTE s_axcp500_avg1_chk_xccp_p USING p_seq,l_sfaa.sfaadocno INTO l_cnt 
         IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF 
         IF l_cnt > 0 THEN 
         #200120-00015#1---add---e
            CALL s_axcp500_wip_2_4()
                 RETURNING l_success   
         END IF#200120-00015#1 
              
         LET l_close = 'N'  #结案否
         IF l_sfaa.sfaa048 >= g_bdate AND l_sfaa.sfaa048 < l_date THEN
            LET l_close = 'Y'
         END IF      
         LET g_sfaa028 = NULL   #wujie 160522
         LET g_stat_cnt = g_stat_cnt + 1
      END FOREACH
      
      #整批转出
      CALL s_axcp500_avg1_wip_4_2('Y',p_xcbb006,p_seq)
           RETURNING l_success   
   END IF  
   #161121-00018#5
   #xccd=SUM(xcce)
   CALL s_axcp500_avg1_wip_5(p_xcbb006,p_seq)
        RETURNING l_success   
        
   CALL s_axcp500_avg1_set_xcck_4(p_xcbb006,p_seq)
        RETURNING l_success
   IF NOT l_success THEN
   
   END IF         
        
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(5,g_stat_begin,g_stat_end,g_stat_cnt)      
   
   #返工工单时,也可能会入联产品
   CALL s_axcp500_avg_coproduct(p_xcbb006,1,'Y','3')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF 
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 处理xcce的结余，差异
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_sum_xcce(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_sum_xcce(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   

   UPDATE xcce_tmp SET xcce901  = xcce101  + xcce201  + xcce205  + xcce207 + 
                                  xcce209  + xcce301  + xcce303  + xcce307,
                      xcce902   = xcce102  + xcce202  + xcce206  + xcce208 + 
                                  xcce210  + xcce302  + xcce304  + xcce308,
                      xcce902a  = xcce102a + xcce202a + xcce206a + xcce208a + 
                                  xcce210a + xcce302a + xcce304a + xcce308a,
                      xcce902b  = xcce102b + xcce202b + xcce206b + xcce208b + 
                                  xcce210b + xcce302b + xcce304b + xcce308b,
                      xcce902c  = xcce102c + xcce202c + xcce206c + xcce208c + 
                                  xcce210c + xcce302c + xcce304c + xcce308c,
                      xcce902d  = xcce102d + xcce202d + xcce206d + xcce208d + 
                                  xcce210d + xcce302d + xcce304d + xcce308d,
                      xcce902e  = xcce102e + xcce202e + xcce206e + xcce208e + 
                                  xcce210e + xcce302e + xcce304e + xcce308e,
                      xcce902f  = xcce102f + xcce202f + xcce206f + xcce208f + 
                                  xcce210f + xcce302f + xcce304f + xcce308f,
                      xcce902g  = xcce102g + xcce202g + xcce206g + xcce208g + 
                                  xcce210g + xcce302g + xcce304g + xcce308g,
                      xcce902h  = xcce102h + xcce202h + xcce206h + xcce208h + 
                                  xcce210h + xcce302h + xcce304h + xcce308h
    WHERE xcce001 = p_seq
      #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
      #AND EXISTS ( SELECT 1 FROM xccd_tmp,s_axcp500_tmp
      #              WHERE xccd006 = xcce006
      #                AND xccd001 = xcce001
      #                AND xccd007 = imaa001
      #                #AND xccd008 = xccc007  #add zhangllc 150730 xccd不存特征的
      #                AND xcbb006 = p_xcbb006 )
      AND EXISTS (SELECT 1 FROM xccd_tmp,sfac_tmp2
                   WHERE xccd006 = xcce006 AND xccd001 = xcce001
                     AND xccd006 = sfacdocno AND clevel = p_xcbb006 )
      #mod zhangllc 160528 SBS4--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                      
                      
#   #xcce303/xcce304 差异处理
#   UPDATE xcce_tmp SET xcce303  = xcce303  + xcce901  * -1 ,
#                       xcce304  = xcce304  + xcce902  * -1 ,
#                       xcce304a = xcce304a + xcce902a * -1 ,
#                       xcce304b = xcce304b + xcce902b * -1 ,
#                       xcce304c = xcce304c + xcce902c * -1 ,
#                       xcce304d = xcce304d + xcce902d * -1 ,
#                       xcce304e = xcce304e + xcce902e * -1 ,
#                       xcce304f = xcce304f + xcce902f * -1 ,
#                       xcce304g = xcce304g + xcce902g * -1 ,
#                       xcce304h = xcce304h + xcce902h * -1 
#    WHERE xcce001 = p_seq
#      AND EXISTS ( SELECT 1 FROM xccd_tmp,s_axcp500_tmp
#                    WHERE xccd006 = xcce006
#                      AND xccd001 = xcce001
#                      AND xccd007 = imaa001
#                      AND xccd008 = xccc007  #add zhangllc 150730
#                      AND xcbb006 = p_xcbb006 )                       
#      AND xcce901 = 0 AND xcce902 <> 0 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce901"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF
            
            
#   #            
#   UPDATE xcce_tmp SET xcce901  = 0 ,
#                       xcce902  = 0 ,
#                       xcce902a = 0 ,
#                       xcce902b = 0 ,
#                       xcce902c = 0 ,
#                       xcce902d = 0 ,
#                       xcce902e = 0 ,
#                       xcce902f = 0 ,
#                       xcce902g = 0 ,
#                       xcce902h = 0 
#    WHERE xcce001 = p_seq
#      AND EXISTS ( SELECT 1 FROM xccd_tmp,s_axcp500_tmp
#                    WHERE xccd006 = xcce006
#                      AND xccd001 = xcce001
#                      AND xccd007 = imaa001
#                      AND xccd008 = xccc007  #add zhangllc 150730
#                      AND xcbb006 = p_xcbb006 )                       
#      AND xcce901 = 0 AND xcce902 <> 0 
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce901  = 0"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF
   
   
   LET r_success = TRUE
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 处理xccz的结余，差异
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_sum_xccz(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-02-16 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_sum_xccz(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   

   UPDATE xccz_tmp SET xccz901  = xccz101  + xccz201  + xccz205  + xccz207 + 
                                  xccz209  + xccz301  + xccz303  + xccz307,
                       xccz902  = xccz102  + xccz202  + xccz206  + xccz208 + 
                                  xccz210  + xccz302  + xccz304  + xccz308
    WHERE xccz001 = p_seq
      #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
      #AND EXISTS ( SELECT 1 FROM xccd_tmp,s_axcp500_tmp
      #              WHERE xccd006 = xccz006
      #                AND xccd001 = xccz001
      #                AND xccd007 = imaa001
      #                #AND xccd008 = xccc007  #add zhangllc 150730 xccd不存特征的
      #                AND xcbb006 = p_xcbb006 )
      AND EXISTS ( SELECT 1 FROM xccd_tmp,sfac_tmp2
                    WHERE xccd006 = xccz006   AND xccd001 = xccz001
                      AND xccd006 = sfacdocno AND clevel = p_xcbb006 )
      #mod zhangllc 160528 SBS4--e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccz_tmp SET xccz901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                      
                      
   #xccz303/xccz304 差异处理
   UPDATE xccz_tmp SET xccz303  = xccz303  + xccz901  * -1 ,
                       xccz304  = xccz304  + xccz902  * -1 
    WHERE xccz001 = p_seq
      #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
      #AND EXISTS ( SELECT 1 FROM xccd_tmp,s_axcp500_tmp
      #              WHERE xccd006 = xccz006
      #                AND xccd001 = xccz001
      #                AND xccd007 = imaa001
      #                #AND xccd008 = xccc007  #add zhangllc 150730 xccd不存特征的
      #                AND xcbb006 = p_xcbb006 )   
      AND EXISTS ( SELECT 1 FROM xccd_tmp,sfac_tmp2
                    WHERE xccd006 = xccz006   AND xccd001 = xccz001
                      AND xccd006 = sfacdocno AND clevel = p_xcbb006 )
      #mod zhangllc 160528 SBS4--e                    
      AND xccz901 = 0 AND xccz902 <> 0 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccz_tmp SET xccz901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
            
            
   #            
   UPDATE xccz_tmp SET xccz901  = 0 ,
                       xccz902  = 0 
    WHERE xccz001 = p_seq
      #mod zhangllc 160528 SBS4--s 如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符
      #AND EXISTS ( SELECT 1 FROM xccd_tmp,s_axcp500_tmp
      #              WHERE xccd006 = xccz006
      #                AND xccd001 = xccz001
      #                AND xccd007 = imaa001
      #                #AND xccd008 = xccc007  #add zhangllc 150730 xccd不存特征的
      #                AND xcbb006 = p_xcbb006 )  
      AND EXISTS ( SELECT 1 FROM xccd_tmp,sfac_tmp2
                    WHERE xccd006 = xccz006   AND xccd001 = xccz001
                      AND xccd006 = sfacdocno AND clevel = p_xcbb006 )
      #mod zhangllc 160528 SBS4--e                     
      AND xccz901 = 0 AND xccz902 <> 0 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccz_tmp SET xccz901  = 0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   
   
   LET r_success = TRUE
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 月加权-料件的在制成本计算 - 前置处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_part1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_part1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end
   #建立临时表
   CALL s_axcp500_avg1_repeat_wip_cre_table()
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   #在制整批处理 - 期初处理 xccd
   CALL s_axcp500_avg1_repeat_wip_1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   #在制整批处理 - 期初处理 xcce
   CALL s_axcp500_avg1_repeat_wip_2_1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   #在制整批处理 - DL+OH+SUB
   CALL s_axcp500_avg1_repeat_wip_2_3('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
   
   #在制整批处理 - ADJUST
   CALL s_axcp500_avg1_repeat_wip_2_4('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF

  
   #在制整批处理 - 转出逻辑-1
   CALL s_axcp500_avg1_repeat_wip_4_1('1')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF
      
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 月加权-料件的在制成本计算
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip(p_xcbb006,p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_date          LIKE type_t.dat
   
   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET l_date = g_edate + 1

#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end

   LET g_stat_cnt = 0
   LET g_stat_begin = TIME
   
   #元件投入
   CALL s_axcp500_avg1_repeat_wip_2_2(p_xcbb006,p_seq)
        RETURNING l_success
   
   #转出逻辑-2
   CALL s_axcp500_avg1_repeat_wip_4_2(p_xcbb006,p_seq)
        RETURNING l_success   
           
   #xccd=SUM(xcce)
   CALL s_axcp500_avg1_wip_5(p_xcbb006,p_seq)
        RETURNING l_success   
        
   LET g_stat_end = TIME
   CALL s_axcp500_avg1_stats_cnt(3,g_stat_begin,g_stat_end,g_stat_cnt)   
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 重复性生产- 整批在制处理 - 产生xccd
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-05 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_rate          LIKE type_t.num26_10
   DEFINE l_srda003       LIKE srda_t.srda003
   DEFINE l_imaa006       LIKE imaa_t.imaa006
#  DEFINE l_imag014       LIKE imag_t.imag014
   DEFINE l_imae016       LIKE imae_t.imae016
   DEFINE l_srda006       LIKE type_t.num26_10

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()

#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end

   
   #2.收集重复性生产信息
   LET g_sql = " INSERT INTO srda_tmp ",
               " SELECT srdaent,srdasite,srda002,srda003,srda005,SUM(srda006),'',0,'',''",
               "   FROM srda_t ",
               "  WHERE srdaent = ",g_enterprise,
               "    AND srda000 = ",g_yy,
               "    AND srda001 = ",g_pp,
               "  GROUP BY srdaent,srdasite,srda002,srda003,srda005 "

   PREPARE cre_srda_tmp_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE cre_srda_tmp_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   EXECUTE cre_srda_tmp_p1
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE cre_srda_tmp_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   FREE cre_srda_tmp_p1
   
   #3.更新工单号
   LET g_sql = " UPDATE srda_tmp SET srdadocno = ( SELECT UNIQUE inaj020 FROM inaj_tmp ",
               "                                    WHERE inajsite = srdasite ",
               "                                      AND inaj040  = srda002  ",
               "                                      AND inaj041  = srda003  ",
               "                                      AND inaj043  = srda005 ) "
   
   PREPARE cre_srda_tmp_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE cre_srda_tmp_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   EXECUTE cre_srda_tmp_p2
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE cre_srda_tmp_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   FREE cre_srda_tmp_p2

   #更新成本阶,成本单位,生产单位
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO srda_tmp a ",
#              "       USING ( SELECT UNIQUE imaesite,imaa001,xcbb006,nvl(imag014,imaa006) imag014,nvl(imae016,imaa006) imae016",
               "       USING ( SELECT UNIQUE imaesite,imaa001,xccc007,xcbb006,imaa006,nvl(imae016,imaa006) imae016", #mod zhangllc 150730 add xccc007特征
               "                 FROM s_axcp500_tmp,imae_t ",
               "                WHERE imaa001  = imae001  ",
               "                  AND imaeent = ",g_enterprise,
               "             ) b ",
               "        ON ( a.srdasite = b.imaesite  ",
               #"       AND   a.srda005  = b.xccc007   ",  #特征 add zhangllc 150730 #170112-00041#1 mark
               "       AND   a.srda003  = b.imaa001 ) ",
               "        WHEN MATCHED THEN ",
               "             UPDATE SET a.xcbb006 = b.xcbb006,",
#              "                        a.imag014 = b.imag014,",
               "                        a.imaa006 = b.imaa006,",
               "                        a.imae016 = b.imae016 "
   #PGS(D)-00824 --- end ---
   PREPARE cre_srda_tmp_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE cre_srda_tmp_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   EXECUTE cre_srda_tmp_p3
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE cre_srda_tmp_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   FREE cre_srda_tmp_p3
   
   #工单号要唯一,若不唯一,则出现错误
   CREATE UNIQUE INDEX srda_tmp_02 ON srda_tmp(srdadocno);
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE UNIQUE INDEX srda_tmp_02"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  
   
   #srda006 剩余套数转至成本单位下的数量
   DECLARE s_axcp500_repeat_wip_1_cs1 CURSOR FOR
#   SELECT srda003,imag014,imae016,srda006
    SELECT srda003,imaa006,imae016,srda006
      FROM srda_tmp
#    WHERE imag014 <> imae016
     WHERE imaa006 <> imae016
#  FOREACH s_axcp500_repeat_wip_1_cs1 INTO l_srda003,l_imag014,l_imae016,l_srda006
   FOREACH s_axcp500_repeat_wip_1_cs1 INTO l_srda003,l_imaa006,l_imae016,l_srda006
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH s_axcp500_repeat_wip_1_cs1"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CONTINUE FOREACH
      END IF

#     CALL s_aooi250_convert_qty1(l_srda003,l_imae016,l_imag014,1)
      CALL s_aooi250_convert_qty1(l_srda003,l_imae016,l_imaa006,1)
           RETURNING l_success,l_rate
      IF cl_null(l_rate) OR l_rate = 0 THEN
         LET l_rate = 1
      END IF

      UPDATE srda_tmp SET srda006 = srda006 * l_rate
       WHERE srda003 = l_srda003
#        AND imag014 = l_imag014
         AND imaa006 = l_imaa006
         AND imae016 = l_imae016
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE srda_tmp SET srda006 = srda006 * l_rate"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CONTINUE FOREACH
      END IF
      
   END FOREACH
   
   #整批INSERT xccd_t
   LET g_sql = "INSERT INTO xccd_tmp (xccdent ,xccdcomp,xccdld  ,xccd001 ,xccd002 ,",
               "                      xccd003 ,xccd004 ,xccd005 ,xccd006 ,xccd007 ,",
               "                      xccd008 ,xccd009 ,xccd010 ,xccd011 ,xccd012 ,",
               "                      xccd013 ,xccd014 ,                           ",
               "                      xccd101 ,xccd102 ,xccd102a,xccd102b,xccd102c,",
               "                      xccd102d,xccd102e,xccd102f,xccd102g,xccd102h,",
               "                      xccd200 ,                                    ",
               "                      xccd201 ,xccd202 ,xccd202a,xccd202b,xccd202c,",
               "                      xccd202d,xccd202e,xccd202f,xccd202g,xccd202h,",
               "                      xccd204 ,xccd204a,xccd204b,xccd204c,         ",
               "                      xccd204d,xccd204e,xccd204f,xccd204g,xccd204h,",
               "                      xccd301 ,xccd302 ,xccd302a,xccd302b,xccd302c,",
               "                      xccd302d,xccd302e,xccd302f,xccd302g,xccd302h,",
               "                      xccd303 ,xccd304 ,xccd304a,xccd304b,xccd304c,",
               "                      xccd304d,xccd304e,xccd304f,xccd304g,xccd304h,",
               "                      xccd901 ,xccd902 ,xccd902a,xccd902b,xccd902c,",
               "                      xccd902d,xccd902e,xccd902f,xccd902g,xccd902h,",
               "                      xccdtime)                                    ",              
              #" SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",                    #161114-00003#1 mark
              #" SELECT /*+ PARALLEL(4) */ UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',", #161114-00003#1 add #170110-00028#1                
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",  #170110-00028#1                
                "      '",g_xcat001,"',",g_yy,",",g_pp,",srdadocno,srda003,",
                "      srda005,' ',' ','",g_curr[p_seq].curr,"','Y',",
                "      '','',",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      ? ",
                "  FROM srda_tmp,s_axcp500_tmp ",
               " WHERE srda003 = imaa001 "                            #料件
#              "   AND ",g_wc
               
   PREPARE s_axcp500_avg1_repeat_wip_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_1_p1 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #更新期初资料 - 上期的xccd
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp a   ",
               "       USING ( SELECT * FROM xccd_t ",
               "                WHERE xccdent = ",g_enterprise,
               #"                WHERE (xccd007,xccd008) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp ) ", #mod zhangllc 150804
               "                  AND xccd007 IN ( SELECT imaa001 FROM s_axcp500_tmp ) ",
               "                  AND xccdld  = '",g_ld,"'",
               "                  AND xccd001 = '",p_seq,"'",
               "                  AND xccd003 = '",g_xcat001,"'",
               "                  AND xccd004 =  ",g_last_yy,
               "                  AND xccd005 =  ",g_last_pp,
               "                  AND xccd012 = 'Y' ",
               "                  AND (xccd901 <> 0 AND xccd902 <> 0 ) ",
               "              ) b ",
               "          ON ( a.xccdent = b.xccdent         ",
               "          AND  a.xccdld  = b.xccdld          ",
               "          AND  a.xccd001 = b.xccd001         ",
               "          AND  a.xccd002 = b.xccd002         ",
               "          AND  a.xccd003 = b.xccd003         ",        
               "          AND  a.xccd006 = b.xccd006         ",
               "          AND  a.xccd012 = b.xccd012 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccd101  = nvl(b.xccd901 ,0) ,   ",
               "                  a.xccd102  = nvl(b.xccd902 ,0) ,   ",
               "                  a.xccd102a = nvl(b.xccd902a,0) ,   ",    
               "                  a.xccd102b = nvl(b.xccd902b,0) ,   ",    
               "                  a.xccd102c = nvl(b.xccd902c,0) ,   ",    
               "                  a.xccd102d = nvl(b.xccd902d,0) ,   ",    
               "                  a.xccd102e = nvl(b.xccd902e,0) ,   ",    
               "                  a.xccd102f = nvl(b.xccd902f,0) ,   ",    
               "                  a.xccd102g = nvl(b.xccd902g,0) ,   ",    
               "                  a.xccd102h = nvl(b.xccd902h,0) ,   ",
               "                  a.xccd901  = nvl(b.xccd901 ,0) ,   ",
               "                  a.xccd902  = nvl(b.xccd902 ,0) ,   ",
               "                  a.xccd902a = nvl(b.xccd902a,0) ,   ",    
               "                  a.xccd902b = nvl(b.xccd902b,0) ,   ",    
               "                  a.xccd902c = nvl(b.xccd902c,0) ,   ",    
               "                  a.xccd902d = nvl(b.xccd902d,0) ,   ",    
               "                  a.xccd902e = nvl(b.xccd902e,0) ,   ",    
               "                  a.xccd902f = nvl(b.xccd902f,0) ,   ",    
               "                  a.xccd902g = nvl(b.xccd902g,0) ,   ",    
               "                  a.xccd902h = nvl(b.xccd902h,0)     ",                           
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccdent,b.xccdcomp,b.xccdld, b.xccd001,b.xccd002,    ",  
               "                     b.xccd003,",g_yy,",",g_pp,",b.xccd006,b.xccd007,       ",
               "                     b.xccd008,b.xccd009, b.xccd010,b.xccd011,b.xccd012,    ",
               "                     b.xccd013,b.xccd014,                                   ",
               "                     b.xccd901,b.xccd902,b.xccd902a,b.xccd902b,b.xccd902c,  ",    #101.期初  
               "                     b.xccd902d,b.xccd902e,b.xccd902f,b.xccd902g,b.xccd902h,",
               "                     0,                                          ",               #200.本期投入工时
               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #201.本期本阶投入
               "                     0,0,0,0,0,0,0,0,0,                          ",               #204.本期下阶投入
               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                        ",               #303.差异转出
               "                     b.xccd901,b.xccd902,b.xccd902a,b.xccd902b,b.xccd902c,  ",    #901.期末结存
               "                     b.xccd902d,b.xccd902e,b.xccd902f,b.xccd902g,b.xccd902h,",
               "                     ? )                                        "                #最近成本计算时间                         
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_1_p2 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   
   #处理xccd002
   #成本域
   IF g_field_type = '1' THEN
     
     #LET g_sql = "UPDATE xccd_tmp SET xccd002 = (SELECT xcbf001 FROM xcbf_t,srda_tmp ",                    #161114-00003#1 mark
     #LET g_sql = "UPDATE xccd_tmp SET xccd002 = (SELECT /*+ PARALLEL(4) */ xcbf001 FROM xcbf_t,srda_tmp ", #161114-00003#1 add   #170110-00028#1     
      LET g_sql = "UPDATE xccd_tmp SET xccd002 = (SELECT xcbf001 FROM xcbf_t,srda_tmp ", #170110-00028#1     
                  "                                WHERE xcbfent  = ",g_enterprise,
                  "                                  AND xcbfcomp = '",g_comp,"'",
                  "                                  AND xcbf002  = srdasite ",
                  "                                  AND srdaent  = xcbfent ",
                  "                                  AND srdadocno = xccd006 )",
                  " WHERE xccd012 = 'Y' "
      PREPARE s_axcp500_avg1_repeat_wip_1_p3 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_1_p3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg1_repeat_wip_1_p3 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_1_p3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF  
    
      UPDATE xccd_tmp SET xccd002 = ' ' 
       WHERE xccd002 IS NULL
         AND xccd012 = 'Y'
   END IF               
               
   #取xccd200 (本期投入工時)
   #repeat 20150424 重复性的人员制费没地方维护
   #yemy axct200需要加入重复性工单的工时统计信息
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp ",
               "       USING (SELECT xcbi002,SUM(xcbi201) xcbi201 ",
               "                FROM xcbh_t,xcbi_t     ",   
               "               WHERE xcbhent   = xcbient AND xcbient = ",g_enterprise,
               "                 AND xcbhdocno = xcbidocno ",
               "                 AND xcbh001   BETWEEN '",g_bdate,"' AND '",g_edate,"'",
               "                 AND xcbhstus  = 'Y' ",
               "               GROUP BY xcbi002 ) b",
               "          ON ( b.xcbi002 = xccd006 ) ",          
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xccd200  = nvl(b.xcbi201,0)  ",
               "      WHERE xccd012 = 'Y' "            
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_1_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_1_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF      
   
   #201119-00005#1 add--s           
   #取xccd301(本期轉出數量)
   LET g_sql = " INSERT INTO repeat_wip_tmp1 ",
               #"        SELECT inajsite,inaj020,srda003,inaj005,SUM(inaj011*inaj014*-1) qty,100.000000 xcbp006 ",     #160518-00033#2 mark
              #161208-00069#1-s-mark
              #"        SELECT inajsite,inaj020,srda003,inaj005,SUM(inaj011*inaj048/inaj049*-1) qty,100.000000 xcbp006 ",     #160518-00033#2 add
              #"          FROM srda_tmp,inaj_tmp ",
              #161208-00069#1-e-mark
              #161208-00069#1　-s-add   
               "        SELECT inajsite,inaj020,srda003,inaj005, ",
               #170705-00006#1 mark(S)
               #"               SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(inaj011*inaj048/inaj049*-1,0),6),ooca002)  ",
               #"                         WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(inaj011*inaj048/inaj049*-1,0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(inaj011*inaj048/inaj049*-1,0),6),ooca002) ",
               #"                                                     ELSE round(round(COALESCE(inaj011*inaj048/inaj049*-1,0),6),ooca002)-(1/power(10,ooca002)) ",
               #"                                                   END )",
               #"                         WHEN ooca004 = '3'  THEN trunc(round(COALESCE(inaj011*inaj048/inaj049*-1,0),6),ooca002)",
               #"                         WHEN ooca004 = '4'  THEN ceil(round(COALESCE(inaj011*inaj048/inaj049*-1,0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "               SUM((CASE WHEN ooca004 = '1'  THEN round(round(COALESCE(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*-1 END),0),6),ooca002)  ",
               #"                         WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*-1 END),0),6),ooca002),(2/power(10,ooca002)))=0 THEN round(round(COALESCE(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*-1 END),0),6),ooca002) ",  #200922-00036#1 mark
               "                         WHEN ooca004 = '2'  THEN (CASE WHEN MOD(round(round(COALESCE(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*-1 END),0),6),ooca002),CAST((2/power(10, 2)) as number))=0 THEN round(round(COALESCE(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*-1 END),0),6),ooca002) ",  #200922-00036#1
               "                                                     ELSE round(round(COALESCE(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*-1 END),0),6),ooca002)-(1/power(10,ooca002)) ",
               "                                                   END )",
               "                         WHEN ooca004 = '3'  THEN trunc(round(COALESCE(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*-1 END),0),6),ooca002)",
               "                         WHEN ooca004 = '4'  THEN ceil(round(COALESCE(( CASE inaj049 WHEN 0 THEN 0 ELSE inaj011*inaj048/inaj049*-1 END),0),6)*power(10,ooca002))/power(10,ooca002) ",
               #170705-00006#1 add(E)
               "                    END )) qty, ",    
               "               100.000000 xcbp006 ",               
               "          FROM srda_tmp,inaj_tmp LEFT OUTER JOIN imaa_t ON imaaent = inajent AND imaa001 = inaj005  ", 
               "                                 LEFT OUTER JOIN ooca_t ON oocaent = inajent AND ooca001 = imaa006 ",
              #161208-00069#1　-e-add               
               "         WHERE inaj036 IN ('110','111','112','113','103','104','105','106')",    #一般/联产品/多产出主件/拆件/回收
               "           AND srdadocno = inaj020 ",
               "         GROUP BY inajsite,inaj020,srda003,inaj005 "
   #201119-00005#1 add--e    
   PREPARE s_axcp500_avg1_repeat_wip_1_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_1_p5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_1_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     
   
   #取联产品入库比例
   #IF g_sys_6009 <> '1' THEN  #1.按入库比例
   IF g_sys_6009 <> '1' AND g_sys_6017 = 'Y' THEN  #1.按入库比例  #mod zhangllc 150717 聯產品入庫折算在制轉出數量不按分配率計算,那么在制转出数量在计算时联产品的转出数量不需要乘以分配率 
      UPDATE repeat_wip_tmp1 SET xcbp006 = ( SELECT xcbo004 FROM xcbo_t
                                              WHERE xcboent  = g_enterprise
                                                AND xcbosite = inajsite
                                                AND xcbo001  = srda003
                                                AND xcbo002  = inaj005 )
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE repeat_wip_tmp1 xcbp006_1"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF            
      
      UPDATE repeat_wip_tmp1 SET xcbp006 = ( SELECT xcbp006 FROM xcbp_t
                                                 WHERE xcbpent  = g_enterprise
                                                   AND xcbpsite = inajsite
                                                   AND xcbp001  = g_yy
                                                   AND xcbp002  = g_pp
                                                   AND xcbp003  = srda003
                                                   AND xcbp004  = inaj005 )
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE repeat_wip_tmp1 xcbp006_2"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF                                                         
   END IF
   
   UPDATE repeat_wip_tmp1 SET xcbp006 = 100 WHERE xcbp006 IS NULL OR xcbp006 = 0
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE repeat_wip_tmp1 SET xcbp006 = 100"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
      
   #更新xccd301
   
  #LET g_sql = " UPDATE xccd_tmp SET xccd301 = ( SELECT SUM(qty * xcbp006 / 100) FROM repeat_wip_tmp1  ",                    #161114-00003#1 mark
  #LET g_sql = " UPDATE xccd_tmp SET xccd301 = ( SELECT /*+ PARALLEL(4) */ SUM(qty * xcbp006 / 100) FROM repeat_wip_tmp1  ", #161114-00003#1 add #170110-00028#1   
   LET g_sql = " UPDATE xccd_tmp SET xccd301 = ( SELECT SUM(qty * xcbp006 / 100) FROM repeat_wip_tmp1  ", #170110-00028#1   
               "                                  WHERE inaj020 = xccd006 )",
               "  WHERE xccd012 = 'Y' "
   PREPARE s_axcp500_avg1_repeat_wip_1_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_1_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_1_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   
   UPDATE xccd_tmp SET xccd301 = 0 
    WHERE xccd301 IS NULL AND xccd012 = 'Y'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd301 = 0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   
   
   #yemy 
   #本期投入套数xccd201=asrt900(本期剩余套数)-本期转出数量(xccd301)-期初数量(xccd101)
   #ex: xccd201 = 40-(-30)-10=60
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccd_tmp ",
               "       USING srda_tmp ",
               "       ON (xccd006 = srdadocno ) ",
               "  WHEN MATCHED THEN ",
               "       UPDATE SET xccd201 = srda006 - xccd301 - xccd101 ",
               "        WHERE xccd012 = 'Y' "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_1_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_1_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_1_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_1_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                
                
   UPDATE xccd_tmp SET xccd201 = 0 
    WHERE xccd201 IS NULL AND xccd012 = 'Y'
      AND xccd012 = 'Y'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd201 = 0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                    
             
   UPDATE xccd_tmp SET xccd201 = (xccd301 * -1 - xccd101) 
    WHERE (xccd201 + xccd101) < xccd301 * -1
      AND xccd012 = 'Y'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccd_tmp SET xccd201 = xccd301 * -1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    

   
   
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 重复性生产- 整批在制处理 - 产生xcce & xcce期初
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_2_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-07 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_2_1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010

   WHENEVER ERROR CONTINUE

#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end

   LET r_success = FALSE
   LET l_date = cl_get_today()
   
   LET l_xcce010 = g_curr[p_seq].curr
   
   #整批插入xcce(各数量/金额为0)
   LET g_sql = "INSERT INTO xcce_tmp(xcceent,  xccecomp, xcceld,   xcce001,  xcce002, ",
               "                   xcce003,  xcce004,  xcce005,  xcce006,  xcce007, ",
               "                   xcce008,  xcce009,  xcce010,                     ",
               "                   xcce101,  xcce102,  xcce102a, xcce102b, xcce102c,",
               "                   xcce102d, xcce102e, xcce102f, xcce102g, xcce102h,",
               "                   xcce201,  xcce202,  xcce202a, xcce202b, xcce202c,",
               "                   xcce202d, xcce202e, xcce202f, xcce202g, xcce202h,",
               "                   xcce205,  xcce206,  xcce206a, xcce206b, xcce206c,",
               "                   xcce206d, xcce206e, xcce206f, xcce206g, xcce206h,",
               "                   xcce207,  xcce208,  xcce208a, xcce208b, xcce208c,",
               "                   xcce208d, xcce208e, xcce208f, xcce208g, xcce208h,",
               "                   xcce209,  xcce210,  xcce210a, xcce210b, xcce210c,",
               "                   xcce210d, xcce210e, xcce210f, xcce210g, xcce210h,",
               "                   xcce301,  xcce302,  xcce302a, xcce302b, xcce302c,",
               "                   xcce302d, xcce302e, xcce302f, xcce302g, xcce302h,",
               "                   xcce303,  xcce304,  xcce304a, xcce304b, xcce304c,",
               "                   xcce304d, xcce304e, xcce304f, xcce304g, xcce304h,",
               "                   xcce307,  xcce308,  xcce308a, xcce308b, xcce308c,",
               "                   xcce308d, xcce308e, xcce308f, xcce308g, xcce308h,",
               "                   xcce901,  xcce902,  xcce902a, xcce902b, xcce902c,",
               "                   xcce902d, xcce902e, xcce902f, xcce902g, xcce902h,",
               "                   xccetime)                                        ",              
              #" SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,",                    #161114-00003#1 mark
              #" SELECT /*+ PARALLEL(4) */ UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,", #161114-00003#1 add  #170110-00028#1             
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,",  #170110-00028#1             
               "       '",g_xcat001,"',",g_yy,",",g_pp,",inaj020,inaj005,",               
               "          inaj006,inaj010,'",l_xcce010,"',",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          ? ",
               "   FROM inaj_tmp,srda_tmp ",
               "  WHERE inaj020 IS NOT NULL ",
               "    AND inaj020 = srdadocno "
#200212-00020#1 mark -S   
#   IF g_sys_6016 = 'Y' THEN
#      LET g_sql = g_sql CLIPPED,
#               "   AND inaj036 IN ('302','303','501','114','107') "               #生产发料/生产退料/盘点 
#   ELSE
#200212-00020#1 mark -E
      LET g_sql = g_sql CLIPPED,
               "   AND inaj036 IN ('302','303','115','501','114','107') "         #生产发料/生产退料/当站下线/盘点 
#   END IF   #200212-00020#1 mark
   
  PREPARE s_axcp500_avg1_repeat_wip_2_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_2_1_p1 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     
   
   #结转上期结余的在制元件成本至本期期初   
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp a ",
               "       USING ( SELECT xcce_t.* FROM xcce_t,srda_tmp ",
               "                WHERE xcceent = srdaent ",
               "                  AND xcce006 = srdadocno ",
               "                  AND xcceent = ",g_enterprise,
               "                  AND xcceld  = '",g_ld,"'",
               "                  AND xcce001 = '",p_seq,"'",
               "                  AND xcce003 = '",g_xcat001,"'",
               "                  AND xcce004 = ",g_last_yy,
               "                  AND xcce005 = ",g_last_pp,
#               "                  AND (xcce901 <> 0 OR xcce902 <> 0 ) ",   #190702-00040#1 mark
               #190702-00040#1 add-S
               "                  AND (xcce901 <> 0 OR xcce902 <> 0 OR xcce902a <> 0 OR xcce902b <> 0 ",
               "                   OR xcce902c <> 0 OR xcce902d <> 0 OR xcce902e <> 0 OR xcce902f <> 0 ",
               "                   OR xcce902g <> 0 OR xcce902h <> 0) ",
               #190702-00040#1 add-E
               "             ) b ",
               "          ON ( a.xcceent = b.xcceent         ",
               "          AND  a.xcceld  = b.xcceld          ",
               "          AND  a.xcce001 = b.xcce001         ",
               "          AND  a.xcce002 = b.xcce002         ",
               "          AND  a.xcce003 = b.xcce003         ",
               "          AND  a.xcce006 = b.xcce006         ",
               "          AND  a.xcce007 = b.xcce007         ",
               "          AND  a.xcce008 = b.xcce008         ",
               "          AND  a.xcce009 = b.xcce009 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcce101  = nvl(b.xcce901 ,0) ,   ",
               "                  a.xcce102  = nvl(b.xcce902 ,0) ,   ",
               "                  a.xcce102a = nvl(b.xcce902a,0) ,   ",    
               "                  a.xcce102b = nvl(b.xcce902b,0) ,   ",    
               "                  a.xcce102c = nvl(b.xcce902c,0) ,   ",    
               "                  a.xcce102d = nvl(b.xcce902d,0) ,   ",    
               "                  a.xcce102e = nvl(b.xcce902e,0) ,   ",    
               "                  a.xcce102f = nvl(b.xcce902f,0) ,   ",    
               "                  a.xcce102g = nvl(b.xcce902g,0) ,   ",    
               "                  a.xcce102h = nvl(b.xcce902h,0) ,   ",
               "                  a.xcce901  = nvl(b.xcce901 ,0) ,   ",
               "                  a.xcce902  = nvl(b.xcce902 ,0) ,   ",
               "                  a.xcce902a = nvl(b.xcce902a,0) ,   ",    
               "                  a.xcce902b = nvl(b.xcce902b,0) ,   ",    
               "                  a.xcce902c = nvl(b.xcce902c,0) ,   ",    
               "                  a.xcce902d = nvl(b.xcce902d,0) ,   ",    
               "                  a.xcce902e = nvl(b.xcce902e,0) ,   ",    
               "                  a.xcce902f = nvl(b.xcce902f,0) ,   ",    
               "                  a.xcce902g = nvl(b.xcce902g,0) ,   ",    
               "                  a.xcce902h = nvl(b.xcce902h,0)     ",                            
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xcceent,b.xccecomp,b.xcceld, b.xcce001,b.xcce002,    ",  
               "                     b.xcce003,",g_yy,",",g_pp,",b.xcce006,b.xcce007,       ",
               "                     b.xcce008,b.xcce009, b.xcce010,                        ",
               "                     b.xcce901,b.xcce902,b.xcce902a,b.xcce902b,b.xcce902c,  ",    #101.期初  
               "                     b.xcce902d,b.xcce902e,b.xcce902f,b.xcce902g,b.xcce902h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #205.本期当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #207.本期一般退料
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #209.本期超领退
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.盘差
               "                     b.xcce901,b.xcce902,b.xcce902a,b.xcce902b,b.xcce902c,  ",    #901.期末结存
               "                     b.xcce902d,b.xcce902e,b.xcce902f,b.xcce902g,b.xcce902h,",
               "                     ? )                                         "                #最近成本计算时间                                    
   #PGS(D)-00824 --- end ---
 
   PREPARE s_axcp500_avg1_repeat_wip_2_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_2_1_p2 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #从上期的xccb中结转期初值
   #PGS(D)-00824 --- end ---

   #从上期的xccb中结转期初值
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp a   ",
               "       USING ( SELECT xccb_t.* FROM xccb_t,srda_tmp ",
               "                WHERE xccbent = srdaent ",
               "                  AND xccb006 = srdadocno ",
               "                  AND xccbent = ",g_enterprise,
               "                  AND xccbld  = '",g_ld,"'",
               "                  AND xccb001 = '",p_seq,"'",
               "                  AND xccb003 = '",g_xcat001,"'",
               "                  AND xccb004 = ",g_last_yy,
               "                  AND xccb005 = ",g_last_pp,
--             "                  AND (xccb101 <> 0 OR xccb102 <> 0 ) ",
               "              ) b    ",                              
               "          ON ( a.xcceent = b.xccbent         ",
               "          AND  a.xcceld  = b.xccbld          ",
               "          AND  a.xcce001 = b.xccb001         ",
               "          AND  a.xcce002 = b.xccb002         ",
               "          AND  a.xcce003 = b.xccb003         ",
               "          AND  a.xcce006 = b.xccb006         ",
               "          AND  a.xcce007 = b.xccb007         ",
               "          AND  a.xcce008 = b.xccb008         ",
               "          AND  a.xcce009 = b.xccb009 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcce101  = nvl(b.xccb101 ,0) ,   ",
               "                  a.xcce102  = nvl(b.xccb102 ,0) ,   ",
               "                  a.xcce102a = nvl(b.xccb102a,0) ,   ",    
               "                  a.xcce102b = nvl(b.xccb102b,0) ,   ",    
               "                  a.xcce102c = nvl(b.xccb102c,0) ,   ",    
               "                  a.xcce102d = nvl(b.xccb102d,0) ,   ",    
               "                  a.xcce102e = nvl(b.xccb102e,0) ,   ",    
               "                  a.xcce102f = nvl(b.xccb102f,0) ,   ",    
               "                  a.xcce102g = nvl(b.xccb102g,0) ,   ",    
               "                  a.xcce102h = nvl(b.xccb102h,0) ,   ",
               "                  a.xcce901  = nvl(b.xccb101 ,0) ,   ",
               "                  a.xcce902  = nvl(b.xccb102 ,0) ,   ",
               "                  a.xcce902a = nvl(b.xccb102a,0) ,   ",    
               "                  a.xcce902b = nvl(b.xccb102b,0) ,   ",    
               "                  a.xcce902c = nvl(b.xccb102c,0) ,   ",    
               "                  a.xcce902d = nvl(b.xccb102d,0) ,   ",    
               "                  a.xcce902e = nvl(b.xccb102e,0) ,   ",    
               "                  a.xcce902f = nvl(b.xccb102f,0) ,   ",    
               "                  a.xcce902g = nvl(b.xccb102g,0) ,   ",    
               "                  a.xcce902h = nvl(b.xccb102h,0)     ",                           
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccbent,b.xccbcomp,b.xccbld, b.xccb001,b.xccb002,    ",  
               "                     b.xccb003,",g_yy,",",g_pp,",b.xccb006,b.xccb007,       ",
#               "                     b.xccb008,b.xccb009, b.xccb010,                        ",  #181119-00040#1 mark
               "                     b.xccb008,b.xccb009, '",g_curr[p_seq].curr,"',         ",  #181119-00040#1 mod
               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #101.期初  
               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #205.本期当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #207.本期一般退料
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #209.本期超领退
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.本期转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.差异转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.盘差
               "                     b.xccb101,b.xccb102,b.xccb102a,b.xccb102b,b.xccb102c,  ",    #901.期末结存
               "                     b.xccb102d,b.xccb102e,b.xccb102f,b.xccb102g,b.xccb102h,",
               "                     ?  )                                        "                #最近成本计算时间                       
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_2_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_2_1_p3 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 重复性生产- 整批在制处理 - 本期材料投入
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_2_2(p_xcbb006,p_seq)
#                  RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-08 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_2_2(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE

#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end

   LET r_success = FALSE
#   LET g_stat_cnt = 0
#   LET g_stat_begin = TIME   

   #更新 xcce201/xcce202 本期本阶投入
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp ",
               "       USING (SELECT xcck001,xcck002,xcck010,xcck011,xcck017,xcck047,srda003,   ",
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h",
               "                FROM xcck_tmp,srda_tmp     ",                         
               "                WHERE xcck020 = '302' ",
               "                  AND xcck047 = srdadocno ",      
               "                  AND xcck001 = '",p_seq,"'",  
               "                  AND xcbb006 = ",p_xcbb006,             
               "                GROUP BY xcck001,xcck002,xcck010,xcck011,xcck017,xcck047,srda003",
               "                ) b ",
               "          ON ( xcce001 = b.xcck001   ",
               "         AND   xcce002 = b.xcck002   ",
               "         AND   xcce006 = b.xcck047   ",       #工单
               "         AND   xcce007 = b.xcck010   ",
               "         AND   xcce008 = b.xcck011   ",
               "         AND   xcce009 = b.xcck017 ) ",       
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcce201  = nvl(b.xcck201 ,0) ,  ",
               "                xcce202  = nvl(b.xcck202 ,0) ,  ",
               "                xcce202a = nvl(b.xcck202a,0) ,  ",
               "                xcce202b = nvl(b.xcck202b,0) ,  ",
               "                xcce202c = nvl(b.xcck202c,0) ,  ",
               "                xcce202d = nvl(b.xcck202d,0) ,  ",
               "                xcce202e = nvl(b.xcck202e,0) ,  ",
               "                xcce202f = nvl(b.xcck202f,0) ,  ",
               "                xcce202g = nvl(b.xcck202g,0) ,  ",
               "                xcce202h = nvl(b.xcck202h,0)    "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_2_2_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_2_2_p1
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                
   
   #更新 xcce205/xcce206 当站下线
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp ",
               "       USING (SELECT xcck001,xcck002,xcck010,xcck011,xcck017,xcck047,srda003,   ",
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xccw202*xcck009 *-1) xcck202, ",
               "                     SUM(xccw202a*xcck009*-1) xcck202a,SUM(xccw202b*xcck009*-1) xcck202b,",
               "                     SUM(xccw202c*xcck009*-1) xcck202c,SUM(xccw202d*xcck009*-1) xcck202d,",
               "                     SUM(xccw202e*xcck009*-1) xcck202e,SUM(xccw202f*xcck009*-1) xcck202f,",
               "                     SUM(xccw202g*xcck009*-1) xcck202g,SUM(xccw202h*xcck009*-1) xcck202h",
               "                FROM xcck_tmp,srda_tmp,xccw_t     ",                         
               "               WHERE xccwent = xcckent ",
               "                 AND xccwld  = xcckld  ",
               "                 AND xccw001 = xcck001 ",
               "                 AND xccw002 = xcck002 ",
               "                 AND xccw003 = xcck003 ",
               "                 AND xccw004 = xcck004 ",
               "                 AND xccw005 = xcck005 ",
               "                 AND xccw006 = xcck006 ",
               "                 AND xccw007 = xcck007 ",
               "                 AND xccw008 = xcck008 ",
               "                 AND xccw009 = xcck009 ",
#               "                 AND xcck020 = '115' AND xcck055 IN ('3011','3012') ", #200212-00020#1 mark
               "                 AND xcck020 = '115' ",  #200212-00020#1 add
               "                 AND xcck047 = srdadocno ",              
               "                 AND xcck001 = '",p_seq,"'",  
               "                 AND xcbb006 = ",p_xcbb006,             
               "                GROUP BY xcck001,xcck002,xcck010,xcck011,xcck017,xcck047,srda003",
               "                ) b ",
               "          ON ( xcce001 = b.xcck001   ",
               "         AND   xcce002 = b.xcck002   ",
               "         AND   xcce006 = b.xcck047   ",       #工单
               "         AND   xcce007 = b.xcck010   ",
               "         AND   xcce008 = b.xcck011   ",
               "         AND   xcce009 = b.xcck017 ) ",                               
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcce205  = nvl(b.xcck201 ,0) ,  ",
               "                xcce206  = nvl(b.xcck202 ,0) ,  ",
               "                xcce206a = nvl(b.xcck202a,0) ,  ",
               "                xcce206b = nvl(b.xcck202b,0) ,  ",
               "                xcce206c = nvl(b.xcck202c,0) ,  ",
               "                xcce206d = nvl(b.xcck202d,0) ,  ",
               "                xcce206e = nvl(b.xcck202e,0) ,  ",
               "                xcce206f = nvl(b.xcck202f,0) ,  ",
               "                xcce206g = nvl(b.xcck202g,0) ,  ",
               "                xcce206h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_2_2_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_2_2_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                
   
   #更新 xcce207/xcce208 一般退料
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp ",
               "       USING (SELECT xcck001,xcck002,xcck010,xcck011,xcck017,xcck047,srda003,   ",
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h",
               "                FROM xcck_tmp,srda_tmp     ",                         
               "                WHERE (xcck020 = '303' OR ",
               "                       xcck020 = '114' OR xcck020 = '107') ",
               "                  AND xcck047 = srdadocno ",
               "                  AND xcck001 = '",p_seq,"'",   
               "                  AND xcbb006 = ",p_xcbb006,             
               "                GROUP BY xcck001,xcck002,xcck010,xcck011,xcck017,xcck047,srda003",
               "                ) b ",
               "          ON ( xcce001 = b.xcck001   ",
               "         AND   xcce002 = b.xcck002   ",
               "         AND   xcce006 = b.xcck047   ",       #工单
               "         AND   xcce007 = b.xcck010   ",
               "         AND   xcce008 = b.xcck011   ",
               "         AND   xcce009 = b.xcck017 ) ",                         
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcce207  = nvl(b.xcck201 ,0) ,  ",
               "                xcce208  = nvl(b.xcck202 ,0) ,  ",
               "                xcce208a = nvl(b.xcck202a,0) ,  ",
               "                xcce208b = nvl(b.xcck202b,0) ,  ",
               "                xcce208c = nvl(b.xcck202c,0) ,  ",
               "                xcce208d = nvl(b.xcck202d,0) ,  ",
               "                xcce208e = nvl(b.xcck202e,0) ,  ",
               "                xcce208f = nvl(b.xcck202f,0) ,  ",
               "                xcce208g = nvl(b.xcck202g,0) ,  ",
               "                xcce208h = nvl(b.xcck202h,0)    "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_2_2_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_2_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_2_2_p3  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_2_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF

   #更新 xcce307/xcce308 盘差
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp ",
               "       USING (SELECT xcck001,xcck002,xcck010,xcck011,xcck017,xcck047,srda003,   ",
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h",
               "                FROM xcck_tmp,srda_tmp     ",                         
               "                WHERE xcck020 = '501' ",
               "                  AND xcck047 = srdadocno ",      
               "                  AND xcck001 = '",p_seq,"'",  
               "                  AND xcbb006 = ",p_xcbb006,             
               "                GROUP BY xcck001,xcck002,xcck010,xcck011,xcck017,xcck047,srda003",
               "                ) b ",
               "          ON ( xcce001 = b.xcck001   ",
               "         AND   xcce002 = b.xcck002   ",
               "         AND   xcce006 = b.xcck047   ",       #工单
               "         AND   xcce007 = b.xcck010   ",
               "         AND   xcce008 = b.xcck011   ",
               "         AND   xcce009 = b.xcck017 ) ",                            
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xcce307  = nvl(b.xcck201 ,0) ,  ",
               "                xcce308  = nvl(b.xcck202 ,0) ,  ",
               "                xcce308a = nvl(b.xcck202a,0) ,  ",
               "                xcce308b = nvl(b.xcck202b,0) ,  ",
               "                xcce308c = nvl(b.xcck202c,0) ,  ",
               "                xcce308d = nvl(b.xcck202d,0) ,  ",
               "                xcce308e = nvl(b.xcck202e,0) ,  ",
               "                xcce308f = nvl(b.xcck202f,0) ,  ",
               "                xcce308g = nvl(b.xcck202g,0) ,  ",
               "                xcce308h = nvl(b.xcck202h,0)    "   
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_2_2_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_2_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_2_2_p5  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_2_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   
   #xcce901/xcce902
   CALL s_axcp500_avg1_sum_xcce(p_xcbb006,p_seq) 
        RETURNING l_success      

#   LET g_stat_end = TIME
#   CALL s_axcp500_avg1_stats_cnt(21,g_stat_begin,g_stat_end,g_stat_cnt) 
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 重复性生产- 整批在制处理 - 产生人工制费/加工费
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_2_3(p_seq)
#                       RETURNING r_success
# Input parameter:p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-07 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_2_3(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010
   
   WHENEVER ERROR CONTINUE

#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end

   LET r_success = FALSE
   LET l_date = cl_get_today()
   
   LET l_xcce010 = g_curr[p_seq].curr    
   
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp a ",
               "   USING (    SELECT xcbk006, xccd201,xccd301, ",
               "                     SUM(b) xcce202b, SUM(d) xcce202d, SUM(e) xcce202e, ",
               "                     SUM(f) xcce202f, SUM(g) xcce202g, SUM(h) xcce202h FROM (",
               "                     SELECT xcbk006,xccd201,xccd301,"
   CASE p_seq
        WHEN '1'
               LET g_sql = g_sql CLIPPED,
               "                            decode(xcbk005,1,xcbk202,0) b,decode(xcbk005,2,xcbk202,0) d,",
               "                            decode(xcbk005,3,xcbk202,0) e,decode(xcbk005,4,xcbk202,0) f,",
               "                            decode(xcbk005,5,xcbk202,0) g,decode(xcbk005,6,xcbk202,0) h "   
        WHEN '2'
               LET g_sql = g_sql CLIPPED,
               "                            decode(xcbk005,1,xcbk212,0) b,decode(xcbk005,2,xcbk212,0) d,",
               "                            decode(xcbk005,3,xcbk212,0) e,decode(xcbk005,4,xcbk212,0) f,",
               "                            decode(xcbk005,5,xcbk212,0) g,decode(xcbk005,6,xcbk212,0) h "   
        WHEN '3'
               LET g_sql = g_sql CLIPPED,
               "                            decode(xcbk005,1,xcbk222,0) b,decode(xcbk005,2,xcbk222,0) d,",
               "                            decode(xcbk005,3,xcbk222,0) e,decode(xcbk005,4,xcbk222,0) f,",
               "                            decode(xcbk005,5,xcbk222,0) g,decode(xcbk005,6,xcbk222,0) h "                     
   END CASE

   LET g_sql = g_sql CLIPPED,
#               "                       FROM xcbk_t,xccd_tmp,srda_tmp  ",      #190411-00017#1 A mark
               "                       FROM xcbk_t,xccd_tmp ",                #190411-00017#1 A mod
               "                      WHERE xcbkent = xccdent   ",
               "                        AND xcbkld  = xccdld    ",
               "                        AND xccd001 = '",p_seq,"'",
               "                        AND xcbk001 = xccd003   ",
               "                        AND xcbk002 = xccd004   ",
               "                        AND xcbk003 = xccd005   ",
               "                        AND xcbk006 = xccd006   ",
#               "                        AND xcbk006 = srdadocno ) ",    #190411-00017#1 A mark
               "                        AND EXISTS(SELECT 1 FROM srda_tmp WHERE xcbk006 = srdadocno) ",     #190411-00017#1 A mod
               "               GROUP BY xcbk006,xccd201,xccd301 ",
               "          ) b ",
               "      ON ( a.xcce006 = b.xcbk006 ) ",
               "    WHEN MATCHED THEN ",
               "         UPDATE SET a.xcce202b = b.xcce202b, ",
               "                    a.xcce202d = b.xcce202d, ",
               "                    a.xcce202e = b.xcce202e, ",
               "                    a.xcce202f = b.xcce202f, ",
               "                    a.xcce202g = b.xcce202g, ",
               "                    a.xcce202h = b.xcce202h  ",
               "          WHERE a.xcce001 = '",p_seq,"'",
               "            AND a.xcce007 = 'DL+OH+SUB' ",
               "   WHEN NOT MATCHED THEN ",
               "       INSERT VALUES(",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",
               "       '",g_xcat001,"',",g_yy,",",g_pp,",b.xcbk006,'DL+OH+SUB',",               
               "          ' ',' ','",l_xcce010,"',",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          b.xccd201,0,0,b.xcce202b,0,b.xcce202d,b.xcce202e,b.xcce202f,b.xcce202g,b.xcce202h,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          ? )"            
   PREPARE s_axcp500_avg1_repeat_wip_2_3_p1 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_3_p1"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_repeat_wip_2_3_p1')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   EXECUTE s_axcp500_avg1_repeat_wip_2_3_p1 USING l_date                                                                  
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_3_p1"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_repeat_wip_2_3_p1')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
             
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
                                                                                                                                              
   #对xcce202进行取位                                                                                                                         
   #xcce202a~xcce202h进行取位                                                                                                                 
   CASE g_round_type                                                                                                                          
        WHEN '1'   #四舍五入                                                                                                                  
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = round(xcce202 ,? ), xcce202a = round(xcce202a,? ), xcce202b = round(xcce202b,? ), ",
                         "                    xcce202c = round(xcce202c,? ), xcce202d = round(xcce202d,? ), ",                               
                         "                    xcce202e = round(xcce202e,? ), xcce202f = round(xcce202f,? ), ",                               
                         "                    xcce202g = round(xcce202g,? ), xcce202h = round(xcce202h,? )  ",                         
                        #" WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",                    #161114-00003#1 mark
                        #" WHERE xcce006 IN ( SELECT /*+ PARALLEL(4) */ srdadocno FROM srda_tmp ) ", #161114-00003#1 add  #170110-00028#1                       
                         #" WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ", #170110-00028#1 #191111-00038#1 mark 
                         " WHERE EXISTS ( SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006) ",     #191111-00038#1                   
                         "   AND xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'"
                                                                                                                                      
        WHEN '3'   #无条件截位                                                                                                                
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = trunc(xcce202 ,? ), xcce202a = trunc(xcce202a,? ), xcce202b = trunc(xcce202b,? ), ",
                         "                    xcce202c = trunc(xcce202c,? ), xcce202d = trunc(xcce202d,? ), ",                               
                         "                    xcce202e = trunc(xcce202e,? ), xcce202f = trunc(xcce202f,? ), ",                               
                         "                    xcce202g = trunc(xcce202g,? ), xcce202h = trunc(xcce202h,? )  ",                         
                        #" WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",                    #161114-00003#1 mark
                        #" WHERE xcce006 IN ( SELECT /*+ PARALLEL(4) */ srdadocno FROM srda_tmp ) ", #161114-00003#1 add   #170110-00028#1                      
#                         " WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",  #170110-00028#1 #190411-00017#1 A mark                                    
                         " WHERE EXISTS ( SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006) ",  #170110-00028#1 #190411-00017#1 A mod
                         "   AND xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'"   
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce202,?) ",
                         "                                                          ELSE ROUND(xcce202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce202,?)",
                         "                                END ),",
                         "                    xcce202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202a,?) ",
                         "                                                         ELSE ROUND(xcce202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202a,?)",
                         "                                END ),",
                         "                    xcce202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202b,?) ",
                         "                                                         ELSE ROUND(xcce202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202b,?)",
                         "                                END ),",
                         "                    xcce202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202c,?) ",
                         "                                                         ELSE ROUND(xcce202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202c,?)",
                         "                                END ),",
                         "                    xcce202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202d,?) ",
                         "                                                         ELSE ROUND(xcce202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202d,?)",
                         "                                END ),",
                         "                    xcce202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202e,?) ",
                         "                                                         ELSE ROUND(xcce202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202e,?)",
                         "                                END ),",
                         "                    xcce202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202f,?) ",
                         "                                                         ELSE ROUND(xcce202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202f,?)",
                         "                                END ),",
                         "                    xcce202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202g,?) ",
                         "                                                         ELSE ROUND(xcce202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202g,?)",
                         "                                END ),",
                         "                    xcce202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202h,?) ",
                         "                                                         ELSE ROUND(xcce202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202h,?)",
                         "                                END )",                                                
#                         " WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",      #190411-00017#1 A mark                              
                         " WHERE EXISTS ( SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006) ",  #190411-00017#1 A mod               
                         "   AND xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = ceil(xcce202 *power(10,?))/power(10,?),",
                         "                    xcce202a = ceil(xcce202a*power(10,?))/power(10,?),",
                         "                    xcce202b = ceil(xcce202b*power(10,?))/power(10,?),",
                         "                    xcce202c = ceil(xcce202c*power(10,?))/power(10,?),",
                         "                    xcce202d = ceil(xcce202d*power(10,?))/power(10,?),",
                         "                    xcce202e = ceil(xcce202e*power(10,?))/power(10,?),",
                         "                    xcce202f = ceil(xcce202f*power(10,?))/power(10,?),",
                         "                    xcce202g = ceil(xcce202g*power(10,?))/power(10,?),",
                         "                    xcce202h = ceil(xcce202h*power(10,?))/power(10,?) ",                                                
#                         " WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",      #190411-00017#1 A mark                              
                         " WHERE EXISTS ( SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006) ",  #190411-00017#1 A mod                        
                         "   AND xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'"
        #180802-00015#1 add-E                                                                                      
                                                                                                                                   
   END CASE                                                                                                                                   
   PREPARE s_axcp500_avg1_repeat_wip_2_3_p2 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_3_p2"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_repeat_wip_2_3_p2')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                  
   #180802-00015#1 mark-S                                                                                                                     
#   EXECUTE s_axcp500_avg1_repeat_wip_2_3_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                                  g_curr[p_seq].digit2   
   #180802-00015#1 mark-E           
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_repeat_wip_2_3_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_repeat_wip_2_3_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_repeat_wip_2_3_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_repeat_wip_2_3_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_3_p2"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_repeat_wip_2_3_p2')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   #xcce202                                                                       
   UPDATE xcce_tmp SET xcce202= xcce202a+xcce202b+xcce202c+xcce202d+xcce202e+xcce202f+xcce202g+xcce202h                                 
#    WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) #190411-00017#1 A mark
    WHERE EXISTS(SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006)   #190411-00017#1 A mod
      AND xcce007 = 'DL+OH+SUB' 
      AND xcce001 = p_seq                                                            
                                                                                                                                                                         
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce202"                                                                                 
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     

   UPDATE xcce_tmp SET xcce901  = xcce101  + xcce201  + xcce205  + xcce207 + 
                                  xcce209  + xcce301  + xcce303  + xcce307,
                      xcce902   = xcce102  + xcce202  + xcce206  + xcce208 + 
                                  xcce210  + xcce302  + xcce304  + xcce308,
                      xcce902a  = xcce102a + xcce202a + xcce206a + xcce208a + 
                                  xcce210a + xcce302a + xcce304a + xcce308a,
                      xcce902b  = xcce102b + xcce202b + xcce206b + xcce208b + 
                                  xcce210b + xcce302b + xcce304b + xcce308b,
                      xcce902c  = xcce102c + xcce202c + xcce206c + xcce208c + 
                                  xcce210c + xcce302c + xcce304c + xcce308c,
                      xcce902d  = xcce102d + xcce202d + xcce206d + xcce208d + 
                                  xcce210d + xcce302d + xcce304d + xcce308d,
                      xcce902e  = xcce102e + xcce202e + xcce206e + xcce208e + 
                                  xcce210e + xcce302e + xcce304e + xcce308e,
                      xcce902f  = xcce102f + xcce202f + xcce206f + xcce208f + 
                                  xcce210f + xcce302f + xcce304f + xcce308f,
                      xcce902g  = xcce102g + xcce202g + xcce206g + xcce208g + 
                                  xcce210g + xcce302g + xcce304g + xcce308g,
                      xcce902h  = xcce102h + xcce202h + xcce206h + xcce208h + 
                                  xcce210h + xcce302h + xcce304h + xcce308h
    WHERE xcce001 = p_seq
      AND EXISTS ( SELECT 1 FROM srda_tmp
                    WHERE srdadocno = xcce006  )
      AND xcce007 = 'DL+OH+SUB'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 重复性生产- 整批在制处理 - 调整
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_2_4(p_seq)
#                       RETURNING r_success
# Input parameter:p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-07 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_2_4(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010
   
   WHENEVER ERROR CONTINUE

#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end

   LET r_success = FALSE
   LET l_date = cl_get_today()
   
   LET l_xcce010 = g_curr[p_seq].curr    
   
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp a ",
               "       USING ( SELECT xccp001,xccp007,",
               "                      SUM(xccp101)  xccp101 ,SUM(xccp102)  xccp102 ,",
               "                      SUM(xccp102a) xccp102a,SUM(xccp102b) xccp102b,",
               "                      SUM(xccp102c) xccp102c,SUM(xccp102d) xccp102d,",
               "                      SUM(xccp102e) xccp102e,SUM(xccp102f) xccp102f,",
               "                      SUM(xccp102g) xccp102g,SUM(xccp102h) xccp102h ",
#               "                 FROM xccp_t,srda_tmp ", #190411-00017#1 A mark
               "                 FROM xccp_t ", #190411-00017#1 A mod
               "                WHERE xccpent = ",g_enterprise,
               "                  AND xccpld  = '",g_ld,"'",
               "                  AND xccp001 = '",p_seq,"'",
               "                  AND xccp003 = '",g_xcat001,"'",
               "                  AND xccp004 =  ",g_yy,
               "                  AND xccp005 =  ",g_pp,
#               "                  AND xccp007 = srdadocno ",   #190411-00017#1 A mark
               "                  AND EXISTS(SELECT 1 FROM srda_tmp WHERE xccp007 = srdadocno) ",   #190411-00017#1 A mod
               "                  AND xccpstus = 'Y' ",
               "                GROUP BY xccp001,xccp007 ) b ",
               "         ON ( a.xcce001 = b.xccp001 ",
               "        AND   a.xcce006 = b.xccp007 ) ",
               "    WHEN MATCHED THEN ",
               "         UPDATE SET a.xcce201  = b.xccp101 , ",
               "                    a.xcce202  = b.xccp102 , ",
               "                    a.xcce202a = b.xccp102a, ",
               "                    a.xcce202b = b.xccp102b, ",
               "                    a.xcce202c = b.xccp102c, ",
               "                    a.xcce202d = b.xccp102d, ",
               "                    a.xcce202e = b.xccp102e, ",
               "                    a.xcce202f = b.xccp102f, ",
               "                    a.xcce202g = b.xccp102g, ",
               "                    a.xcce202h = b.xccp102h  ",
               "          WHERE a.xcce007 = 'ADJUST' ",
               "   WHEN NOT MATCHED THEN ",
               "       INSERT VALUES(",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",
               "       '",g_xcat001,"',",g_yy,",",g_pp,",b.xccp007,'ADJUST',",               
               "          ' ',' ','",l_xcce010,"',",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          b.xccp101,b.xccp102,b.xccp102a,b.xccp102b,b.xccp102c,b.xccp102d,b.xccp102e,b.xccp102f,b.xccp102g,b.xccp102h,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          ? )"                
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_2_4_p1 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_4_p1"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_repeat_wip_2_4_p1')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   EXECUTE s_axcp500_avg1_repeat_wip_2_4_p1 USING l_date                                                                  
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_4_p1"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_repeat_wip_2_4_p1')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
             
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
                                                                                                                                              
   #对xcce202进行取位                                                                                                                         
   #xcce202a~xcce202h进行取位                                                                                                                 
   CASE g_round_type                                                                                                                          
        WHEN '1'   #四舍五入                                                                                                                  
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = round(xcce202 ,? ), xcce202a = round(xcce202a,? ), xcce202b = round(xcce202b,? ), ",
                         "                    xcce202c = round(xcce202c,? ), xcce202d = round(xcce202d,? ), ",                               
                         "                    xcce202e = round(xcce202e,? ), xcce202f = round(xcce202f,? ), ",                               
                         "                    xcce202g = round(xcce202g,? ), xcce202h = round(xcce202h,? )  ",                       
                        #" WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",                    #161114-00003#1 mark
                        #" WHERE xcce006 IN ( SELECT /*+ PARALLEL(4) */ srdadocno FROM srda_tmp ) ", #161114-00003#1 add   #170110-00028#1                       
#                         " WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ", #170110-00028#1     #190411-00017#1 A mark                                       
                         " WHERE EXISTS(SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006) ", #170110-00028#1     #190411-00017#1 A mod    
                         "   AND xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'"
                                                                                                                                      
        WHEN '3'   #无条件截位                                                                                                                
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = trunc(xcce202 ,? ), xcce202a = trunc(xcce202a,? ), xcce202b = trunc(xcce202b,? ), ",
                         "                    xcce202c = trunc(xcce202c,? ), xcce202d = trunc(xcce202d,? ), ",                               
                         "                    xcce202e = trunc(xcce202e,? ), xcce202f = trunc(xcce202f,? ), ",                               
                         "                    xcce202g = trunc(xcce202g,? ), xcce202h = trunc(xcce202h,? )  ",                         
                        #" WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",                    #161114-00003#1 mark
                        #" WHERE xcce006 IN ( SELECT /*+ PARALLEL(4) */ srdadocno FROM srda_tmp ) ", #161114-00003#1 add  #170110-00028#1                          
#                         " WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ", #170110-00028#1     #190411-00017#1 A mark                                       
                         " WHERE EXISTS(SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006) ", #170110-00028#1     #190411-00017#1 A mod                         
                         "   AND xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'"         
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce202,?) ",
                         "                                                          ELSE ROUND(xcce202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce202,?)",
                         "                                END ),",
                         "                    xcce202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202a,?) ",
                         "                                                         ELSE ROUND(xcce202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202a,?)",
                         "                                END ),",
                         "                    xcce202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202b,?) ",
                         "                                                         ELSE ROUND(xcce202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202b,?)",
                         "                                END ),",
                         "                    xcce202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202c,?) ",
                         "                                                         ELSE ROUND(xcce202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202c,?)",
                         "                                END ),",
                         "                    xcce202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202d,?) ",
                         "                                                         ELSE ROUND(xcce202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202d,?)",
                         "                                END ),",
                         "                    xcce202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202e,?) ",
                         "                                                         ELSE ROUND(xcce202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202e,?)",
                         "                                END ),",
                         "                    xcce202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202f,?) ",
                         "                                                         ELSE ROUND(xcce202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202f,?)",
                         "                                END ),",
                         "                    xcce202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202g,?) ",
                         "                                                         ELSE ROUND(xcce202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202g,?)",
                         "                                END ),",
                         "                    xcce202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce202h,?) ",
                         "                                                         ELSE ROUND(xcce202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce202h,?)",
                         "                                END )",                                                
#                         " WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",       #190411-00017#1 A mark                                       
                         " WHERE EXISTS(SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006) ",     #190411-00017#1 A mod                  
                         "   AND xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce202  = ceil(xcce202 *power(10,?))/power(10,?),",
                         "                    xcce202a = ceil(xcce202a*power(10,?))/power(10,?),",
                         "                    xcce202b = ceil(xcce202b*power(10,?))/power(10,?),",
                         "                    xcce202c = ceil(xcce202c*power(10,?))/power(10,?),",
                         "                    xcce202d = ceil(xcce202d*power(10,?))/power(10,?),",
                         "                    xcce202e = ceil(xcce202e*power(10,?))/power(10,?),",
                         "                    xcce202f = ceil(xcce202f*power(10,?))/power(10,?),",
                         "                    xcce202g = ceil(xcce202g*power(10,?))/power(10,?),",
                         "                    xcce202h = ceil(xcce202h*power(10,?))/power(10,?) ",                                                
#                         " WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp ) ",      #190411-00017#1 A mark                                       
                         " WHERE EXISTS(SELECT 1 FROM srda_tmp WHERE srdadocno = xcce006) ",     #190411-00017#1 A mod                   
                         "   AND xcce007 = 'DL+OH+SUB' ",   
                         "   AND xcce001 = '",p_seq,"'"
        #180802-00015#1 add-E                                                                                     
                                                                                                                                   
   END CASE                                                                                                                                   
   PREPARE s_axcp500_avg1_repeat_wip_2_4_p2 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_2_4_p2"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_repeat_wip_2_4_p2')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                   
   #180802-00015#1 mark-S                                                                                                                                   
#   EXECUTE s_axcp500_avg1_repeat_wip_2_4_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                                  g_curr[p_seq].digit2
   #180802-00015#1 mark-E           
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_repeat_wip_2_4_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_repeat_wip_2_4_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_repeat_wip_2_4_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_repeat_wip_2_4_p2 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E                                                                       
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_2_4_p2"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_repeat_wip_2_4_p2')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   #xcce202a                                                                       
   UPDATE xcce_tmp SET xcce202a= xcce202-(xcce202b+xcce202c+xcce202d+xcce202e+xcce202f+xcce202g+xcce202h)                      
#    WHERE xcce006 IN ( SELECT srdadocno FROM srda_tmp )  #190411-00017#1 A mark
    WHERE EXISTS(SELECT 1 FROM srda_tmp WHERE xcce006 = srdadocno)   #190411-00017#1 A mod
      AND xcce007 = 'ADJUST' 
      AND xcce001 = p_seq                                                            
                                                                                                                                                                         
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce202a"                                                                                 
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
#     RETURN r_success                                                                                                                        
   END IF 
   
   UPDATE xcce_tmp SET xcce901  = xcce101  + xcce201  + xcce205  + xcce207 + 
                                  xcce209  + xcce301  + xcce303  + xcce307,
                      xcce902   = xcce102  + xcce202  + xcce206  + xcce208 + 
                                  xcce210  + xcce302  + xcce304  + xcce308,
                      xcce902a  = xcce102a + xcce202a + xcce206a + xcce208a + 
                                  xcce210a + xcce302a + xcce304a + xcce308a,
                      xcce902b  = xcce102b + xcce202b + xcce206b + xcce208b + 
                                  xcce210b + xcce302b + xcce304b + xcce308b,
                      xcce902c  = xcce102c + xcce202c + xcce206c + xcce208c + 
                                  xcce210c + xcce302c + xcce304c + xcce308c,
                      xcce902d  = xcce102d + xcce202d + xcce206d + xcce208d + 
                                  xcce210d + xcce302d + xcce304d + xcce308d,
                      xcce902e  = xcce102e + xcce202e + xcce206e + xcce208e + 
                                  xcce210e + xcce302e + xcce304e + xcce308e,
                      xcce902f  = xcce102f + xcce202f + xcce206f + xcce208f + 
                                  xcce210f + xcce302f + xcce304f + xcce308f,
                      xcce902g  = xcce102g + xcce202g + xcce206g + xcce208g + 
                                  xcce210g + xcce302g + xcce304g + xcce308g,
                      xcce902h  = xcce102h + xcce202h + xcce206h + xcce208h + 
                                  xcce210h + xcce302h + xcce304h + xcce308h
    WHERE xcce001 = p_seq
      AND EXISTS ( SELECT 1 FROM srda_tmp
                    WHERE srdadocno = xcce006  )
      AND xcce007 = 'ADJUST'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                                                                                                                                       

   LET r_success = TRUE
   RETURN r_success
   
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 下阶料BY主件入库数量转出- 数量处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_4_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_4_1(p_seq)
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010
   DEFINE l_rate          LIKE type_t.num26_10
   DEFINE l_srdb006       LIKE srdb_t.srdb006
#  DEFINE l_imag014       LIKE imag_t.imag014
   DEFINE l_imaa006       LIKE imaa_t.imaa006
   DEFINE l_imae081       LIKE imae_t.imae081
   DEFINE l_srda006       LIKE type_t.num26_10
   DEFINE l_srdb011       LIKE srdb_t.srdb011
   DEFINE l_success       LIKE type_t.num5
   
   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()
   
#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end
      
   LET g_sql = " INSERT INTO rept_wip_tmp01 ",           #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
               "        SELECT srdasite,srda002,srda003,srda005,srdadocno,srdb006,srdb007,SUM(srdb011),'','',0 ",
               "         FROM srda_tmp,srdb_t ",
               "        WHERE srdaent  = srdbent ",
               "          AND srdasite = srdbsite ",
               "          AND srdb000  = ",g_yy,
               "          AND srdb001  = ",g_pp,
               "          AND srda002 = srdb002 ",
               "          AND srda003 = srdb003 ",
               "          AND srda005 = srdb005 ",
               "        GROUP BY srdasite,srda002,srda003,srda005,srdadocno,srdb006,srdb007"
   PREPARE s_axcp500_avg1_repeat_wip_4_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_1_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                       
   
   #更新成本阶,成本单位,生产单位
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO rept_wip_tmp01 a ",            #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
#              "       USING ( SELECT UNIQUE imaesite,imaa001,nvl(imag014,imaa006) imag014,nvl(imae081,imaa006) imae081,xcbb006 ",
               "       USING ( SELECT UNIQUE imaesite,imaa001,xccc007,imaa006,nvl(imae081,imaa006) imae081,xcbb006 ",  #mod zhangllc 150730 add xccc007特征
               "                 FROM s_axcp500_tmp,imae_t ",
               "                WHERE imaa001  = imae001  ",
               "                  AND imaeent = ",g_enterprise,
               "             ) b ",
               "        ON ( a.srdasite = b.imaesite  ",
               #"       AND   a.srda005  = b.xccc007   ", #add zhangllc 150730 特征 #170112-00041#1 mark
               "       AND   a.srda003  = b.imaa001 ) ",
               "        WHEN MATCHED THEN ",
#              "             UPDATE SET a.imag014 = b.imag014,",
               "             UPDATE SET a.imaa006 = b.imaa006,",
               "                        a.imae081 = b.imae081,",
               "                        a.xcbb006 = b.xcbb006 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_4_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_1_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF          
   

   #srda006 调整后本期转出 转至成本单位下的数量
   DECLARE s_axcp500_avg1_repeat_wip_4_1_cs1 CURSOR FOR
#   SELECT srdb006,imag014,imae081,srdb011
    SELECT srdb006,imaa006,imae081,srdb011
      FROM rept_wip_tmp01          #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
#    WHERE imag014 <> imae081
     WHERE imaa006 <> imae081
#  FOREACH s_axcp500_avg1_repeat_wip_4_1_cs1 INTO l_srdb006,l_imag014,l_imae081,l_srdb011
   FOREACH s_axcp500_avg1_repeat_wip_4_1_cs1 INTO l_srdb006,l_imaa006,l_imae081,l_srdb011
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH s_axcp500_avg1_repeat_wip_4_1_cs1"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CONTINUE FOREACH
      END IF

#     CALL s_aooi250_convert_qty1(l_srdb006,l_imae081,l_imag014,1)
      CALL s_aooi250_convert_qty1(l_srdb006,l_imae081,l_imaa006,1)
           RETURNING l_success,l_rate
      IF cl_null(l_rate) OR l_rate = 0 THEN
         LET l_rate = 1
      END IF

      UPDATE rept_wip_tmp01 SET srdb011 = srdb011 * l_rate          #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
       WHERE srdb006 = l_srdb006
#        AND imag014 = l_imag014
         AND imaa006 = l_imaa006
         AND imae081 = l_imae081
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE srda_tmp SET srda006 = srda006 * l_rate"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CONTINUE FOREACH
      END IF
      
   END FOREACH
   

   #若应发数量或是本次应转数量为0，则此工单项次不处理   
   DELETE FROM rept_wip_tmp01 WHERE srdb011 <= 0                   #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DELETE FROM rept_wip_tmp01"         #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     
   

   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 下阶料BY主件入库数量转出- 成本处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_4_2(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-12 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_4_2(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_date          DATETIME YEAR TO SECOND
   DEFINE l_xcce010       LIKE xcce_t.xcce010

   WHENEVER ERROR CONTINUE

#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end

   LET r_success = FALSE
   LET l_date = g_edate + 1
   
   #每次成本阶处理时,全部清空
   TRUNCATE TABLE rept_wip_tmp02                 #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'TRUNCATE TABLE rept_wip_tmp02'       #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02 
      LET g_errparam.popup = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   
      
   TRUNCATE TABLE rept_wip_tmp03                                    #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'TRUNCATE TABLE rept_wip_tmp03'       #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
      LET g_errparam.popup = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   TRUNCATE TABLE rept_wip_tmp04         #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'TRUNCATE TABLE rept_wip_tmp04'       #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
      LET g_errparam.popup = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #add zhangllc 160526--s SBS1
   TRUNCATE TABLE rept_wip_tmp05                                #160727-00019#29  Mod  repeat_wip4_tmp5 --> rept_wip_tmp05
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'TRUNCATE TABLE rept_wip_tmp05'   #160727-00019#29  Mod  repeat_wip4_tmp5 --> rept_wip_tmp05
      LET g_errparam.popup = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
   #add zhangllc 160526--e SBS1
   
   #2.下阶料已发料量TABLE
   #   KEY值（工单单号，成本域，元件编号，元件特征，元件批号）
   #190411-00017#1 A mark-S
#   LET g_sql = " INSERT INTO rept_wip_tmp02 ",             #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
#   #                           工单单号 成本域 料件    特征    批号    
#               "        SELECT xcce006,xcce002,xcce007,xcce008,xcce009,",
#   #                           序号
#               "               ROW_NUMBER() OVER ( PARTITION BY xcce006 ORDER BY xcce007,xcce008 ) seq,",
#   #                           本期投入                             累计投入 转出量
#               "               xcce101+xcce201+xcce207+xcce209 qty1,0 qty2,0 qty3 ",
#               "          FROM xcce_tmp,rept_wip_tmp01 ",             #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
#               "         WHERE srdadocno = xcce006 ",
#               "           AND srdb006   = xcce007 ",
#               "           AND srdb007   = xcce008 ",
#               "           AND xcbb006   = ",p_xcbb006
   #190411-00017#1 A mark-E            
   #190411-00017#1 A mod-S
   LET g_sql = " INSERT INTO rept_wip_tmp02 ",             #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
   #                           工单单号 成本域 料件    特征    批号    
               "        SELECT xcce006,xcce002,xcce007,xcce008,xcce009,",
   #                           序号
               "               ROW_NUMBER() OVER ( PARTITION BY xcce006 ORDER BY xcce007,xcce008 ) seq,",
   #                           本期投入                             累计投入 转出量
               "               xcce101+xcce201+xcce207+xcce209 qty1,0 qty2,0 qty3 ",
               "          FROM xcce_tmp ",             #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
               "         WHERE EXISTS(SELECT 1 FROM rept_wip_tmp01 WHERE srdadocno = xcce006 AND srdb006 = xcce007 AND srdb007 = xcce008 AND xcbb006 = ",p_xcbb006,") "
   #190411-00017#1 A mod-E
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p8 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p8 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     
   
   #若已发料（不管替代率）<=0 ，则不处理
   DELETE FROM rept_wip_tmp02 WHERE qty1 <=0              #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DELETE FROM rept_wip_tmp02"           #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                      

   #更新累计已发量 qty2
   LET g_sql = " UPDATE rept_wip_tmp02 a SET a.qty2 = ( SELECT SUM(b.qty1) FROM rept_wip_tmp02 b ",            #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
               "                                           WHERE a.xcce006   = b.xcce006  ",
               "                                             AND a.xcce007   = b.xcce007  ",
               "                                             AND a.xcce008   = b.xcce008  ",
               "                                             AND a.seq      >= b.seq  )   "
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p13 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p13"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p13 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p13"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                                          
                                      

   #若rept_wip_tmp02的qty2(累计已发量）<= rept_wip_tmp01(本次应转出数量 srdb011)，则直接全部转出qty3=qty1
   LET g_sql = " UPDATE rept_wip_tmp02 a SET a.qty3 = a.qty1      ",        #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
               "  WHERE EXISTS ( SELECT 1 FROM rept_wip_tmp01 b   ",        #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
               "                  WHERE a.xcce006 = b.srdadocno   ",
               "                    AND a.xcce007 = b.srdb006     ",
               "                    AND a.xcce008 = b.srdb007     ",
               "                    AND a.qty2   <= b.srdb011 )   "
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p10 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p10"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p10 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p10"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF                                                    
   
 
   #上面处理的项序，都是完全转出，但是完全转出后，还不满足“总应转数量”，则要考虑后续项序的部分转出
   LET g_sql = " UPDATE rept_wip_tmp02 a SET a.qty3 = ( SELECT b.srdb011 - ( SELECT SUM(c.qty3) FROM rept_wip_tmp02 c ",           #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
               "                                                                WHERE c.xcce006 = a.xcce006   ",
               "                                                                  AND c.xcce007 = a.xcce007   ",
               "                                                                  AND c.xcce008 = a.xcce008 ) ",
               "                                            FROM rept_wip_tmp01 b          ",       #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
               "                                           WHERE b.srdadocno = a.xcce006   ",
               "                                             AND b.srdb006   = a.xcce007   ",
               "                                             AND b.srdb007   = a.xcce008 ) ",
               " WHERE a.seq  = ( SELECT MIN(d.seq) FROM rept_wip_tmp02 d ",           #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
               "                   WHERE d.xcce006 = a.xcce006 AND d.xcce007 = a.xcce007 AND d.xcce008 = a.xcce008 AND d.qty3 = 0 ) ",
               "   AND a.qty3 = 0 "
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p11 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p11 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #产生rept_wip_tmp03的TABLE
   #元件TABLE：KEY 值（工单单号，成本域，料件，特征，批号）
   LET g_sql = " INSERT INTO rept_wip_tmp03 ",     #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
   #                           本位币顺序           成本域 工单    料件    特征    批号    成本阶
               "        SELECT '",p_seq,"' xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xcbb006,",
               #               转出数量              转出成本(xcce302)
               "               SUM(qty3*-1) xcce301,0 xcce302,0 xcce302a,0 xcce302b,0 xcce302c,0 xcce302d,0 xcce302e,",
               "               0 xcce302f,0 xcce302g,0 xcce302h ",
               "          FROM rept_wip_tmp02,srda_tmp ",          #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
               "         WHERE xcce006 = srdadocno ",
               "         GROUP BY  xcce002,xcce006,xcce007,xcce008,xcce009,xcbb006 "
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p12 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p12 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    
      
   
   #更新rept_wip_tmp03的转出成本 xcce302~xcce30h
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO rept_wip_tmp03 a ",               #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
               "       USING (SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,   ",
               "                     xcce101,xcce102,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h,",
               "                     nvl(SUM(xcck009 * - 1 * xcck201 ),0) xcck201, nvl(SUM(xcck009 * - 1 * xcck202 ),0) xcck202,  ",
               "                     nvl(SUM(xcck009 * - 1 * xcck202a),0) xcck202a,nvl(SUM(xcck009 * - 1 * xcck202b),0) xcck202b, ",
               "                     nvl(SUM(xcck009 * - 1 * xcck202c),0) xcck202c,nvl(SUM(xcck009 * - 1 * xcck202d),0) xcck202d, ",
               "                     nvl(SUM(xcck009 * - 1 * xcck202e),0) xcck202e,nvl(SUM(xcck009 * - 1 * xcck202f),0) xcck202f, ",
               "                     nvl(SUM(xcck009 * - 1 * xcck202g),0) xcck202g,nvl(SUM(xcck009 * - 1 * xcck202h),0) xcck202h",   
               "                FROM xcce_tmp LEFT OUTER JOIN xcck_tmp     ",
               "                                     ON  xcck020 IN ('302','303','114','107')  ",
               "                                     AND xcce001 = xcck001 ",
               "                                     AND xcce002 = xcck002 ",
               "                                     AND xcce006 = xcck047 ",
               "                                     AND xcce007 = xcck010 ",
               "                                     AND xcce008 = xcck011 ",
               "                                     AND xcce009 = xcck017 ",
               "                GROUP BY xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,",
               "                         xcce101,xcce102,xcce102a,xcce102b,xcce102c,xcce102d,xcce102e,xcce102f,xcce102g,xcce102h ",
               "                ) b ",
               "          ON ( a.xcce001 = b.xcce001 ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009  ",
               "         AND   a.xcbb006 = ",p_xcbb006," )",
               "  WHEN MATCHED THEN    ",
               #170705-00006#1 mark(S)
               #"     UPDATE SET a.xcce302  = (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302a = (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302b = (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302c = (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302d = (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302e = (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302f = (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302g = (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * a.xcce301 ,  ",
               #"                a.xcce302h = (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * a.xcce301    ",
               #170705-00006#1 mark(E)
               #170705-00006#1 add(S)
               "     UPDATE SET a.xcce302  = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102   + b.xcck202  ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302a = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102a  + b.xcck202a ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302b = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102b  + b.xcck202b ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302c = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102c  + b.xcck202c ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302d = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102d  + b.xcck202d ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302e = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102e  + b.xcck202e ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302f = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102f  + b.xcck202f ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302g = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102g  + b.xcck202g ) / (b.xcck201 + b.xcce101) * a.xcce301 END) ,  ",
               "                a.xcce302h = ( CASE (b.xcck201 + b.xcce101) * a.xcce301 WHEN 0 THEN 0 ELSE (b.xcce102h  + b.xcck202h ) / (b.xcck201 + b.xcce101) * a.xcce301 END)   ",
               #170705-00006#1 add(E)
               "      WHERE b.xcck201 + b.xcce101 <> 0 "
   #PGS(D)-00824 --- edn ---
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF       


   #对xcce302进行取位
   #xcce302a~xcce302h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE rept_wip_tmp03 SET xcce302  = round(xcce302 ,? ), xcce302a = round(xcce302a,? ), xcce302b = round(xcce302b,? ), ",         #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
                         "                            xcce302c = round(xcce302c,? ), xcce302d = round(xcce302d,? ), ",
                         "                            xcce302e = round(xcce302e,? ), xcce302f = round(xcce302f,? ), ",
                         "                            xcce302g = round(xcce302g,? ), xcce302h = round(xcce302h,? )  "

                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE rept_wip_tmp03 SET xcce302  = trunc(xcce302 ,? ), xcce302a = trunc(xcce302a,? ), xcce302b = trunc(xcce302b,? ), ",         #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
                         "                            xcce302c = trunc(xcce302c,? ), xcce302d = trunc(xcce302d,? ), ",
                         "                            xcce302e = trunc(xcce302e,? ), xcce302f = trunc(xcce302f,? ), ",
                         "                            xcce302g = trunc(xcce302g,? ), xcce302h = trunc(xcce302h,? )  "

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE rept_wip_tmp03 SET xcce302  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce302,?) ",
                         "                                                          ELSE ROUND(xcce302,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce302,?)",
                         "                                END ),",
                         "                    xcce302a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302a,?) ",
                         "                                                         ELSE ROUND(xcce302a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302a,?)",
                         "                                END ),",
                         "                    xcce302b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302b,?) ",
                         "                                                         ELSE ROUND(xcce302b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302b,?)",
                         "                                END ),",
                         "                    xcce302c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302c,?) ",
                         "                                                         ELSE ROUND(xcce302c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302c,?)",
                         "                                END ),",
                         "                    xcce302d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302d,?) ",
                         "                                                         ELSE ROUND(xcce302d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302d,?)",
                         "                                END ),",
                         "                    xcce302e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302e,?) ",
                         "                                                         ELSE ROUND(xcce302e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302e,?)",
                         "                                END ),",
                         "                    xcce302f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302f,?) ",
                         "                                                         ELSE ROUND(xcce302f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302f,?)",
                         "                                END ),",
                         "                    xcce302g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302g,?) ",
                         "                                                         ELSE ROUND(xcce302g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302g,?)",
                         "                                END ),",
                         "                    xcce302h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302h,?) ",
                         "                                                         ELSE ROUND(xcce302h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302h,?)",
                         "                                END )"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE rept_wip_tmp03 SET xcce302  = ceil(xcce302 *power(10,?))/power(10,?),",
                         "                    xcce302a = ceil(xcce302a*power(10,?))/power(10,?),",
                         "                    xcce302b = ceil(xcce302b*power(10,?))/power(10,?),",
                         "                    xcce302c = ceil(xcce302c*power(10,?))/power(10,?),",
                         "                    xcce302d = ceil(xcce302d*power(10,?))/power(10,?),",
                         "                    xcce302e = ceil(xcce302e*power(10,?))/power(10,?),",
                         "                    xcce302f = ceil(xcce302f*power(10,?))/power(10,?),",
                         "                    xcce302g = ceil(xcce302g*power(10,?))/power(10,?),",
                         "                    xcce302h = ceil(xcce302h*power(10,?))/power(10,?) "
        #180802-00015#1 add-E                               
                         
   END CASE                         
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_repeat_wip_4_2_p5')         
#     RETURN r_success
   END IF

   #180802-00015#1 mark-S    
#   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2
   #180802-00015#1 mark-E          
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_repeat_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_repeat_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_repeat_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_repeat_wip_4_2_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E  
   IF SQLCA.sqlcode THEN                         
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_repeat_wip_4_2_p5')         
#     RETURN r_success
   END IF     


   #修正xcce302a的值 xcce302a = xcce302 - (xcce302b~xcce302h)
   UPDATE rept_wip_tmp03 SET xcce302a = xcce302 - (xcce302b+xcce302c+xcce302d+xcce302e+xcce302f+xcce302g+xcce302h)      #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
    WHERE xcbb006 = p_xcbb006
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE rept_wip_tmp03 SET xcce302a"           #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF       


   #用rept_wip_tmp03中的转出数量及成本更新xcce_tmp
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING rept_wip_tmp03 b ",       #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
               "          ON ( a.xcce001 = b.xcce001 ",
               "         AND   a.xcce002 = b.xcce002 ",
               "         AND   a.xcce006 = b.xcce006 ",       #工单
               "         AND   a.xcce007 = b.xcce007 ",
               "         AND   a.xcce008 = b.xcce008 ",
               "         AND   a.xcce009 = b.xcce009 ",
               "         AND   b.xcbb006 = ",p_xcbb006,
               "             ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = nvl(b.xcce301 ,0) ,  ",
               "                a.xcce302  = nvl(b.xcce302 ,0) ,  ",
               "                a.xcce302a = nvl(b.xcce302a,0) ,  ",
               "                a.xcce302b = nvl(b.xcce302b,0) ,  ",
               "                a.xcce302c = nvl(b.xcce302c,0) ,  ",
               "                a.xcce302d = nvl(b.xcce302d,0) ,  ",
               "                a.xcce302e = nvl(b.xcce302e,0) ,  ",
               "                a.xcce302f = nvl(b.xcce302f,0) ,  ",
               "                a.xcce302g = nvl(b.xcce302g,0) ,  ",
               "                a.xcce302h = nvl(b.xcce302h,0)    "       
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   #add zhangllc 160526--s SBS1
   #将本成本阶的所有DL+OH+SUB插入rept_wip_tmp05中
   INSERT INTO rept_wip_tmp05            #160727-00019#29  Mod  repeat_wip4_tmp5 --> rept_wip_tmp05
    SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301
      FROM xcce_tmp,xccd_tmp
     WHERE xccd001 = xcce001 AND xccd001 = p_seq
       AND xccd006 = xcce006
       AND xcce007 = 'ADJUST'
       AND xcce008 = ' '
       AND xcce009 = ' '
       AND xccd012 = 'Y'
       #mod zhangllc 150730 --begin
       #AND xccd007 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006)
       AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                    WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 #AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008 # xccd不存特征的
                      AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
       #mod zhangllc 150730 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "INSERT INTO rept_wip_tmp05"               #160727-00019#29  Mod  repeat_wip4_tmp5 --> rept_wip_tmp05
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
   
   #ADJUST调整资料本期有入库就全部转出，没入库就不转出
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING rept_wip_tmp05 b ",              #160727-00019#29  Mod  repeat_wip4_tmp5 --> rept_wip_tmp05
               "          ON ( a.xcce001 = b.xcce001  ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009 ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = (a.xcce101  + a.xcce201 ) * -1 ,  ",
               "                a.xcce302  = (a.xcce102  + a.xcce202 ) * -1 ,  ",
               "                a.xcce302a = (a.xcce102a + a.xcce202a) * -1 ,  ",
               "                a.xcce302b = (a.xcce102b + a.xcce202b) * -1 ,  ",
               "                a.xcce302d = (a.xcce102d + a.xcce202d) * -1 ,  ",
               "                a.xcce302e = (a.xcce102e + a.xcce202e) * -1 ,  ",
               "                a.xcce302f = (a.xcce102f + a.xcce202f) * -1 ,  ",
               "                a.xcce302g = (a.xcce102g + a.xcce202g) * -1 ,  ",
               "                a.xcce302h = (a.xcce102h + a.xcce202h) * -1 ,  ",       
               "                a.xcce302c = (a.xcce102c + a.xcce202c) * -1 ,  ",
               "                a.xcce901  = a.xcce901  - a.xcce101  - a.xcce201  , ",
               "                a.xcce902  = a.xcce902  - a.xcce102  - a.xcce202  , ",
               "                a.xcce902a = a.xcce902a - a.xcce102a - a.xcce202a , ",
               "                a.xcce902b = a.xcce902b - a.xcce102b - a.xcce202b , ",
               "                a.xcce902d = a.xcce902d - a.xcce102d - a.xcce202d , ",
               "                a.xcce902e = a.xcce902e - a.xcce102e - a.xcce202e , ",
               "                a.xcce902f = a.xcce902f - a.xcce102f - a.xcce202f , ",
               "                a.xcce902g = a.xcce902g - a.xcce102g - a.xcce202g , ",
               "                a.xcce902h = a.xcce902h - a.xcce102h - a.xcce202h , ",
               "                a.xcce902c = a.xcce902c - a.xcce102c - a.xcce202c   ",
               "      WHERE b.xccd301 <> 0 "    #调整转出时需检查本期是否有入库,若有入库,则转出,没有则不转出
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p4_0 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p4_0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p4_0
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p4_0"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   #add zhangllc 160526--e SBS1
   
   #将本成本阶的所有DL+OH+SUB插入rept_wip_tmp04中
   INSERT INTO rept_wip_tmp04        #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
#    SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301,0,-1,-1,0
    SELECT xcce001,xcce002,xcce006,xcce007,xcce008,xcce009,xccd101,xccd201,xccd301,0,0,-1,0
      FROM xcce_tmp,xccd_tmp
     WHERE xccd001 = xcce001 AND xccd001 = p_seq
       AND xccd006 = xcce006
       AND xcce007 = 'DL+OH+SUB'
       AND xcce008 = ' '
       AND xcce009 = ' '
       AND xccd012 = 'Y'
       #mod zhangllc 150730 --begin
       #AND xccd007 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006)
       AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                    WHERE s_axcp500_tmp.imaa001=xccd_tmp.xccd007 #AND s_axcp500_tmp.xccc007=xccd_tmp.xccd008 # xccd不存特征的
                      AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
       #mod zhangllc 150730 --end
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "INSERT INTO rept_wip_tmp04"           #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    
   
   CASE g_sys_6014
        WHEN '1'
             #180611-00091#1 mark-S
#             LET g_sql = " MERGE INTO rept_wip_tmp04 a ",            #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
#                         "       USING (SELECT xcbi002,nvl(SUM(xcbi103),0) xcbi103 ",
#                         "                FROM xcbh_t,xcbi_t     ", 
#                         "               WHERE xcbhent   = xcbient AND xcbient = ",g_enterprise,
#                         "                 AND xcbhdocno = xcbidocno ",
#                         "                 AND xcbh001   BETWEEN '",g_bdate,"' AND '",g_edate,"'",
#                         "                 AND xcbhstus  = 'Y' ",                          
#                         "                GROUP BY xcbi002 ",
#                         "                ) b ",
#                         "          ON ( xcce006 = b.xcbi002)   ",       #工单         
#                         "  WHEN MATCHED THEN    ",
##                        "     UPDATE SET rate1  = nvl(xcbi103,0) / 100 - 1   "  
#                         "     UPDATE SET a.xcbi103 = b.xcbi103 ,",
#                         "                rate1     = decode(xccd301-b.xcbi103,0,0,xccd301 / (xccd301 - b.xcbi103) * -1)  "      #xccd301为负数,xcbi103为正数 
#--                         "      WHERE xccd301 - xcbi103 <> 0 "
             #180611-00091#1 mark-E
             #180611-00091#1 add-S
             #PGS(D)-00824 ---start---
             LET g_sql = " MERGE INTO rept_wip_tmp04 a ",            #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
                         "       USING (SELECT xcbi002,NVL(SUM(xcbi100),0) xcbi100,NVL(SUM(xcbi103),0) xcbi103,",
                         "                     nvl(SUM(DECODE(xcbi100+xcbi103,0,0,(SELECT COUNT(DISTINCT sffb009) FROM sffb_t WHERE sffbent = xcbient AND xcbi002 = sffb005 AND sffb030 =xcbi001 AND sffbstus = 'Y' AND sffb012 BETWEEN '",g_bdate,"' AND '",g_edate,"')/(xcbi100+xcbi103))),0) xcbi100_xcbi103, ",
                         "                     (SELECT SUM(COUNT(DISTINCT sffb009)) FROM sffb_t WHERE sffbent = xcbient AND xcbi002 = sffb005 AND sffbstus = 'Y' AND sffb012 BETWEEN '",g_bdate,"' AND '",g_edate,"' GROUP BY sffb030) sffb_cnt ",  #总报工站数
                         "                FROM xcbh_t,xcbi_t     ", 
                         "               WHERE xcbhent   = xcbient AND xcbient = ",g_enterprise,
                         "                 AND xcbhdocno = xcbidocno ",
                         "                 AND xcbh001   BETWEEN '",g_bdate,"' AND '",g_edate,"'",
                         "                 AND xcbhstus  = 'Y' ",                          
                         "                GROUP BY xcbient,xcbi002 ",
                         "                ) b ",
                         "          ON ( xcce006 = b.xcbi002)   ",       #工单         
                         "  WHEN MATCHED THEN    ",
                         "     UPDATE SET a.xcbi103 = b.xcbi103 ,",
                         "                rate1     = xccd301*decode(b.sffb_cnt,0,0, b.xcbi100_xcbi103 / b.sffb_cnt )  "      #轉出比率=(轉出數量*(SUM(報工站數/(入庫數量+約當量)))/總報工站數)
             #PGS(D)-00824 --- end ---
             #180611-00091#1 add-E
             PREPARE s_axcp500_avg1_repeat_wip_4_2_p3 FROM g_sql
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p3"
                LET g_errparam.popup  = TRUE
                CALL cl_err()
          #     RETURN r_success
             END IF  
          
             EXECUTE s_axcp500_avg1_repeat_wip_4_2_p3 
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p3"
                LET g_errparam.popup  = TRUE
                CALL cl_err()
          #     RETURN r_success
             END IF                            
                                          
        WHEN '2'
             #UPDATE rept_wip_tmp04 SET rate1 = xccd301 / (xccd101 + xccd201)       #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04  #170705-00006#1 mark
             UPDATE rept_wip_tmp04 SET rate1 = ( CASE (xccd101 + xccd201) WHEN 0 THEN 0 ELSE xccd301 / (xccd101 + xccd201) END) #170705-00006#1 add
              WHERE xccd101 + xccd201 <> 0
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.extend = "UPDATE rept_wip_tmp04 SET rate1"          #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
                LET g_errparam.popup  = TRUE
                CALL cl_err()
          #     RETURN r_success
             END IF 
       WHEN '3'
             UPDATE rept_wip_tmp04 SET rate1 = -1                                  #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.extend = "UPDATE rept_wip_tmp04 SET rate1"          #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
                LET g_errparam.popup  = TRUE
                CALL cl_err()
          #     RETURN r_success
             END IF                     
   END CASE
           

   #若委外加工费为0,则以人工/制费为准
   LET g_sql = "   UPDATE rept_wip_tmp04 a SET rate3 = rate1     ",                 #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
               "    WHERE EXISTS ( SELECT 1 FROM xcce_tmp b        ", 
               "                    WHERE a.xcce001 = b.xcce001    ",
               "                      AND a.xcce002 = b.xcce002    ",
               "                      AND a.xcce006 = b.xcce006    ",
               "                      AND a.xcce007 = b.xcce007    ",
               "                      AND a.xcce007 = 'DL+OH+SUB' )"
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF          
   
   
   #更新DL+OH+SUB的转出成本
   #用rept_wip_tmp03中的转出数量及成本更新xcce_tmp
   #若主件本期没入库时,DL+OH+SUB转出至差异字段
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING rept_wip_tmp04 b ",          #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
               "          ON ( a.xcce001 = b.xcce001  ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009 ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = (a.xcce101  + a.xcce201  ) * b.rate3, ",
               "                a.xcce302b = (a.xcce102b + a.xcce202b ) * b.rate1 , ",
               "                a.xcce302d = (a.xcce102d + a.xcce202d ) * b.rate1,  ",
               "                a.xcce302e = (a.xcce102e + a.xcce202e ) * b.rate1,  ",
               "                a.xcce302f = (a.xcce102f + a.xcce202f ) * b.rate1,  ",
               "                a.xcce302g = (a.xcce102g + a.xcce202g ) * b.rate1,  ",
               "                a.xcce302h = (a.xcce102h + a.xcce202h ) * b.rate1,  ",       
               "                a.xcce302c = (a.xcce102c + a.xcce202c ) * b.rate2   ",
               "      WHERE b.xccd301 <> 0 "    #人工制费转出时需检查本期是否有入库,若有入库,则转出,没有则转差异
   #PGS(D)-00824 ---  end ---

   PREPARE s_axcp500_avg1_repeat_wip_4_2_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING rept_wip_tmp04 b ",               #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
               "          ON ( a.xcce001 = b.xcce001  ",
               "         AND   a.xcce002 = b.xcce002  ",
               "         AND   a.xcce006 = b.xcce006  ",       #工单
               "         AND   a.xcce007 = b.xcce007  ",
               "         AND   a.xcce008 = b.xcce008  ",
               "         AND   a.xcce009 = b.xcce009 ) ",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce303  = a.xcce303  + (a.xcce101  + a.xcce201  ) * b.rate3, ",
               "                a.xcce304b = a.xcce304b + (a.xcce102b + a.xcce202b ) * b.rate1 , ",
               "                a.xcce304d = a.xcce304d + (a.xcce102d + a.xcce202d ) * b.rate1,  ",
               "                a.xcce304e = a.xcce304e + (a.xcce102e + a.xcce202e ) * b.rate1,  ",
               "                a.xcce304f = a.xcce304f + (a.xcce102f + a.xcce202f ) * b.rate1,  ",
               "                a.xcce304g = a.xcce304g + (a.xcce102g + a.xcce202g ) * b.rate1,  ",
               "                a.xcce304h = a.xcce304h + (a.xcce102h + a.xcce202h ) * b.rate1,  ",       
               "                a.xcce304c = a.xcce304c + (a.xcce102c + a.xcce202c ) * b.rate2   ",
               "      WHERE b.xccd301 = 0 "                                             #人工制费转出时需检查本期是否有入库,若有入库,则转出,没有则转差异
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p9 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p9"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p9 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p9"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF      
   
   #180611-00091#1 add-S 对转出数量进行取位
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp a",
               " USING (SELECT DISTINCT xcceent,xcceld,xcce001,xcce002,xcce003,xcce004,xcce005,xcce006,xcce007,xcce008,xcce009, ",
               "               (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xcce301,0),6),ooca002) " ,
               "                     WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xcce301,0),6),ooca002),(2/power(10,ooca002)))=0 ", 
               "                                                 THEN round(round(COALESCE(xcce301,0),6),ooca002) ",
               "                                                 ELSE round(round(COALESCE(xcce301,0),6),ooca002)-(-1/power(10,ooca002)) ",
               "                                             END )",
               "                     WHEN ooca004 = 3 THEN trunc(round(COALESCE(xcce301,0),6),ooca002)",
               "                     WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xcce301,0),6)*power(10,ooca002))/power(10,ooca002)",
               "               END ) xcce301 ",
               "          FROM xcce_tmp,sfaa_t,imaa_t ",
               "          LEFT OUTER JOIN ooca_t ON oocaent = imaaent AND ooca001 = imaa006 ",  
               "         WHERE xcceent = imaaent AND sfaa010 = imaa001 ",
               "           AND xcce006 = sfaadocno AND sfaaent = xcceent ",
               "           AND xcceent = ",g_enterprise,
               "           AND xcceld  = '",g_ld,"'",
               "           AND xcce001 = '",p_seq,"'",
               "           AND xcce003 = '",g_xcat001,"'",
               "           AND xcce004 = ",g_yy,
               "           AND xcce005 = ",g_pp,
               "           AND xcce007 = 'DL+OH+SUB' ",
               "         ) b",                  
               "       ON (a.xcceent = b.xcceent ",
               "       AND a.xcceld  = b.xcceld  ",
               "       AND a.xcce001 = b.xcce001 ",
               "       AND a.xcce002 = b.xcce002 ",
               "       AND a.xcce003 = b.xcce003 ",
               "       AND a.xcce004 = b.xcce004 ",
               "       AND a.xcce005 = b.xcce005 ",
               "       AND a.xcce006 = b.xcce006 ",
               "       AND a.xcce007 = b.xcce007 ",
               "       AND a.xcce008 = b.xcce008 ",
               "       AND a.xcce009 = b.xcce009)",          
               "  WHEN MATCHED THEN ",
               "     UPDATE SET a.xcce301 = nvl(b.xcce301,0) "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_repeat_wip_4_2_xcce301_p61 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_xcce301_p61"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  
   EXECUTE s_axcp500_avg1_repeat_wip_4_2_xcce301_p61                                         
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_xcce301_p61"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_repeat_wip_4_2_xcce301_p61') 
   END IF     
   #180611-00091#1 add-E
   #xcce302a~xcce302h进行取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = round(xcce302 ,? ), xcce302a = round(xcce302a,? ), xcce302b = round(xcce302b,? ), ",
                         "                    xcce302c = round(xcce302c,? ), xcce302d = round(xcce302d,? ), ",
                         "                    xcce302e = round(xcce302e,? ), xcce302f = round(xcce302f,? ), ",
                         "                    xcce302g = round(xcce302g,? ), xcce302h = round(xcce302h,? ), ",
                         "                    xcce304  = round(xcce304 ,? ), xcce304a = round(xcce304a,? ), xcce304b = round(xcce304b,? ), ",
                         "                    xcce304c = round(xcce304c,? ), xcce304d = round(xcce304d,? ), ",
                         "                    xcce304e = round(xcce304e,? ), xcce304f = round(xcce304f,? ), ",
                         "                    xcce304g = round(xcce304g,? ), xcce304h = round(xcce304h,? )  ",                         
                         " WHERE xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'",                         
                        #"   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp ",                    #161114-00003#1 mark
                        #"   AND xcce006 IN ( SELECT /*+ PARALLEL(4) */ xccd006 FROM xccd_tmp,s_axcp500_tmp ", #161114-00003#1 add  #170110-00028#1
                         #190411-00017#1 A mark-S                        
#                         "   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp ", #170110-00028#1                       
#                         "                     WHERE xccd007 = imaa001   ",
#                         #"                       AND xccd008 = xccc007   ",   #add zhangllc 150730 特征  xccd不存特征的
#                         "                       AND xcbb006 = ",p_xcbb006 ,")"
                         #190411-00017#1 A mark-E
                         #190411-00017#1 A mod-S   
                         "   AND EXISTS(SELECT 1 FROM xccd_tmp ",
                         "               WHERE xcce006 = xccd006 ",
                         "                 AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE xccd007 = imaa001 AND xcbb006 = ",p_xcbb006,")) "
                         #190411-00017#1 A mod-E
                         
                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = trunc(xcce302 ,? ), xcce302a = trunc(xcce302a,? ), xcce302b = trunc(xcce302b,? ), ",
                         "                    xcce302c = trunc(xcce302c,? ), xcce302d = trunc(xcce302d,? ), ",
                         "                    xcce302e = trunc(xcce302e,? ), xcce302f = trunc(xcce302f,? ), ",
                         "                    xcce302g = trunc(xcce302g,? ), xcce302h = trunc(xcce302h,? ), ",
                         "                    xcce304  = trunc(xcce304 ,? ), xcce304a = trunc(xcce304a,? ), xcce304b = trunc(xcce304b,? ), ",
                         "                    xcce304c = trunc(xcce304c,? ), xcce304d = trunc(xcce304d,? ), ",
                         "                    xcce304e = trunc(xcce304e,? ), xcce304f = trunc(xcce304f,? ), ",
                         #"                    xcce304g = trunc(xcce304g,? ), xcce304h = trunc(xcce304h,? ), ",   #190520-00024#1 mark                        
                         "                    xcce304g = trunc(xcce304g,? ), xcce304h = trunc(xcce304h,? )  ",   #190520-00024#1 
                         " WHERE xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'",                          
                        #"   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp ",                    #161114-00003#1 mark
                        #"   AND xcce006 IN ( SELECT /*+ PARALLEL(4) */ xccd006 FROM xccd_tmp,s_axcp500_tmp ", #161114-00003#1 add   #170110-00028#1
                         #190411-00017#1 A mark-S                                              
#                         "   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp ", #170110-00028#1                      
#                         "                     WHERE xccd007 = imaa001   ",
#                         #"                       AND xccd008 = xccc007   ",   #add zhangllc 150730 特征  xccd不存特征的
#                         "                       AND xcbb006 = ",p_xcbb006 ,")"
                         #190411-00017#1 A mark-E
                         #190411-00017#1 A mod-S   
                         "   AND EXISTS(SELECT 1 FROM xccd_tmp ",
                         "               WHERE xcce006 = xccd006 ",
                         "                 AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE xccd007 = imaa001 AND xcbb006 = ",p_xcbb006,")) "
                         #190411-00017#1 A mod-E

        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce302,?) ",
                         "                                                          ELSE ROUND(xcce302,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce302,?)",
                         "                                END ),",
                         "                    xcce302a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302a,?) ",
                         "                                                         ELSE ROUND(xcce302a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302a,?)",
                         "                                END ),",
                         "                    xcce302b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302b,?) ",
                         "                                                         ELSE ROUND(xcce302b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302b,?)",
                         "                                END ),",
                         "                    xcce302c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302c,?) ",
                         "                                                         ELSE ROUND(xcce302c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302c,?)",
                         "                                END ),",
                         "                    xcce302d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302d,?) ",
                         "                                                         ELSE ROUND(xcce302d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302d,?)",
                         "                                END ),",
                         "                    xcce302e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302e,?) ",
                         "                                                         ELSE ROUND(xcce302e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302e,?)",
                         "                                END ),",
                         "                    xcce302f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302f,?) ",
                         "                                                         ELSE ROUND(xcce302f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302f,?)",
                         "                                END ),",
                         "                    xcce302g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302g,?) ",
                         "                                                         ELSE ROUND(xcce302g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302g,?)",
                         "                                END ),",
                         "                    xcce302h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce302h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce302h,?) ",
                         "                                                         ELSE ROUND(xcce302h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce302h,?)",
                         "                                END ),",  
                         "                    xcce304  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcce304,?) ",
                         "                                                          ELSE ROUND(xcce304,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcce304,?)",
                         "                                END ),",
                         "                    xcce304a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304a,?) ",
                         "                                                         ELSE ROUND(xcce304a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304a,?)",
                         "                                END ),",
                         "                    xcce304b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304b,?) ",
                         "                                                         ELSE ROUND(xcce304b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304b,?)",
                         "                                END ),",
                         "                    xcce304c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304c,?) ",
                         "                                                         ELSE ROUND(xcce304c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304c,?)",
                         "                                END ),",
                         "                    xcce304d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304d,?) ",
                         "                                                         ELSE ROUND(xcce304d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304d,?)",
                         "                                END ),",
                         "                    xcce304e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304e,?) ",
                         "                                                         ELSE ROUND(xcce304e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304e,?)",
                         "                                END ),",
                         "                    xcce304f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304f,?) ",
                         "                                                         ELSE ROUND(xcce304f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304f,?)",
                         "                                END ),",
                         "                    xcce304g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304g,?) ",
                         "                                                         ELSE ROUND(xcce304g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304g,?)",
                         "                                END ),",
                         "                    xcce304h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcce304h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcce304h,?) ",
                         "                                                         ELSE ROUND(xcce304h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcce304h,?)",
                         "                                END ) ",                         
                         " WHERE xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'",           
                         #190411-00017#1 A mark-S               
#                         "   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp ",                       
#                         "                     WHERE xccd007 = imaa001   ",
#                         "                       AND xcbb006 = ",p_xcbb006 ,")"  
                         #190411-00017#1 A mark-E
                         #190411-00017#1 A mod-S   
                         "   AND EXISTS(SELECT 1 FROM xccd_tmp ",
                         "               WHERE xcce006 = xccd006 ",
                         "                 AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE xccd007 = imaa001 AND xcbb006 = ",p_xcbb006,")) " 
                         #190411-00017#1 A mod-E  
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcce_tmp SET xcce302  = ceil(xcce302 *power(10,?))/power(10,?),",
                         "                    xcce302a = ceil(xcce302a*power(10,?))/power(10,?),",
                         "                    xcce302b = ceil(xcce302b*power(10,?))/power(10,?),",
                         "                    xcce302c = ceil(xcce302c*power(10,?))/power(10,?),",
                         "                    xcce302d = ceil(xcce302d*power(10,?))/power(10,?),",
                         "                    xcce302e = ceil(xcce302e*power(10,?))/power(10,?),",
                         "                    xcce302f = ceil(xcce302f*power(10,?))/power(10,?),",
                         "                    xcce302g = ceil(xcce302g*power(10,?))/power(10,?),",
                         "                    xcce302h = ceil(xcce302h*power(10,?))/power(10,?),",      
                         "                    xcce304  = ceil(xcce304 *power(10,?))/power(10,?),",
                         "                    xcce304a = ceil(xcce304a*power(10,?))/power(10,?),",
                         "                    xcce304b = ceil(xcce304b*power(10,?))/power(10,?),",
                         "                    xcce304c = ceil(xcce304c*power(10,?))/power(10,?),",
                         "                    xcce304d = ceil(xcce304d*power(10,?))/power(10,?),",
                         "                    xcce304e = ceil(xcce304e*power(10,?))/power(10,?),",
                         "                    xcce304f = ceil(xcce304f*power(10,?))/power(10,?),",
                         "                    xcce304g = ceil(xcce304g*power(10,?))/power(10,?),",
                         "                    xcce304h = ceil(xcce304h*power(10,?))/power(10,?) ",                         
                         " WHERE xcce007 = 'DL+OH+SUB' ",
                         "   AND xcce001 = '",p_seq,"'",    
                         #190411-00017#1 A mark-S                      
#                         "   AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp ",                       
#                         "                     WHERE xccd007 = imaa001   ",
#                         "                       AND xcbb006 = ",p_xcbb006 ,")"   
                         #190411-00017#1 A mark-E
                         #190411-00017#1 A mod-S   
                         "   AND EXISTS(SELECT 1 FROM xccd_tmp ",
                         "               WHERE xcce006 = xccd006 ",
                         "                 AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE xccd007 = imaa001 AND xcbb006 = ",p_xcbb006,")) " 
                         #190411-00017#1 A mod-E     
        #180802-00015#1 add-E                               
                         
   END CASE                        
   PREPARE s_axcp500_avg1_repeat_wip_4_2_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_repeat_wip_4_2_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_repeat_wip_4_2_p6')         
#     RETURN r_success
   END IF
  
   #180802-00015#1 mark-S 
#   EXECUTE s_axcp500_avg1_repeat_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                           g_curr[p_seq].digit2       
   #180802-00015#1 mark-E           
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_repeat_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_repeat_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_repeat_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_repeat_wip_4_2_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202h
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcck202g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcck202h
   END CASE
   #180802-00015#1 add-E                                                                 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_repeat_wip_4_2_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_repeat_wip_4_2_p6')         
#     RETURN r_success
   END IF     
   
   UPDATE xcce_tmp SET xcce302 = xcce302a + xcce302b + xcce302c + xcce302d + 
                                 xcce302e + xcce302f + xcce302g + xcce302h
    WHERE xcce007 = 'DL+OH+SUB'
      AND xcce001 = p_seq
      #190411-00017#1 A mark-S   
#      AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,s_axcp500_tmp
#                        WHERE xccd007 = imaa001   AND xcbb006 = p_xcbb006
#                          #AND xccd008 = xccc007    #add zhangllc 150730 特征  xccd不存特征的
#                        )
      #190411-00017#1 A mark-E
      #190411-00017#1 A mod-S
      AND EXISTS(SELECT 1 FROM xccd_tmp
                  WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE xccd007 = imaa001 AND xcbb006 = p_xcbb006))
      #190411-00017#1 A mod-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce302 "
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF      

   CALL s_axcp500_avg1_sum_xcce(p_xcbb006,p_seq) 
        RETURNING l_success      

   
   LET r_success = TRUE
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 重复性生产计算过程中使用的临时表
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_repeat_wip_cre_table()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success      成功否标识符
# Date & Author..: 2015-05-14 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_repeat_wip_cre_table()
   DEFINE r_success       LIKE type_t.num5

   LET r_success = FALSE

#wujie 160523 --begin  这个有bug，会导致多插入一批没有xccd的xcce出来，先mark
   LET r_success = TRUE
   RETURN r_success
#wujie 160523 --end

   #1.建立重复性工单主档

   DROP TABLE srda_tmp; #ODI-ORA#
   CREATE TEMP TABLE srda_tmp(
   srdaent     LIKE srda_t.srdaent,
   srdasite    LIKE srda_t.srdasite,
   srda002     LIKE srda_t.srda002,     #计划号
   srda003     LIKE srda_t.srda003,     #料号
   srda005     LIKE srda_t.srda005,     #产品特征
   srda006     LIKE srda_t.srda006,     #剩余套数
   srdadocno   LIKE inaj_t.inaj020,     #重复性工单编号
   xcbb006     LIKE xcbb_t.xcbb006,     #成本阶
#  imag014     LIKE imag_t.imag014,     #成本单位
   imaa006     LIKE imaa_t.imaa006,     #成本单位
   imae016     LIKE imae_t.imae016 );   #生产单位
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE TEMP TABLE srda_tmp"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  
   
   CREATE UNIQUE INDEX srda_tmp_01 ON srda_tmp(srdaent,srdasite,srda002,srda003,srda005);
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE UNIQUE INDEX srda_tmp_01"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   
   

   DROP TABLE repeat_wip_tmp1; #ODI-ORA#
   #2.计算工单主件的转出数量
   CREATE TEMP TABLE repeat_wip_tmp1(
   inajsite    LIKE inaj_t.inajsite,
   inaj020     LIKE inaj_t.inaj020,
   srda003     LIKE srda_t.srda003,
   inaj005     LIKE inaj_t.inaj005,
   qty         LIKE xccc_t.xccc201,
   xcbp006     LIKE xcbp_t.xcbp006);
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE TEMP TABLE repeat_wip_tmp1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF     
   

   DROP TABLE rept_wip_tmp01;             #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01 #ODI-ORA#
   #3.建立重复性工单下阶料总转出数量
   CREATE TEMP TABLE rept_wip_tmp01(      #160727-00019#29  Mod  repeat_wip4_tmp1 --> rept_wip_tmp01
   srdasite    LIKE srda_t.srdasite,
   srda002     LIKE srda_t.srda002,     #计划号
   srda003     LIKE srda_t.srda003,     #料号
   srda005     LIKE srda_t.srda005,     #产品特征
   srdadocno   LIKE inaj_t.inaj020,     #重复性工单编号
   srdb006     LIKE srdb_t.srdb006,     #料件
   srdb007     LIKE srdb_t.srdb007,     #特征
   srdb011     LIKE srdb_t.srdb011,     #调整后本期转出
#  imag014     LIKE imag_t.imag014,     #成本单位
   imaa006     LIKE imaa_t.imaa006,     #成本单位
   imae081     LIKE imae_t.imae081,     #发料单位
   xcbb006     LIKE xcbb_t.xcbb006);    #成本阶
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE TEMP TABLE rept_wip_tmp01"          
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  
   
   #KEY:工单+下阶料+下阶料特征
   CREATE UNIQUE INDEX repeat_wip4_tmp1_01 ON rept_wip_tmp01(srdasite,srda002,srda003,srda005,srdb006,srdb007);        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE UNIQUE INDEX repeat_wip4_tmp1_01"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF      
   
   #4.下阶料累计发料量

   DROP TABLE rept_wip_tmp02;            #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02 #ODI-ORA#
   CREATE TEMP TABLE rept_wip_tmp02(     #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
   xcce006     LIKE xcce_t.xcce006,
   xcce002     LIKE xcce_t.xcce002,
   xcce007     LIKE xcce_t.xcce007,
   xcce008     LIKE xcce_t.xcce008,
   xcce009     LIKE xcce_t.xcce009,
   seq         LIKE type_t.num5,
   qty1        LIKE xcce_t.xcce101,
   qty2        LIKE xcce_t.xcce101,
   qty3        LIKE xcce_t.xcce101);   
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE TEMP TABLE rept_wip_tmp02"        
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  
   
   CREATE UNIQUE INDEX repeat_wip4_tmp2_01 ON rept_wip_tmp02(xcce006,xcce002,xcce007,xcce008,xcce009);      #160727-00019#29  Mod  repeat_wip4_tmp2 --> rept_wip_tmp02
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE UNIQUE INDEX repeat_wip4_tmp2_01"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF                

   #5.下阶料转出量及成本

   DROP TABLE rept_wip_tmp03;           #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03 #ODI-ORA#
   CREATE TEMP TABLE rept_wip_tmp03(    #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
   xcce001     LIKE xcce_t.xcce001,
   xcce002     LIKE xcce_t.xcce002,
   xcce006     LIKE xcce_t.xcce006,
   xcce007     LIKE xcce_t.xcce007,
   xcce008     LIKE xcce_t.xcce008,
   xcce009     LIKE xcce_t.xcce009,
   xcbb006     LIKE xcbb_t.xcbb006,
   xcce301     LIKE xcce_t.xcce301,
   xcce302     LIKE xcce_t.xcce302,
   xcce302a    LIKE xcce_t.xcce302a,
   xcce302b    LIKE xcce_t.xcce302b,
   xcce302c    LIKE xcce_t.xcce302c,
   xcce302d    LIKE xcce_t.xcce302d,
   xcce302e    LIKE xcce_t.xcce302e,
   xcce302f    LIKE xcce_t.xcce302f,
   xcce302g    LIKE xcce_t.xcce302g,
   xcce302h    LIKE xcce_t.xcce302h);

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE TEMP TABLE rept_wip_tmp03"     
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF  
   
   CREATE UNIQUE INDEX repeat_wip4_tmp3_01 ON rept_wip_tmp03(xcce001,xcce002,xcce006,xcce007,xcce008,xcce009);         #160727-00019#29  Mod  repeat_wip4_tmp3 --> rept_wip_tmp03
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE UNIQUE INDEX repeat_wip4_tmp3_01"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF                
            
   #6.rept_wip_tmp04 用于DL+OH+SUB的转出
   CREATE TEMP TABLE rept_wip_tmp04(   #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
   xcce001     LIKE xcce_t.xcce001,    #本位币顺序
   xcce002     LIKE xcce_t.xcce002,    #成本域
   xcce006     LIKE xcce_t.xcce006,    #工单
   xcce007     LIKE xcce_t.xcce007,    #料件
   xcce008     LIKE xcce_t.xcce008,    #特征
   xcce009     LIKE xcce_t.xcce009,    #批号
   xccd101     LIKE xccd_t.xccd101,    #期初数量
   xccd201     LIKE xccd_t.xccd101,    #本期投入数量
   xccd301     LIKE xccd_t.xccd301,    #转出数量
   xcbi103     LIKE xcbi_t.xcbi103,    #约当数
   rate1       LIKE type_t.num26_10,   #比率1(人工/制费)
   rate2       LIKE type_t.num26_10,   #比率2(加工)
   rate3       LIKE type_t.num26_10    #比率3(xcce301更新的比例)
   );

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create rept_wip_tmp04'   #160727-00019#29  Mod  repeat_wip4_tmp4 --> rept_wip_tmp04
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   #161114-00003#1-s-add                 
   #b add by zwr 16.10.20 增加索引   
   CREATE UNIQUE INDEX repeat_wip4_tmp4_01 ON repeat_wip4_tmp4(xcce001,xcce002,xcce006,xcce007,xcce008,xcce009);
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE UNIQUE INDEX repeat_wip4_tmp4_01"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF 
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add
   #add zhangllc 160526--s SBS1
   #6.建立临时表rept_wip_tmp05 用于ADJUST的转出
   CREATE TEMP TABLE rept_wip_tmp05(   #160727-00019#29  Mod  repeat_wip4_tmp5 --> rept_wip_tmp05
   xcce001     LIKE xcce_t.xcce001,    #本位币顺序
   xcce002     LIKE xcce_t.xcce002,    #成本域
   xcce006     LIKE xcce_t.xcce006,    #工单
   xcce007     LIKE xcce_t.xcce007,    #料件
   xcce008     LIKE xcce_t.xcce008,    #特征
   xcce009     LIKE xcce_t.xcce009,    #批号
   xccd101     LIKE xccd_t.xccd101,    #期初数量
   xccd201     LIKE xccd_t.xccd101,    #本期投入数量
   xccd301     LIKE xccd_t.xccd301     #转出数量
   );

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create rept_wip_tmp05'        #160727-00019#29  Mod  repeat_wip4_tmp5 --> rept_wip_tmp05
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   #add zhangllc 160526--e SBS1
   #161114-00003#1-s-add
   #b add by zwr 16.10.20 增加索引   
   CREATE UNIQUE INDEX repeat_wip4_tmp5_01 ON repeat_wip4_tmp5(xcce001,xcce002,xcce006,xcce007,xcce008,xcce009);
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "CREATE UNIQUE INDEX repeat_wip4_tmp5_01"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF 
   #e add by zwr 16.10.20 增加索引
   #161114-00003#1-e-add
   
   LET r_success = TRUE
   RETURN r_success  
   
END FUNCTION

################################################################################
# Descriptions...: 计算xccq280值
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccq280(p_xcbb006,p_seq,p_step)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
#                : p_step         1.第一轮月加权  2.第二轮月加权
# Return code....: r_success      成功否标志位
# Date & Author..: 2015-12-15 By zhangllc 151215
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccq280(p_xcbb006,p_seq,p_step)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccq_t.xccq001
   DEFINE p_step          LIKE type_t.chr1
   DEFINE r_success       LIKE type_t.num5
   
   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE

   IF p_step = '1' THEN
      UPDATE xccq_tmp SET xccq280  = (xccq102 + xccq202 + xccq204 + xccq206 + xccq212 + xccq214 + xccq218) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217),
                          xccq280a = (xccq102a + xccq202a + xccq204a + xccq206a + xccq212a + xccq214a + xccq218a) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217),
                          xccq280b = (xccq102b + xccq202b + xccq204b + xccq206b + xccq212b + xccq214b + xccq218b) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217),
                          xccq280c = (xccq102c + xccq202c + xccq204c + xccq206c + xccq212c + xccq214c + xccq218c) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217),
                          xccq280d = (xccq102d + xccq202d + xccq204d + xccq206d + xccq212d + xccq214d + xccq218d) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217),
                          xccq280e = (xccq102e + xccq202e + xccq204e + xccq206e + xccq212e + xccq214e + xccq218e) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217),
                          xccq280f = (xccq102f + xccq202f + xccq204f + xccq206f + xccq212f + xccq214f + xccq218f) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217),
                          xccq280g = (xccq102g + xccq202g + xccq204g + xccq206g + xccq212g + xccq214g + xccq218g) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217),
                          xccq280h = (xccq102h + xccq202h + xccq204h + xccq206h + xccq212h + xccq214h + xccq218h) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217)
       WHERE (xccq101 + xccq201 + xccq203 + xccq205 + xccq211 + xccq213 + xccq217 <> 0 )
         #mod zhangllc 150730 --begin
         #AND xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                        AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
         #mod zhangllc 150730 --end
   ELSE
      UPDATE xccq_tmp SET xccq280  = (xccq102 + xccq202 + xccq204 + xccq206 + xccq208 + xccq210 + xccq212 + xccq214 + xccq216 + xccq218) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280a = (xccq102a + xccq202a + xccq204a + xccq206a + xccq208a + xccq210a + xccq212a + xccq214a + xccq216a + xccq218a) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280b = (xccq102b + xccq202b + xccq204b + xccq206b + xccq208b + xccq210b + xccq212b + xccq214b + xccq216b + xccq218b) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),                                 
                          xccq280c = (xccq102c + xccq202c + xccq204c + xccq206c + xccq208c + xccq210c + xccq212c + xccq214c + xccq216c + xccq218c) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280d = (xccq102d + xccq202d + xccq204d + xccq206d + xccq208d + xccq210d + xccq212d + xccq214d + xccq216d + xccq218d) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),                                 
                          xccq280e = (xccq102e + xccq202e + xccq204e + xccq206e + xccq208e + xccq210e + xccq212e + xccq214e + xccq216e + xccq218e) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280f = (xccq102f + xccq202f + xccq204f + xccq206f + xccq208f + xccq210f + xccq212f + xccq214f + xccq216f + xccq218f) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),                                 
                          xccq280g = (xccq102g + xccq202g + xccq204g + xccq206g + xccq208g + xccq210g + xccq212g + xccq214g + xccq216g + xccq218g) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280h = (xccq102h + xccq202h + xccq204h + xccq206h + xccq208h + xccq210h + xccq212h + xccq214h + xccq216h + xccq218h) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217)
        WHERE (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217) <> 0
         #mod zhangllc 150730 --begin
         #AND xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                        AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
         #mod zhangllc 150730 --end  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280')         
#        RETURN r_success
      END IF    

      UPDATE xccq_tmp SET xccq280  = (xccq102 + xccq202 + xccq204 + xccq206 + xccq210 + xccq212 + xccq214 + xccq216 + xccq218) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280a = (xccq102a + xccq202a + xccq204a + xccq206a + xccq210a + xccq212a + xccq214a + xccq216a + xccq218a) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280b = (xccq102b + xccq202b + xccq204b + xccq206b + xccq210b + xccq212b + xccq214b + xccq216b + xccq218b) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),                                 
                          xccq280c = (xccq102c + xccq202c + xccq204c + xccq206c + xccq210c + xccq212c + xccq214c + xccq216c + xccq218c) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280d = (xccq102d + xccq202d + xccq204d + xccq206d + xccq210d + xccq212d + xccq214d + xccq216d + xccq218d) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),                                 
                          xccq280e = (xccq102e + xccq202e + xccq204e + xccq206e + xccq210e + xccq212e + xccq214e + xccq216e + xccq218e) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280f = (xccq102f + xccq202f + xccq204f + xccq206f + xccq210f + xccq212f + xccq214f + xccq216f + xccq218f) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),                                 
                          xccq280g = (xccq102g + xccq202g + xccq204g + xccq206g + xccq210g + xccq212g + xccq214g + xccq216g + xccq218g) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217),
                          xccq280h = (xccq102h + xccq202h + xccq204h + xccq206h + xccq210h + xccq212h + xccq214h + xccq216h + xccq218h) / 
                                     (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217)
        WHERE (xccq101 + xccq201 + xccq203 + xccq205 + xccq207 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217) = 0
          AND (xccq101 + xccq201 + xccq203 + xccq205 + xccq209 + xccq211 + xccq213 + xccq215 + xccq217) <> 0
         #mod zhangllc 150730 --begin
         #AND xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                        AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
         #mod zhangllc 150730 --end                                      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280')         
#        RETURN r_success
      END IF 
   
   END IF

   #xccq280平均单价为0时，则重取上期xccq的平均单价
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp a   ",
               "       USING xccq_t b    ",
               "          ON ( a.xccqent = b.xccqent         ",
               "          AND  a.xccqld  = b.xccqld          ",
               "          AND  a.xccqsite= b.xccqsite        ",
               "          AND  a.xccq001 = b.xccq001         ",
               "          AND  a.xccq002 = b.xccq002         ",
               "          AND  a.xccq003 = b.xccq003         ",
               "          AND  a.xccq006 = b.xccq006         ",
               "          AND  a.xccq007 = b.xccq007         ",
               "          AND  a.xccq008 = b.xccq008         ",
               "          AND  a.xccq009 = b.xccq009         ",
               "          AND  a.xccq010 = b.xccq010         ",
               "          AND  a.xccq011 = b.xccq011         ",
               "          AND  a.xccq012 = b.xccq012         ",
               #mod zhangllc 150730 --begin
               #"          AND  a.xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"          AND  (a.xccq006,a.xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
#               "          AND  (a.xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1  #190411-00017#1 A mark
               "          AND  EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xccq006 AND xcbb006 = ",p_xcbb006,") )",  #190411-00017#1 A mod
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccq280  = nvl(b.xccq280 ,0) ,   ",
               "                  a.xccq280a = nvl(b.xccq280a,0) ,   ",    
               "                  a.xccq280b = nvl(b.xccq280b,0) ,   ",    
               "                  a.xccq280c = nvl(b.xccq280c,0) ,   ",    
               "                  a.xccq280d = nvl(b.xccq280d,0) ,   ",    
               "                  a.xccq280e = nvl(b.xccq280e,0) ,   ",    
               "                  a.xccq280f = nvl(b.xccq280f,0) ,   ",    
               "                  a.xccq280g = nvl(b.xccq280g,0) ,   ",    
               "                  a.xccq280h = nvl(b.xccq280h,0)     ",               
               "        WHERE b.xccq004 = ",g_last_yy,
               "          AND b.xccq005 = ",g_last_pp,
               "          AND a.xccq280 <= 0    ", #mod zhangllc 150817 add <
               "          AND b.xccq280 <> 0   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_4_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_4_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_4_p4')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_4_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_4_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_4_p4')         
#     RETURN r_success
   END IF

   #还取不到平均单价,则取开帐的平均单价
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp a    ",
               "       USING xcca_t b     ",
               "          ON ( a.xccqent = b.xccaent       ",  
               "          AND  a.xccqld  = b.xccald        ",
               "          AND  a.xccq001 = b.xcca001       ",
               "          AND  a.xccq002 = b.xcca002       ",
               "          AND  a.xccq003 = b.xcca003       ",
               "          AND  a.xccq006 = b.xcca006       ",
               "          AND  a.xccq007 = b.xcca007       ",
               "          AND  a.xccq008 = b.xcca008       ",
               #mod zhangllc 150730 --begin
               #"          AND  a.xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"          AND  (a.xccq006,a.xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
#               "          AND  (a.xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1  #190411-00017#1 A mark
               "          AND  EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xccq006 AND xcbb006 = ",p_xcbb006,") )",  #190411-00017#1 A mod
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN                        ",
               "       UPDATE SET a.xccq280  = nvl(b.xcca110 ,0) , ",
               "                  a.xccq280a = nvl(b.xcca110a,0) , ",       
               "                  a.xccq280b = nvl(b.xcca110b,0) , ",       
               "                  a.xccq280c = nvl(b.xcca110c,0) , ",       
               "                  a.xccq280d = nvl(b.xcca110d,0) , ",       
               "                  a.xccq280e = nvl(b.xcca110e,0) , ",       
               "                  a.xccq280f = nvl(b.xcca110f,0) , ",       
               "                  a.xccq280g = nvl(b.xcca110g,0) , ",       
               "                  a.xccq280h = nvl(b.xcca110h,0)   ",               
               "        WHERE b.xcca004 = ",g_last_yy,
               "          AND b.xcca005 = ",g_last_pp,
               "          AND a.xccq280 <= 0     ", #mod zhangllc 150817 add <
               "          AND b.xcca110 <> 0     "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_4_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_4_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_4_p5')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_4_p5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_4_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_4_p5')         
#     RETURN r_success
   END IF
   
   #add zhangllc 150817 --begin
   #检查一下单位成本是否<=0，如果是则去抓最近一笔xcck上的非0的单位成本，取不到则取定价档（与实时成本计算的逻辑相同）
   #还取不到平均单价,则取最近一笔xcck上的非0的单位成本
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp a    ",
               "       USING (SELECT * FROM ( SELECT xcck_tmp.*,ROWNUM FROM xcck_tmp ",
               "                              WHERE xcck282 > 0 ",
               "                              ORDER BY xcck013 DESC,xcck014 DESC) tsed",
               "               WHERE ROWNUM=1 ",
               "              ) b     ",  #最近的
               "          ON ( a.xccqent = b.xcckent       ",  
               "          AND  a.xccqld  = b.xcckld        ",
               "          AND  a.xccqsite= b.xccksite      ",
               "          AND  a.xccq001 = b.xcck001       ",
               "          AND  a.xccq002 = b.xcck002       ",
               "          AND  a.xccq003 = b.xcck003       ",
               "          AND  a.xccq006 = b.xcck010       ",
               "          AND  a.xccq007 = b.xcck011       ",
               "          AND  a.xccq008 = b.xcck017       ",
               "          AND  a.xccq009 = b.xccktmp1      ",
               "          AND  a.xccq010 = b.xcck015       ",
               "          AND  a.xccq011 = b.xcck016       ",
               "          AND  a.xccq012 = b.xcck028       ",
               #"          AND  (a.xccq006,a.xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #满足成本阶 #170112-00041#1
#               "          AND  (a.xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #满足成本阶 #170112-00041#1  #190411-00017#1 A mark
               "          AND  EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xccq006 AND xcbb006 = ",p_xcbb006,") )",  #190411-00017#1 A mod
               "  WHEN MATCHED THEN                        ",
               "       UPDATE SET a.xccq280  = nvl(b.xcck282 ,0) , ",
               "                  a.xccq280a = nvl(b.xcck282a,0) , ",       
               "                  a.xccq280b = nvl(b.xcck282b,0) , ",       
               "                  a.xccq280c = nvl(b.xcck282c,0) , ",       
               "                  a.xccq280d = nvl(b.xcck282d,0) , ",       
               "                  a.xccq280e = nvl(b.xcck282e,0) , ",       
               "                  a.xccq280f = nvl(b.xcck282f,0) , ",       
               "                  a.xccq280g = nvl(b.xcck282g,0) , ",       
               "                  a.xccq280h = nvl(b.xcck282h,0)   ",               
               "        WHERE a.xccq280 <= 0    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_4_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_4_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_4_p6')         
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_4_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_4_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_4_p6')         
   END IF
   #还取不到平均单价,则取最新进价
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccq_tmp a    ",
               "       USING (SELECT * FROM ( SELECT rtdxent,rtdx001,max(rtdx034) rtdx034 FROM rtdx_t,ooef_t ",
               "                              WHERE ooef001 = rtdxsite ",
               "                                AND ooefent = rtdxent ",
               "                                AND ooefent = ",g_enterprise,
               "                                AND ooef017 = '",g_comp,"'",
               "                                AND rtdx034 > 0 ",
               #"                                AND rtdx041 <= '",g_edate,"' ", #促銷進價開始日期
               #"                                AND rtdx042 >= '",g_bdate,"' ",  #结束日期
               "                              GROUP BY rtdxent,rtdx001) tsed",
               "              ) b     ",
               "          ON ( a.xccqent = b.rtdxent       ",  
               "          AND  a.xccq006 = b.rtdx001       ",
               #"          AND  (a.xccq006,a.xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #满足成本阶#170112-00041#1
#               "          AND  (a.xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #满足成本阶#170112-00041#1   #190411-00017#1 A mark
               "          AND  EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xccq006 AND xcbb006 = ",p_xcbb006,") )",  #190411-00017#1 A mod
               "  WHEN MATCHED THEN                        ",
               "       UPDATE SET a.xccq280  = nvl(b.rtdx034,0) , ",
               "                  a.xccq280a = nvl(b.rtdx034,0) , ",       
               "                  a.xccq280b = 0 , ",       
               "                  a.xccq280c = 0 , ",       
               "                  a.xccq280d = 0 , ",       
               "                  a.xccq280e = 0 , ",       
               "                  a.xccq280f = 0 , ",       
               "                  a.xccq280g = 0 , ",       
               "                  a.xccq280h = 0   ",               
               "        WHERE a.xccq280 <= 0    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccq_4_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_4_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_4_p7')         
   END IF     
   EXECUTE s_axcp500_avg1_set_xccq_4_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_4_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_4_p7')         
   END IF
   #add zhangllc 150817 --end
   
   #平均成本字段取位xccq280a~xccq280h
   CASE g_round_type
        WHEN '1'   #四舍五入   
             LET g_sql = " UPDATE xccq_tmp SET xccq280  = round(xccq280 ,?), ",
                         "                     xccq280a = round(xccq280a,?), xccq280b = round(xccq280b,?), ",
                         "                     xccq280c = round(xccq280c,?), xccq280d = round(xccq280d,?), ",
                         "                     xccq280e = round(xccq280e,?), xccq280f = round(xccq280f,?), ",
                         "                     xccq280g = round(xccq280g,?), xccq280h = round(xccq280h,?)  ",
                        #mod zhangllc 150730 --begin
                        #"  WHERE xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                        
                        #"  WHERE (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                    #161114-00003#1 mark
                         #"  WHERE (xccq006,xccq007) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") " #161114-00003#1 add   #170112-00041#1                      
#                         "  WHERE (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "  #170112-00041#1   #190411-00017#1 A mark
                         "  WHERE  EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xccq006 AND xcbb006 = ",p_xcbb006,") )"   #190411-00017#1 A mod                      
                        #mod zhangllc 150730 --end
                         
        WHEN '3'   #无条件截位
             LET g_sql = " UPDATE xccq_tmp SET xccq280  = trunc(xccq280 ,?), ",
                         "                     xccq280a = trunc(xccq280a,?), xccq280b = trunc(xccq280b,?), ",
                         "                     xccq280c = trunc(xccq280c,?), xccq280d = trunc(xccq280d,?), ",
                         "                     xccq280e = trunc(xccq280e,?), xccq280f = trunc(xccq280f,?), ",
                         "                     xccq280g = trunc(xccq280g,?), xccq280h = trunc(xccq280h,?)  ",
                        #mod zhangllc 150730 --begin
                        #"  WHERE xccq006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                         
                        #"  WHERE (xccq006,xccq007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                    #161114-00003#1 mark
                         #"  WHERE (xccq006,xccq007) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") " #161114-00003#1 add   #170112-00041#1                       
#                         "  WHERE (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "  #170112-00041#1   #190411-00017#1 A mark
                         "   WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xccq006 AND xcbb006 = ",p_xcbb006,") )"   #190411-00017#1 A mod                      
                        #mod zhangllc 150730 --end     
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xccq_tmp SET xccq280  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccq280,?) ",
                         "                                                          ELSE ROUND(xccq280,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccq280,?)",
                         "                                END ),",
                         "                    xccq280a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq280a,?) ",
                         "                                                         ELSE ROUND(xccq280a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq280a,?)",
                         "                                END ),",
                         "                    xccq280b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq280b,?) ",
                         "                                                         ELSE ROUND(xccq280b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq280b,?)",
                         "                                END ),",
                         "                    xccq280c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq280c,?) ",
                         "                                                         ELSE ROUND(xccq280c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq280c,?)",
                         "                                END ),",
                         "                    xccq280d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq280d,?) ",
                         "                                                         ELSE ROUND(xccq280d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq280d,?)",
                         "                                END ),",
                         "                    xccq280e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq280e,?) ",
                         "                                                         ELSE ROUND(xccq280e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq280e,?)",
                         "                                END ),",
                         "                    xccq280f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq280f,?) ",
                         "                                                         ELSE ROUND(xccq280f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq280f,?)",
                         "                                END ),",
                         "                    xccq280g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq280g,?) ",
                         "                                                         ELSE ROUND(xccq280g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq280g,?)",
                         "                                END ),",
                         "                    xccq280h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccq280h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccq280h,?) ",
                         "                                                         ELSE ROUND(xccq280h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccq280h,?)",
                         "                                END )",
#                         "  WHERE (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "  #190411-00017#1 A mark
                         " WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xccq006 AND xcbb006 = ",p_xcbb006,") )"   #190411-00017#1 A mod
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xccq_tmp SET xccq280  = ceil(xccq280 *power(10,?))/power(10,?),",
                         "                    xccq280a = ceil(xccq280a*power(10,?))/power(10,?),",
                         "                    xccq280b = ceil(xccq280b*power(10,?))/power(10,?),",
                         "                    xccq280c = ceil(xccq280c*power(10,?))/power(10,?),",
                         "                    xccq280d = ceil(xccq280d*power(10,?))/power(10,?),",
                         "                    xccq280e = ceil(xccq280e*power(10,?))/power(10,?),",
                         "                    xccq280f = ceil(xccq280f*power(10,?))/power(10,?),",
                         "                    xccq280g = ceil(xccq280g*power(10,?))/power(10,?),",
                         "                    xccq280h = ceil(xccq280h*power(10,?))/power(10,?) ",
#                         "  WHERE (xccq006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "  #190411-00017#1 A mark
                         " WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xccq006 AND xcbb006 = ",p_xcbb006,") )"   #190411-00017#1 A mod
        #180802-00015#1 add-E                           
        
   END CASE        
   PREPARE s_axcp500_avg1_set_xccq_4_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccq_4_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccq_4_p3')         
#     RETURN r_success
   END IF     
   #180802-00015#1 mark-S  
#   EXECUTE s_axcp500_avg1_set_xccq_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xccq_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xccq_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xccq_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xccq_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282a
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282b
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282c
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282d
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282e
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282f
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282g
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1    #xcck282h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccq_4_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccq_4_p3')         
#     RETURN r_success
   END IF      
   
   #修正xccq280的值-先修至xccq280a,若xccq280a为零,则修正xccq280b......
   UPDATE xccq_tmp SET xccq280a = xccq280 - (xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h)   
    WHERE xccq280 <> xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h
      AND xccq280 - (xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )   
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280a')         
#     RETURN r_success
   END IF   
      
   UPDATE xccq_tmp SET xccq280b = xccq280 - (xccq280a + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h)  
    WHERE xccq280 <> xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h
      AND xccq280 - (xccq280a + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h) >=0 
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280b')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq280c = xccq280 - (xccq280a + xccq280b + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h)  
    WHERE xccq280 <> xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h
      AND xccq280 - (xccq280a + xccq280b + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280c')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq280d = xccq280 - (xccq280a + xccq280b + xccq280c + xccq280e + xccq280f + xccq280g + xccq280h)  
    WHERE xccq280 <> xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h
      AND xccq280 - (xccq280a + xccq280b + xccq280c + xccq280e + xccq280f + xccq280g + xccq280h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280d')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq280e = xccq280 - (xccq280a + xccq280b + xccq280c + xccq280d + xccq280f + xccq280g + xccq280h)  
    WHERE xccq280 <> xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h
      AND xccq280 - (xccq280a + xccq280b + xccq280c + xccq280d + xccq280f + xccq280g + xccq280h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end     
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280e')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq280f = xccq280 - (xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280g + xccq280h)  
    WHERE xccq280 <> xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h
      AND xccq280 - (xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280g + xccq280h) >=0     
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280f')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq280g = xccq280 - (xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280h)  
    WHERE xccq280 <> xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h
      AND xccq280 - (xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280h) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280g')         
#     RETURN r_success
   END IF   
   UPDATE xccq_tmp SET xccq280h = xccq280 - (xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g)  
    WHERE xccq280 <> xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g + xccq280h
      AND xccq280 - (xccq280a + xccq280b + xccq280c + xccq280d + xccq280e + xccq280f + xccq280g) >=0
      #mod zhangllc 150730 --begin
      #AND xccq006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccq_tmp.xccq006 #AND s_axcp500_tmp.xccc007=xccq_tmp.xccq007  #170112-00041#1
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccq_tmp SET xccq280h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccq_tmp SET xccq280h')         
#     RETURN r_success
   END IF   

   
   LET r_success = TRUE
   RETURN r_success  
   
END FUNCTION

################################################################################
# Descriptions...: 计算xccc280值
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccc280(p_xcbb006,p_seq,p_step)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本阶
#                : p_seq          本位币顺序
#                : p_step         1.第一轮月加权  2.第二轮月加权
# Return code....: r_success      成功否标志位
# Date & Author..: 2015-06-08 By Carrier
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccc280(p_xcbb006,p_seq,p_step)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE p_step          LIKE type_t.chr1
   DEFINE r_success       LIKE type_t.num5
 
   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE

   #--By Frank

   CREATE INDEX s_axcp500_tmp_i02 ON s_axcp500_tmp(imaa001,xccc007,xcbb006) #ODI-ORA#
   IF cl_db_generate_analyze("s_axcp500_tmp") THEN END IF

   IF p_step = '1' THEN
     #170418-00027#1 ---mark (s)---
     #170407-00021#1 ---mod (s)---
     #UPDATE xccc_tmp SET xccc280  = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102 + xccc202 + xccc204 + xccc206 + xccc212 + xccc214 + xccc218) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)),
     #                    xccc280a = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102a + xccc202a + xccc204a + xccc206a + xccc212a + xccc214a + xccc218a) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)),
     #                    xccc280b = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102b + xccc202b + xccc204b + xccc206b + xccc212b + xccc214b + xccc218b) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)),
     #                    xccc280c = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102c + xccc202c + xccc204c + xccc206c + xccc212c + xccc214c + xccc218c) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)),
     #                    xccc280d = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102d + xccc202d + xccc204d + xccc206d + xccc212d + xccc214d + xccc218d) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)),
     #                    xccc280e = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102e + xccc202e + xccc204e + xccc206e + xccc212e + xccc214e + xccc218e) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)),
     #                    xccc280f = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102f + xccc202f + xccc204f + xccc206f + xccc212f + xccc214f + xccc218f) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)),
     #                    xccc280g = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102g + xccc202g + xccc204g + xccc206g + xccc212g + xccc214g + xccc218g) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)),
     #                    xccc280h = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102h + xccc202h + xccc204h + xccc206h + xccc212h + xccc214h + xccc218h) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217))
     # WHERE xccc101 <> 0 OR xccc201 <> 0 OR xccc203 <> 0 OR xccc205 <> 0 OR  xccc211 <> 0 OR xccc213 <> 0 OR xccc217 <> 0
     #170418-00027#1 ---mark (e)---
     #170418-00027#1 ---remark (s)---
      UPDATE xccc_tmp SET xccc280  = (xccc102 + xccc202 + xccc204 + xccc206 + xccc212 + xccc214 + xccc218) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
                          xccc280a = (xccc102a + xccc202a + xccc204a + xccc206a + xccc212a + xccc214a + xccc218a) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
                          xccc280b = (xccc102b + xccc202b + xccc204b + xccc206b + xccc212b + xccc214b + xccc218b) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
                          xccc280c = (xccc102c + xccc202c + xccc204c + xccc206c + xccc212c + xccc214c + xccc218c) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
                          xccc280d = (xccc102d + xccc202d + xccc204d + xccc206d + xccc212d + xccc214d + xccc218d) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
                          xccc280e = (xccc102e + xccc202e + xccc204e + xccc206e + xccc212e + xccc214e + xccc218e) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
                          xccc280f = (xccc102f + xccc202f + xccc204f + xccc206f + xccc212f + xccc214f + xccc218f) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
                          xccc280g = (xccc102g + xccc202g + xccc204g + xccc206g + xccc212g + xccc214g + xccc218g) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217),
                          xccc280h = (xccc102h + xccc202h + xccc204h + xccc206h + xccc212h + xccc214h + xccc218h) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217)
       WHERE (xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217 <> 0 )
     #170407-00021#1 ---mod (e)---
     #170418-00027#1 ---remark (e)---
         #mod zhangllc 150730 --begin
         #AND xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                        AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
         #mod zhangllc 150730 --end
   ELSE
     #170418-00027#1 ---mark (s)---
     #170407-00021#1 ---mod (s)---
     #UPDATE xccc_tmp SET xccc280  = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102 + xccc202 + xccc204 + xccc206 + xccc208 + xccc210 + xccc212 + xccc214 + xccc216 + xccc218) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
     #                    xccc280a = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102a + xccc202a + xccc204a + xccc206a + xccc208a + xccc210a + xccc212a + xccc214a + xccc216a + xccc218a) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
     #                    xccc280b = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102b + xccc202b + xccc204b + xccc206b + xccc208b + xccc210b + xccc212b + xccc214b + xccc216b + xccc218b) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
     #                    xccc280c = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102c + xccc202c + xccc204c + xccc206c + xccc208c + xccc210c + xccc212c + xccc214c + xccc216c + xccc218c) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
     #                    xccc280d = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102d + xccc202d + xccc204d + xccc206d + xccc208d + xccc210d + xccc212d + xccc214d + xccc216d + xccc218d) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
     #                    xccc280e = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102e + xccc202e + xccc204e + xccc206e + xccc208e + xccc210e + xccc212e + xccc214e + xccc216e + xccc218e) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
     #                    xccc280f = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102f + xccc202f + xccc204f + xccc206f + xccc208f + xccc210f + xccc212f + xccc214f + xccc216f + xccc218f) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
     #                    xccc280g = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102g + xccc202g + xccc204g + xccc206g + xccc208g + xccc210g + xccc212g + xccc214g + xccc216g + xccc218g) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
     #                    xccc280h = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102h + xccc202h + xccc204h + xccc206h + xccc208h + xccc210h + xccc212h + xccc214h + xccc216h + xccc218h) /
     #                               (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217))
     #  WHERE xccc101 <> 0 OR xccc201 <> 0 OR xccc203 <> 0 OR xccc205 <> 0 OR  xccc211 <> 0 OR xccc213 <> 0 OR xccc217 <> 0
     #170418-00027#1 ---mark (e)---
     #170418-00027#1 ---remark (s)---
      UPDATE xccc_tmp SET xccc280  = (xccc102 + xccc202 + xccc204 + xccc206 + xccc208 + xccc210 + xccc212 + xccc214 + xccc216 + xccc218) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                          xccc280a = (xccc102a + xccc202a + xccc204a + xccc206a + xccc208a + xccc210a + xccc212a + xccc214a + xccc216a + xccc218a) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                          xccc280b = (xccc102b + xccc202b + xccc204b + xccc206b + xccc208b + xccc210b + xccc212b + xccc214b + xccc216b + xccc218b) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
                          xccc280c = (xccc102c + xccc202c + xccc204c + xccc206c + xccc208c + xccc210c + xccc212c + xccc214c + xccc216c + xccc218c) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                          xccc280d = (xccc102d + xccc202d + xccc204d + xccc206d + xccc208d + xccc210d + xccc212d + xccc214d + xccc216d + xccc218d) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
                          xccc280e = (xccc102e + xccc202e + xccc204e + xccc206e + xccc208e + xccc210e + xccc212e + xccc214e + xccc216e + xccc218e) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                          xccc280f = (xccc102f + xccc202f + xccc204f + xccc206f + xccc208f + xccc210f + xccc212f + xccc214f + xccc216f + xccc218f) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
                          xccc280g = (xccc102g + xccc202g + xccc204g + xccc206g + xccc208g + xccc210g + xccc212g + xccc214g + xccc216g + xccc218g) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                          xccc280h = (xccc102h + xccc202h + xccc204h + xccc206h + xccc208h + xccc210h + xccc212h + xccc214h + xccc216h + xccc218h) / 
                                     (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)
        WHERE (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217) <> 0
     #170407-00021#1 ---mod (e)---
     #170418-00027#1 ---remark (e)---
         #mod zhangllc 150730 --begin
         #AND xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                        AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
         #mod zhangllc 150730 --end  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280')         
#        RETURN r_success
      END IF    

      #170418-00027#1 ---mark (s)---
      #170407-00021#1 ---mod (s)---
      #UPDATE xccc_tmp SET xccc280  = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102 + xccc202 + xccc204 + xccc206 + xccc210 + xccc212 + xccc214 + xccc216 + xccc218) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
      #                   xccc280a = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102a + xccc202a + xccc204a + xccc206a + xccc210a + xccc212a + xccc214a + xccc216a + xccc218a) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
      #                   xccc280b = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102b + xccc202b + xccc204b + xccc206b + xccc210b + xccc212b + xccc214b + xccc216b + xccc218b) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
      #                   xccc280c = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102c + xccc202c + xccc204c + xccc206c + xccc210c + xccc212c + xccc214c + xccc216c + xccc218c) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
      #                   xccc280d = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102d + xccc202d + xccc204d + xccc206d + xccc210d + xccc212d + xccc214d + xccc216d + xccc218d) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
      #                   xccc280e = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102e + xccc202e + xccc204e + xccc206e + xccc210e + xccc212e + xccc214e + xccc216e + xccc218e) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
      #                   xccc280f = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102f + xccc202f + xccc204f + xccc206f + xccc210f + xccc212f + xccc214f + xccc216f + xccc218f) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
      #                   xccc280g = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102g + xccc202g + xccc204g + xccc206g + xccc210g + xccc212g + xccc214g + xccc216g + xccc218g) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)),
      #                   xccc280h = decode(xccc101 + xccc201 + xccc203 + xccc205 + xccc211 + xccc213 + xccc217,0,0,(xccc102h + xccc202h + xccc204h + xccc206h + xccc210h + xccc212h + xccc214h + xccc216h + xccc218h) /
      #                              (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217))
      # WHERE (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217) = 0
      #   AND  xccc101 <> 0 OR xccc201 <> 0 OR xccc203 <> 0 OR xccc205 <> 0 OR  xccc211 <> 0 OR xccc213 <> 0 OR xccc217 <> 0
      #170418-00027#1 ---mark (e)---
      #170418-00027#1 ---remark (s)---
       UPDATE xccc_tmp SET xccc280  = (xccc102 + xccc202 + xccc204 + xccc206 + xccc210 + xccc212 + xccc214 + xccc216 + xccc218) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                           xccc280a = (xccc102a + xccc202a + xccc204a + xccc206a + xccc210a + xccc212a + xccc214a + xccc216a + xccc218a) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                           xccc280b = (xccc102b + xccc202b + xccc204b + xccc206b + xccc210b + xccc212b + xccc214b + xccc216b + xccc218b) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
                           xccc280c = (xccc102c + xccc202c + xccc204c + xccc206c + xccc210c + xccc212c + xccc214c + xccc216c + xccc218c) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                           xccc280d = (xccc102d + xccc202d + xccc204d + xccc206d + xccc210d + xccc212d + xccc214d + xccc216d + xccc218d) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
                           xccc280e = (xccc102e + xccc202e + xccc204e + xccc206e + xccc210e + xccc212e + xccc214e + xccc216e + xccc218e) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                           xccc280f = (xccc102f + xccc202f + xccc204f + xccc206f + xccc210f + xccc212f + xccc214f + xccc216f + xccc218f) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),                                 
                           xccc280g = (xccc102g + xccc202g + xccc204g + xccc206g + xccc210g + xccc212g + xccc214g + xccc216g + xccc218g) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217),
                           xccc280h = (xccc102h + xccc202h + xccc204h + xccc206h + xccc210h + xccc212h + xccc214h + xccc216h + xccc218h) / 
                                      (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217)
         WHERE (xccc101 + xccc201 + xccc203 + xccc205 + xccc207 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217) = 0
           AND (xccc101 + xccc201 + xccc203 + xccc205 + xccc209 + xccc211 + xccc213 + xccc215 + xccc217) <> 0
      #170407-00021#1 ---mod (e)---
      #170418-00027#1 ---remark (e)---
         #mod zhangllc 150730 --begin
         #AND xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )
         AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                      WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                        AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
         #mod zhangllc 150730 --end                                      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280')         
#        RETURN r_success
      END IF 
   
   END IF

   #xccc280平均单价为0时，则重取上期xccc的平均单价
   #本月 xccc_tmp
   #上期 xccc_t
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp a   ",
               #190411-00017#1 B mark-S
#               "       USING xccc_t b    ",
               #190411-00017#1 B mark-E
               #190411-00017#1 B add-S
               "       USING (SELECT xcccent,xcccld, xccc001, xccc002, xccc003, xccc006, xccc007, xccc008, ",
               "                      xccc280,xccc280a,xccc280b,xccc280c,xccc280d,xccc280e,xccc280f, ",
               "                      xccc280g,xccc280h ",
               "                 FROM xccc_t ",
               "                WHERE xcccent = ",g_enterprise, 
               "                  AND xccc004 = ",g_last_yy,
               "                  AND xccc005 = ",g_last_pp,       
               "                  AND xccc280 <> 0 ",
               "              ) b ",
               #190411-00017#1 B add-E
               "          ON ( a.xcccent = b.xcccent         ",
               "          AND  a.xcccld  = b.xcccld          ",
               "          AND  a.xccc001 = b.xccc001         ",
               "          AND  a.xccc002 = b.xccc002         ",
               "          AND  a.xccc003 = b.xccc003         ",
               "          AND  a.xccc006 = b.xccc006         ",
               "          AND  a.xccc007 = b.xccc007         ",
               "          AND  a.xccc008 = b.xccc008         ",
               #mod zhangllc 150730 --begin
               #"          AND  a.xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"          AND  (a.xccc006,a.xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1
#               "          AND  (a.xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",  #170112-00041#1  #190411-00017#1 A mark
               "          AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = a.xccc006 AND xcbb006 = ",p_xcbb006," )) ", #190411-00017#1 A mod
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xccc280  = nvl(b.xccc280 ,0) ,   ",
               "                  a.xccc280a = nvl(b.xccc280a,0) ,   ",    
               "                  a.xccc280b = nvl(b.xccc280b,0) ,   ",    
               "                  a.xccc280c = nvl(b.xccc280c,0) ,   ",    
               "                  a.xccc280d = nvl(b.xccc280d,0) ,   ",    
               "                  a.xccc280e = nvl(b.xccc280e,0) ,   ",    
               "                  a.xccc280f = nvl(b.xccc280f,0) ,   ",    
               "                  a.xccc280g = nvl(b.xccc280g,0) ,   ",    
               "                  a.xccc280h = nvl(b.xccc280h,0)     ",  
               #190411-00017#1 B mark-S             
#               "        WHERE b.xccc004 = ",g_last_yy,
#               "          AND b.xccc005 = ",g_last_pp,
#               "          AND a.xccc280 <= 0    ", #mod zhangllc 150817 add <
#               "          AND b.xccc280 <> 0   "
               #190411-00017#1 B mark-E
               "        WHERE a.xccc280 <= 0    "  #190411-00017#1 B add
               #判斷本月入庫數量
             #,"          AND b.xccc201+b.xccc203+b.xccc205+b.xccc211+b.xccc213+b.xccc215+b.xccc217 = 0 " #入庫數量 #160727-00038#1 add  #160921-00005#1 mark
               #160921-00005#1-(S)-add 
              ,"          AND a.xccc201 = 0 ",
               "          AND a.xccc203 = 0 ",
               "          AND a.xccc205 = 0 ",
               "          AND a.xccc211 = 0 ",
               "          AND a.xccc213 = 0 ",
               "          AND a.xccc215 = 0 ",
               "          AND a.xccc217 = 0 ", 
               #160921-00005#1-(E)-add 
               "          AND a.xccc209 = 0 ",  #180314-00043#1
               #161212-00078#1-s-add
               "          AND  a.xccc202 = 0 AND a.xccc202a = 0 AND a.xccc202b = 0 AND a.xccc202c = 0 AND a.xccc202d = 0 ",
               "          AND a.xccc202e = 0 AND a.xccc202f = 0 AND a.xccc202g = 0 AND a.xccc202h = 0  ",               
               "          AND  a.xccc204 = 0 AND a.xccc204a = 0 AND a.xccc204b = 0 AND a.xccc204c = 0 AND a.xccc204d = 0 ",
               "          AND a.xccc204e = 0 AND a.xccc204f = 0 AND a.xccc204g = 0 AND a.xccc204h = 0  ",                
               "          AND  a.xccc206 = 0 AND a.xccc206a = 0 AND a.xccc206b = 0 AND a.xccc206c = 0 AND a.xccc206d = 0 ",
               "          AND a.xccc206e = 0 AND a.xccc206f = 0 AND a.xccc206g = 0 AND a.xccc206h = 0  ",                
               "          AND  a.xccc212 = 0 AND a.xccc212a = 0 AND a.xccc212b = 0 AND a.xccc212c = 0 AND a.xccc212d = 0 ",
               "          AND a.xccc212e = 0 AND a.xccc212f = 0 AND a.xccc212g = 0 AND a.xccc212h = 0  ",                
               "          AND  a.xccc214 = 0 AND a.xccc214a = 0 AND a.xccc214b = 0 AND a.xccc214c = 0 AND a.xccc214d = 0 ",
               "          AND a.xccc214e = 0 AND a.xccc214f = 0 AND a.xccc214g = 0 AND a.xccc214h = 0  ",                
               "          AND  a.xccc216 = 0 AND a.xccc216a = 0 AND a.xccc216b = 0 AND a.xccc216c = 0 AND a.xccc216d = 0 ",
               "          AND a.xccc216e = 0 AND a.xccc216f = 0 AND a.xccc216g = 0 AND a.xccc216h = 0  ",                
               "          AND  a.xccc218 = 0 AND a.xccc218a = 0 AND a.xccc218b = 0 AND a.xccc218c = 0 AND a.xccc218d = 0 ",
               "          AND a.xccc218e = 0 AND a.xccc218f = 0 AND a.xccc218g = 0 AND a.xccc218h = 0  ",                
               #161212-00078#1-e-add
               #180314-00043#1---add---s
               "          AND a.xccc210 = 0  AND a.xccc210a = 0 AND a.xccc210b = 0 AND a.xccc210c = 0 AND a.xccc210d = 0 ",
               "          AND a.xccc210e = 0 AND a.xccc210f = 0 AND a.xccc210g = 0 AND a.xccc210h = 0  ",
               #180314-00043#1---add---e
               #161103-00024#1---add---s
               "          AND NOT EXISTS(SELECT 1 FROM xcck_tmp  ",
               "                          WHERE a.xcccent = xcckent ",  
               "                            AND a.xcccld  = xcckld  ",
               "                            AND a.xccc001 = xcck001 ",
               "                            AND a.xccc002 = xcck002 ",
               "                            AND a.xccc003 = xcck003 ",
               "                            AND a.xccc006 = xcck010 ",
               "                            AND a.xccc007 = xcck011 ",
               "                            AND a.xccc008 = xcck017 ",
               "                            AND xcck055 = '303') "      
               #161103-00024#1---add---s               
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_4_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p4')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_4_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p4')         
#     RETURN r_success
   END IF

   #zhangllc SBS3 160529  增加xcca index(xccaent,xccald,xcca001,xcca002,xcca003,xcca006,xcca007,xcca008)
   #还取不到平均单价,则取开帐的平均单价
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xccc_tmp a    ",
               "       USING xcca_t b     ",
               "          ON ( a.xcccent = b.xccaent       ",  
               "          AND  a.xcccld  = b.xccald        ",
               "          AND  a.xccc001 = b.xcca001       ",
               "          AND  a.xccc002 = b.xcca002       ",
               "          AND  a.xccc003 = b.xcca003       ",
               "          AND  a.xccc006 = b.xcca006       ",
               "          AND  a.xccc007 = b.xcca007       ",
               "          AND  a.xccc008 = b.xcca008       ",
               #mod zhangllc 150730 --begin
               #"          AND  a.xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
               #"          AND  (a.xccc006,a.xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1
#               "          AND  (a.xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #170112-00041#1   #190411-00017#1 A mark
               "          AND EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE a.xccc006 = imaa001 AND xcbb006 = ",p_xcbb006,")) ", #190411-00017#1 A mod
               #mod zhangllc 150730 --end
               "  WHEN MATCHED THEN                        ",
               "       UPDATE SET a.xccc280  = nvl(b.xcca110 ,0) , ",
               "                  a.xccc280a = nvl(b.xcca110a,0) , ",       
               "                  a.xccc280b = nvl(b.xcca110b,0) , ",       
               "                  a.xccc280c = nvl(b.xcca110c,0) , ",       
               "                  a.xccc280d = nvl(b.xcca110d,0) , ",       
               "                  a.xccc280e = nvl(b.xcca110e,0) , ",       
               "                  a.xccc280f = nvl(b.xcca110f,0) , ",       
               "                  a.xccc280g = nvl(b.xcca110g,0) , ",       
               "                  a.xccc280h = nvl(b.xcca110h,0)   ",               
               "        WHERE b.xcca004 = ",g_last_yy,
               "          AND b.xcca005 = ",g_last_pp,
               "          AND a.xccc280 <= 0     ", #mod zhangllc 150817 add <
               "          AND b.xcca110 <> 0     ",
               #161129-00050#1-s-add 
               "          AND a.xccc201 = 0 ",
               "          AND a.xccc203 = 0 ",
               "          AND a.xccc205 = 0 ",
               "          AND a.xccc211 = 0 ",
               "          AND a.xccc213 = 0 ",
               "          AND a.xccc215 = 0 ",
               "          AND a.xccc217 = 0 ",                
               #161129-00050#1-e-add
               #161212-00078#1-s-add
               "          AND  a.xccc202 = 0 AND a.xccc202a = 0 AND a.xccc202b = 0 AND a.xccc202c = 0 AND a.xccc202d = 0 ",
               "          AND a.xccc202e = 0 AND a.xccc202f = 0 AND a.xccc202g = 0 AND a.xccc202h = 0  ",               
               "          AND  a.xccc204 = 0 AND a.xccc204a = 0 AND a.xccc204b = 0 AND a.xccc204c = 0 AND a.xccc204d = 0 ",
               "          AND a.xccc204e = 0 AND a.xccc204f = 0 AND a.xccc204g = 0 AND a.xccc204h = 0  ",                
               "          AND  a.xccc206 = 0 AND a.xccc206a = 0 AND a.xccc206b = 0 AND a.xccc206c = 0 AND a.xccc206d = 0 ",
               "          AND a.xccc206e = 0 AND a.xccc206f = 0 AND a.xccc206g = 0 AND a.xccc206h = 0  ",                
               "          AND  a.xccc212 = 0 AND a.xccc212a = 0 AND a.xccc212b = 0 AND a.xccc212c = 0 AND a.xccc212d = 0 ",
               "          AND a.xccc212e = 0 AND a.xccc212f = 0 AND a.xccc212g = 0 AND a.xccc212h = 0  ",                
               "          AND  a.xccc214 = 0 AND a.xccc214a = 0 AND a.xccc214b = 0 AND a.xccc214c = 0 AND a.xccc214d = 0 ",
               "          AND a.xccc214e = 0 AND a.xccc214f = 0 AND a.xccc214g = 0 AND a.xccc214h = 0  ",                
               "          AND  a.xccc216 = 0 AND a.xccc216a = 0 AND a.xccc216b = 0 AND a.xccc216c = 0 AND a.xccc216d = 0 ",
               "          AND a.xccc216e = 0 AND a.xccc216f = 0 AND a.xccc216g = 0 AND a.xccc216h = 0  ",                
               "          AND  a.xccc218 = 0 AND a.xccc218a = 0 AND a.xccc218b = 0 AND a.xccc218c = 0 AND a.xccc218d = 0 ",
               "          AND a.xccc218e = 0 AND a.xccc218f = 0 AND a.xccc218g = 0 AND a.xccc218h = 0  ",                
               #161212-00078#1-e-add               
               #161103-00024#1---add---s
               "          AND NOT EXISTS(SELECT 1 FROM xcck_tmp  ",
               "                          WHERE a.xcccent = xcckent ",  
               "                            AND a.xcccld  = xcckld  ",
               "                            AND a.xccc001 = xcck001 ",
               "                            AND a.xccc002 = xcck002 ",
               "                            AND a.xccc003 = xcck003 ",
               "                            AND a.xccc006 = xcck010 ",
               "                            AND a.xccc007 = xcck011 ",
               "                            AND a.xccc008 = xcck017 ",
               "                            AND xcck055 = '303') "
               #161103-00024#1---add---s
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xccc_4_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p5')         
#     RETURN r_success
   END IF     
   EXECUTE s_axcp500_avg1_set_xccc_4_p5 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p5')         
#     RETURN r_success
   END IF
#161212-00078#1-s-mark   
#  #add zhangllc 150817 --begin
#  #检查一下单位成本是否<=0，如果是则去抓最近一笔xcck上的非0的单位成本，取不到则取定价档（与实时成本计算的逻辑相同）
#  #还取不到平均单价,则取最近一笔xcck上的非0的单位成本
#  LET g_sql = " MERGE INTO xccc_tmp a    ",
#              "       USING (SELECT * FROM ( SELECT xcck_tmp.*,ROWNUM FROM xcck_tmp ",
#              "                              WHERE xcck282 > 0 ",
#              "                                AND xcck012 != 'DIFF' ",  #add zhangllc 160527 SBS2
#              "                                AND xcck055 <> '303' ",   #161103-00024#1 add 
#              "                              ORDER BY xcck013 DESC,xcck014 DESC) tsed",
#              "               WHERE ROWNUM=1 ",
#              "              ) b     ",  #最近的
#              "          ON ( a.xcccent = b.xcckent       ",  
#              "          AND  a.xcccld  = b.xcckld        ",
#              "          AND  a.xccc001 = b.xcck001       ",
#              "          AND  a.xccc002 = b.xcck002       ",
#              "          AND  a.xccc003 = b.xcck003       ",
#              "          AND  a.xccc006 = b.xcck010       ",
#              "          AND  a.xccc007 = b.xcck011       ",
#              "          AND  a.xccc008 = b.xcck017       ",
#              "          AND  (a.xccc006,a.xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #满足成本阶
#              "  WHEN MATCHED THEN                        ",
#              "       UPDATE SET a.xccc280  = nvl(b.xcck282 ,0) , ",
#              "                  a.xccc280a = nvl(b.xcck282a,0) , ",       
#              "                  a.xccc280b = nvl(b.xcck282b,0) , ",       
#              "                  a.xccc280c = nvl(b.xcck282c,0) , ",       
#              "                  a.xccc280d = nvl(b.xcck282d,0) , ",       
#              "                  a.xccc280e = nvl(b.xcck282e,0) , ",       
#              "                  a.xccc280f = nvl(b.xcck282f,0) , ",       
#              "                  a.xccc280g = nvl(b.xcck282g,0) , ",       
#              "                  a.xccc280h = nvl(b.xcck282h,0)   ",               
#              "        WHERE a.xccc280 <= 0    "
#  PREPARE s_axcp500_avg1_set_xccc_4_p6 FROM g_sql
#  IF SQLCA.sqlcode THEN
#     INITIALIZE g_errparam TO NULL
#     LET g_errparam.code   = SQLCA.sqlcode
#     LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p6"
#     LET g_errparam.popup  = TRUE
#     CALL cl_err()
#     CALL s_axcp500_ins_error('','','','','','','','','','','',
#                              '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p6')         
#  END IF     
#  EXECUTE s_axcp500_avg1_set_xccc_4_p6 
#  IF SQLCA.sqlcode THEN
#     INITIALIZE g_errparam TO NULL
#     LET g_errparam.code   = SQLCA.sqlcode
#     LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p6"
#     LET g_errparam.popup  = TRUE
#     CALL cl_err()
#     CALL s_axcp500_ins_error('','','','','','','','','','','',
#                              '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p6')         
#  END IF
#  #还取不到平均单价,则取最新进价
#  LET g_sql = " MERGE INTO xccc_tmp a    ",
#              "       USING (SELECT * FROM ( SELECT rtdxent,rtdx001,max(rtdx034) rtdx034 FROM rtdx_t,ooef_t ",
#              "                              WHERE ooef001 = rtdxsite ",
#              "                                AND ooefent = rtdxent ",
#              "                                AND ooefent = ",g_enterprise,
#              "                                AND ooef017 = '",g_comp,"'",
#              "                                AND rtdx034 > 0 ",
#              #"                                AND rtdx041 <= '",g_edate,"' ", #促銷進價開始日期
#              #"                                AND rtdx042 >= '",g_bdate,"' ",  #结束日期
#              "                              GROUP BY rtdxent,rtdx001) tsed",
#              "              ) b     ",
#              "          ON ( a.xcccent = b.rtdxent       ",  
#              "          AND  a.xccc006 = b.rtdx001       ",
#              "          AND  (a.xccc006,a.xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )", #满足成本阶
#              "  WHEN MATCHED THEN                        ",
#              "       UPDATE SET a.xccc280  = nvl(b.rtdx034,0) , ",
#              "                  a.xccc280a = nvl(b.rtdx034,0) , ",       
#              "                  a.xccc280b = 0 , ",       
#              "                  a.xccc280c = 0 , ",       
#              "                  a.xccc280d = 0 , ",       
#              "                  a.xccc280e = 0 , ",       
#              "                  a.xccc280f = 0 , ",       
#              "                  a.xccc280g = 0 , ",       
#              "                  a.xccc280h = 0   ",               
#              "        WHERE a.xccc280 <= 0    ",
#              #161103-00024#1---add---s
#              "          AND NOT EXISTS(SELECT 1 FROM xcck_tmp  ",
#              "                          WHERE a.xcccent = xcckent ",  
#              "                            AND a.xcccld  = xcckld  ",
#              "                            AND a.xccc001 = xcck001 ",
#              "                            AND a.xccc002 = xcck002 ",
#              "                            AND a.xccc003 = xcck003 ",
#              "                            AND a.xccc006 = xcck010 ",
#              "                            AND a.xccc007 = xcck011 ",
#              "                            AND a.xccc008 = xcck017 ",
#              "                            AND xcck055 = '303')"
#              #161103-00024#1---add---s               
#  PREPARE s_axcp500_avg1_set_xccc_4_p7 FROM g_sql
#  IF SQLCA.sqlcode THEN
#     INITIALIZE g_errparam TO NULL
#     LET g_errparam.code   = SQLCA.sqlcode
#     LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p7"
#     LET g_errparam.popup  = TRUE
#     CALL cl_err()
#     CALL s_axcp500_ins_error('','','','','','','','','','','',
#                              '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p7')         
#  END IF     
#  EXECUTE s_axcp500_avg1_set_xccc_4_p7 
#  IF SQLCA.sqlcode THEN
#     INITIALIZE g_errparam TO NULL
#     LET g_errparam.code   = SQLCA.sqlcode
#     LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p7"
#     LET g_errparam.popup  = TRUE
#     CALL cl_err()
#     CALL s_axcp500_ins_error('','','','','','','','','','','',
#                              '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p7')         
#  END IF
#  #add zhangllc 150817 --end
#161212-00078#1-e-mark

   #平均成本字段取位xccc280a~xccc280h
   CASE g_round_type
        WHEN '1'   #四舍五入   
             LET g_sql = " UPDATE xccc_tmp SET xccc280  = round(xccc280 ,?), ",
                         "                     xccc280a = round(xccc280a,?), xccc280b = round(xccc280b,?), ",
                         "                     xccc280c = round(xccc280c,?), xccc280d = round(xccc280d,?), ",
                         "                     xccc280e = round(xccc280e,?), xccc280f = round(xccc280f,?), ",
                         "                     xccc280g = round(xccc280g,?), xccc280h = round(xccc280h,?)  ",
                        #mod zhangllc 150730 --begin
                        #"  WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                        
                        #"  WHERE (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")                      #161114-00003#1 mark
                         #"  WHERE (xccc006,xccc007) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") " #161114-00003#1 add  #170112-00041#1                       
#                         "  WHERE (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") " #170112-00041#1 #190411-00017#1 A mark
                         "  WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xccc006 AND xcbb006 = ",p_xcbb006,") "   #190411-00017#1 A mod                         
                        #mod zhangllc 150730 --end
                         
        WHEN '3'   #无条件截位
             LET g_sql = " UPDATE xccc_tmp SET xccc280  = trunc(xccc280 ,?), ",
                         "                     xccc280a = trunc(xccc280a,?), xccc280b = trunc(xccc280b,?), ",
                         "                     xccc280c = trunc(xccc280c,?), xccc280d = trunc(xccc280d,?), ",
                         "                     xccc280e = trunc(xccc280e,?), xccc280f = trunc(xccc280f,?), ",
                         "                     xccc280g = trunc(xccc280g,?), xccc280h = trunc(xccc280h,?)  ",
                        #mod zhangllc 150730 --begin
                        #"  WHERE xccc006 IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "                         
                        #"  WHERE (xccc006,xccc007) IN ( SELECT imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,")                      #161114-00003#1 mark
                         #"  WHERE (xccc006,xccc007) IN ( SELECT /*+ PARALLEL(4) */ imaa001,xccc007 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") " #161114-00003#1 add #170112-00041#1                         
#                         "  WHERE (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "  #170112-00041#1      #190411-00017#1 A mark
                         "  WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xccc006 AND xcbb006 = ",p_xcbb006,") "   #190411-00017#1 A mod                     
                        #mod zhangllc 150730 --end  
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xccc_tmp SET xccc280  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xccc280,?) ",
                         "                                                          ELSE ROUND(xccc280,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xccc280,?)",
                         "                                END ),",
                         "                    xccc280a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc280a,?) ",
                         "                                                         ELSE ROUND(xccc280a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc280a,?)",
                         "                                END ),",
                         "                    xccc280b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc280b,?) ",
                         "                                                         ELSE ROUND(xccc280b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc280b,?)",
                         "                                END ),",
                         "                    xccc280c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc280c,?) ",
                         "                                                         ELSE ROUND(xccc280c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc280c,?)",
                         "                                END ),",
                         "                    xccc280d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc280d,?) ",
                         "                                                         ELSE ROUND(xccc280d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc280d,?)",
                         "                                END ),",
                         "                    xccc280e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc280e,?) ",
                         "                                                         ELSE ROUND(xccc280e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc280e,?)",
                         "                                END ),",
                         "                    xccc280f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc280f,?) ",
                         "                                                         ELSE ROUND(xccc280f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc280f,?)",
                         "                                END ),",
                         "                    xccc280g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc280g,?) ",
                         "                                                         ELSE ROUND(xccc280g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc280g,?)",
                         "                                END ),",
                         "                    xccc280h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xccc280h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xccc280h,?) ",
                         "                                                         ELSE ROUND(xccc280h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xccc280h,?)",
                         "                                END )",
#                         "  WHERE (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") "  #190411-00017#1 A mark
                         "  WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xccc006 AND xcbb006 = ",p_xcbb006,") "   #190411-00017#1 A mod 
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xccc_tmp SET xccc280  = ceil(xccc280 *power(10,?))/power(10,?),",
                         "                    xccc280a = ceil(xccc280a*power(10,?))/power(10,?),",
                         "                    xccc280b = ceil(xccc280b*power(10,?))/power(10,?),",
                         "                    xccc280c = ceil(xccc280c*power(10,?))/power(10,?),",
                         "                    xccc280d = ceil(xccc280d*power(10,?))/power(10,?),",
                         "                    xccc280e = ceil(xccc280e*power(10,?))/power(10,?),",
                         "                    xccc280f = ceil(xccc280f*power(10,?))/power(10,?),",
                         "                    xccc280g = ceil(xccc280g*power(10,?))/power(10,?),",
                         "                    xccc280h = ceil(xccc280h*power(10,?))/power(10,?) ",
#                         "  WHERE (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") " #190411-00017#1 A mark
                         "  WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE imaa001 = xccc006 AND xcbb006 = ",p_xcbb006,") "   #190411-00017#1 A mod  
        #180802-00015#1 add-E                  
        
   END CASE        
   PREPARE s_axcp500_avg1_set_xccc_4_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_4_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_4_p3')         
#     RETURN r_success
   END IF     
   #180802-00015#1 mark-S  
#   EXECUTE s_axcp500_avg1_set_xccc_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
#                                              g_curr[p_seq].digit1
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xccc_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xccc_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xccc_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,g_curr[p_seq].digit1,
                                                    g_curr[p_seq].digit1
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xccc_4_p3 USING g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282a
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282b
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282c
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282d
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282e
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282f
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1,   #xcck282g
                                                    g_curr[p_seq].digit1,g_curr[p_seq].digit1    #xcck282h
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_4_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_4_p3')         
#     RETURN r_success
   END IF      
   
   #修正xccc280的值-先修至xccc280a,若xccc280a为零,则修正xccc280b......
   UPDATE xccc_tmp SET xccc280a = xccc280 - (xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)   
    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
      #AND xccc280 - (xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0  #200228-00004#1 mark
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )   
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end 
      #200228-00004#1---add---s   
      AND ABS(xccc280a) >= ABS(xccc280b) AND ABS(xccc280a) >= ABS(xccc280c)
      AND ABS(xccc280a) >= ABS(xccc280d) AND ABS(xccc280a) >= ABS(xccc280e)
      AND ABS(xccc280a) >= ABS(xccc280f) AND ABS(xccc280a) >= ABS(xccc280g)
      AND ABS(xccc280a) >= ABS(xccc280h)
      #200228-00004#1---add---e
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280a')         
#     RETURN r_success
   END IF   
      
   UPDATE xccc_tmp SET xccc280b = xccc280 - (xccc280a + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)  
    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
      #AND xccc280 - (xccc280a + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0  #200228-00004#1 mark
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end   
      #200228-00004#1---add---s   
      AND ABS(xccc280b) >= ABS(xccc280c)
      AND ABS(xccc280b) >= ABS(xccc280d) AND ABS(xccc280b) >= ABS(xccc280e)
      AND ABS(xccc280b) >= ABS(xccc280f) AND ABS(xccc280b) >= ABS(xccc280g)
      AND ABS(xccc280b) >= ABS(xccc280h)
      #200228-00004#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280b')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc280c = xccc280 - (xccc280a + xccc280b + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h)  
    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
      #AND xccc280 - (xccc280a + xccc280b + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h) >=0 #200228-00004#1 mark
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #200228-00004#1---add---s   
      AND ABS(xccc280c) >= ABS(xccc280d) AND ABS(xccc280c) >= ABS(xccc280e)
      AND ABS(xccc280c) >= ABS(xccc280f) AND ABS(xccc280c) >= ABS(xccc280g)
      AND ABS(xccc280c) >= ABS(xccc280h)
      #200228-00004#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280c')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc280d = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280e + xccc280f + xccc280g + xccc280h)  
    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
      #AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280e + xccc280f + xccc280g + xccc280h) >=0 #200228-00004#1 mark
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #200228-00004#1---add---s   
      AND ABS(xccc280d) >= ABS(xccc280e)
      AND ABS(xccc280d) >= ABS(xccc280f) AND ABS(xccc280d) >= ABS(xccc280g)
      AND ABS(xccc280d) >= ABS(xccc280h)
      #200228-00004#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280d')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc280e = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280f + xccc280g + xccc280h)  
    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h 
      #AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280f + xccc280g + xccc280h) >=0 #200228-00004#1 mark
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #200228-00004#1---add---s   
      AND ABS(xccc280e) >= ABS(xccc280f) AND ABS(xccc280e) >= ABS(xccc280g)
      AND ABS(xccc280e) >= ABS(xccc280h)
      #200228-00004#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280e')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc280f = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280g + xccc280h)  
    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
      #AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280g + xccc280h) >=0 #200228-00004#1 mark     
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #200228-00004#1---add---s   
      AND ABS(xccc280f) >= ABS(xccc280g)
      AND ABS(xccc280f) >= ABS(xccc280h)
      #200228-00004#1---add---e       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280f')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc280g = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280h)  
    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
      #AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280h) >=0 #200228-00004#1 mark
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end
      #200228-00004#1---add---s   
      AND ABS(xccc280g) >= ABS(xccc280h)
      #200228-00004#1---add---e      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280g')         
#     RETURN r_success
   END IF   
   UPDATE xccc_tmp SET xccc280h = xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g)  
    WHERE xccc280 <> xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g + xccc280h
      #AND xccc280 - (xccc280a + xccc280b + xccc280c + xccc280d + xccc280e + xccc280f + xccc280g) >=0 #200228-00004#1 mark
      #mod zhangllc 150730 --begin
      #AND xccc006 IN  (SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = p_xcbb006 )  
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp
                   WHERE s_axcp500_tmp.imaa001=xccc_tmp.xccc006 #AND s_axcp500_tmp.xccc007=xccc_tmp.xccc007 #170112-00041#1 mark
                     AND s_axcp500_tmp.xcbb006 = p_xcbb006) 
      #mod zhangllc 150730 --end    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xccc_tmp SET xccc280h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xccc_tmp SET xccc280h')         
#     RETURN r_success
   END IF   

   
   LET r_success = TRUE
   RETURN r_success  
   
END FUNCTION

#add zhangllc 150810
#根据项次总数量和项序数量计算比率进行分配采购金额
PUBLIC FUNCTION s_axcp500_avg_get_ap_sum(p_seq)
   DEFINE p_seq           LIKE xcck_t.xcck001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_xcck001       LIKE xcck_t.xcck001
   DEFINE l_xcck002       LIKE xcck_t.xcck002
   DEFINE l_xccksite      LIKE xcck_t.xccksite
   DEFINE l_xcck006       LIKE xcck_t.xcck006
   DEFINE l_xcck007       LIKE xcck_t.xcck007
   DEFINE l_xcck008       LIKE xcck_t.xcck008
   DEFINE l_xcck009       LIKE xcck_t.xcck009
   DEFINE l_xcck010       LIKE xcck_t.xcck010
   DEFINE l_xcck201       LIKE xcck_t.xcck201
   DEFINE l_xcck202a      LIKE xccc_t.xccc202a
   DEFINE l_qty           LIKE apcb_t.apcb007
   DEFINE l_pmdsdocdt     LIKE pmds_t.pmdsdocdt
   DEFINE l_pmds037       LIKE pmds_t.pmds037
   DEFINE l_pmds038       LIKE pmds_t.pmds038
   DEFINE l_pmdt019       LIKE pmdt_t.pmdt019
   DEFINE l_pmdt020       LIKE pmdt_t.pmdt020
   DEFINE l_pmdt038       LIKE pmdt_t.pmdt038
   DEFINE l_pmdt039       LIKE pmdt_t.pmdt039
   DEFINE l_cost          LIKE pmdt_t.pmdt038
   DEFINE l_imaa006       LIKE imaa_t.imaa006
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_qty1          LIKE pmdt_t.pmdt038
   DEFINE l_qty2          LIKE pmdt_t.pmdt038
   DEFINE l_xcck201_sum   LIKE xcck_t.xcck201
   DEFINE l_xcck202_sum   LIKE xcck_t.xcck202
      
   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE

#180420-00005#1---add---s
   #這函式處理部分為 同一單號+項次會有一筆金額，但同筆單號+項次可能會有不同項序，
   #而xcck_t記錄的是單號+項次+項序的資料，故金額要依數量分配到不同項序
   #此次修改是因foreach跑太久，改成整批處理，進而改善效能

   #第一步：將單號、項次、總數量、總金額 新增到TEMP TABLE，方便後面做整批處理
   #        PS.有不同的項序才須處理

   DROP TABLE ap_sum_tmp; #ODI-ORA#

   CREATE TEMP TABLE ap_sum_tmp (
   xcckent      LIKE xcck_t.xcckent,
   xcckld       LIKE xcck_t.xcckld,
   xcck001      LIKE xcck_t.xcck001,
   xcck002      LIKE xcck_t.xcck002,
   xcck003      LIKE xcck_t.xcck003,
   xcck004      LIKE xcck_t.xcck004,
   xcck005      LIKE xcck_t.xcck005,
   xcck006      LIKE xcck_t.xcck006,
   xcck007      LIKE xcck_t.xcck007,
   qty          LIKE xcck_t.xcck201,
   amt          LIKE xcck_t.xcck202
   );
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create ap_sum_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','create ap_sum_tmp')
   END IF
      
   INSERT INTO ap_sum_tmp
    SELECT xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck006,xcck007,SUM(xcck201),MAX(xcck202a)
      FROM xcck_tmp
     WHERE xcck055 = '2011'
     GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck006,xcck007
     HAVING COUNT(*) > 1

   #第二步：更新每筆xcck的金額，xcck202a = 總金額 * xcck201/總數量，取位
   #PGS(D)-00824 ---start---
   LET g_sql = "MERGE INTO xcck_tmp a ",
               "  USING (SELECT xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck006,xcck007,qty,amt ",
               "           FROM ap_sum_tmp ) b ",
               "   ON (a.xcckent = b.xcckent ",
               "   AND a.xcckld  = b.xcckld  ",
               "   AND a.xcck001 = b.xcck001 ",
               "   AND a.xcck002 = b.xcck002 ",
               "   AND a.xcck003 = b.xcck003 ",
               "   AND a.xcck004 = b.xcck004 ",
               "   AND a.xcck005 = b.xcck005 ",
               "   AND a.xcck006 = b.xcck006 ",
               "   AND a.xcck007 = b.xcck007) ",
               " WHEN MATCHED THEN ",
               #"      UPDATE SET a.xcck202a = amt * xcck201/qty "  #200928-00040#1 mark
               "      UPDATE SET a.xcck202a = CASE WHEN qty = 0 THEN 0 ELSE amt * xcck201/qty END "  #200928-00040#1
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_get_ap_sum_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_ap_sum_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   
   EXECUTE s_axcp500_avg_get_ap_sum_p3
   IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_get_ap_sum_p3"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_get_ap_sum_p3')
   END IF
   
   #取位
   CASE g_round_type
        WHEN '1'
             LET g_sql = "UPDATE xcck_tmp SET xcck202a = round(xcck202a,?) WHERE xcck055 = '2011' "
        WHEN '3'
             LET g_sql = "UPDATE xcck_tmp SET xcck202a = trunc(xcck202a,?) WHERE xcck055 = '2011' "
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202a,?) ",
                         "                                                          ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                               END )",
                         "              WHERE xcck055 = '2011' " 
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcck_tmp SET xcck202a = ceil(xcck202a*power(10,?))/power(10,?)",
                         "              WHERE xcck055 = '2011' "
        #180802-00015#1 add-E
   END CASE
   PREPARE s_axcp500_avg_get_ap_sum_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_ap_sum_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   
#   EXECUTE s_axcp500_avg_get_ap_sum_p4 USING g_curr[1].digit2  #180802-00015#1 mark
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1' EXECUTE s_axcp500_avg_get_ap_sum_p4 USING g_curr[1].digit2
      WHEN '3' EXECUTE s_axcp500_avg_get_ap_sum_p4 USING g_curr[1].digit2
      WHEN '2' EXECUTE s_axcp500_avg_get_ap_sum_p4 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                         g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2
      WHEN '4' EXECUTE s_axcp500_avg_get_ap_sum_p4 USING g_curr[1].digit2,g_curr[1].digit2
   END CASE
   #180802-00015#1 add-E
   IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_get_ap_sum_p4"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_get_ap_sum_p4')
   END IF

   #第三步：尾差處理，找出最後一筆資料，將尾差(總金額-SUM(xcck202a))放在這筆資料
   
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp a ",
               "       USING (SELECT c.xcckent,c.xcckld,c.xcck001,c.xcck002,c.xcck003,c.xcck004,c.xcck005,c.xcck006,c.xcck007,c.xcck008, ",
               "                     ROW_NUMBER() OVER ( PARTITION BY c.xcck006,c.xcck007 ORDER BY c.xcck008 desc) row1, ",
               "                     (e.amt - (SELECT SUM(d.xcck202a) FROM xcck_tmp d ",
               "                                WHERE d.xcckent = c.xcckent ",
               "                                  AND d.xcckld  = c.xcckld  ",
               "                                  AND d.xcck001 = c.xcck001 ",
               "                                  AND d.xcck002 = c.xcck002 ",
               "                                  AND d.xcck003 = c.xcck003 ",
               "                                  AND d.xcck004 = c.xcck004 ",
               "                                  AND d.xcck005 = c.xcck005 ",
               "                                  AND d.xcck006 = c.xcck006 ",
               "                                  AND d.xcck007 = c.xcck007 ",
               "                                  AND d.xcck055 = '2011')) amt1 ",
               "                FROM xcck_tmp c,ap_sum_tmp e ",
               "               WHERE c.xcckent = e.xcckent ",
               "                 AND c.xcckld  = e.xcckld  ",
               "                 AND c.xcck001 = e.xcck001 ",
               "                 AND c.xcck002 = e.xcck002 ",
               "                 AND c.xcck003 = e.xcck003 ",
               "                 AND c.xcck004 = e.xcck004 ",
               "                 AND c.xcck005 = e.xcck005 ",
               "                 AND c.xcck006 = e.xcck006 ",
               "                 AND c.xcck007 = e.xcck007 ",
               "                 AND c.xcck055 = '2011' ) b ",
               "       ON (a.xcckent = b.xcckent ",
               "       AND a.xcckld  = b.xcckld  ",
               "       AND a.xcck001 = b.xcck001 ",
               "       AND a.xcck002 = b.xcck002 ",
               "       AND a.xcck003 = b.xcck003 ",
               "       AND a.xcck004 = b.xcck004 ",
               "       AND a.xcck005 = b.xcck005 ",
               "       AND a.xcck006 = b.xcck006 ",
               "       AND a.xcck007 = b.xcck007 ",
               "       AND a.xcck008 = b.xcck008 ",
               "       AND b.row1 = 1) ",
               "  WHEN MATCHED THEN ",
               "       UPDATE SET a.xcck202a = a.xcck202a + b.amt1 ",
               "        WHERE a.xcck055  = '2011' "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_get_ap_sum_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_ap_sum_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   
   EXECUTE s_axcp500_avg_get_ap_sum_p5
   IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_get_ap_sum_p5"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_get_ap_sum_p5')
   END IF
   
   LET r_success = TRUE
   RETURN r_success
#180420-00005#1---add---e

   #170323-00069#1---modify--s
   #LET g_sql = " SELECT xcck001,xcck002,xccksite,xcck006,xcck007,xcck008,xcck009,xcck010,xcck201,xcck202a ",
   #           #"   FROM xcck_tmp",           #161114-00003#1 mark
   #            "   FROM xcck_tmp a ",        #161114-00003#1 add                
   #            "  WHERE xcck055 = '2011' ",  #mod zhangllc 151203 '201'->'2011'
   #           #161114-00003#1-s-add
   #            "    AND (SELECT COUNT(1) FROM xcck_tmp b",
   #            "            WHERE b.xcckent = a.xcckent ",
   #            "    AND b.xcckld = a.xcckld",
   #            "    AND b.xcck001 = a.xcck001",
   #            "    AND b.xcck002 = a.xcck002",
   #            "    AND b.xcck003 = a.xcck003",
   #            "    AND b.xcck004 = a.xcck004",
   #            "    AND b.xcck005 = a.xcck005",
   #            "    AND b.xcck006 = a.xcck006",
   #            "    AND b.xcck007 = a.xcck007",
   #            "    AND b.xcck055 = a.xcck055) > 1",
   #           #161114-00003#1-e-add
   #            "  ORDER BY xcck001,xcck002,xccksite,xcck006,xcck007,xcck008 "
#180420-00005#1---mark---s
#   LET g_sql = "  SELECT a.xcck001,a.xcck002,a.xccksite,a.xcck006,a.xcck007,a.xcck008,a.xcck009,a.xcck010,a.xcck201,a.xcck202a ",
#               "    FROM xcck_tmp a, ",
#               "         (SELECT * FROM ",
#               "                 (SELECT xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck006,xcck007,xcck055 ",
#               "                     FROM xcck_tmp ",
#               "                   GROUP BY xcckent,xcckld,xcck001,xcck002,xcck003,xcck004,xcck005,xcck006,xcck007,xcck055 ",
#               "                   HAVING COUNT(*) > 1 ) ",
#               "           WHERE xcck055 = '2011' ) b ",
#               "    WHERE b.xcckent   = a.xcckent AND b.xcckld  = a.xcckld AND b.xcck001 = a.xcck001 ",
#               "      AND b.xcck002 = a.xcck002 ",
#               "      AND b.xcck003 = a.xcck003 ",
#               "      AND b.xcck004 = a.xcck004 ",
#               "      AND b.xcck005 = a.xcck005 ",
#               "      AND b.xcck006 = a.xcck006 ",
#               "      AND b.xcck007 = a.xcck007 ",
#               "      AND b.xcck055 = a.xcck055 "        
#   #170323-00069#1---modify--e            
#               ,"  ORDER BY a.xcck001,a.xcck002,a.xccksite,a.xcck006,a.xcck007,a.xcck008 "    #180409-00031#1 add
#   PREPARE s_axcp500_avg_get_ap_sum_p FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_ap_sum_p"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      RETURN r_success
#   END IF   
#   
#   DECLARE s_axcp500_avg_get_ap_sum_cs CURSOR FOR s_axcp500_avg_get_ap_sum_p
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "DECLARE s_axcp500_wip_2_3_cs2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      RETURN r_success
#   END IF 
#   
#   #171005-00021#1--add--s
#   LET g_sql = "UPDATE xcck_tmp SET xcck202a = ?",
#               " WHERE xcckent = ",g_enterprise,
#               "   AND xcckld  = '",g_ld,"'",
#               "   AND xcck001 = ?",
#               "   AND xcck002 = ?",
#               "   AND xcck003 = '",g_xcat001,"'",
#               "   AND xcck004 = ",g_yy,
#               "   AND xcck005 = ",g_pp,
#               "   AND xcck006 = ?",
#               "   AND xcck007 = ?",
#               "   AND xcck008 = ?",
#               "   AND xcck009 = ?",
#               "   AND xcck055 = '2011' " 
#   PREPARE s_axcp500_avg_get_ap_sum_p2 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg_get_ap_sum_p2"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
#      RETURN r_success
#   END IF   
#   #171005-00021#1--add--e
#   
#   LET l_xcck201_sum = 0
#   LET l_xcck202_sum = 0
#   
#   IF cl_db_generate_analyze("xcck_tmp") THEN END IF  #170801-00003#1 add
#
#   FOREACH s_axcp500_avg_get_ap_sum_cs INTO l_xcck001,l_xcck002,l_xccksite,l_xcck006,l_xcck007,l_xcck008,l_xcck009,l_xcck010,l_xcck201,l_xcck202a
#      LET l_qty1 = 0
#      LET l_qty2 = 0
#      #SELECT SUM(inaj011*inaj014) INTO l_qty1 FROM inaj_tmp
#      # WHERE inajent = g_enterprise
#      #   AND inajsite= l_xccksite
#      #   AND inaj001 = l_xcck006 #单据
#      #   AND inaj002 = l_xcck007 #项次
#      #   AND inaj003 = l_xcck008 #项序
#      #   AND inaj004 = l_xcck009 #出入库码
#      ##入库单的数量及金额
#      #SELECT pmdt019,pmdt020
#      #  INTO l_pmdt019,l_qty2
#      #  FROM pmds_t,pmdt_t
#      # WHERE pmdsent   = pmdtent   AND pmdsent = g_enterprise
#      #   AND pmdsdocno = pmdtdocno AND pmdsdocno = l_xcck006
#      #   AND pmdtseq   = l_xcck007
#      #SELECT imaa006 INTO l_imaa006 FROM imaa_t
#      # WHERE imaaent = g_enterprise
#      #   AND imaa001 = l_xcck010
#      #IF l_imaa006 <> l_pmdt019 THEN
#      #   CALL s_aooi250_convert_qty(l_xcck010,l_pmdt019,l_imaa006,l_qty2)
#      #        RETURNING l_success,l_qty2
#      #END IF
#      LET l_qty1 = l_xcck201
#      SELECT SUM(xcck201) INTO l_qty2 FROM xcck_tmp
#       WHERE xcckent = g_enterprise
#         AND xcckld  = g_ld
#         AND xcck001 = l_xcck001
#         AND xcck002 = l_xcck002
#         AND xcck003 = g_xcat001
#         AND xcck004 = g_yy
#         AND xcck005 = g_pp
#         AND xcck006 = l_xcck006
#         AND xcck007 = l_xcck007
#         AND xcck055 = '2011'  #20151031 DSC.liquor add 有委外代买料，会有另外一笔发料的资料，不能算到   #mod zhangllc 151203 '201'->'2011'
#      IF cl_null(l_qty1) THEN LET l_qty1 = 0 END IF
#      IF cl_null(l_qty2) THEN LET l_qty2 = 0 END IF
#      
##判断inaj中的项次总计数量vs本次项序对应数量+累计已有xcck数量
##若相等表示是最后一次，为处理尾差，金额为总金额-xcck已累计金额
##不相等则用比例去算
##      IF l_qty1 = l_qty2+l_xcck201_sum THEN
#       IF l_qty2 = l_qty1+l_xcck201_sum THEN
#         #IF g_cost_taxed = 'Y' THEN
#         #   LET l_cost = l_pmdt039 - l_xcck202_sum
#         #ELSE
#         #   LET l_cost = l_pmdt038 - l_xcck202_sum
#         #END IF
#         LET l_cost = l_xcck202a - l_xcck202_sum
#         LET l_xcck201_sum = 0
#         LET l_xcck202_sum = 0
#      ELSE
#         #LET l_pmdt038 = l_pmdt038*l_qty1/l_qty2
#         #LET l_pmdt039 = l_pmdt039*l_qty1/l_qty2
#         #IF g_cost_taxed = 'Y' THEN
#         #   LET l_cost = l_pmdt039
#         #ELSE
#         #   LET l_cost = l_pmdt038
#         #END IF
#         #LET l_cost = l_xcck202a*l_qty1/l_qty2 #170705-00006#1 mark
#         #170705-00006#1 add(S)
#         IF l_qty2 <> 0 THEN 
#            LET l_cost = l_xcck202a*l_qty1/l_qty2
#         ELSE 
#            LET l_cost = 0
#         END IF
#         #170705-00006#1 add(E)
#         CALL s_num_round(g_round_type,l_cost,g_curr[p_seq].digit2) RETURNING l_cost
#         LET l_xcck201_sum = l_xcck201_sum + l_qty1
#         LET l_xcck202_sum = l_xcck202_sum + l_cost
#      END IF
#      #171005-00021#1--mark--s
#      #UPDATE xcck_tmp SET xcck202a = l_cost
#      # WHERE xcckent = g_enterprise
#      #   AND xcckld  = g_ld
#      #   AND xcck001 = l_xcck001
#      #   AND xcck002 = l_xcck002
#      #   AND xcck003 = g_xcat001
#      #   AND xcck004 = g_yy
#      #   AND xcck005 = g_pp
#      #   AND xcck006 = l_xcck006
#      #   AND xcck007 = l_xcck007
#      #   AND xcck008 = l_xcck008
#      #   AND xcck009 = l_xcck009
#      #   AND xcck055 = '2011'  #20151031 DSC.liquor add 有委外代买料，会有另外一笔发料的资料，不能算到   #mod zhangllc 151203 '201'->'2011'
#      #171005-00021#1--mark--e
#      #171005-00021#1--add--s
#      EXECUTE s_axcp500_avg_get_ap_sum_p2 
#        USING l_cost,l_xcck001,l_xcck002,l_xcck006,l_xcck007,l_xcck008,l_xcck009
#      #171005-00021#1--add--e
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "DECLARE UPDATE xcck202a"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
#         RETURN r_success
#      END IF
#   END FOREACH
#   
#   LET r_success = TRUE
#   RETURN r_success  
#180420-00005#1---mark---e

END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 产生xchb
# Memo...........:
# Usage..........: CALL s_axcp500_avg_wip_xchb_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2016/11/25 By 02295
# Modify.........: #161121-00018#5
################################################################################
PUBLIC FUNCTION s_axcp500_avg_wip_xchb_1(p_seq)
DEFINE p_seq           LIKE xccc_t.xccc001
DEFINE r_success       LIKE type_t.num5   
DEFINE l_date          DATETIME YEAR TO SECOND
DEFINE l_xchb013       LIKE xchb_t.xchb013

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_current()


   #整批INSERT xchb_t
   LET g_sql = "INSERT INTO xchb_tmp(xchbent,xchbcomp,xchbld,xchb001,xchb002,",
               "                     xchb003,xchb004,xchb005,xchb006,xchb007,",
               "                     xchb008,xchb009,xchb010,xchb011,xchb012,",
               "                     xchb013,xchb014,xchb015,",
               "                     xchb101,xchb102,xchb102a,xchb102b,xchb102c,",
               "                     xchb102d,xchb102e,xchb102f,xchb102g,xchb102h,",
               "                     xchb201,xchb202,xchb202a,xchb202b,xchb202c,",
               "                     xchb202d,xchb202e,xchb202f,xchb202g,xchb202h,",
               "                     xchb203,xchb204,xchb204a,xchb204b,xchb204c,",
               "                     xchb204d,xchb204e,xchb204f,xchb204g,xchb204h,",
               "                     xchb207,xchb208,xchb208a,xchb208b,xchb208c,",
               "                     xchb208d,xchb208e,xchb208f,xchb208g,xchb208h,",
               "                     xchb209,xchb210,xchb210a,xchb210b,xchb210c,",
               "                     xchb210d,xchb210e,xchb210f,xchb210g,xchb210h,",
               "                     xchb301,xchb302,xchb302a,xchb302b,xchb302c,",
               "                     xchb302d,xchb302e,xchb302f,xchb302g,xchb302h,",
               "                     xchb303,xchb304,xchb304a,xchb304b,xchb304c,",
               "                     xchb304d,xchb304e,xchb304f,xchb304g,xchb304h,",
               "                     xchb305,xchb306,xchb306a,xchb306b,xchb306c,",
               "                     xchb306d,xchb306e,xchb306f,xchb306g,xchb306h,",
               "                     xchb307,xchb308,xchb308a,xchb308b,xchb308c,",
               "                     xchb308d,xchb308e,xchb308f,xchb308g,xchb308h,",
               "                     xchb309,xchb310,xchb310a,xchb310b,xchb310c,",
               "                     xchb310d,xchb310e,xchb310f,xchb310g,xchb310h,",
               "                     xchb901,xchb902,xchb902a,xchb902b,xchb902c,",
               "                     xchb902d,xchb902e,xchb902f,xchb902g,xchb902h,",
               "                     xchbtime) ",             
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,",              
               "       '",g_xcat001,"',",g_yy,",",g_pp,",inaj020,",
               #"       'END',",      #170829-00035#1 mark          
               #"       '0',",        #170829-00035#1 mark   
               "       (CASE  WHEN sfba003 IS NULL THEN 'END' WHEN sfba003 = ' ' THEN 'END' ELSE sfba003 END ) ," ,   #170829-00035#1 add
               "       (CASE  WHEN sfba004 IS NULL THEN '0' WHEN sfba004 = ' ' THEN '0' ELSE sfba004 END ) ," ,   #170829-00035#1 add
               "       inaj005,inaj006,inaj010,inaj038,",
               "       '",g_curr[p_seq].curr,"',",
               #"       'END','0',",   #170829-00035#1 mark   
               "       (CASE  WHEN sfba003 IS NULL THEN 'END' WHEN sfba003 = ' ' THEN 'END' ELSE sfba003 END ) ," ,   #170829-00035#1 add
               "       (CASE  WHEN sfba004 IS NULL THEN '0' WHEN sfba004 = ' ' THEN '0' ELSE sfba004 END ) ," ,   #170829-00035#1 add
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      0,0,0,0,0,0,0,0,0,0,",
               "      ? ",
               "   FROM inaj_tmp ",
               #190219-00009#1--modify--s
               ##170829-00035#1--add--s
               #"        LEFT JOIN sfba_t ON sfbaent= inajent AND sfbadocno = inaj020 AND sfba006 = inaj005 ",
               #"                   AND sfba003 IS NOT NULL AND sfba003 <> ' '  ",
               #"                   AND sfba004 IS NOT NULL AND sfba004 <> ' '  ",
               ##170829-00035#1--add--e
               "         LEFT JOIN sfdd_t ON sfddent = inajent AND sfdddocno = inaj001 AND sfddseq = inaj002  AND sfddseq1 = inaj003 ",
               "         LEFT JOIN sfdc_t ON sfdcent = sfddent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq ",
               "         LEFT JOIN sfba_t ON sfbaent = sfdcent AND sfbadocno = sfdc001  AND sfbaseq = sfdc002 ",
               #190219-00009#1--modify--e
               "   ,sfaa_tmp ",
               "  WHERE inaj020 IS NOT NULL ",
               "    AND inajent = sfaaent ",  
               "    AND inajsite= sfaasite  ", 
               "    AND inaj020 = sfaadocno ",
               "    AND sfaa003 <> '3' "                                          #不可为拆件工单
#200212-00020#1 mark -S   
#   IF g_sys_6016 = 'Y' THEN
#      LET g_sql = g_sql CLIPPED,
#               "   AND inaj036 IN ('302','303','501','114','107') "               #生产发料/生产退料/盘点/回收入库/委外回收入库
#   ELSE
#200212-00020#1 mark -E
      LET g_sql = g_sql CLIPPED,
               "   AND inaj036 IN ('302','303','115','501','114','107') "         #生产发料/生产退料/当站下线/盘点/回收入库/委外回收入库
#   END IF  #200212-00020#1 mark
   PREPARE s_axcp500_avg_wip_xchb_1_p FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_xchb_1_p USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
   
   #170829-00035#1--mark--s
   #LET g_sql = " MERGE INTO xchb_tmp a ",
   #            #"       USING ( SELECT DISTINCT sfbadocno,sfba006,sfba003,sfba004 FROM sfba_tmp WHERE sfba003 IS NOT NULL AND sfba003 <> ' ') b ",  #170601-00062#1 mark
   #            #170601-00062#1---add---s
   #            "       USING ( SELECT DISTINCT sfbadocno,sfba006,sfba003,sfba004 ",
   #            "                 FROM sfba_tmp WHERE sfba003 IS NOT NULL AND sfba003 <> ' ' ",
   #            "                                 AND sfba004 IS NOT NULL AND sfba004 <> ' ') b ",
   #            #170601-00062#1---add---e
   #            "          ON ( a.xchb006 = b.sfbadocno       ",
   #            "          AND  a.xchb009 = b.sfba006 )       ",
   #            "  WHEN MATCHED THEN                          ",
   #            "       UPDATE SET a.xchb007  = b.sfba003,    ",
   #            "                  a.xchb008  = b.sfba004,     ",
   #            "                  a.xchb014  = b.sfba003,     ",
   #            "                  a.xchb015  = b.sfba004     ",
   #            " WHERE a.xchb007 = 'END' AND a.xchb008 = '0'"
   #PREPARE s_axcp500_avg_wip_xchb_1_p0 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p0"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
#  #   RETURN r_success
   #END IF  
   #
   #EXECUTE s_axcp500_avg_wip_xchb_1_p0
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p0"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
#  #   RETURN r_success
   #END IF     
   #170829-00035#1--mark--e
   
   #170629-00004#1---add---s
   #IF g_sys_6016 = 'N' THEN  #当站下线是否影响成本   #201103-00060#1 mark
      #工单对应的当站下线资料asft337中维护的料号，不是备料单身中的料号时，则把该笔资料先删掉，再用当站下线的制程资料写入
      LET g_sql = "  DELETE FROM xchb_tmp ",
                  "    WHERE EXISTS (SELECT 1 FROM sfha_t,sfhb_t  WHERE sfhaent = sfhbent AND sfhadocno = sfhbdocno AND sfhaent = ",g_enterprise,
                  "                      AND xchb006 = sfha004 AND xchb009 = sfhb001 AND sfhastus ='S' ) ",
#                  "      AND NOT EXISTS (SELECT 1 FROM sfba_tmp WHERE xchb006 = sfbadocno AND xchb009 = sfba006 ) ", #180108-00085#1 mark
                  "      AND NOT EXISTS (SELECT 1 FROM sfba_tmp WHERE xchb006 = sfbadocno AND xchb009 = sfba006 AND (sfba003 IS NOT NULL AND sfba003 <> ' ') ) ", #180108-00085#1 add
                  #"      AND EXISTS (SELECT 1 FROM inaj_tmp WHERE xchb006 = inaj020 AND xchb009 = inaj005 AND inaj036 = '115' ) ",  #210220-00018#1 mark
                  "      AND EXISTS (SELECT 1 FROM inaj_tmp WHERE xchb006 = inaj020 AND xchb009 = inaj005 AND inaj036 = '115' AND xchb002=inaj999) ",  #210220-00018#1
                  "      AND xchb007 = 'END' AND xchb008 = '0' "
                  
      PREPARE s_axcp500_avg_wip_xchb_1_p11 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p11"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
      
      EXECUTE s_axcp500_avg_wip_xchb_1_p11
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p11"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
      #当站下线的料号不是备料单身的料号或者备料单身没有制程资料时，用当站下线的资料插入
      LET g_sql = "INSERT INTO xchb_tmp(xchbent,xchbcomp,xchbld,xchb001,xchb002,",
                  "                     xchb003,xchb004,xchb005,xchb006,xchb007,",
                  "                     xchb008,xchb009,xchb010,xchb011,xchb012,",
                  "                     xchb013,xchb014,xchb015,",
                  "                     xchb101,xchb102,xchb102a,xchb102b,xchb102c,",
                  "                     xchb102d,xchb102e,xchb102f,xchb102g,xchb102h,",
                  "                     xchb201,xchb202,xchb202a,xchb202b,xchb202c,",
                  "                     xchb202d,xchb202e,xchb202f,xchb202g,xchb202h,",
                  "                     xchb203,xchb204,xchb204a,xchb204b,xchb204c,",
                  "                     xchb204d,xchb204e,xchb204f,xchb204g,xchb204h,",
                  "                     xchb207,xchb208,xchb208a,xchb208b,xchb208c,",
                  "                     xchb208d,xchb208e,xchb208f,xchb208g,xchb208h,",
                  "                     xchb209,xchb210,xchb210a,xchb210b,xchb210c,",
                  "                     xchb210d,xchb210e,xchb210f,xchb210g,xchb210h,",
                  "                     xchb301,xchb302,xchb302a,xchb302b,xchb302c,",
                  "                     xchb302d,xchb302e,xchb302f,xchb302g,xchb302h,",
                  "                     xchb303,xchb304,xchb304a,xchb304b,xchb304c,",
                  "                     xchb304d,xchb304e,xchb304f,xchb304g,xchb304h,",
                  "                     xchb305,xchb306,xchb306a,xchb306b,xchb306c,",
                  "                     xchb306d,xchb306e,xchb306f,xchb306g,xchb306h,",
                  "                     xchb307,xchb308,xchb308a,xchb308b,xchb308c,",
                  "                     xchb308d,xchb308e,xchb308f,xchb308g,xchb308h,",
                  "                     xchb309,xchb310,xchb310a,xchb310b,xchb310c,",
                  "                     xchb310d,xchb310e,xchb310f,xchb310g,xchb310h,",
                  "                     xchb901,xchb902,xchb902a,xchb902b,xchb902c,",
                  "                     xchb902d,xchb902e,xchb902f,xchb902g,xchb902h,",
                  "                     xchbtime) ",             
                  " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',inaj999,",     
                  #180108-00085#1 mark-S                  
#                  "       '",g_xcat001,"',",g_yy,",",g_pp,",inaj020,(CASE WHEN sfha006 IS NOT NULL THEN sfha006 ELSE 'END' END),",               
#                  "       (CASE WHEN sfha007 IS NOT NULL THEN sfha007 ELSE '0' END ),inaj005,inaj006,inaj010,inaj038,",
#                  "       '",g_curr[p_seq].curr,"',(CASE WHEN sfha006 IS NOT NULL THEN sfha006 ELSE 'END' END),",
#                  "       (CASE WHEN sfha007 IS NOT NULL THEN sfha007 ELSE '0' END ),",
                  #180108-00085#1 mark-E
                  #180108-00085#1 add-S
                  "       '",g_xcat001,"',",g_yy,",",g_pp,",inaj020,(CASE WHEN sfha006 IS NOT NULL AND sfha006 <> ' ' THEN sfha006 ELSE 'END' END),",               
                  "       (CASE WHEN sfha007 IS NOT NULL AND sfha007 <> ' ' THEN sfha007 ELSE '0' END ),inaj005,inaj006,inaj010,inaj038,",
                  "       '",g_curr[p_seq].curr,"',(CASE WHEN sfha006 IS NOT NULL AND sfha006 <> ' ' THEN sfha006 ELSE 'END' END),",
                  "       (CASE WHEN sfha007 IS NOT NULL AND sfha007 <> ' ' THEN sfha007 ELSE '0' END ),",
                  #180108-00085#1 add-E
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      0,0,0,0,0,0,0,0,0,0,",
                  "      ? ",
                  "   FROM inaj_tmp,sfaa_tmp ,sfha_t,sfhb_t ",
                  "  WHERE inaj020 IS NOT NULL ",
                  "    AND inajent = sfaaent ",  
                  "    AND inajsite= sfaasite  ", 
                  "    AND inaj020 = sfaadocno ",
                  "    AND sfhaent = sfhbent AND sfhadocno = sfhbdocno AND sfhaent = ",g_enterprise,
                  "    AND inaj001 = sfhadocno AND inaj005 = sfhb001 AND sfhastus ='S' AND inaj020 = sfha004 ",
                  "    AND sfaa003 <> '3' "  ,          #不可为拆件工单
                  "    AND inaj036 = '115' " ,          #当站下线
                  "    AND sfha006 IS NOT NULL ",
                  #如果工单备料单身有制程资料，且当站下线的料号和备料单身的料号一致时，则当站下线更新到备料单身的制程资料上
                  #如果备料单身没有制程资料或者当站下线维护的料号和备料单身不一致，则用当站下线的制程资料更新当站下线数量
                  "    AND EXISTS (SELECT 1 FROM sfba_tmp WHERE sfha004 = sfbadocno AND (sfhb001 <> sfba006 OR (sfba003 IS NULL OR sfba003 = ' ') ) ) ",
                  "    AND NOT EXISTS (SELECT 1 FROM sfba_tmp WHERE sfha004 = sfbadocno AND sfhb001 = sfba006 AND (sfba003 IS NOT NULL AND sfba003 <> ' ')) "
      
      PREPARE s_axcp500_avg_wip_xchb_1_p12 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p12"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
      
      EXECUTE s_axcp500_avg_wip_xchb_1_p12 USING l_date
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p12"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF   
   #END IF        #201103-00060#1 mark
   #170629-00004#1---add---e
   
   #取上期工單尚未結案的xchb_t資料，期末數值=本期期初數值
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp a ",
               "       USING ( SELECT xchb_t.* FROM xchb_t,sfaa_tmp ",
               "                WHERE xchbent = sfaaent ",
               "                  AND xchb006 = sfaadocno ",
               "                  AND xchbent = ",g_enterprise,
               "                  AND xchbld  = '",g_ld,"'",
               "                  AND xchb001 = '",p_seq,"'",
               "                  AND xchb003 = '",g_xcat001,"'",
               "                  AND xchb004 = ",g_last_yy,
               "                  AND xchb005 = ",g_last_pp,
               "                  AND (xchb901 <> 0 OR xchb902 <> 0 ) ",
               "             ) b ",
               "          ON ( a.xchbent = b.xchbent         ",
               "          AND  a.xchbld  = b.xchbld          ",
               "          AND  a.xchb001 = b.xchb001         ",
               "          AND  a.xchb002 = b.xchb002         ",
               "          AND  a.xchb003 = b.xchb003         ",
               "          AND  a.xchb004 = ",g_yy,                #170418-00026#1
               "          AND  a.xchb005 = ",g_pp,                #170418-00026#1               
               "          AND  a.xchb006 = b.xchb006         ",
               "          AND  a.xchb007 = b.xchb007         ",
               "          AND  a.xchb008 = b.xchb008         ",
               "          AND  a.xchb009 = b.xchb009         ",
               "          AND  a.xchb010 = b.xchb010         ",
               "          AND  a.xchb011 = b.xchb011         ",
               "          AND  a.xchb014 = b.xchb014         ",   #170418-00026#1
               "          AND  a.xchb015 = b.xchb015 )       ",   #170418-00026#1               
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xchb101  = nvl(b.xchb901 ,0) ,   ",
               "                  a.xchb102  = nvl(b.xchb902 ,0) ,   ",
               "                  a.xchb102a = nvl(b.xchb902a,0) ,   ",
               "                  a.xchb102b = nvl(b.xchb902b,0) ,   ",
               "                  a.xchb102c = nvl(b.xchb902c,0) ,   ",
               "                  a.xchb102d = nvl(b.xchb902d,0) ,   ",
               "                  a.xchb102e = nvl(b.xchb902e,0) ,   ",
               "                  a.xchb102f = nvl(b.xchb902f,0) ,   ",
               "                  a.xchb102g = nvl(b.xchb902g,0) ,   ",
               "                  a.xchb102h = nvl(b.xchb902h,0) ,   ",
               "                  a.xchb901  = nvl(b.xchb901 ,0) ,   ",
               "                  a.xchb902  = nvl(b.xchb902 ,0) ,   ",
               "                  a.xchb902a = nvl(b.xchb902a,0) ,   ",
               "                  a.xchb902b = nvl(b.xchb902b,0) ,   ",
               "                  a.xchb902c = nvl(b.xchb902c,0) ,   ",
               "                  a.xchb902d = nvl(b.xchb902d,0) ,   ",
               "                  a.xchb902e = nvl(b.xchb902e,0) ,   ",
               "                  a.xchb902f = nvl(b.xchb902f,0) ,   ",
               "                  a.xchb902g = nvl(b.xchb902g,0) ,   ",
               "                  a.xchb902h = nvl(b.xchb902h,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xchbent,b.xchbcomp,b.xchbld, b.xchb001,b.xchb002,    ",
               "                     b.xchb003,",g_yy,",",g_pp,",b.xchb006,b.xchb007,       ",
               "                     b.xchb008,b.xchb009,b.xchb010,b.xchb011,b.xchb012,",
               #"                     b.xchb013,b.xchb007,b.xchb008, ",             #170418-00026#1
               "                     b.xchb013,b.xchb014,b.xchb015, ",              #170418-00026#1
               "                     b.xchb901,b.xchb902,b.xchb902a,b.xchb902b,b.xchb902c,  ",    #101.期初
               "                     b.xchb902d,b.xchb902e,b.xchb902f,b.xchb902g,b.xchb902h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #203.上站转入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #207.本期一般退料
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #209.本期超領退                
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.良品转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.报废
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #305.当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.回收转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #309.差异转出
               "                     b.xchb901,b.xchb902,b.xchb902a,b.xchb902b,b.xchb902c,  ",    #901.期末结存
               "                     b.xchb902d,b.xchb902e,b.xchb902f,b.xchb902g,b.xchb902h,",     
               "                     ? )                                         "                #最近成本计算时间
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xchb_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_xchb_1_p1 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #如有開帳資料xcvv_t，以開帳的數值更新本期xchb_t
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp a   ",
               "       USING ( SELECT xccv_t.* FROM xccv_t,sfaa_tmp ",
               "                WHERE xccvent = sfaaent ",
               "                  AND xccv006 = sfaadocno ",
               "                  AND xccvent = ",g_enterprise,
               "                  AND xccvld  = '",g_ld,"'",
               "                  AND xccv001 = '",p_seq,"'",
               "                  AND xccv003 = '",g_xcat001,"'",
               "                  AND xccv004 = ",g_last_yy,
               "                  AND xccv005 = ",g_last_pp,
--             "                  AND (xccb101 <> 0 OR xccb102 <> 0 ) ",
               "              ) b    ",
               "          ON ( a.xchbent = b.xccvent         ",
               "          AND  a.xchbld  = b.xccvld          ",
               "          AND  a.xchb001 = b.xccv001         ",
               "          AND  a.xchb002 = b.xccv002         ",
               "          AND  a.xchb003 = b.xccv003         ",
               "          AND  a.xchb006 = b.xccv006         ",
               "          AND  a.xchb007 = b.xccv007         ",
               "          AND  a.xchb008 = b.xccv008         ",
               "          AND  a.xchb009 = b.xccv009         ",
               "          AND  a.xchb010 = b.xccv010         ",
               "          AND  a.xchb011 = b.xccv011 )       ",
               "  WHEN MATCHED THEN                          ",
               #"       UPDATE SET a.xchb101  = nvl(b.xccv101 ,0) ,   ",   #170811-00039#1 mark
               "       UPDATE SET a.xchb101  = (CASE b.xccv009 WHEN 'DL+OH+SUB' THEN 0 ELSE nvl(b.xccv101 ,0) END),   ", #170811-00039#1 add
               "                  a.xchb102  = nvl(b.xccv102 ,0) ,   ",
               "                  a.xchb102a = nvl(b.xccv102a,0) ,   ",
               "                  a.xchb102b = nvl(b.xccv102b,0) ,   ",
               "                  a.xchb102c = nvl(b.xccv102c,0) ,   ",
               "                  a.xchb102d = nvl(b.xccv102d,0) ,   ",
               "                  a.xchb102e = nvl(b.xccv102e,0) ,   ",
               "                  a.xchb102f = nvl(b.xccv102f,0) ,   ",
               "                  a.xchb102g = nvl(b.xccv102g,0) ,   ",
               "                  a.xchb102h = nvl(b.xccv102h,0) ,   ",
               #"                  a.xchb901  = nvl(b.xccv101 ,0) ,   ",    #170811-00039#1 mark
               "                  a.xchb901  = (CASE b.xccv009 WHEN 'DL+OH+SUB' THEN 0 ELSE nvl(b.xccv101 ,0) END),   ", #170811-00039#1 add
               "                  a.xchb902  = nvl(b.xccv102 ,0) ,   ",
               "                  a.xchb902a = nvl(b.xccv102a,0) ,   ",
               "                  a.xchb902b = nvl(b.xccv102b,0) ,   ",
               "                  a.xchb902c = nvl(b.xccv102c,0) ,   ",
               "                  a.xchb902d = nvl(b.xccv102d,0) ,   ",
               "                  a.xchb902e = nvl(b.xccv102e,0) ,   ",
               "                  a.xchb902f = nvl(b.xccv102f,0) ,   ",
               "                  a.xchb902g = nvl(b.xccv102g,0) ,   ",
               "                  a.xchb902h = nvl(b.xccv102h,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xccvent,b.xccvcomp,b.xccvld,b.xccv001,b.xccv002,     ",
               "                     b.xccv003,",g_yy,",",g_pp,",b.xccv006,b.xccv007,       ",
               "                     b.xccv008,b.xccv009,NVL(b.xccv010,' '),b.xccv011,'',",
               "                     '",g_curr[p_seq].curr,"',b.xccv007,b.xccv008,",
               #170811-00039#1---modify---s
               #"                     b.xccv101,b.xccv102,b.xccv102a,b.xccv102b,b.xccv102c,  ",    #101.期初
               "                     (CASE b.xccv009 WHEN 'DL+OH+SUB' THEN 0 ELSE b.xccv101 END), ",
               "                     b.xccv102,b.xccv102a,b.xccv102b,b.xccv102c,  ",    #101.期初
               #170811-00039#1---modify---e
               "                     b.xccv102d,b.xccv102e,b.xccv102f,b.xccv102g,b.xccv102h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #203.上站转入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #207.本期一般退料
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #209.本期超領退                
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.良品转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.报废
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #305.当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.回收转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #309.差异转出
               #170811-00039#1---modify---s
               #"                     b.xccv101,b.xccv102,b.xccv102a,b.xccv102b,b.xccv102c,  ",    #901.期末结存
               "                     (CASE b.xccv009 WHEN 'DL+OH+SUB' THEN 0 ELSE b.xccv101 END), ",
               "                     b.xccv102,b.xccv102a,b.xccv102b,b.xccv102c,  ",    #901.期末结存
               #170811-00039#1---modify---e
               "                     b.xccv102d,b.xccv102e,b.xccv102f,b.xccv102g,b.xccv102h,",
               "                     ?  )                                        "                #最近成本计算时间
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xchb_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_xchb_1_p2 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   
   #201027-00001#1---add---s
   #建立临时表sfcb_tmp 用于记录发料作业编号+作业序不存在axcq163的下站报工站
   DROP TABLE sfcb_tmp;  
   CREATE TEMP TABLE sfcb_tmp(
   sfcbdocno   LIKE xcce_t.xcce006,    #工单单号
   sfcc003     LIKE xcce_t.xcce007,    #当前作业编号
   sfcc004     LIKE xcce_t.xcce008,    #当前作业序
   sfcb003     LIKE xcce_t.xcce007,    #下站作业编号
   sfcb004     LIKE xcce_t.xcce008     #下站作业序
   );
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'create wip4_tmp5'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN r_success
   END IF   

   CREATE INDEX sfcb_tmp_i01 ON sfcb_tmp(sfcbdocno,sfcc003,sfcc004);      #ODI-ORA#
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode

      LET g_errparam.extend = "CREATE INDEX sfcb_tmp_i01" #ODI-ORA#
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  
   
   LET g_sql = " INSERT INTO sfcb_tmp ",
               " SELECT sfcbdocno,sfcc003,sfcc004,sfcb003,sfcb004 ",
               "   FROM (",
               "         SELECT sfcbdocno,CONNECT_BY_ROOT(sfcc003) sfcc003,CONNECT_BY_ROOT(sfcc004) sfcc004, sfcb003,sfcb004,LEVEL,",
               "                ROW_NUMBER() OVER (PARTITION BY sfcbdocno,CONNECT_BY_ROOT(sfcc003),CONNECT_BY_ROOT(sfcc004) ORDER BY LEVEL) nm ",
               "           FROM sfcb_t LEFT JOIN sfcc_t ON sfcbent=sfccent AND sfcbdocno=sfccdocno AND sfcb001=sfcc001 AND sfcb002=sfcc002",
               "          WHERE sfcbent = ",g_enterprise," AND sfcb016='Y'",
               "          START WITH (sfcbdocno,sfcc003,sfcc004) IN (SELECT DISTINCT XCHB006,XCHB007,XCHB008 FROM xchb_tmp ",
               "                                                      WHERE xchb007 <>  'END' ",
               "                                                        AND XCHB007 = XCHB014 ",
               "                                                        AND XCHB008 = XCHB015 ",
               "                                                        AND NOT EXISTS (SELECT 1 ",
               "                                                                          FROM XCBT_T ",
               "                                                                         WHERE XCBTENT = XCHBENT ",
               "                                                                           AND XCBT001 = XCHB004 ",
               "                                                                           AND XCBT002 = XCHB005 ",
               "                                                                           AND XCBT003 = XCHB006 ",
               "                                                                           AND XCBT004 = XCHB007 ",
               "                                                                           AND XCBT005 = XCHB008) ",          
               "                                                     )  ",
               "                 CONNECT BY NOCYCLE sfcbent= PRIOR sfcbent AND sfcbdocno=PRIOR sfcbdocno AND sfcb001= PRIOR sfcb001  ",
               "                     AND sfcc003 = PRIOR sfcb003 AND sfcc004 = PRIOR sfcb004  ",
               "        ) t WHERE nm=1"               
   PREPARE s_axcp500_avg_wip_xchb_1_ins FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_ins"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg_wip_xchb_1_ins 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_ins"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
   
   LET g_sql = " INSERT INTO sfcb_tmp ",
               " SELECT xchb006,a.xchb007,a.xchb008,'END','0' ",
               "   FROM xchb_tmp a",
               "  WHERE a.xchbent = ",g_enterprise,
               "    AND a.xchbld  = '",g_ld,"'",
               "    AND a.xchb001 = '",p_seq,"'",
               "    AND a.xchb003 = '",g_xcat001,"'",
               "    AND a.xchb004 = ",g_yy,
               "    AND a.xchb005 = ",g_pp,
               "    AND a.xchb007 <>  'END'", 
               "    AND a.xchb007 = a.xchb014 ",  
               "    AND a.xchb008 = a.xchb015 ",  
               "    AND NOT EXISTS (SELECT 1 FROM xcbt_t ",
               "                     WHERE xcbtent = a.xchbent  ",
               "                       AND xcbt001 = a.xchb004  ",
               "                       AND xcbt002 = a.xchb005  ",
               "                       AND xcbt003 = a.xchb006  ",
               "                       AND xcbt004 = a.xchb007  ",
               "                       AND xcbt005 = a.xchb008) ",
               "    AND NOT EXISTS (SELECT 1 FROM sfcb_tmp ",
               "                     WHERE sfcbdocno = a.xchb006",
               "                       AND sfcc003 = a.xchb007  ",
               "                       AND sfcc004 = a.xchb008) ",
               "    AND NOT EXISTS (SELECT 1 FROM xchb_tmp b",
               "                     WHERE b.xchbent = a.xchbent ",
               "                       AND b.xchbld  = a.xchbld  ",
               "                       AND b.xchb001 = a.xchb001 ",
               "                       AND b.xchb002 = a.xchb002 ",
               "                       AND b.xchb003 = a.xchb003 ",
               "                       AND b.xchb004 = a.xchb004 ",   
               "                       AND b.xchb005 = a.xchb005 ",   
               "                       AND b.xchb006 = a.xchb006 ",
               "                       AND b.xchb007 = 'END' ",
               "                       AND b.xchb008 = '0'   ",
               "                       AND b.xchb009 = a.xchb009 ",
               "                       AND b.xchb010 = a.xchb010 ",
               "                       AND b.xchb011 = a.xchb011 )"   
   PREPARE s_axcp500_avg_wip_xchb_1_ins02 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_ins02"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg_wip_xchb_1_ins02 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_ins02"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF 
   
   LET g_sql = " INSERT INTO xchb_tmp ",             
               " SELECT DISTINCT a.xchbent,a.xchbcomp,a.xchbld,a.xchb001,a.xchb002,",
               "        a.xchb003,a.xchb004,a.xchb005,a.xchb006,sfcb003,",
               "        sfcb004,a.xchb009,a.xchb010,a.xchb011,a.xchb012,a.xchb013,",
               "        a.xchb007,a.xchb008,",
               #210220-00018#1---mark---s
               #"        a.xchb101,a.xchb102,a.xchb102a,a.xchb102b,a.xchb102c,",
               #"        a.xchb102d,a.xchb102e,a.xchb102f,a.xchb102g,a.xchb102h,",
               #210220-00018#1---mark---e
               "        0,0,0,0,0,0,0,0,0,0,",   #210220-00018#1 add
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        0,0,0,0,0,0,0,0,0,0,",
               "        ?",
               "   FROM xchb_tmp a,sfcb_tmp",
               "  WHERE a.xchb006 = sfcbdocno ",
               "    AND a.xchb007 = sfcc003 ",
               "    AND a.xchb008 = sfcc004 ",
               "    AND a.xchbent = ",g_enterprise,
               "    AND a.xchbld  = '",g_ld,"'",
               "    AND a.xchb001 = '",p_seq,"'",
               "    AND a.xchb003 = '",g_xcat001,"'",
               "    AND a.xchb004 = ",g_yy,
               "    AND a.xchb005 = ",g_pp,
               "    AND a.xchb007 <>  'END'", 
               "    AND a.xchb007 = a.xchb014 ",
               "    AND a.xchb008 = a.xchb015 ",    
               "    AND NOT EXISTS (SELECT 1 FROM xcbt_t ",
               "                     WHERE xcbtent = a.xchbent  ",
               "                       AND xcbt001 = a.xchb004  ",
               "                       AND xcbt002 = a.xchb005  ",
               "                       AND xcbt003 = a.xchb006  ",
               "                       AND xcbt004 = a.xchb007  ",
               "                       AND xcbt005 = a.xchb008) ",
               "    AND NOT EXISTS (SELECT 1 FROM xchb_tmp b",
               "                     WHERE b.xchbent = a.xchbent ",
               "                       AND b.xchbld  = a.xchbld  ",
               "                       AND b.xchb001 = a.xchb001 ",
               "                       AND b.xchb002 = a.xchb002 ",
               "                       AND b.xchb003 = a.xchb003 ",
               "                       AND b.xchb004 = a.xchb004 ",   
               "                       AND b.xchb005 = a.xchb005 ",   
               "                       AND b.xchb006 = a.xchb006 ",
               "                       AND b.xchb007 = 'END' ",
               "                       AND b.xchb008 = '0'   ",
               "                       AND b.xchb009 = a.xchb009 ",
               "                       AND b.xchb010 = a.xchb010 ",
               "                       AND b.xchb011 = a.xchb011 )" 
   PREPARE s_axcp500_avg_wip_xchb_1_p03 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p03"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  

   EXECUTE s_axcp500_avg_wip_xchb_1_p03 USING l_date 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p03"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF                 
   #201027-00001#1---add---e

   #201027-00001#1---mark---s
   ##将不存在xcbt_t流程里面的作业序作业编号的xchb_t资料新增一笔作业编号作业序为END+0的资料
   #LET g_sql = " INSERT INTO xchb_tmp ",             
   #            " SELECT DISTINCT a.xchbent,a.xchbcomp,a.xchbld,a.xchb001,a.xchb002,",
   #            "        a.xchb003,a.xchb004,a.xchb005,a.xchb006,'END',",
   #            "        '0',a.xchb009,a.xchb010,a.xchb011,a.xchb012,a.xchb013,",
   #            "        a.xchb007,a.xchb008,",
   #            "        a.xchb101,a.xchb102,a.xchb102a,a.xchb102b,a.xchb102c,",
   #            "        a.xchb102d,a.xchb102e,a.xchb102f,a.xchb102g,a.xchb102h,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        0,0,0,0,0,0,0,0,0,0,",
   #            "        ?",
   #            "   FROM xchb_tmp a",
   #            "  WHERE a.xchbent = ",g_enterprise,
   #            "    AND a.xchbld  = '",g_ld,"'",
   #            "    AND a.xchb001 = '",p_seq,"'",
   #            "    AND a.xchb003 = '",g_xcat001,"'",
   #            "    AND a.xchb004 = ",g_yy,
   #            "    AND a.xchb005 = ",g_pp,
   #            "    AND a.xchb007 <>  'END'", 
   #            "    AND a.xchb007 = a.xchb014 ",     #170418-00026#1
   #            "    AND a.xchb008 = a.xchb015 ",     #170418-00026#1 
   #            "    AND NOT EXISTS (SELECT 1 FROM xcbt_t ",
   #            "                     WHERE xcbtent = a.xchbent  ",
   #            "                       AND xcbt001 = a.xchb004  ",
   #            "                       AND xcbt002 = a.xchb005  ",
   #            "                       AND xcbt003 = a.xchb006  ",
   #            "                       AND xcbt004 = a.xchb007  ",
   #            "                       AND xcbt005 = a.xchb008) ",
   #            #170418-00026#1
   #            "    AND NOT EXISTS (SELECT 1 FROM xchb_tmp b",
   #            "                     WHERE b.xchbent = a.xchbent ",
   #            "                       AND b.xchbld  = a.xchbld  ",
   #            "                       AND b.xchb001 = a.xchb001 ",
   #            "                       AND b.xchb002 = a.xchb002 ",
   #            "                       AND b.xchb003 = a.xchb003 ",
   #            "                       AND b.xchb004 = a.xchb004 ",   
   #            "                       AND b.xchb005 = a.xchb005 ",   
   #            "                       AND b.xchb006 = a.xchb006 ",
   #            "                       AND b.xchb007 = 'END' ",
   #            "                       AND b.xchb008 = '0'   ",
   #            "                       AND b.xchb009 = a.xchb009 ",
   #            "                       AND b.xchb010 = a.xchb010 ",
   #            "                       AND b.xchb011 = a.xchb011 )"   
   #            #170418-00026#1
   #PREPARE s_axcp500_avg_wip_xchb_1_p02 FROM g_sql
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p02"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
#  #   RETURN r_success
   #END IF  
   #
   #EXECUTE s_axcp500_avg_wip_xchb_1_p02 USING l_date
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code   = SQLCA.sqlcode
   #   LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p02"
   #   LET g_errparam.popup  = TRUE
   #   CALL cl_err()
#  #   RETURN r_success
   #END IF  
   #201027-00001#1---mark---e
   
   #整批取製程成本工時費用明細資料(xcbs006)，更新或新增xchb_t，元件料號='DL+OH+SUB'的人工、製費投入金額
   LET l_xchb013 = g_curr[p_seq].curr    
   
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp a ",
               "   USING (    SELECT xcbs006,xcbs008,xcbs009,",
               "                     SUM(b) xchb202b, SUM(d) xchb202d, SUM(e) xchb202e, ",
               "                     SUM(f) xchb202f, SUM(g) xchb202g, SUM(h) xchb202h FROM (",
               "                     SELECT xcbs006,xcbs008,xcbs009,"
   CASE p_seq
        WHEN '1'
               LET g_sql = g_sql CLIPPED,
               "                            decode(xcbs005,1,xcbs202,0) b,decode(xcbs005,2,xcbs202,0) d,",
               "                            decode(xcbs005,3,xcbs202,0) e,decode(xcbs005,4,xcbs202,0) f,",
               "                            decode(xcbs005,5,xcbs202,0) g,decode(xcbs005,6,xcbs202,0) h "   
        WHEN '2'
               LET g_sql = g_sql CLIPPED,
               "                            decode(xcbs005,1,xcbs212,0) b,decode(xcbs005,2,xcbs212,0) d,",
               "                            decode(xcbs005,3,xcbs212,0) e,decode(xcbs005,4,xcbs212,0) f,",
               "                            decode(xcbs005,5,xcbs212,0) g,decode(xcbs005,6,xcbs212,0) h "   
        WHEN '3'
               LET g_sql = g_sql CLIPPED,
               "                            decode(xcbs005,1,xcbs222,0) b,decode(xcbs005,2,xcbs222,0) d,",
               "                            decode(xcbs005,3,xcbs222,0) e,decode(xcbs005,4,xcbs222,0) f,",
               "                            decode(xcbs005,5,xcbs222,0) g,decode(xcbs005,6,xcbs222,0) h "                     
   END CASE

   LET g_sql = g_sql CLIPPED,
#               "                       FROM xcbs_t,sfaa_tmp ", #190411-00017#1 A mark
               "                       FROM xcbs_t ",       #190411-00017#1 A mod
               "                      WHERE xcbsent = ",g_enterprise,
               "                        AND xcbsld  = '",g_ld,"'",
               "                        AND xcbs001 = '",g_xcat001,"'",
#               "                        AND xcbs006 = sfaadocno ",   #190411-00017#1 A mark
               "                        AND (xcbs202 <>0 OR xcbs212 <> 0 OR xcbs222<>0)", #201103-00060#1 add
               "                        AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xcbs006) ",  #190411-00017#1 A mod
               "                        AND xcbs002 =  ",g_yy,
               "                        AND xcbs003 =  ",g_pp,") ",
               "               GROUP BY xcbs006,xcbs008,xcbs009 ",
               "          ) b ",
               "      ON ( a.xchb006 = b.xcbs006   ",
               "       AND a.xchb007 = b.xcbs008   ",
               "       AND a.xchb008 = b.xcbs009   ",
               "       AND a.xchb009 = 'DL+OH+SUB' ",  #170722-00004#1
               "       AND a.xchb007 = a.xchb014   ",
               "       AND a.xchb008 = a.xchb015 ) ",               
               "    WHEN MATCHED THEN ",
               "         UPDATE SET a.xchb202b = b.xchb202b, ",
               "                    a.xchb202d = b.xchb202d, ",
               "                    a.xchb202e = b.xchb202e, ",
               "                    a.xchb202f = b.xchb202f, ",
               "                    a.xchb202g = b.xchb202g, ",
               "                    a.xchb202h = b.xchb202h  ",
               "          WHERE a.xchb001 = '",p_seq,"'",
               "            AND a.xchb009 = 'DL+OH+SUB' ",
               "   WHEN NOT MATCHED THEN ",
               "       INSERT VALUES(",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",
#               "       '",g_xcat001,"',",g_yy,",",g_pp,",b.xcbs006,b.xcbs008,b.xcbs009,'DL+OH+SUB',",   #190411-00016#1 mark
               #190411-00016#1 mod-S
               "       '",g_xcat001,"',",g_yy,",",g_pp,",b.xcbs006, ",
               "        (CASE WHEN b.xcbs008 IS NULL THEN 'END' WHEN b.xcbs008 = ' ' THEN 'END' ELSE b.xcbs008 END),",
               "        (CASE WHEN b.xcbs009 IS NULL THEN '0' WHEN b.xcbs009 = ' ' THEN '0' ELSE b.xcbs009 END),",
               "        'DL+OH+SUB',",
               #190411-00016#1 mod-E               
#               "          ' ',' ','','",l_xchb013,"',b.xcbs008,b.xcbs009,",  #190411-00016#1 mark            
               #190411-00016#1 mod-S
               "          ' ',' ','','",l_xchb013,"',",
               "        (CASE WHEN b.xcbs008 IS NULL THEN 'END' WHEN b.xcbs008 = ' ' THEN 'END' ELSE b.xcbs008 END),",
               "        (CASE WHEN b.xcbs009 IS NULL THEN '0' WHEN b.xcbs009 = ' ' THEN '0' ELSE b.xcbs009 END),",
               #190411-00016#1 mod-E
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,b.xchb202b,0,b.xchb202d,b.xchb202e,b.xchb202f,b.xchb202g,b.xchb202h,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          ? )"            
   PREPARE s_axcp500_avg_wip_xchb_1_p3 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p3"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                                 
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   EXECUTE s_axcp500_avg_wip_xchb_1_p3 USING l_date                                                                  
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p3"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                                 
#     RETURN r_success                                                                                                                        
   END IF                       

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #181120-00039#1---add---s
   #更新DL+OH_SUB原投入站的委外加工费        
   CALL s_axcp500_avg_wip_xchb_1_1(p_seq) 
   #181120-00039#1---add---e

   #170222 by stellar add ----- (S)
   #PGS(D)-00824 ---start---
   LET g_sql = "MERGE INTO xchb_tmp a",
               #" USING (SELECT xcbt003,xcbt004,xcbt005,SUM(NVL(xcbt010,0)) xcbt010,SUM(NVL(xcbt011,0)) xcbt011,SUM(NVL(xcbt012,0)) xcbt012,SUM(NVL(xcbt013,0)) xcbt013 ",                             #191126-00020#1 mark
               " USING (SELECT xcbt003,xcbt004,xcbt005,SUM(NVL(xcbt009,0)) xcbt009,SUM(NVL(xcbt010,0)) xcbt010,SUM(NVL(xcbt011,0)) xcbt011,SUM(NVL(xcbt012,0)) xcbt012,SUM(NVL(xcbt013,0)) xcbt013 ",  #191126-00020#1 add
               "          FROM xcbt_t ",
               "         WHERE xcbtent = ",g_enterprise,
               "           AND xcbt001 = ",g_yy,
               "           AND xcbt002 = ",g_pp,
               "         GROUP BY xcbt003,xcbt004,xcbt005 ",
               "       ) b ",
               "    ON ( a.xchb006 = b.xcbt003 ",
               "   AND   a.xchb007 = b.xcbt004 ",
               "   AND   a.xchb008 = b.xcbt005) ",
               " WHEN MATCHED THEN ",
               #"      UPDATE SET a.xchb201 = (b.xcbt010+b.xcbt011+b.xcbt012+b.xcbt013), ",                                                   #191126-00020#1 mark
               "      UPDATE SET a.xchb201 = (CASE WHEN b.xcbt009 = 0 THEN (b.xcbt010+b.xcbt011+b.xcbt012+b.xcbt013) ELSE b.xcbt009 END), ",  #191126-00020#1 add
               "                 a.xchb301 = b.xcbt010*-1, ",
               "                 a.xchb303 = b.xcbt011*-1, ",
               "                 a.xchb305 = b.xcbt013*-1, ",
               "                 a.xchb307 = b.xcbt012*-1  ",
               "       WHERE a.xchb001 = '",p_seq,"'",
               "         AND a.xchb009 = 'DL+OH+SUB' ",
               "         AND a.xchb007 = a.xchb014 ",               
               "         AND a.xchb008 = a.xchb015 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xchb_1_p7 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p7"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                                 
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   EXECUTE s_axcp500_avg_wip_xchb_1_p7                                                              
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p7"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                                 
#     RETURN r_success                                                                                                                        
   END IF      
   #170222 by stellar add ----- (E)
   
   #更新DL+OH_SUB原投入站的委外加工费        
   #CALL s_axcp500_avg_wip_xchb_1_1(p_seq) #181120-00039#1 mark

   #对xchb202进行取位                                                                                                                         
   #xchb202a~xchb202h进行取位                                                                                                                 
   CASE g_round_type                                                                                                                          
        WHEN '1'   #四舍五入                                                                                                                  
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = round(xchb202 ,? ), xchb202a = round(xchb202a,? ), xchb202b = round(xchb202b,? ), ",
                         "                    xchb202c = round(xchb202c,? ), xchb202d = round(xchb202d,? ), ",                               
                         "                    xchb202e = round(xchb202e,? ), xchb202f = round(xchb202f,? ), ",                               
                         "                    xchb202g = round(xchb202g,? ), xchb202h = round(xchb202h,? )  ",                         
                         " WHERE xchb009 = 'DL+OH+SUB' ",
                         "   AND xchb001 = '",p_seq,"'"
                                                                                                                                      
        WHEN '3'   #无条件截位                                                                                                                
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = trunc(xchb202 ,? ), xchb202a = trunc(xchb202a,? ), xchb202b = trunc(xchb202b,? ), ",
                         "                    xchb202c = trunc(xchb202c,? ), xchb202d = trunc(xchb202d,? ), ",                               
                         "                    xchb202e = trunc(xchb202e,? ), xchb202f = trunc(xchb202f,? ), ",                               
                         "                    xchb202g = trunc(xchb202g,? ), xchb202h = trunc(xchb202h,? )  ",                         
                         " WHERE xchb009 = 'DL+OH+SUB' ",
                         "   AND xchb001 = '",p_seq,"'"     
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb202,?) ",
                         "                                                          ELSE ROUND(xchb202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb202,?)",
                         "                                END ),",
                         "                    xchb202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202a,?) ",
                         "                                                         ELSE ROUND(xchb202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202a,?)",
                         "                                END ),",
                         "                    xchb202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202b,?) ",
                         "                                                         ELSE ROUND(xchb202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202b,?)",
                         "                                END ),",
                         "                    xchb202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202c,?) ",
                         "                                                         ELSE ROUND(xchb202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202c,?)",
                         "                                END ),",
                         "                    xchb202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202d,?) ",
                         "                                                         ELSE ROUND(xchb202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202d,?)",
                         "                                END ),",
                         "                    xchb202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202e,?) ",
                         "                                                         ELSE ROUND(xchb202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202e,?)",
                         "                                END ),",
                         "                    xchb202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202f,?) ",
                         "                                                         ELSE ROUND(xchb202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202f,?)",
                         "                                END ),",
                         "                    xchb202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202g,?) ",
                         "                                                         ELSE ROUND(xchb202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202g,?)",
                         "                                END ),",
                         "                    xchb202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202h,?) ",
                         "                                                         ELSE ROUND(xchb202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202h,?)",
                         "                                END )",                         
                         " WHERE xchb009 = 'DL+OH+SUB' ",
                         "   AND xchb001 = '",p_seq,"'"   
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = ceil(xchb202 *power(10,?))/power(10,?),",
                         "                    xchb202a = ceil(xchb202a*power(10,?))/power(10,?),",
                         "                    xchb202b = ceil(xchb202b*power(10,?))/power(10,?),",
                         "                    xchb202c = ceil(xchb202c*power(10,?))/power(10,?),",
                         "                    xchb202d = ceil(xchb202d*power(10,?))/power(10,?),",
                         "                    xchb202e = ceil(xchb202e*power(10,?))/power(10,?),",
                         "                    xchb202f = ceil(xchb202f*power(10,?))/power(10,?),",
                         "                    xchb202g = ceil(xchb202g*power(10,?))/power(10,?),",
                         "                    xchb202h = ceil(xchb202h*power(10,?))/power(10,?) ",                         
                         " WHERE xchb009 = 'DL+OH+SUB' ",
                         "   AND xchb001 = '",p_seq,"'"      
        #180802-00015#1 add-E                                                                                     
                                                                                                                                   
   END CASE                                                                                                                                   
   PREPARE s_axcp500_avg_wip_xchb_1_p4 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p4"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                                 
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                    
   #180802-00015#1 mark-S                                                                                                                                    
#   EXECUTE s_axcp500_avg_wip_xchb_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2   
   #180802-00015#1 mark-E         
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg_wip_xchb_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg_wip_xchb_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg_wip_xchb_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg_wip_xchb_1_p4 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202a
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202b
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202c
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202d
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202e
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202f
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202g
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xchb202h
   END CASE
   #180802-00015#1 add-E                                                                                        
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p4"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
      CALL s_axcp500_ins_error('','','','','','','','','','','',                                                                              
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg_wip_xchb_1_p4')                                                       
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   #xchb202                                                                       
   UPDATE xchb_tmp SET xchb202= xchb202a+xchb202b+xchb202c+xchb202d+xchb202e+xchb202f+xchb202g+xchb202h                                 
    WHERE xchb009 = 'DL+OH+SUB' 
      AND xchb001 = p_seq                                                            
                                                                                                                                                                         
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb202"                                                                                 
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     

   UPDATE xchb_tmp SET xchb901  = xchb101  + xchb201  + xchb203  + xchb207 +  xchb209  + xchb301  + xchb303  + xchb307,
                       xchb902  = xchb102  + xchb202  + xchb204  + xchb208 +  xchb210  + xchb302  + xchb304  + xchb308,
                       xchb902a = xchb102a + xchb202a + xchb204a + xchb208a + xchb210a + xchb302a + xchb304a + xchb308a,
                       xchb902b = xchb102b + xchb202b + xchb204b + xchb208b + xchb210b + xchb302b + xchb304b + xchb308b,
                       xchb902c = xchb102c + xchb202c + xchb204c + xchb208c + xchb210c + xchb302c + xchb304c + xchb308c,
                       xchb902d = xchb102d + xchb202d + xchb204d + xchb208d + xchb210d + xchb302d + xchb304d + xchb308d,
                       xchb902e = xchb102e + xchb202e + xchb204e + xchb208e + xchb210e + xchb302e + xchb304e + xchb308e,
                       xchb902f = xchb102f + xchb202f + xchb204f + xchb208f + xchb210f + xchb302f + xchb304f + xchb308f,
                       xchb902g = xchb102g + xchb202g + xchb204g + xchb208g + xchb210g + xchb302g + xchb304g + xchb308g,
                       xchb902h = xchb102h + xchb202h + xchb204h + xchb208h + xchb210h + xchb302h + xchb304h + xchb308h
    WHERE xchb001 = p_seq
      AND xchb009 = 'DL+OH+SUB'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #整批取製程成本調整作業(axct309)，元件料號='ADJUST’的投入金額
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp a ",
               "       USING ( SELECT xccx001,xccx007,xccx008,xccx009,",
               "                      SUM(xccx101)  xccx101 ,SUM(xccx102)  xccx102 ,",
               "                      SUM(xccx102a) xccx102a,SUM(xccx102b) xccx102b,",
               "                      SUM(xccx102c) xccx102c,SUM(xccx102d) xccx102d,",
               "                      SUM(xccx102e) xccx102e,SUM(xccx102f) xccx102f,",
               "                      SUM(xccx102g) xccx102g,SUM(xccx102h) xccx102h ",
               "                 FROM xccx_t ",
               "                WHERE xccxent = ",g_enterprise,
               "                  AND xccxld  = '",g_ld,"'",
               "                  AND xccx001 = '",p_seq,"'",
               "                  AND xccx003 = '",g_xcat001,"'",
               "                  AND xccx004 =  ",g_yy,
               "                  AND xccx005 =  ",g_pp,
               "                GROUP BY xccx001,xccx007,xccx008,xccx009 ) b ",
               "         ON ( a.xchb001 = b.xccx001 ",
               "          AND a.xchb006 = b.xccx007 ",
               "          AND a.xchb007 = b.xccx008 ",
               "          AND a.xchb008 = b.xccx009 ",
               "          AND a.xchb009 = 'ADJUST'  )",
               "    WHEN MATCHED THEN ",
               "         UPDATE SET a.xchb201  = b.xccx101 , ",
               "                    a.xchb202  = b.xccx102 , ",
               "                    a.xchb202a = b.xccx102a, ",
               "                    a.xchb202b = b.xccx102b, ",
               "                    a.xchb202c = b.xccx102c, ",
               "                    a.xchb202d = b.xccx102d, ",
               "                    a.xchb202e = b.xccx102e, ",
               "                    a.xchb202f = b.xccx102f, ",
               "                    a.xchb202g = b.xccx102g, ",
               "                    a.xchb202h = b.xccx102h  ",
               "   WHEN NOT MATCHED THEN ",
               "       INSERT VALUES(",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",
               "       '",g_xcat001,"',",g_yy,",",g_pp,",b.xccx007,b.xccx008,b.xccx009,'ADJUST',",               
               "          ' ',' ','','",l_xchb013,"',b.xccx008,b.xccx009,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          b.xccx101,b.xccx102,b.xccx102a,b.xccx102b,b.xccx102c,b.xccx102d,b.xccx102e,b.xccx102f,b.xccx102g,b.xccx102h,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          ? )"                
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xchb_1_p5 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p5"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                            
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   EXECUTE s_axcp500_avg_wip_xchb_1_p5 USING l_date                                                                  
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p5"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                               
#     RETURN r_success                                                                                                                        
   END IF
   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   
   #对xchb202进行取位                                                                                                                         
   #xchb202a~xchb202h进行取位                                                                                                                 
   CASE g_round_type                                                                                                                          
        WHEN '1'   #四舍五入                                                                                                                  
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = round(xchb202 ,? ), xchb202a = round(xchb202a,? ), xchb202b = round(xchb202b,? ), ",
                         "                    xchb202c = round(xchb202c,? ), xchb202d = round(xchb202d,? ), ",                               
                         "                    xchb202e = round(xchb202e,? ), xchb202f = round(xchb202f,? ), ",                               
                         "                    xchb202g = round(xchb202g,? ), xchb202h = round(xchb202h,? )  ",                         
                         " WHERE xchb009 = 'ADJUST' ",
                         "   AND xchb001 = '",p_seq,"'"
                                                                                                                                      
        WHEN '3'   #无条件截位                                                                                                                
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = trunc(xchb202 ,? ), xchb202a = trunc(xchb202a,? ), xchb202b = trunc(xchb202b,? ), ",
                         "                    xchb202c = trunc(xchb202c,? ), xchb202d = trunc(xchb202d,? ), ",                               
                         "                    xchb202e = trunc(xchb202e,? ), xchb202f = trunc(xchb202f,? ), ",                               
                         "                    xchb202g = trunc(xchb202g,? ), xchb202h = trunc(xchb202h,? )  ",                         
                         " WHERE xchb009 = 'ADJUST' ",
                         "   AND xchb001 = '",p_seq,"'"             
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb202,?) ",
                         "                                                          ELSE ROUND(xchb202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb202,?)",
                         "                                END ),",
                         "                    xchb202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202a,?) ",
                         "                                                         ELSE ROUND(xchb202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202a,?)",
                         "                                END ),",
                         "                    xchb202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202b,?) ",
                         "                                                         ELSE ROUND(xchb202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202b,?)",
                         "                                END ),",
                         "                    xchb202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202c,?) ",
                         "                                                         ELSE ROUND(xchb202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202c,?)",
                         "                                END ),",
                         "                    xchb202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202d,?) ",
                         "                                                         ELSE ROUND(xchb202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202d,?)",
                         "                                END ),",
                         "                    xchb202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202e,?) ",
                         "                                                         ELSE ROUND(xchb202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202e,?)",
                         "                                END ),",
                         "                    xchb202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202f,?) ",
                         "                                                         ELSE ROUND(xchb202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202f,?)",
                         "                                END ),",
                         "                    xchb202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202g,?) ",
                         "                                                         ELSE ROUND(xchb202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202g,?)",
                         "                                END ),",
                         "                    xchb202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202h,?) ",
                         "                                                         ELSE ROUND(xchb202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202h,?)",
                         "                                END )",                          
                         " WHERE xchb009 = 'ADJUST' ",
                         "   AND xchb001 = '",p_seq,"'" 
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = ceil(xchb202 *power(10,?))/power(10,?),",
                         "                    xchb202a = ceil(xchb202a*power(10,?))/power(10,?),",
                         "                    xchb202b = ceil(xchb202b*power(10,?))/power(10,?),",
                         "                    xchb202c = ceil(xchb202c*power(10,?))/power(10,?),",
                         "                    xchb202d = ceil(xchb202d*power(10,?))/power(10,?),",
                         "                    xchb202e = ceil(xchb202e*power(10,?))/power(10,?),",
                         "                    xchb202f = ceil(xchb202f*power(10,?))/power(10,?),",
                         "                    xchb202g = ceil(xchb202g*power(10,?))/power(10,?),",
                         "                    xchb202h = ceil(xchb202h*power(10,?))/power(10,?) ",                          
                         " WHERE xchb009 = 'ADJUST' ",
                         "   AND xchb001 = '",p_seq,"'"      
        #180802-00015#1 add-E                                                                                     
                                                                                                                                   
   END CASE                                                                                                                                   
   PREPARE s_axcp500_avg_wip_xchb_1_p6 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p6"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                                 
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                      
   #180802-00015#1 mark-S                                                                                                                   
#   EXECUTE s_axcp500_avg_wip_xchb_1_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2   
   #180802-00015#1 mark-E      
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg_wip_xchb_1_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg_wip_xchb_1_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg_wip_xchb_1_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg_wip_xchb_1_p6 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202a
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202b
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202c
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202d
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202e
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202f
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202g
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xchb202h
   END CASE
   #180802-00015#1 add-E                                                                                        
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p6"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                              
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                    
                                                                                                                                              
   #xchb202a                                                                       
   UPDATE xchb_tmp SET xchb202a= xchb202-(xchb202b+xchb202c+xchb202d+xchb202e+xchb202f+xchb202g+xchb202h)                      
    WHERE xchb007 = 'ADJUST' 
      AND xchb001 = p_seq                                                            
                                                                                                                                                                         
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb202a"                                                                                 
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                           
#     RETURN r_success                                                                                                                        
   END IF 
   #170906-00053#1---add---s
   #runcard 返工处理,作业编号+作业序不存在axcq163中的数据 DL+OH+SUB/ADJUST
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp a ",
               " USING(SELECT xchb006,xchb009,xchb010,xchb011,",
               "              SUM(xchb201)  xchb201, SUM(xchb202)  xchb202, SUM(xchb202a) xchb202a,SUM(xchb202b) xchb202b,SUM(xchb202c) xchb202c,",
               "              SUM(xchb202d) xchb202d,SUM(xchb202e) xchb202e,SUM(xchb202f) xchb202f,SUM(xchb202g) xchb202g,SUM(xchb202h) xchb202h ",
               "         FROM xchb_tmp ",
               "        WHERE xchbent = ",g_enterprise,
               "          AND xchbld  = '",g_ld,"'",
               "          AND xchb001 = '",p_seq,"'",
               "          AND xchb003 = '",g_xcat001,"'",
               "          AND xchb004 = ",g_yy,
               "          AND xchb005 = ",g_pp,
               "          AND xchb007 <>  'END'", 
               "          AND (xchb009 = 'DL+OH+SUB' OR xchb009 = 'ADJUST')",
               "          AND xchb007 = xchb014 ",    
               "          AND xchb008 = xchb015 ",  
               "          AND NOT EXISTS (SELECT 1 FROM xcbt_t ",
               "                           WHERE xcbtent = xchbent  ",
               "                             AND xcbt001 = xchb004  ",
               "                             AND xcbt002 = xchb005  ",
               "                             AND xcbt003 = xchb006  ",
               "                             AND xcbt004 = xchb007  ",
               "                             AND xcbt005 = xchb008) ",
               "        GROUP BY xchb006,xchb009,xchb010,xchb011) b",
               "    ON ( a.xchbent = ",g_enterprise,
               "    AND  a.xchbld  = '",g_ld,"'",
               "    AND  a.xchb001 = '",p_seq,"'",
               "    AND  a.xchb003 = '",g_xcat001,"'",
               "    AND  a.xchb004 = ",g_yy,                
               "    AND  a.xchb005 = ",g_pp,                         
               "    AND  a.xchb006 = b.xchb006 ",
               "    AND  a.xchb007 = 'END' ",
               "    AND  a.xchb008 = '0' ",
               "    AND  a.xchb009 = b.xchb009 ",
               "    AND  a.xchb010 = b.xchb010 ",
               "    AND  a.xchb011 = b.xchb011 ",
               "    AND  a.xchb014 = 'END' ",  
               "    AND  a.xchb015 = '0' ) ", 
               " WHEN MATCHED THEN", 
               " UPDATE SET a.xchb201  = a.xchb201  + b.xchb201, ",
               "            a.xchb202  = a.xchb202  + b.xchb202, ",
               "            a.xchb202a = a.xchb202a + b.xchb202a, ",
               "            a.xchb202b = a.xchb202b + b.xchb202b, ",
               "            a.xchb202c = a.xchb202c + b.xchb202c, ",
               "            a.xchb202d = a.xchb202d + b.xchb202d, ",
               "            a.xchb202e = a.xchb202e + b.xchb202e, ",
               "            a.xchb202f = a.xchb202f + b.xchb202f, ",
               "            a.xchb202g = a.xchb202g + b.xchb202g, ",
               "            a.xchb202h = a.xchb202h + b.xchb202h  ",
               "   WHEN NOT MATCHED THEN ",
               "       INSERT VALUES(",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",
               "       '",g_xcat001,"',",g_yy,",",g_pp,",b.xchb006,'END','0',b.xchb009,",               
               "          ' ',' ','','",l_xchb013,"','END','0',",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          b.xchb201,b.xchb202,b.xchb202a,b.xchb202b,b.xchb202c,b.xchb202d,b.xchb202e,b.xchb202f,b.xchb202g,b.xchb202h,", 
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          0,0,0,0,0,0,0,0,0,0,",
               "          ? )"
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xchb_1_p9 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p9"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                            
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   EXECUTE s_axcp500_avg_wip_xchb_1_p9 USING l_date                                                                  
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p9"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                               
#     RETURN r_success                                                                                                                        
   END IF                 
   
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   
   #删除runcard 返工处理,作业编号+作业序不存在axcq163中的数据且不为end+0 的 DL+OH+SUB/ADJUST
   LET g_sql = " DELETE FROM xchb_tmp ",
               "       WHERE xchbent = ",g_enterprise,
               "         AND xchbld  = '",g_ld,"'",
               "         AND xchb001 = '",p_seq,"'",
               "         AND xchb003 = '",g_xcat001,"'",
               "         AND xchb004 = ",g_yy,
               "         AND xchb005 = ",g_pp,
               "         AND xchb007 <>  'END'", 
               "         AND (xchb009 = 'DL+OH+SUB' OR xchb009 = 'ADJUST')",
               "         AND xchb007 = xchb014 ",    
               "         AND xchb008 = xchb015 ",  
               "         AND NOT EXISTS (SELECT 1 FROM xcbt_t ",
               "                          WHERE xcbtent = xchbent  ",
               "                            AND xcbt001 = xchb004  ",
               "                            AND xcbt002 = xchb005  ",
               "                            AND xcbt003 = xchb006  ",
               "                            AND xcbt004 = xchb007  ",
               "                            AND xcbt005 = xchb008) "
   PREPARE s_axcp500_avg_wip_xchb_1_p10 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p10"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                            
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                                                                                              
   EXECUTE s_axcp500_avg_wip_xchb_1_p10                                                                  
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p10"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                               
#     RETURN r_success                                                                                                                        
   END IF     
   #170906-00053#1---add---e
   
   UPDATE xchb_tmp SET xchb901  = xchb101  + xchb201  + xchb203  + xchb207 + 
                                  xchb209  + xchb301  + xchb303  + xchb307,
                       xchb902  = xchb102  + xchb202  + xchb204  + xchb208 + 
                                  xchb210  + xchb302  + xchb304  + xchb308,
                       xchb902a = xchb102a + xchb202a + xchb204a + xchb208a + 
                                  xchb210a + xchb302a + xchb304a + xchb308a,
                       xchb902b = xchb102b + xchb202b + xchb204b + xchb208b + 
                                  xchb210b + xchb302b + xchb304b + xchb308b,
                       xchb902c = xchb102c + xchb202c + xchb204c + xchb208c + 
                                  xchb210c + xchb302c + xchb304c + xchb308c,
                       xchb902d = xchb102d + xchb202d + xchb204d + xchb208d + 
                                  xchb210d + xchb302d + xchb304d + xchb308d,
                       xchb902e = xchb102e + xchb202e + xchb204e + xchb208e + 
                                  xchb210e + xchb302e + xchb304e + xchb308e,
                       xchb902f = xchb102f + xchb202f + xchb204f + xchb208f + 
                                  xchb210f + xchb302f + xchb304f + xchb308f,
                       xchb902g = xchb102g + xchb202g + xchb204g + xchb208g + 
                                  xchb210g + xchb302g + xchb304g + xchb308g,
                       xchb902h = xchb102h + xchb202h + xchb204h + xchb208h + 
                                  xchb210h + xchb302h + xchb304h + xchb308h
    WHERE xchb001 = p_seq
      AND xchb009 = 'ADJUST'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF       

   #xchb102,xchb202,xchb902进行取位                                                                                                                 
   CASE g_round_type                                                                                                                          
        WHEN '1'   #四舍五入                                                                                                                  
             LET g_sql = "UPDATE xchb_tmp SET xchb102  = round(xchb102 ,? ), xchb102a = round(xchb102a,? ), xchb102b = round(xchb102b,? ), ",
                         "                    xchb102c = round(xchb102c,? ), xchb102d = round(xchb102d,? ), ",                               
                         "                    xchb102e = round(xchb102e,? ), xchb102f = round(xchb102f,? ), ",                               
                         "                    xchb102g = round(xchb102g,? ), xchb102h = round(xchb102h,? ), ",
                         "                    xchb202  = round(xchb202 ,? ), xchb202a = round(xchb202a,? ), xchb202b = round(xchb202b,? ), ",
                         "                    xchb202c = round(xchb202c,? ), xchb202d = round(xchb202d,? ), ",                               
                         "                    xchb202e = round(xchb202e,? ), xchb202f = round(xchb202f,? ), ",                               
                         "                    xchb202g = round(xchb202g,? ), xchb202h = round(xchb202h,? ), ",
                         "                    xchb902  = round(xchb902 ,? ), xchb902a = round(xchb902a,? ), xchb902b = round(xchb902b,? ), ",
                         "                    xchb902c = round(xchb902c,? ), xchb902d = round(xchb902d,? ), ",                               
                         "                    xchb902e = round(xchb902e,? ), xchb902f = round(xchb902f,? ), ",                               
                         "                    xchb902g = round(xchb902g,? ), xchb902h = round(xchb902h,? )  ",                          
                         " WHERE xchb001 = '",p_seq,"'"
                                                                                                                                      
        WHEN '3'   #无条件截位                                                                                                                
             LET g_sql = "UPDATE xchb_tmp SET xchb102  = trunc(xchb102 ,? ), xchb102a = trunc(xchb102a,? ), xchb102b = trunc(xchb102b,? ), ",
                         "                    xchb102c = trunc(xchb102c,? ), xchb102d = trunc(xchb102d,? ), ",                               
                         "                    xchb102e = trunc(xchb102e,? ), xchb102f = trunc(xchb102f,? ), ",                               
                         "                    xchb102g = trunc(xchb102g,? ), xchb102h = trunc(xchb102h,? ), ",
                         "                    xchb202  = trunc(xchb202 ,? ), xchb202a = trunc(xchb202a,? ), xchb202b = trunc(xchb202b,? ), ",
                         "                    xchb202c = trunc(xchb202c,? ), xchb202d = trunc(xchb202d,? ), ",                               
                         "                    xchb202e = trunc(xchb202e,? ), xchb202f = trunc(xchb202f,? ), ",                               
                         "                    xchb202g = trunc(xchb202g,? ), xchb202h = trunc(xchb202h,? ), ",
						       "                    xchb902  = trunc(xchb902 ,? ), xchb902a = trunc(xchb902a,? ), xchb902b = trunc(xchb902b,? ), ",
                         "                    xchb902c = trunc(xchb902c,? ), xchb902d = trunc(xchb902d,? ), ",                               
                         "                    xchb902e = trunc(xchb902e,? ), xchb902f = trunc(xchb902f,? ), ",                               
                         "                    xchb902g = trunc(xchb902g,? ), xchb902h = trunc(xchb902h,? )  ",                         
                         " WHERE xchb001 = '",p_seq,"'"        
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xchb_tmp SET xchb102  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb102,?) ",
                         "                                                          ELSE ROUND(xchb102,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb102,?)",
                         "                                END ),",
                         "                    xchb102a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb102a,?) ",
                         "                                                         ELSE ROUND(xchb102a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb102a,?)",
                         "                                END ),",
                         "                    xchb102b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb102b,?) ",
                         "                                                         ELSE ROUND(xchb102b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb102b,?)",
                         "                                END ),",
                         "                    xchb102c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb102c,?) ",
                         "                                                         ELSE ROUND(xchb102c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb102c,?)",
                         "                                END ),",
                         "                    xchb102d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb102d,?) ",
                         "                                                         ELSE ROUND(xchb102d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb102d,?)",
                         "                                END ),",
                         "                    xchb102e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb102e,?) ",
                         "                                                         ELSE ROUND(xchb102e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb102e,?)",
                         "                                END ),",
                         "                    xchb102f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb102f,?) ",
                         "                                                         ELSE ROUND(xchb102f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb102f,?)",
                         "                                END ),",
                         "                    xchb102g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb102g,?) ",
                         "                                                         ELSE ROUND(xchb102g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb102g,?)",
                         "                                END ),",
                         "                    xchb102h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb102h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb102h,?) ",
                         "                                                         ELSE ROUND(xchb102h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb102h,?)",
                         "                                END ),",    
                         "                    xchb202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb202,?) ",
                         "                                                          ELSE ROUND(xchb202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb202,?)",
                         "                                END ),",
                         "                    xchb202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202a,?) ",
                         "                                                         ELSE ROUND(xchb202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202a,?)",
                         "                                END ),",
                         "                    xchb202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202b,?) ",
                         "                                                         ELSE ROUND(xchb202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202b,?)",
                         "                                END ),",
                         "                    xchb202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202c,?) ",
                         "                                                         ELSE ROUND(xchb202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202c,?)",
                         "                                END ),",
                         "                    xchb202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202d,?) ",
                         "                                                         ELSE ROUND(xchb202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202d,?)",
                         "                                END ),",
                         "                    xchb202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202e,?) ",
                         "                                                         ELSE ROUND(xchb202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202e,?)",
                         "                                END ),",
                         "                    xchb202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202f,?) ",
                         "                                                         ELSE ROUND(xchb202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202f,?)",
                         "                                END ),",
                         "                    xchb202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202g,?) ",
                         "                                                         ELSE ROUND(xchb202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202g,?)",
                         "                                END ),",
                         "                    xchb202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202h,?) ",
                         "                                                         ELSE ROUND(xchb202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202h,?)",
                         "                                END ),",     
                         "                    xchb902  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb902,?) ",
                         "                                                          ELSE ROUND(xchb902,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb902,?)",
                         "                                END ),",
                         "                    xchb902a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb902a,?) ",
                         "                                                         ELSE ROUND(xchb902a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb902a,?)",
                         "                                END ),",
                         "                    xchb902b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb902b,?) ",
                         "                                                         ELSE ROUND(xchb902b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb902b,?)",
                         "                                END ),",
                         "                    xchb902c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb902c,?) ",
                         "                                                         ELSE ROUND(xchb902c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb902c,?)",
                         "                                END ),",
                         "                    xchb902d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb902d,?) ",
                         "                                                         ELSE ROUND(xchb902d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb902d,?)",
                         "                                END ),",
                         "                    xchb902e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb902e,?) ",
                         "                                                         ELSE ROUND(xchb902e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb902e,?)",
                         "                                END ),",
                         "                    xchb902f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb902f,?) ",
                         "                                                         ELSE ROUND(xchb902f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb902f,?)",
                         "                                END ),",
                         "                    xchb902g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb902g,?) ",
                         "                                                         ELSE ROUND(xchb902g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb902g,?)",
                         "                                END ),",
                         "                    xchb902h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb902h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb902h,?) ",
                         "                                                         ELSE ROUND(xchb902h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb902h,?)",
                         "                                END ) ",                         
                         " WHERE xchb001 = '",p_seq,"'" 
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xchb_tmp SET xchb102  = ceil(xchb102 *power(10,?))/power(10,?),",
                         "                    xchb102a = ceil(xchb102a*power(10,?))/power(10,?),",
                         "                    xchb102b = ceil(xchb102b*power(10,?))/power(10,?),",
                         "                    xchb102c = ceil(xchb102c*power(10,?))/power(10,?),",
                         "                    xchb102d = ceil(xchb102d*power(10,?))/power(10,?),",
                         "                    xchb102e = ceil(xchb102e*power(10,?))/power(10,?),",
                         "                    xchb102f = ceil(xchb102f*power(10,?))/power(10,?),",
                         "                    xchb102g = ceil(xchb102g*power(10,?))/power(10,?),",
                         "                    xchb102h = ceil(xchb102h*power(10,?))/power(10,?),",    
                         "                    xchb202  = ceil(xchb202 *power(10,?))/power(10,?),",
                         "                    xchb202a = ceil(xchb202a*power(10,?))/power(10,?),",
                         "                    xchb202b = ceil(xchb202b*power(10,?))/power(10,?),",
                         "                    xchb202c = ceil(xchb202c*power(10,?))/power(10,?),",
                         "                    xchb202d = ceil(xchb202d*power(10,?))/power(10,?),",
                         "                    xchb202e = ceil(xchb202e*power(10,?))/power(10,?),",
                         "                    xchb202f = ceil(xchb202f*power(10,?))/power(10,?),",
                         "                    xchb202g = ceil(xchb202g*power(10,?))/power(10,?),",
                         "                    xchb202h = ceil(xchb202h*power(10,?))/power(10,?),",        
                         "                    xchb902  = ceil(xchb902 *power(10,?))/power(10,?),",
                         "                    xchb902a = ceil(xchb902a*power(10,?))/power(10,?),",
                         "                    xchb902b = ceil(xchb902b*power(10,?))/power(10,?),",
                         "                    xchb902c = ceil(xchb902c*power(10,?))/power(10,?),",
                         "                    xchb902d = ceil(xchb902d*power(10,?))/power(10,?),",
                         "                    xchb902e = ceil(xchb902e*power(10,?))/power(10,?),",
                         "                    xchb902f = ceil(xchb902f*power(10,?))/power(10,?),",
                         "                    xchb902g = ceil(xchb902g*power(10,?))/power(10,?),",
                         "                    xchb902h = ceil(xchb902h*power(10,?))/power(10,?) ",                        
                         " WHERE xchb001 = '",p_seq,"'"         
        #180802-00015#1 add-E                                                                                    
                                                                                                                                   
   END CASE                                                                                                                                  
   PREPARE s_axcp500_avg_wip_xchb_1_p8 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_p8"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                                 
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                               
   #180802-00015#1 mark-S                                                                                                                                   
#   EXECUTE s_axcp500_avg_wip_xchb_1_p8 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2       
   #180802-00015#1 mark-E      
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg_wip_xchb_1_p8 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg_wip_xchb_1_p8 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg_wip_xchb_1_p8 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg_wip_xchb_1_p8 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102a
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102b
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102c
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102d
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102e
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102f
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102g
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb102h
                                                   
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202a
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202b
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202c
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202d
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202e
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202f
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202g
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202h
                                                   
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb902
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb902a
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb902b
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb902c
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb902d
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb902e
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb902f
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb902g
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xchb902h
   END CASE
   #180802-00015#1 add-E                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xchb_1_p8"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                              
#     RETURN r_success                                                                                                                        
   END IF   
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批在制处理 - 产生xcha
# Memo...........:
# Usage..........: CALL s_axcp500_avg_wip_xcha_1(p_seq)
#                       RETURNING r_success
# Input parameter: p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2016/11/25 By 02295
# Modify.........: #161121-00018#5
################################################################################
PUBLIC FUNCTION s_axcp500_avg_wip_xcha_1(p_seq)
DEFINE p_seq           LIKE xccc_t.xccc001
DEFINE r_success       LIKE type_t.num5   
DEFINE l_date          DATETIME YEAR TO SECOND

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()


   #整批插入xcce(各数量/金额为0)
   LET g_sql = "INSERT INTO xcha_tmp (xchaent,xchacomp,xchald,xcha001,xcha002,",
               "                      xcha003,xcha004,xcha005,xcha006,xcha007,",
               "                      xcha008,xcha009,xcha010,xcha011,xcha012,",
               "                      xcha013,",
               "                      xcha101,xcha102,xcha102a,xcha102b,xcha102c,",
               "                      xcha102d,xcha102e,xcha102f,xcha102g,xcha102h,",
               "                      xcha201,xcha202,xcha202a,xcha202b,xcha202c,",
               "                      xcha202d,xcha202e,xcha202f,xcha202g,xcha202h,",
               "                      xcha203,xcha204,xcha204a,xcha204b,xcha204c,",
               "                      xcha204d,xcha204e,xcha204f,xcha204g,xcha204h,",
               "                      xcha301,xcha302,xcha302a,xcha302b,xcha302c,",
               "                      xcha302d,xcha302e,xcha302f,xcha302g,xcha302h,",
               "                      xcha303,xcha304,xcha304a,xcha304b,xcha304c,",
               "                      xcha304d,xcha304e,xcha304f,xcha304g,xcha304h,",
               "                      xcha305,xcha306,xcha306a,xcha306b,xcha306c,",
               "                      xcha306d,xcha306e,xcha306f,xcha306g,xcha306h,",
               "                      xcha307,xcha308,xcha308a,xcha308b,xcha308c,",
               "                      xcha308d,xcha308e,xcha308f,xcha308g,xcha308h,",
               "                      xcha309,xcha310,xcha310a,xcha310b,xcha310c,",
               "                      xcha310d,xcha310e,xcha310f,xcha310g,xcha310h,",
               "                      xcha901,xcha902,xcha902a,xcha902b,xcha902c,",
               "                      xcha902d,xcha902e,xcha902f,xcha902g,xcha902h,",
               "                      xchatime) ",               
               " SELECT UNIQUE ",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",              
                "      '",g_xcat001,"',",g_yy,",",g_pp,",xcbt003,NVL(xcbt004,' '),",
                "      NVL(xcbt005,' '),sfaa010,' ',' ',sfaa028,",
                "      '",g_curr[p_seq].curr,"',",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      0,0,0,0,0,0,0,0,0,0,",
                "      ? ",
                #190411-00017#1 A mark-S
#                "  FROM sfaa_tmp,xcbt_t,s_axcp500_tmp ", 
#                " WHERE sfaa010 = imaa001 ",                           #料件
                #190411-00017#1 A mark-E
                #190411-00017#1 A add-S
                "  FROM sfaa_tmp,xcbt_t ",
                " WHERE EXISTS(SELECT 1 FROM s_axcp500_tmp WHERE sfaa010 = imaa001) ",
                #190411-00017#1 A add-E
                "   AND sfaadocno = xcbt003 ",
                "   AND xcbtent = ",g_enterprise,
                "   AND xcbt001 = ",g_yy,
                "   AND xcbt002 = ",g_pp,
                "   AND sfaa003 <> '3'  "                              #拆件工单 
   PREPARE s_axcp500_avg_wip_xcha_1_p FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xcha_1_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_xcha_1_p USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xcha_1_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     
   
   #取上期工單尚未結案的xchb_t資料，期末數值=本期期初數值
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcha_tmp a ",
               #190411-00017#1 A mark-S
#               "       USING ( SELECT xcha_t.* FROM xcha_t,sfaa_tmp ",
#               "                WHERE xchaent = sfaaent ",
#               "                  AND xcha006 = sfaadocno ",
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
               "       USING ( SELECT xcha_t.* FROM xcha_t ",
               "                WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchaent AND sfaadocno = xcha006) ",
               #190411-00017#1 A add-E
               "                  AND xchaent = ",g_enterprise,
               "                  AND xchald  = '",g_ld,"'",
               "                  AND xcha001 = '",p_seq,"'",
               "                  AND xcha003 = '",g_xcat001,"'",
               "                  AND xcha004 = ",g_last_yy,
               "                  AND xcha005 = ",g_last_pp,
               "                  AND (xcha901 <> 0 OR xcha902 <> 0 ) ",
               "             ) b ",
               "          ON ( a.xchaent = b.xchaent         ",
               "          AND  a.xchald  = b.xchald          ",
               "          AND  a.xcha001 = b.xcha001         ",
               "          AND  a.xcha002 = b.xcha002         ",
               "          AND  a.xcha003 = b.xcha003         ",
               "          AND  a.xcha004 = ",g_yy,      #170418-00026#1
               "          AND  a.xcha005 = ",g_pp,      #170418-00026#1               
               "          AND  a.xcha006 = b.xcha006         ",
               "          AND  a.xcha007 = b.xcha007         ",
               "          AND  a.xcha008 = b.xcha008 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcha101  = nvl(b.xcha901 ,0) ,   ",
               "                  a.xcha102  = nvl(b.xcha902 ,0) ,   ",
               "                  a.xcha102a = nvl(b.xcha902a,0) ,   ",
               "                  a.xcha102b = nvl(b.xcha902b,0) ,   ",
               "                  a.xcha102c = nvl(b.xcha902c,0) ,   ",
               "                  a.xcha102d = nvl(b.xcha902d,0) ,   ",
               "                  a.xcha102e = nvl(b.xcha902e,0) ,   ",
               "                  a.xcha102f = nvl(b.xcha902f,0) ,   ",
               "                  a.xcha102g = nvl(b.xcha902g,0) ,   ",
               "                  a.xcha102h = nvl(b.xcha902h,0) ,   ",
               "                  a.xcha901  = nvl(b.xcha901 ,0) ,   ",
               "                  a.xcha902  = nvl(b.xcha902 ,0) ,   ",
               "                  a.xcha902a = nvl(b.xcha902a,0) ,   ",
               "                  a.xcha902b = nvl(b.xcha902b,0) ,   ",
               "                  a.xcha902c = nvl(b.xcha902c,0) ,   ",
               "                  a.xcha902d = nvl(b.xcha902d,0) ,   ",
               "                  a.xcha902e = nvl(b.xcha902e,0) ,   ",
               "                  a.xcha902f = nvl(b.xcha902f,0) ,   ",
               "                  a.xcha902g = nvl(b.xcha902g,0) ,   ",
               "                  a.xcha902h = nvl(b.xcha902h,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xchaent,b.xchacomp,b.xchald, b.xcha001,b.xcha002,    ",
               "                     b.xcha003,",g_yy,",",g_pp,",b.xcha006,NVL(b.xcha007,' '),       ",
               "                     NVL(b.xcha008,' '),b.xcha009,b.xcha010,b.xcha011,b.xcha012,b.xcha013, ",
               "                     b.xcha901,b.xcha902,b.xcha902a,b.xcha902b,b.xcha902c,  ",    #101.期初
               "                     b.xcha902d,b.xcha902e,b.xcha902f,b.xcha902g,b.xcha902h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #203.上站转入                
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.良品转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.报废
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #305.当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.回收转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #309.差异转出
               "                     b.xcha901,b.xcha902,b.xcha902a,b.xcha902b,b.xcha902c,  ",    #901.期末结存
               "                     b.xcha902d,b.xcha902e,b.xcha902f,b.xcha902g,b.xcha902h,",
               "                     ? )                                         "                #最近成本计算时间
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xcha_1_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xcha_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_xcha_1_p1 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xcha_1_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   
   
   #如有開帳資料xcvv_t，以開帳的數值更新本期xchb_t
   #PGS(D)-00824 --- end ---
   
   #如有開帳資料xcvv_t，以開帳的數值更新本期xchb_t
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcha_tmp a   ",
               #190411-00017#1 A mark-S
#               "       USING ( SELECT xccv_t.* FROM xccv_t,sfaa_tmp ",
#               "                WHERE xccvent = sfaaent ",
#               "                  AND xccv006 = sfaadocno ",
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
               "       USING ( SELECT xccv_t.* FROM xccv_t ",
               "                WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xccvent AND sfaadocno = xccv006) ",
               #190411-00017#1 A add-E
               "                  AND xccvent = ",g_enterprise,
               "                  AND xccvld  = '",g_ld,"'",
               "                  AND xccv001 = '",p_seq,"'",
               "                  AND xccv003 = '",g_xcat001,"'",
               "                  AND xccv004 = ",g_last_yy,
               "                  AND xccv005 = ",g_last_pp,
               "                  AND xccv009 = 'DL+OH+SUB' ",
               "              ) b    ",
               "          ON ( a.xchaent = b.xccvent         ",
               "          AND  a.xchald  = b.xccvld          ",
               "          AND  a.xcha001 = b.xccv001         ",
               #"          AND  a.xcha002 = b.xccv002         ",   #210220-00018#1 mark
               "          AND  a.xcha003 = b.xccv003         ",
               "          AND  a.xcha006 = b.xccv006         ",
               "          AND  a.xcha007 = b.xccv007         ",
               "          AND  a.xcha008 = b.xccv008 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcha101  = nvl(b.xccv101 ,0)  ",
               "  WHEN NOT MATCHED THEN                      ",
               #"       INSERT VALUES(b.xccvent,b.xccvcomp,b.xccvld,b.xccv001,b.xccv002,     ",    #210220-00018#1 mark
               "       INSERT VALUES(b.xccvent,b.xccvcomp,b.xccvld,b.xccv001,' ',     ",           #210220-00018#1
               "                     b.xccv003,",g_yy,",",g_pp,",b.xccv006,NVL(b.xccv007,' '),       ",
               "                     NVL(b.xccv008,' '),b.xccv009,b.xccv010,b.xccv011,'','",g_curr[p_seq].curr,"',",
               "                     b.xccv101,0,0,0,0,0,0,0,0,0,                           ",    #101.期初
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #203.上站转入               
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.良品转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.报废
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #305.当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.回收转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #309.差异转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #901.期末结存
               "                     ?  )                                        "                #最近成本计算时间
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xcha_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xcha_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_xcha_1_p2 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xcha_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #以工單+作業編號+作業序xchb_t的期初金額合計更新xcha的期初金額
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcha_tmp a   ",
#               "       USING ( SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,SUM(xchb102) xchb102,SUM(xchb102a) xchb102a, ", #190411-00017#1 F mark
               "       USING ( SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,' ' xchb002,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,SUM(xchb102) xchb102,SUM(xchb102a) xchb102a, ", #190411-00017#1 F mod
               "                      SUM(xchb102b) xchb102b,SUM(xchb102c) xchb102c,SUM(xchb102d) xchb102d,SUM(xchb102e) xchb102e,",
               "                      SUM(xchb102f) xchb102f,SUM(xchb102g) xchb102g,SUM(xchb102h) xchb102h,sfaa010 ",#171115-00033#1 add sfaa010
               "                 FROM xchb_tmp ",
               "                 LEFT OUTER JOIN sfaa_tmp ON sfaadocno = xchb006 ",  #171115-00033#1 add
               "                WHERE xchbent = ",g_enterprise,
               "                  AND xchbld  = '",g_ld,"'",
               "                  AND xchb001 = '",p_seq,"'",
               "                  AND xchb003 = '",g_xcat001,"'",
               "                  AND xchb004 = ",g_yy,
               "                  AND xchb005 = ",g_pp,
#               "                GROUP BY xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,sfaa010 ",#171115-00033#1 add sfaa010  #190411-00017#1 F mark
               "                GROUP BY xchbent,xchbcomp,xchbld,xchb001,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,sfaa010 ",  #190411-00017#1 F mod
               "              ) b    ",
               "          ON ( a.xchaent = b.xchbent         ",        
               "          AND  a.xchald  = b.xchbld          ",
               "          AND  a.xcha001 = b.xchb001         ",
               #"          AND  a.xcha002 = b.xchb002         ",  #mark by lixiang 20170221
#               "          AND  nvl(a.xcha002,' ') = nvl(b.xchb002,' ')  ",  #add by lixiang 20170221  #190411-00017#1 F mark
               "          AND  a.xcha003 = b.xchb003         ",
               "          AND  a.xcha004 = b.xchb004         ",
               "          AND  a.xcha005 = b.xchb005         ",
               "          AND  a.xcha006 = b.xchb006         ",
               #"          AND  a.xcha007 = b.xchb007         ",     #mark by lixiang 20170221
               #"          AND  a.xcha008 = b.xchb008 )       ",     #mark by lixiang 20170221
               "          AND  nvl(a.xcha007,' ') = nvl(b.xchb007,' ')         ",     #add by lixiang 20170221
               "          AND  nvl(a.xcha008,' ') = nvl(b.xchb008,' ') )       ",     #add by lixiang 20170221
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcha102  = nvl(b.xchb102 ,0) ,   ",
               "                  a.xcha102a = nvl(b.xchb102a,0) ,   ",
               "                  a.xcha102b = nvl(b.xchb102b,0) ,   ",
               "                  a.xcha102c = nvl(b.xchb102c,0) ,   ",
               "                  a.xcha102d = nvl(b.xchb102d,0) ,   ",
               "                  a.xcha102e = nvl(b.xchb102e,0) ,   ",
               "                  a.xcha102f = nvl(b.xchb102f,0) ,   ",
               "                  a.xcha102g = nvl(b.xchb102g,0) ,   ",
               "                  a.xcha102h = nvl(b.xchb102h,0) ,   ",
               "                  a.xcha902  = nvl(b.xchb102 ,0) ,   ",
               "                  a.xcha902a = nvl(b.xchb102a,0) ,   ",
               "                  a.xcha902b = nvl(b.xchb102b,0) ,   ",
               "                  a.xcha902c = nvl(b.xchb102c,0) ,   ",
               "                  a.xcha902d = nvl(b.xchb102d,0) ,   ",
               "                  a.xcha902e = nvl(b.xchb102e,0) ,   ",
               "                  a.xcha902f = nvl(b.xchb102f,0) ,   ",
               "                  a.xcha902g = nvl(b.xchb102g,0) ,   ",
               "                  a.xcha902h = nvl(b.xchb102h,0)     ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xchbent,b.xchbcomp,b.xchbld,b.xchb001,b.xchb002,     ",
               "                     b.xchb003,b.xchb004,b.xchb005,b.xchb006,NVL(b.xchb007,' '),       ",
               #"                     NVL(b.xchb008,' '),'','','','','',",           #171115-00033#1 mark
               "                     NVL(b.xchb008,' '),b.sfaa010,'','','','',",    #171115-00033#1 add
               "                     0,b.xchb102,b.xchb102a,b.xchb102b,b.xchb102c,  ",            #101.期初
               "                     b.xchb102d,b.xchb102e,b.xchb102f,b.xchb102g,b.xchb102h,",
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #201.本期投入
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #203.上站转入              
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #301.良品转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #303.报废
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #305.当站下线
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #307.回收转出
               "                     0,0,0,0,0,0,0,0,0,0,                                   ",    #309.差异转出
               "                     0,b.xchb102,b.xchb102a,b.xchb102b,b.xchb102c,  ",            #901.期末结存
               "                     b.xchb102d,b.xchb102e,b.xchb102f,b.xchb102g,b.xchb102h,",
               "                     ?  )                                        "                #最近成本计算时间
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xcha_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xcha_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_xcha_1_p3 USING l_date
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xcha_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 
   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---
   
   #180926-00040#1 mod-S
   #首站的投入数量=上站转入量
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcha_tmp a   ",
               "       USING ( SELECT DISTINCT xcbtent,xcbt001,xcbt002,xcbt003,xcbt004,",
               #"                               xcbt005,xcbt009,xcbt010,xcbt011,xcbt012,xcbt013,sfcb007 ", #190103-00004#1 mark
               "                               xcbt005,SUM(xcbt009) xcbt009,SUM(xcbt010) xcbt010,SUM(xcbt011) xcbt011,SUM(xcbt012) xcbt012,SUM(xcbt013) xcbt013,sfcb007 ", #190103-00004#1 add
               #"                 FROM xcbt_t LEFT OUTER JOIN sfcb_t ON sfcbent = xcbtent AND sfcbdocno = xcbt003 AND sfcb003 = xcbt004 AND sfcb004 = xcbt005 ",  #190110-00065#1 mark
               "                 FROM xcbt_t LEFT OUTER JOIN sfcb_t ON sfcbent = xcbtent AND sfcbdocno = xcbt003 AND sfcb003 = xcbt004 AND sfcb004 = xcbt005 AND sfcb001=0 ",  #190110-00065#1
               "                WHERE xcbtent = ",g_enterprise,
               "                  AND xcbt001 = ",g_yy,
               "                  AND xcbt002 = ",g_pp,
               "              GROUP BY xcbtent,xcbt001,xcbt002,xcbt003,xcbt004,xcbt005,sfcb007",    #190103-00004#1
               "              ) b    ",
               "          ON ( a.xchaent = b.xcbtent         ",
               "          AND  a.xcha004 = b.xcbt001         ",
               "          AND  a.xcha005 = b.xcbt002         ",
               "          AND  a.xcha006 = b.xcbt003         ",
               "          AND  a.xcha007 = b.xcbt004         ",
               "          AND  a.xcha008 = b.xcbt005 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcha201  = CASE WHEN b.sfcb007 = 'INIT' THEN NVL(b.xcbt009,0) ELSE 0 END ,  ",     #本期投入数量
               "                  a.xcha203  = CASE WHEN b.sfcb007 = 'INIT' THEN 0 ELSE NVL(b.xcbt009,0) END ,  ",     #上站转入数量
               "                  a.xcha301  = nvl(b.xcbt010,0)*-1 ,   ",     #良品转出数量
               "                  a.xcha303  = nvl(b.xcbt011,0)*-1 ,   ",     #报废转出数量
               "                  a.xcha307  = nvl(b.xcbt012,0)*-1 ,   ",     #回收转出数量
               "                  a.xcha305  = nvl(b.xcbt013,0)*-1     "      #当站下线数量
   #PGS(D)-00824 --- end ---
   
   #180926-00040#1 mod-E
   #把xcha_t的各數量也從xcbt_t直接抓取
   #180926-00040#1 mark-S
#   LET g_sql = " MERGE INTO xcha_tmp a   ",
#               "       USING ( SELECT DISTINCT xcbtent,xcbt001,xcbt002,xcbt003,xcbt004,",
#               "                               xcbt005,xcbt009,xcbt010,xcbt011,xcbt012,xcbt013 ",
#               "                 FROM xcbt_t ",
#               "                WHERE xcbtent = ",g_enterprise,
#               "                  AND xcbt001 = ",g_yy,
#               "                  AND xcbt002 = ",g_pp,
#               "              ) b    ",
#               "          ON ( a.xchaent = b.xcbtent         ",
#               "          AND  a.xcha004 = b.xcbt001         ",
#               "          AND  a.xcha005 = b.xcbt002         ",
#               "          AND  a.xcha006 = b.xcbt003         ",
#               "          AND  a.xcha007 = b.xcbt004         ",
#               "          AND  a.xcha008 = b.xcbt005 )       ",
#               "  WHEN MATCHED THEN                          ",
#               "       UPDATE SET a.xcha203  = nvl(b.xcbt009,0) ,   ",     #上站转入数量
#               "                  a.xcha301  = nvl(b.xcbt010,0)*-1 ,   ",     #良品转出数量
#               "                  a.xcha303  = nvl(b.xcbt011,0)*-1 ,   ",     #报废转出数量
#               "                  a.xcha307  = nvl(b.xcbt012,0)*-1 ,   ",     #回收转出数量
#               "                  a.xcha305  = nvl(b.xcbt013,0)*-1     "      #当站下线数量
   #180926-00040#1 mark-E
   PREPARE s_axcp500_avg_wip_xcha_1_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xcha_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_xcha_1_p4
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xcha_1_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    

   #190403-00052#1---add---s
   #因为axcp163中加入了群组替代的逻辑,导致部分站别的上站转入数量不一定等于其上站良品的转出数量
   #所以以axcq163的转出站做分组求和去更新其作为上站转入时的上站转入数量统一改成抓取上站的良品转出数量SUM
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcha_tmp a   ",
               "       USING ( SELECT DISTINCT xcbtent,xcbt001,xcbt002,xcbt003,xcbt006,",
               "                               xcbt007,SUM(xcbt010) xcbt010",
               "                 FROM xcbt_t ",
               "                WHERE xcbtent = ",g_enterprise,
               "                  AND xcbt001 = ",g_yy,
               "                  AND xcbt002 = ",g_pp,
               "              GROUP BY xcbtent,xcbt001,xcbt002,xcbt003,xcbt006,xcbt007 ",
               "              ) b    ",
               "          ON ( a.xchaent = b.xcbtent         ",
               "          AND  a.xcha004 = b.xcbt001         ",
               "          AND  a.xcha005 = b.xcbt002         ",
               "          AND  a.xcha006 = b.xcbt003         ",
               "          AND  a.xcha007 = b.xcbt006         ",
               "          AND  a.xcha008 = b.xcbt007 )       ",
               "  WHEN MATCHED THEN                          ",
               "       UPDATE SET a.xcha203  = NVL(b.xcbt010,0) "     #上站转入数量
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_xcha_1_p41 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xcha_1_p41"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF

   EXECUTE s_axcp500_avg_wip_xcha_1_p41
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xcha_1_p41"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #190403-00052#1---add---e

   #xcha102,xcha902进行取位                                                                                                                 
   CASE g_round_type                                                                                                                          
        WHEN '1'   #四舍五入                                                                                                                  
             LET g_sql = "UPDATE xcha_tmp SET xcha102  = round(xcha102 ,? ), xcha102a = round(xcha102a,? ), xcha102b = round(xcha102b,? ), ",
                         "                    xcha102c = round(xcha102c,? ), xcha102d = round(xcha102d,? ), ",                               
                         "                    xcha102e = round(xcha102e,? ), xcha102f = round(xcha102f,? ), ",                               
                         "                    xcha102g = round(xcha102g,? ), xcha102h = round(xcha102h,? ), ",
                         "                    xcha902  = round(xcha902 ,? ), xcha902a = round(xcha902a,? ), xcha902b = round(xcha902b,? ), ",
                         "                    xcha902c = round(xcha902c,? ), xcha902d = round(xcha902d,? ), ",                               
                         "                    xcha902e = round(xcha902e,? ), xcha902f = round(xcha902f,? ), ",                               
                         "                    xcha902g = round(xcha902g,? ), xcha902h = round(xcha902h,? )  ",                          
                         " WHERE xcha001 = '",p_seq,"'"
                                                                                                                                      
        WHEN '3'   #无条件截位                                                                                                                
             LET g_sql = "UPDATE xcha_tmp SET xcha102  = trunc(xcha102 ,? ), xcha102a = trunc(xcha102a,? ), xcha102b = trunc(xcha102b,? ), ",
                         "                    xcha102c = trunc(xcha102c,? ), xcha102d = trunc(xcha102d,? ), ",                               
                         "                    xcha102e = trunc(xcha102e,? ), xcha102f = trunc(xcha102f,? ), ",                               
                         "                    xcha102g = trunc(xcha102g,? ), xcha102h = trunc(xcha102h,? ), ",
						       "                    xcha902  = trunc(xcha902 ,? ), xcha902a = trunc(xcha902a,? ), xcha902b = trunc(xcha902b,? ), ",
                         "                    xcha902c = trunc(xcha902c,? ), xcha902d = trunc(xcha902d,? ), ",                               
                         "                    xcha902e = trunc(xcha902e,? ), xcha902f = trunc(xcha902f,? ), ",                               
                         "                    xcha902g = trunc(xcha902g,? ), xcha902h = trunc(xcha902h,? )  ",                         
                         " WHERE xcha001 = '",p_seq,"'"                
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcha_tmp SET xcha102  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcha102,?) ",
                         "                                                          ELSE ROUND(xcha102,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcha102,?)",
                         "                                END ),",
                         "                    xcha102a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha102a,?) ",
                         "                                                         ELSE ROUND(xcha102a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha102a,?)",
                         "                                END ),",
                         "                    xcha102b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha102b,?) ",
                         "                                                         ELSE ROUND(xcha102b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha102b,?)",
                         "                                END ),",
                         "                    xcha102c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha102c,?) ",
                         "                                                         ELSE ROUND(xcha102c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha102c,?)",
                         "                                END ),",
                         "                    xcha102d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha102d,?) ",
                         "                                                         ELSE ROUND(xcha102d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha102d,?)",
                         "                                END ),",
                         "                    xcha102e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha102e,?) ",
                         "                                                         ELSE ROUND(xcha102e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha102e,?)",
                         "                                END ),",
                         "                    xcha102f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha102f,?) ",
                         "                                                         ELSE ROUND(xcha102f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha102f,?)",
                         "                                END ),",
                         "                    xcha102g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha102g,?) ",
                         "                                                         ELSE ROUND(xcha102g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha102g,?)",
                         "                                END ),",
                         "                    xcha102h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha102h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha102h,?) ",
                         "                                                         ELSE ROUND(xcha102h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha102h,?)",
                         "                                END ),", 
                         "                    xcha902  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcha902,?) ",
                         "                                                          ELSE ROUND(xcha902,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcha902,?)",
                         "                                END ),",
                         "                    xcha902a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha902a,?) ",
                         "                                                         ELSE ROUND(xcha902a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha902a,?)",
                         "                                END ),",
                         "                    xcha902b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha902b,?) ",
                         "                                                         ELSE ROUND(xcha902b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha902b,?)",
                         "                                END ),",
                         "                    xcha902c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha902c,?) ",
                         "                                                         ELSE ROUND(xcha902c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha902c,?)",
                         "                                END ),",
                         "                    xcha902d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha902d,?) ",
                         "                                                         ELSE ROUND(xcha902d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha902d,?)",
                         "                                END ),",
                         "                    xcha902e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha902e,?) ",
                         "                                                         ELSE ROUND(xcha902e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha902e,?)",
                         "                                END ),",
                         "                    xcha902f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha902f,?) ",
                         "                                                         ELSE ROUND(xcha902f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha902f,?)",
                         "                                END ),",
                         "                    xcha902g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha902g,?) ",
                         "                                                         ELSE ROUND(xcha902g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha902g,?)",
                         "                                END ),",
                         "                    xcha902h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcha902h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcha902h,?) ",
                         "                                                         ELSE ROUND(xcha902h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcha902h,?)",
                         "                                END ) ",                                     
                         " WHERE xcha001 = '",p_seq,"'" 
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xcha_tmp SET xcha102  = ceil(xcha102 *power(10,?))/power(10,?),",
                         "                    xcha102a = ceil(xcha102a*power(10,?))/power(10,?),",
                         "                    xcha102b = ceil(xcha102b*power(10,?))/power(10,?),",
                         "                    xcha102c = ceil(xcha102c*power(10,?))/power(10,?),",
                         "                    xcha102d = ceil(xcha102d*power(10,?))/power(10,?),",
                         "                    xcha102e = ceil(xcha102e*power(10,?))/power(10,?),",
                         "                    xcha102f = ceil(xcha102f*power(10,?))/power(10,?),",
                         "                    xcha102g = ceil(xcha102g*power(10,?))/power(10,?),",
                         "                    xcha102h = ceil(xcha102h*power(10,?))/power(10,?),",   
                         "                    xcha902  = ceil(xcha902 *power(10,?))/power(10,?),",
                         "                    xcha902a = ceil(xcha902a*power(10,?))/power(10,?),",
                         "                    xcha902b = ceil(xcha902b*power(10,?))/power(10,?),",
                         "                    xcha902c = ceil(xcha902c*power(10,?))/power(10,?),",
                         "                    xcha902d = ceil(xcha902d*power(10,?))/power(10,?),",
                         "                    xcha902e = ceil(xcha902e*power(10,?))/power(10,?),",
                         "                    xcha902f = ceil(xcha902f*power(10,?))/power(10,?),",
                         "                    xcha902g = ceil(xcha902g*power(10,?))/power(10,?),",
                         "                    xcha902h = ceil(xcha902h*power(10,?))/power(10,?) ",                      
                         " WHERE xcha001 = '",p_seq,"'"                                                         
        #180802-00015#1 add-E                                                                          
                                                                                                                                   
   END CASE                                                                                                                                  
   PREPARE s_axcp500_avg_wip_xcha_1_p5 FROM g_sql                                                                                               
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xcha_1_p5"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                                 
#     RETURN r_success                                                                                                                        
   END IF                                                                                                                                     
                                                                   
   #180802-00015#1 mark-S                                                                                                                    
#   EXECUTE s_axcp500_avg_wip_xcha_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,               
#                                             g_curr[p_seq].digit2              
   #180802-00015#1 mark-E 
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg_wip_xcha_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg_wip_xcha_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg_wip_xcha_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg_wip_xcha_1_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102a
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102b
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102c
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102d
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102e
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102f
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102g
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha102h
                                                   
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha902
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha902a
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha902b
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha902c
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha902d
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha902e
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha902f
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xcha902g
                                                   g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xcha902h
   END CASE
   #180802-00015#1 add-E                                                    
   IF SQLCA.sqlcode THEN                                                                                                                      
      INITIALIZE g_errparam TO NULL                                                                                                           
      LET g_errparam.code   = SQLCA.sqlcode                                                                                                   
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_xcha_1_p5"                                                                             
      LET g_errparam.popup  = TRUE                                                                                                            
      CALL cl_err()                                                                                                                                                                              
#     RETURN r_success                                                                                                                        
   END IF   

   LET r_success = TRUE
   RETURN r_success 
END FUNCTION

################################################################################
# Descriptions...: xchb_t,xcha_t转出转入处理
# Memo...........:
# Usage..........: CALL s_axcp500_avg_wip_process(p_flag,p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_flag         重工否
#                : p_xcbb006      成本域
#                : p_seq          记帐本位币顺序
# Return code....: r_success      成功否标识符
# Date & Author..: 2016/11/25 By 02295
# Modify.........: #161121-00018#5
################################################################################
PUBLIC FUNCTION s_axcp500_avg_wip_process(p_flag,p_xcbb006,p_seq)
DEFINE p_flag          LIKE type_t.chr1
DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
DEFINE p_seq           LIKE xccc_t.xccc001
DEFINE r_success       LIKE type_t.num5
DEFINE l_success       LIKE type_t.num5
DEFINE l_date          DATETIME YEAR TO SECOND
DEFINE l_xcbt008       LIKE xcbt_t.xcbt008
DEFINE l_cycle         LIKE xcbt_t.xcbt008
DEFINE l_date2         LIKE type_t.dat  
DEFINE l_time          DATETIME YEAR TO SECOND   #add by lixiang 20170228

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE
   LET l_date = cl_get_today()
   LET l_date2 = g_edate + 1
   LET l_time = cl_get_current() #add by lixiang 20170228

   IF cl_db_generate_analyze("xchb_tmp") THEN END IF #170407-00007#1
   IF cl_db_generate_analyze("xcha_tmp") THEN END IF #170407-00007#1
   
   #更新xchb_t的本期投入數量與金額
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp ",
               "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel,",
               "                             SUM(xcck201 ) xcck201, SUM(xcck202 ) xcck202,  ",
               "                             SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
               "                             SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
               "                             SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
               "                             SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",               
               "                FROM ( SELECT DISTINCT xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
               "                             decode(sfba003,NULL,'END',' ','END',sfba003) sfba003,",
               "                             decode(sfba003,NULL,'0',' ','0',sfba004) sfba004,clevel,   ", 
               "                             SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                             SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                             SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                             SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                             SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h  ",
               #190103-00004#1---mark---s
               ##180808-00019#1---mod----(S)
               ###180727-00061#1---mod---s
               ###"                        FROM xcck_tmp,sfaa_tmp,sfac_tmp2,sfba_tmp     ",   
               ##"                         FROM xcck_tmp ", 
               ##"                              LEFT JOIN sfba_tmp ON xcck047 = sfbadocno AND xcck010 = sfba006 ",
               ##"                              ,sfaa_tmp,sfac_tmp2 ",               
               ##"                        WHERE xcck020 = '302' AND xcck012 <> 'asft312' ",  #生产发料，指元件
               ###180727-00061#1---mod---s     
               #"                        FROM xcck_tmp,sfaa_tmp,sfac_tmp2,sfba_tmp,sfdc_tmp,sfdd_tmp ", 
               #"                       WHERE sfdcent = sfddent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq  ", 
               #"                         AND sfaaent = sfbaent AND sfaadocno = sfbadocno ",
               #"                         AND sfddent = xcckent ",           
               #"                         AND sfdddocno = xcck006 AND sfddseq = xcck007  AND sfddseq1 = xcck008 ",  
               #"                         AND sfbaent = sfdcent AND sfbadocno = sfdc001  AND sfbaseq = sfdc002  ",
               #"                         AND xcck020 = '302' AND xcck012 <> 'asft312' ",  #生产发料，指元件                
               ##180808-00019#1---mod----(e)
               #190103-00004#1---mark---e
               #190103-00004#1---add---s
               "                        FROM xcck_tmp ",
               "                             LEFT JOIN sfdd_t ON sfddent = xcckent AND sfdddocno = xcck006 AND sfddseq = xcck007  AND sfddseq1 = xcck008 ",
               "                             LEFT JOIN sfdc_t ON sfdcent = sfddent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq ",
               "                             LEFT JOIN sfba_t ON sfbaent = sfdcent AND sfbadocno = sfdc001  AND sfbaseq = sfdc002 ",
               "                             ,sfaa_tmp,sfac_tmp2",                 
               "                       WHERE xcck020 = '302' AND xcck012 <> 'asft312' ",  #生产发料，指元件
               #190103-00004#1---add---e
               "                          AND xcckent = sfaaent ",  
               "                          AND xcck047 = sfaadocno ",
               #"                          AND xcck047 = sfbadocno ",   #180727-00061#1 mark
               #"                          AND xcck010 = sfba006 ",    #170629-00004#1 remark  #180727-00061#1 mark             
               "                          AND sfaa042 = ? ",      #重工否
               "                          AND sfaaent = ",g_enterprise,  
               "                          AND sfaadocno=sfacdocno ",    #一张工单的主件即使多特征，也只指定一个成本阶
               "                          AND xcck001 = '",p_seq,"'",               
               "                        GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel) tsed",
               "                        GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel ",
               "                ) b ",
               "          ON ( xchbent = ",g_enterprise,
               "         AND   xchbld  = '",g_ld,"'",
               "         AND   xchb001 = '",p_seq,"'",
               "         AND   xchb002 = b.xcck002  ",
               "         AND   xchb003 = '",g_xcat001,"'",
               "         AND   xchb004 = ",g_yy,
               "         AND   xchb005 = ",g_pp,
               "         AND   xchb006 = b.xcck047  ",       #工单
               "         AND   xchb007 = b.sfba003  ",       #作业编号
               "         AND   xchb008 = b.sfba004  ",       #作业序
               "         AND   xchb009 = b.xcck010  ",       #料
               "         AND   xchb010 = b.xcck011  ",       #特征
               "         AND   xchb011 = b.xcck017  ",       #批号
               "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到本期投入的情况
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xchb201  = nvl(b.xcck201 ,0) ,  ",
               "                xchb202  = nvl(b.xcck202 ,0) ,  ",
               "                xchb202a = nvl(b.xcck202a,0) ,  ",
               "                xchb202b = nvl(b.xcck202b,0) ,  ",
               "                xchb202c = nvl(b.xcck202c,0) ,  ",
               "                xchb202d = nvl(b.xcck202d,0) ,  ",
               "                xchb202e = nvl(b.xcck202e,0) ,  ",
               "                xchb202f = nvl(b.xcck202f,0) ,  ",
               "                xchb202g = nvl(b.xcck202g,0) ,  ",
               "                xchb202h = nvl(b.xcck202h,0)    ",
               "          WHERE (xchb007 = xchb014 AND xchb008 = xchb015)"               
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_process_p1 USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF   

   #更新 xchb207/xchb208 一般退料  
   #更新 xchb207/xchb208 一般退料
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp ",
               "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel,   ", 
               "                     SUM(xcck201 ) xcck201, SUM(xcck202) xcck202,  ",
               "                     SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
               "                     SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
               "                     SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
               "                     SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",
               "               FROM ( SELECT DISTINCT xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
               "                     decode(sfba003,NULL,'END',' ','END',sfba003) sfba003,",
               "                     decode(sfba004,NULL,'0',' ','0',sfba004) sfba004,clevel,   ", 
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h  ",
               #190103-00004#1---mark---s
               ##180808-00019#1---mod----(S)
               ###180727-00061#1---mod---s
               ###"               FROM xcck_tmp,sfaa_tmp,sfac_tmp2,sfba_tmp     ",   
               ##"                FROM xcck_tmp ", 
               ##"                     LEFT JOIN sfba_tmp ON xcck047 = sfbadocno AND xcck010 = sfba006 ",
               ##"                     ,sfaa_tmp,sfac_tmp2 ",               
               ##180727-00061#1---mod---s                
               ##"                WHERE (xcck020 = '303' AND xcck012 <> 'asft322' OR ",
               ##"                       xcck020 = '114' OR xcck020 = '107') ",
               #"                 FROM xcck_tmp,sfaa_tmp,sfac_tmp2,sfba_tmp,sfdc_tmp,sfdd_tmp ", 
               #"                WHERE sfdcent = sfddent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq  ", 
               #"                  AND sfaaent = sfbaent AND sfaadocno = sfbadocno ",
               #"                  AND sfddent = xcckent ",           
               #"                  AND sfdddocno = xcck006 AND sfddseq = xcck007  AND sfddseq1 = xcck008 ",  
               #"                  AND sfbaent = sfdcent AND sfbadocno = sfdc001  AND sfbaseq = sfdc002  ",               
               #"                  AND ((xcck020 = '303' AND xcck012 <> 'asft322') OR ",
               #"                        xcck020 = '114' OR xcck020 = '107') ",
               ##180808-00019#1---mod----(E)
               #190103-00004#1---mark---e
               #190103-00004#1---add---s
               "                 FROM xcck_tmp ",
               "                      LEFT JOIN sfdd_t ON sfddent = xcckent AND sfdddocno = xcck006 AND sfddseq = xcck007  AND sfddseq1 = xcck008 ",
               "                      LEFT JOIN sfdc_t ON sfdcent = sfddent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq ",
               "                      LEFT JOIN sfba_t ON sfbaent = sfdcent AND sfbadocno = sfdc001  AND sfbaseq = sfdc002 ",
               "                      ,sfaa_tmp,sfac_tmp2",               
               "                WHERE ((xcck020 = '303' AND xcck012 <> 'asft322') OR ",
               "                        xcck020 = '114' OR xcck020 = '107') ",
               #190103-00004#1---add---e               
               "                  AND xcckent = sfaaent ",  
               "                  AND xcck047 = sfaadocno ",
               #"                  AND xcck047 = sfbadocno ",        #180727-00061#1 mark        
               #"                  AND xcck010 = sfba006 ",    #170629-00004#1 remark   #180727-00061#1 mark          
               "                  AND sfaa042 = ? ",      #重工否
               "                  AND sfaaent = ",g_enterprise,  
               "                  AND sfaadocno=sfacdocno ",    #一张工单的主件即使多特征，也只指定一个成本阶
               "                  AND xcck001 = '",p_seq,"'",               
               "                GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel) tsed",
               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel ",
               "                ) b ",
               "          ON ( xchbent = ",g_enterprise,
               "         AND   xchbld  = '",g_ld,"'",
               "         AND   xchb001 = '",p_seq,"'",
               "         AND   xchb002 = b.xcck002  ",
               "         AND   xchb003 = '",g_xcat001,"'",
               "         AND   xchb004 = ",g_yy,
               "         AND   xchb005 = ",g_pp,
               "         AND   xchb006 = b.xcck047  ",       #作业编号
               "         AND   xchb007 = b.sfba003  ",       #作业序
               "         AND   xchb008 = b.sfba004  ",       #工单
               "         AND   xchb009 = b.xcck010  ",       #料
               "         AND   xchb010 = b.xcck011  ",       #特征
               "         AND   xchb011 = b.xcck017  ",       #批号
               "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到本期投入的情况
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xchb207  = nvl(b.xcck201 ,0) ,  ",
               "                xchb208  = nvl(b.xcck202 ,0) ,  ",
               "                xchb208a = nvl(b.xcck202a,0) ,  ",
               "                xchb208b = nvl(b.xcck202b,0) ,  ",
               "                xchb208c = nvl(b.xcck202c,0) ,  ",
               "                xchb208d = nvl(b.xcck202d,0) ,  ",
               "                xchb208e = nvl(b.xcck202e,0) ,  ",
               "                xchb208f = nvl(b.xcck202f,0) ,  ",
               "                xchb208g = nvl(b.xcck202g,0) ,  ",
               "                xchb208h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p2 FROM g_sql           
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_process_p2  USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   
   #更新 xchb209/xchb210 超领
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp ",
               "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel,   ", 
               "                     SUM(xcck201 ) xcck201, SUM(xcck202) xcck202,  ",
               "                     SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
               "                     SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
               "                     SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
               "                     SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",   
               "               FROM ( SELECT DISTINCT xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
               "                     decode(sfba003,NULL,'END',' ','END',sfba003) sfba003,",
               "                     decode(sfba004,NULL,'0',' ','0',sfba004) sfba004,clevel,   ",                
               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck202*xcck009 *-1) xcck202,  ",
               "                     SUM(xcck202a*xcck009*-1) xcck202a,SUM(xcck202b*xcck009*-1) xcck202b, ",
               "                     SUM(xcck202c*xcck009*-1) xcck202c,SUM(xcck202d*xcck009*-1) xcck202d, ",
               "                     SUM(xcck202e*xcck009*-1) xcck202e,SUM(xcck202f*xcck009*-1) xcck202f, ",
               "                     SUM(xcck202g*xcck009*-1) xcck202g,SUM(xcck202h*xcck009*-1) xcck202h  ",
               #190103-00004#1---mark---s
               ##180808-00019#1---mod----(S)
               ###180727-00061#1---mod---s
               ###"               FROM xcck_tmp,sfaa_tmp,sfac_tmp2,sfba_tmp     ",   
               ##"                FROM xcck_tmp ", 
               ##"                     LEFT JOIN sfba_tmp ON xcck047 = sfbadocno AND xcck010 = sfba006 ",
               ##"                     ,sfaa_tmp,sfac_tmp2 ",               
               ###180727-00061#1---mod---s                
               ##"                WHERE (xcck020 = '302' AND xcck012 = 'asft312' ",
               ##"                   OR  xcck020 = '303' AND xcck012 = 'asft322') ",
               #"               FROM xcck_tmp,sfaa_tmp,sfac_tmp2,sfba_tmp,sfdc_tmp,sfdd_tmp ", 
               #"              WHERE sfdcent = sfddent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq  ", 
               #"                AND sfaaent = sfbaent AND sfaadocno = sfbadocno ",
               #"                AND sfddent = xcckent ",           
               #"                AND sfdddocno = xcck006 AND sfddseq = xcck007  AND sfddseq1 = xcck008 ",  
               #"                AND sfbaent = sfdcent AND sfbadocno = sfdc001  AND sfbaseq = sfdc002  ",               
               #"                AND (  (xcck020 = '302' AND xcck012 = 'asft312') ",
               #"                    OR (xcck020 = '303' AND xcck012 = 'asft322')) ",
               ##180808-00019#1---mod----(E)
               #190103-00004#1---mark---e
               #190103-00004#1---add---s
               "                 FROM xcck_tmp ",
               "                      LEFT JOIN sfdd_t ON sfddent = xcckent AND sfdddocno = xcck006 AND sfddseq = xcck007  AND sfddseq1 = xcck008 ",
               "                      LEFT JOIN sfdc_t ON sfdcent = sfddent AND sfdcdocno = sfdddocno AND sfdcseq = sfddseq ",
               "                      LEFT JOIN sfba_t ON sfbaent = sfdcent AND sfbadocno = sfdc001  AND sfbaseq = sfdc002 ",
               "                      ,sfaa_tmp,sfac_tmp2",               
               "                WHERE ((xcck020 = '302' AND xcck012 = 'asft312') ",
               "                    OR (xcck020 = '303' AND xcck012 = 'asft322')) ",
               #190103-00004#1---add---e                 
               "                  AND xcckent = sfaaent ",  
               "                  AND xcck047 = sfaadocno ",
               #"                  AND xcck047 = sfbadocno ",  #180727-00061#1 mark
               #"                  AND xcck010 = sfba006 ",    #180727-00061#1 mark         
               "                  AND sfaa042 = ? ",      #重工否
               "                  AND sfaaent = ",g_enterprise,  
               "                  AND sfaadocno=sfacdocno ",    #一张工单的主件即使多特征，也只指定一个成本阶
               "                  AND xcck001 = '",p_seq,"'",               
               "                GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel) tsed",
               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel ",
               "                ) b ",
               "          ON ( xchbent = ",g_enterprise,
               "         AND   xchbld  = '",g_ld,"'",
               "         AND   xchb001 = '",p_seq,"'",
               "         AND   xchb002 = b.xcck002  ",
               "         AND   xchb003 = '",g_xcat001,"'",
               "         AND   xchb004 = ",g_yy,
               "         AND   xchb005 = ",g_pp,
               "         AND   xchb006 = b.xcck047  ",       #作业编号
               "         AND   xchb007 = b.sfba003  ",       #作业序
               "         AND   xchb008 = b.sfba004  ",       #工单
               "         AND   xchb009 = b.xcck010  ",       #料
               "         AND   xchb010 = b.xcck011  ",       #特征
               "         AND   xchb011 = b.xcck017  ",       #批号
               "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到本期投入的情况
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xchb209  = nvl(b.xcck201 ,0) ,  ",
               "                xchb210  = nvl(b.xcck202 ,0) ,  ",
               "                xchb210a = nvl(b.xcck202a,0) ,  ",
               "                xchb210b = nvl(b.xcck202b,0) ,  ",
               "                xchb210c = nvl(b.xcck202c,0) ,  ",
               "                xchb210d = nvl(b.xcck202d,0) ,  ",
               "                xchb210e = nvl(b.xcck202e,0) ,  ",
               "                xchb210f = nvl(b.xcck202f,0) ,  ",
               "                xchb210g = nvl(b.xcck202g,0) ,  ",
               "                xchb210h = nvl(b.xcck202h,0)    "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_process_p3  USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF

   #170618-00158#1--mark---s
#   #更新 xchb305/xchb306 当站下线
#   LET g_sql = " MERGE INTO xchb_tmp ",
#               #"       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel,   ",  #170618-00158#1 mark
#               "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel,   ",  #170618-00158#1 add               
#               "                     SUM(xcck201 ) xcck201, SUM(xcck202) xcck202,  ",
#               "                     SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
#               "                     SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
#               "                     SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
#               "                     SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",   
#               "               FROM ( SELECT DISTINCT xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
#               #"                     decode(sfba003,NULL,'END',' ','END',sfba003) sfba003,",       #170618-00158#1 mark
#               #"                     decode(sfba004,NULL,'0',' ','0',sfba004) sfba004,clevel,   ", #170618-00158#1 mark
#               "                     decode(sfha006,NULL,'END',' ','END',sfha006) sfha006,",       #170618-00158#1 add
#               "                     decode(sfha007,NULL,'0',' ','0',sfha007) sfha007,clevel,   ", #170618-00158#1 add
#               "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xccw202*xcck009 *-1) xcck202, ",
#               "                     SUM(xccw202a*xcck009*-1) xcck202a,SUM(xccw202b*xcck009*-1) xcck202b,",
#               "                     SUM(xccw202c*xcck009*-1) xcck202c,SUM(xccw202d*xcck009*-1) xcck202d,",
#               "                     SUM(xccw202e*xcck009*-1) xcck202e,SUM(xccw202f*xcck009*-1) xcck202f,",
#               "                     SUM(xccw202g*xcck009*-1) xcck202g,SUM(xccw202h*xcck009*-1) xcck202h",
#               #"                FROM xcck_tmp,sfaa_tmp,xccw_t,sfac_tmp2,sfba_tmp     ",     #170618-00158#1 mark
#               "                FROM xcck_tmp,sfaa_tmp,xccw_t,sfac_tmp2,sfha_t     ",     #170618-00158#1 add
#               "               WHERE xccwent = xcckent ",
#               "                 AND xccwld  = xcckld  ",
#               "                 AND xccw001 = xcck001 ",
#               "                 AND xccw002 = xcck002 ",
#               "                 AND xccw003 = xcck003 ",
#               "                 AND xccw004 = xcck004 ",
#               "                 AND xccw005 = xcck005 ",
#               "                 AND xccw006 = xcck006 ",
#               "                 AND xccw007 = xcck007 ",
#               "                 AND xccw008 = xcck008 ",
#               "                 AND xccw009 = xcck009 ",
#               #"                 AND xcck020 = '115' AND xcck055 IN ('3011','3012') ",  #170618-00158#1 mark
#               "                 AND xcck020 = '115' AND xcck055 IN ('213') ",  #170618-00158#1 add #当站下线的xcck055='213'
#               "                 AND xcckent = sfaaent ",  #add 150916
#               "                 AND xcck047 = sfaadocno ",
#               #"                 AND xcck047 = sfbadocno ",   #170618-00158#1 mark
#               "                 AND xcck047 = sfha004  AND xcckent=sfhaent  " , #170618-00158#1 add
#               #"                 AND xcck010 = sfba006 ",               
#               "                 AND sfaa042 = ? ",   
#               "                 AND sfaadocno=sfacdocno ",  #一张工单的主件即时多特征，也只指定一个成本阶
#               "                 AND xcck001 = '",p_seq,"'",               
#               #"                GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel) tsed",  #170618-00158#1 mark
#               "                GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel) tsed",  #170618-00158#1 add
#               #"                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfba003,sfba004,clevel ", #Mod zhangllc 150730 add clevel #170618-00158#1 mark
#               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel ", #Mod zhangllc 150730 add clevel #170618-00158#1 mark
#               "                ) b ",
#               "          ON ( xchbent = ",g_enterprise,
#               "         AND   xchbld  = '",g_ld,"'",
#               "         AND   xchb001 = '",p_seq,"'",
#               "         AND   xchb002 = b.xcck002  ",
#               "         AND   xchb003 = '",g_xcat001,"'",
#               "         AND   xchb004 = ",g_yy,
#               "         AND   xchb005 = ",g_pp,
#               "         AND   xchb006 = b.xcck047  ",       #工单
#               #"         AND   xchb007 = b.sfba003  ",       #作业编号  #170618-00158#1 mark
#               #"         AND   xchb008 = b.sfba004  ",       #作业序    #170618-00158#1 mark
#               "         AND   xchb007 = b.sfha006  ",       #作业编号  #170618-00158#1 add
#               "         AND   xchb008 = b.sfha007  ",       #作业序    #170618-00158#1 add
#               #"         AND   xchb009 = b.xcck010  ",       #料     #170618-00158#1 mark #当站下线写入的料号是T99999，不是元件料号
#               #"         AND   xchb010 = b.xcck011  ",       #特征   #170618-00158#1 mark
#               #"         AND   xchb011 = b.xcck017  ",       #批号   #170618-00158#1 mark
#               "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到            
#               "  WHEN MATCHED THEN    ",
#               "     UPDATE SET xchb305  = nvl(b.xcck201 ,0) * -1 ,  ",
#               "                xchb306  = nvl(b.xcck202 ,0) * -1 ,  ",
#               "                xchb306a = nvl(b.xcck202a,0) * -1 ,  ",
#               "                xchb306b = nvl(b.xcck202b,0) * -1 ,  ",
#               "                xchb306c = nvl(b.xcck202c,0) * -1 ,  ",
#               "                xchb306d = nvl(b.xcck202d,0) * -1 ,  ",
#               "                xchb306e = nvl(b.xcck202e,0) * -1 ,  ",
#               "                xchb306f = nvl(b.xcck202f,0) * -1 ,  ",
#               "                xchb306g = nvl(b.xcck202g,0) * -1 ,  ",
#               "                xchb306h = nvl(b.xcck202h,0) * -1    "     
#               
#   PREPARE s_axcp500_avg_wip_process_p4 FROM g_sql
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF  
#   
#   EXECUTE s_axcp500_avg_wip_process_p4 USING p_flag
#   IF SQLCA.sqlcode THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code   = SQLCA.sqlcode
#      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p4"
#      LET g_errparam.popup  = TRUE
#      CALL cl_err()
##     RETURN r_success
#   END IF   
   #170618-00158#1--mark---e


   #xcce210~xcce210h 金額取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = round(xchb202 ,? ), xchb202a = round(xchb202a,? ), xchb202b = round(xchb202b,? ), ",
                         "                    xchb202c = round(xchb202c,? ), xchb202d = round(xchb202d,? ), ",
                         "                    xchb202e = round(xchb202e,? ), xchb202f = round(xchb202f,? ), ",
                         "                    xchb202g = round(xchb202g,? ), xchb202h = round(xchb202h,? ), ",
                         "                    xchb208  = round(xchb208 ,? ), xchb208a = round(xchb208a,? ), xchb208b = round(xchb208b,? ), ",
                         "                    xchb208c = round(xchb208c,? ), xchb208d = round(xchb208d,? ), ",
                         "                    xchb208e = round(xchb208e,? ), xchb208f = round(xchb208f,? ), ",
                         "                    xchb208g = round(xchb208g,? ), xchb208h = round(xchb208h,? ), ", 
                         "                    xchb210  = round(xchb210 ,? ), xchb210a = round(xchb210a,? ), xchb210b = round(xchb210b,? ), ",
                         "                    xchb210c = round(xchb210c,? ), xchb210d = round(xchb210d,? ), ",
                         "                    xchb210e = round(xchb210e,? ), xchb210f = round(xchb210f,? ), ",
                         "                    xchb210g = round(xchb210g,? ), xchb210h = round(xchb210h,? ), ", 
                         "                    xchb306  = round(xchb306 ,? ), xchb306a = round(xchb306a,? ), xchb306b = round(xchb306b,? ), ",
                         "                    xchb306c = round(xchb306c,? ), xchb306d = round(xchb306d,? ), ",
                         "                    xchb306e = round(xchb306e,? ), xchb306f = round(xchb306f,? ), ",
                         "                    xchb306g = round(xchb306g,? ), xchb306h = round(xchb306h,? )  ",
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = trunc(xchb202 ,? ), xchb202a = trunc(xchb202a,? ), xchb202b = trunc(xchb202b,? ), ",
                         "                    xchb202c = trunc(xchb202c,? ), xchb202d = trunc(xchb202d,? ), ",
                         "                    xchb202e = trunc(xchb202e,? ), xchb202f = trunc(xchb202f,? ), ",
                         "                    xchb202g = trunc(xchb202g,? ), xchb202h = trunc(xchb202h,? ), ",
                         "                    xchb208  = trunc(xchb208 ,? ), xchb208a = trunc(xchb208a,? ), xchb208b = trunc(xchb208b,? ), ",
                         "                    xchb208c = trunc(xchb208c,? ), xchb208d = trunc(xchb208d,? ), ",
                         "                    xchb208e = trunc(xchb208e,? ), xchb208f = trunc(xchb208f,? ), ",
                         "                    xchb208g = trunc(xchb208g,? ), xchb208h = trunc(xchb208h,? ), ", 
                         "                    xchb210  = trunc(xchb210 ,? ), xchb210a = trunc(xchb210a,? ), xchb210b = trunc(xchb210b,? ), ",
                         "                    xchb210c = trunc(xchb210c,? ), xchb210d = trunc(xchb210d,? ), ",
                         "                    xchb210e = trunc(xchb210e,? ), xchb210f = trunc(xchb210f,? ), ",
                         "                    xchb210g = trunc(xchb210g,? ), xchb210h = trunc(xchb210h,? ), ", 
                         "                    xchb306  = trunc(xchb306 ,? ), xchb306a = trunc(xchb306a,? ), xchb306b = trunc(xchb306b,? ), ",
                         "                    xchb306c = trunc(xchb306c,? ), xchb306d = trunc(xchb306d,? ), ",
                         "                    xchb306e = trunc(xchb306e,? ), xchb306f = trunc(xchb306f,? ), ",
                         "                    xchb306g = trunc(xchb306g,? ), xchb306h = trunc(xchb306h,? )  ",
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"  
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb202,?) ",
                         "                                                          ELSE ROUND(xchb202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb202,?)",
                         "                                END ),",
                         "                    xchb202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202a,?) ",
                         "                                                         ELSE ROUND(xchb202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202a,?)",
                         "                                END ),",
                         "                    xchb202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202b,?) ",
                         "                                                         ELSE ROUND(xchb202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202b,?)",
                         "                                END ),",
                         "                    xchb202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202c,?) ",
                         "                                                         ELSE ROUND(xchb202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202c,?)",
                         "                                END ),",
                         "                    xchb202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202d,?) ",
                         "                                                         ELSE ROUND(xchb202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202d,?)",
                         "                                END ),",
                         "                    xchb202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202e,?) ",
                         "                                                         ELSE ROUND(xchb202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202e,?)",
                         "                                END ),",
                         "                    xchb202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202f,?) ",
                         "                                                         ELSE ROUND(xchb202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202f,?)",
                         "                                END ),",
                         "                    xchb202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202g,?) ",
                         "                                                         ELSE ROUND(xchb202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202g,?)",
                         "                                END ),",
                         "                    xchb202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb202h,?) ",
                         "                                                         ELSE ROUND(xchb202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb202h,?)",
                         "                                END ),",   
                         "                    xchb208  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb208,?) ",
                         "                                                          ELSE ROUND(xchb208,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb208,?)",
                         "                                END ),",
                         "                    xchb208a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb208a,?) ",
                         "                                                         ELSE ROUND(xchb208a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb208a,?)",
                         "                                END ),",
                         "                    xchb208b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb208b,?) ",
                         "                                                         ELSE ROUND(xchb208b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb208b,?)",
                         "                                END ),",
                         "                    xchb208c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb208c,?) ",
                         "                                                         ELSE ROUND(xchb208c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb208c,?)",
                         "                                END ),",
                         "                    xchb208d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb208d,?) ",
                         "                                                         ELSE ROUND(xchb208d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb208d,?)",
                         "                                END ),",
                         "                    xchb208e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb208e,?) ",
                         "                                                         ELSE ROUND(xchb208e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb208e,?)",
                         "                                END ),",
                         "                    xchb208f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb208f,?) ",
                         "                                                         ELSE ROUND(xchb208f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb208f,?)",
                         "                                END ),",
                         "                    xchb208g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb208g,?) ",
                         "                                                         ELSE ROUND(xchb208g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb208g,?)",
                         "                                END ),",
                         "                    xchb208h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb208h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb208h,?) ",
                         "                                                         ELSE ROUND(xchb208h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb208h,?)",
                         "                                END ),",  
                         "                    xchb210  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb210,?) ",
                         "                                                          ELSE ROUND(xchb210,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb210,?)",
                         "                                END ),",
                         "                    xchb210a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb210a,?) ",
                         "                                                         ELSE ROUND(xchb210a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb210a,?)",
                         "                                END ),",
                         "                    xchb210b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb210b,?) ",
                         "                                                         ELSE ROUND(xchb210b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb210b,?)",
                         "                                END ),",
                         "                    xchb210c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb210c,?) ",
                         "                                                         ELSE ROUND(xchb210c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb210c,?)",
                         "                                END ),",
                         "                    xchb210d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb210d,?) ",
                         "                                                         ELSE ROUND(xchb210d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb210d,?)",
                         "                                END ),",
                         "                    xchb210e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb210e,?) ",
                         "                                                         ELSE ROUND(xchb210e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb210e,?)",
                         "                                END ),",
                         "                    xchb210f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb210f,?) ",
                         "                                                         ELSE ROUND(xchb210f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb210f,?)",
                         "                                END ),",
                         "                    xchb210g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb210g,?) ",
                         "                                                         ELSE ROUND(xchb210g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb210g,?)",
                         "                                END ),",
                         "                    xchb210h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb210h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb210h,?) ",
                         "                                                         ELSE ROUND(xchb210h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb210h,?)",
                         "                                END ),",  
                         "                    xchb306  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb306,?) ",
                         "                                                          ELSE ROUND(xchb306,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb306,?)",
                         "                                END ),",
                         "                    xchb306a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306a,?) ",
                         "                                                         ELSE ROUND(xchb306a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306a,?)",
                         "                                END ),",
                         "                    xchb306b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306b,?) ",
                         "                                                         ELSE ROUND(xchb306b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306b,?)",
                         "                                END ),",
                         "                    xchb306c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306c,?) ",
                         "                                                         ELSE ROUND(xchb306c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306c,?)",
                         "                                END ),",
                         "                    xchb306d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306d,?) ",
                         "                                                         ELSE ROUND(xchb306d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306d,?)",
                         "                                END ),",
                         "                    xchb306e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306e,?) ",
                         "                                                         ELSE ROUND(xchb306e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306e,?)",
                         "                                END ),",
                         "                    xchb306f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306f,?) ",
                         "                                                         ELSE ROUND(xchb306f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306f,?)",
                         "                                END ),",
                         "                    xchb306g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306g,?) ",
                         "                                                         ELSE ROUND(xchb306g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306g,?)",
                         "                                END ),",
                         "                    xchb306h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306h,?) ",
                         "                                                         ELSE ROUND(xchb306h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306h,?)",
                         "                                END ) ",                         
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xchb_tmp SET xchb202  = ceil(xchb202 *power(10,?))/power(10,?),",
                         "                    xchb202a = ceil(xchb202a*power(10,?))/power(10,?),",
                         "                    xchb202b = ceil(xchb202b*power(10,?))/power(10,?),",
                         "                    xchb202c = ceil(xchb202c*power(10,?))/power(10,?),",
                         "                    xchb202d = ceil(xchb202d*power(10,?))/power(10,?),",
                         "                    xchb202e = ceil(xchb202e*power(10,?))/power(10,?),",
                         "                    xchb202f = ceil(xchb202f*power(10,?))/power(10,?),",
                         "                    xchb202g = ceil(xchb202g*power(10,?))/power(10,?),",
                         "                    xchb202h = ceil(xchb202h*power(10,?))/power(10,?),", 
                         "                    xchb208  = ceil(xchb208 *power(10,?))/power(10,?),",
                         "                    xchb208a = ceil(xchb208a*power(10,?))/power(10,?),",
                         "                    xchb208b = ceil(xchb208b*power(10,?))/power(10,?),",
                         "                    xchb208c = ceil(xchb208c*power(10,?))/power(10,?),",
                         "                    xchb208d = ceil(xchb208d*power(10,?))/power(10,?),",
                         "                    xchb208e = ceil(xchb208e*power(10,?))/power(10,?),",
                         "                    xchb208f = ceil(xchb208f*power(10,?))/power(10,?),",
                         "                    xchb208g = ceil(xchb208g*power(10,?))/power(10,?),",
                         "                    xchb208h = ceil(xchb208h*power(10,?))/power(10,?),",   
                         "                    xchb210  = ceil(xchb210 *power(10,?))/power(10,?),",
                         "                    xchb210a = ceil(xchb210a*power(10,?))/power(10,?),",
                         "                    xchb210b = ceil(xchb210b*power(10,?))/power(10,?),",
                         "                    xchb210c = ceil(xchb210c*power(10,?))/power(10,?),",
                         "                    xchb210d = ceil(xchb210d*power(10,?))/power(10,?),",
                         "                    xchb210e = ceil(xchb210e*power(10,?))/power(10,?),",
                         "                    xchb210f = ceil(xchb210f*power(10,?))/power(10,?),",
                         "                    xchb210g = ceil(xchb210g*power(10,?))/power(10,?),",
                         "                    xchb210h = ceil(xchb210h*power(10,?))/power(10,?),", 
                         "                    xchb306  = ceil(xchb306 *power(10,?))/power(10,?),",
                         "                    xchb306a = ceil(xchb306a*power(10,?))/power(10,?),",
                         "                    xchb306b = ceil(xchb306b*power(10,?))/power(10,?),",
                         "                    xchb306c = ceil(xchb306c*power(10,?))/power(10,?),",
                         "                    xchb306d = ceil(xchb306d*power(10,?))/power(10,?),",
                         "                    xchb306e = ceil(xchb306e*power(10,?))/power(10,?),",
                         "                    xchb306f = ceil(xchb306f*power(10,?))/power(10,?),",
                         "                    xchb306g = ceil(xchb306g*power(10,?))/power(10,?),",
                         "                    xchb306h = ceil(xchb306h*power(10,?))/power(10,?) ",                        
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
        #180802-00015#1 add-E                                                 
   END CASE
   PREPARE s_axcp500_avg_wip_process_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg_wip_process_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                              g_curr[p_seq].digit2 
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg_wip_process_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg_wip_process_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                   
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg_wip_process_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                    g_curr[p_seq].digit2
      WHEN '4' 
         EXECUTE s_axcp500_avg_wip_process_p5 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb202h
                                                   
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb208h
                                                   
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb210h
                                                   
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306a
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306b
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306c
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306d
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306e
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306f
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306g
                                                    g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xchb306h
   END CASE
   #180802-00015#1 add-E 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF 
   
   #171115-00033#1 -add -s
   #发料/退料/超领中作业编号+作业序不存在axcq163中时,原始站全部良品转出,到END的上站转入 
   #PGS(D)-00824 ---start---
   LET g_sql = "  MERGE INTO xchb_tmp a ",
               "  USING (SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,",
               "                         xchb006,xchb007,xchb008,xchb009,xchb010,",
               "                         xchb011,xchb012,xchb013,xchb014,xchb015, ",
               #210220-00018#1---mark---s
               #"                         (xchb201+xchb207+xchb209) xchb301,(xchb202+xchb208+xchb210) xchb302,",
               #"                         (xchb202a+xchb208a+xchb210a) xchb302a,(xchb202b+xchb208b+xchb210b) xchb302b,",
               #"                         (xchb202c+xchb208c+xchb210c) xchb302c,(xchb202d+xchb208d+xchb210d) xchb302d,",
               #"                         (xchb202e+xchb208e+xchb210e) xchb302e,(xchb202f+xchb208f+xchb210f) xchb302f,",
               #"                         (xchb202g+xchb208g+xchb210g) xchb302g,(xchb202h+xchb208h+xchb210h) xchb302h",
               #210220-00018#1---mark---e
               #210220-00018#1---add---s
               "                         (xchb101+xchb201+xchb207+xchb209) xchb301,(xchb102+xchb202+xchb208+xchb210) xchb302,",
               "                         (xchb102a+xchb202a+xchb208a+xchb210a) xchb302a,(xchb102b+xchb202b+xchb208b+xchb210b) xchb302b,",
               "                         (xchb102c+xchb202c+xchb208c+xchb210c) xchb302c,(xchb102d+xchb202d+xchb208d+xchb210d) xchb302d,",
               "                         (xchb102e+xchb202e+xchb208e+xchb210e) xchb302e,(xchb102f+xchb202f+xchb208f+xchb210f) xchb302f,",
               "                         (xchb102g+xchb202g+xchb208g+xchb210g) xchb302g,(xchb102h+xchb202h+xchb208h+xchb210h) xchb302h",               
               #210220-00018#1---add---e
               #190411-00017#1 A mark-S
#               "           FROM xchb_tmp,sfac_tmp2",
#               "          WHERE xchb006 = sfacdocno ",
#               "            AND xchbent = ",g_enterprise,
#               "            AND xchbld  = '",g_ld,"'",
#               "            AND xchb001 = '",p_seq,"'",
#               "            AND xchb003 = '",g_xcat001,"'",
#               "            AND xchb004 = ",g_yy,
#               "            AND xchb005 = ",g_pp,
#               "            AND clevel = ",p_xcbb006, 
#               "            AND xchb007 = xchb007 ",
#               "            AND xchb008 = xchb008 ",
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
               "           FROM xchb_tmp ",
               "          WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,") ",
               "            AND xchbent = ",g_enterprise,
               "            AND xchbld  = '",g_ld,"'",
               "            AND xchb001 = '",p_seq,"'",
               "            AND xchb003 = '",g_xcat001,"'",
               "            AND xchb004 = ",g_yy,
               "            AND xchb005 = ",g_pp,
               "            AND xchb007 = xchb007 ",
               "            AND xchb008 = xchb008 ",
               #190411-00017#1 A add-E               
               "            AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",
               "            AND NOT EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
               "                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 )",                                 
               "        ) c", 
               " ON (a.xchbent = c.xchbent ",
               " AND a.xchbld  = c.xchbld  ",
               " AND a.xchb001 = c.xchb001 ",
               " AND a.xchb002 = c.xchb002 ",
               " AND a.xchb003 = c.xchb003 ",
               " AND a.xchb004 = c.xchb004 ",
               " AND a.xchb005 = c.xchb005 ",
               " AND a.xchb006 = c.xchb006 ",
               " AND a.xchb007 = c.xchb007 ",
               " AND a.xchb008 = c.xchb008 ",               
               " AND a.xchb009 = c.xchb009 ",
               " AND a.xchb010 = c.xchb010 ",
               " AND a.xchb011 = c.xchb011 ",
               " AND a.xchb014 = c.xchb007 ",
               " AND a.xchb015 = c.xchb008) ", 
               " WHEN MATCHED THEN    ",
               "       UPDATE SET a.xchb301  = c.xchb301 *-1  ,",
               "                  a.xchb302  = c.xchb302 *-1  ,",
               "                  a.xchb302a = c.xchb302a *-1 ,",
               "                  a.xchb302b = c.xchb302b *-1 ,",
               "                  a.xchb302c = c.xchb302c *-1 ,",
               "                  a.xchb302d = c.xchb302d *-1 ,",
               "                  a.xchb302e = c.xchb302e *-1 ,",
               "                  a.xchb302f = c.xchb302f *-1 ,",
               "                  a.xchb302g = c.xchb302g *-1 ,",
               "                  a.xchb302h = c.xchb302h *-1 "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p52 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p52"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  
   
   EXECUTE s_axcp500_avg_wip_process_p52
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p52"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   

   #PGS(D)-00824 ---start---
   LET g_sql = "  MERGE INTO xchb_tmp a ",
               "  USING (SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,",
               "                         xchb006,xchb007,xchb008,xchb009,xchb010,",
               "                         xchb011,xchb012,xchb013,xchb014,xchb015, ",
               "                         sfcb003,sfcb004,", #201027-00001#1
               #210220-00018#1---mark---s
               #"                         (xchb201+xchb207+xchb209) xchb301,(xchb202+xchb208+xchb210) xchb302,",
               #"                         (xchb202a+xchb208a+xchb210a) xchb302a,(xchb202b+xchb208b+xchb210b) xchb302b,",
               #"                         (xchb202c+xchb208c+xchb210c) xchb302c,(xchb202d+xchb208d+xchb210d) xchb302d,",
               #"                         (xchb202e+xchb208e+xchb210e) xchb302e,(xchb202f+xchb208f+xchb210f) xchb302f,",
               #"                         (xchb202g+xchb208g+xchb210g) xchb302g,(xchb202h+xchb208h+xchb210h) xchb302h", 
               #210220-00018#1---mark---e
               #210220-00018#1---add---s
               "                         (xchb101+xchb201+xchb207+xchb209) xchb301,(xchb102+xchb202+xchb208+xchb210) xchb302,",
               "                         (xchb102a+xchb202a+xchb208a+xchb210a) xchb302a,(xchb102b+xchb202b+xchb208b+xchb210b) xchb302b,",
               "                         (xchb102c+xchb202c+xchb208c+xchb210c) xchb302c,(xchb102d+xchb202d+xchb208d+xchb210d) xchb302d,",
               "                         (xchb102e+xchb202e+xchb208e+xchb210e) xchb302e,(xchb102f+xchb202f+xchb208f+xchb210f) xchb302f,",
               "                         (xchb102g+xchb202g+xchb208g+xchb210g) xchb302g,(xchb102h+xchb202h+xchb208h+xchb210h) xchb302h",               
               #210220-00018#1---add---e               
               #190411-00017#1 A mark-S
#               "           FROM xchb_tmp,sfac_tmp2",
#               "          WHERE xchb006 = sfacdocno ",
#               "            AND xchbent = ",g_enterprise,
#               "            AND xchbld  = '",g_ld,"'",
#               "            AND xchb001 = '",p_seq,"'",
#               "            AND xchb003 = '",g_xcat001,"'",
#               "            AND xchb004 = ",g_yy,
#               "            AND xchb005 = ",g_pp,
#               "            AND clevel = ",p_xcbb006, 
#               "            AND xchb007 = xchb007 ",
#               "            AND xchb008 = xchb008 ", 
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
               #"           FROM xchb_tmp ",    #201027-00001#1 mark
               "           FROM xchb_tmp,sfcb_tmp ",    #201027-00001#1
               "          WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,") ",
               "            AND sfcbdocno = xchb006 AND xchb007 = sfcc003 AND xchb008 = sfcc004 ", #201027-00001#1
               "            AND xchbent = ",g_enterprise,
               "            AND xchbld  = '",g_ld,"'",
               "            AND xchb001 = '",p_seq,"'",
               "            AND xchb003 = '",g_xcat001,"'",
               "            AND xchb004 = ",g_yy,
               "            AND xchb005 = ",g_pp,
               "            AND xchb007 = xchb007 ",
               "            AND xchb008 = xchb008 ",
               #190411-00017#1 A add-E                      
               "            AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",
               "            AND NOT EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
               "                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 )",                                 
               "        ) c", 
               " ON (a.xchbent = c.xchbent ",
               " AND a.xchbld  = c.xchbld  ",
               " AND a.xchb001 = c.xchb001 ",
               " AND a.xchb002 = c.xchb002 ",
               " AND a.xchb003 = c.xchb003 ",
               " AND a.xchb004 = c.xchb004 ",
               " AND a.xchb005 = c.xchb005 ",
               " AND a.xchb006 = c.xchb006 ",
               #" AND a.xchb007 = 'END' ",    #201027-00001#1 mark
               #" AND a.xchb008 = '0'   ",    #201027-00001#1 mark
               " AND a.xchb007 = c.sfcb003 ",    #201027-00001#1  
               " AND a.xchb008 = c.sfcb004 ",    #201027-00001#1                 
               " AND a.xchb009 = c.xchb009 ",
               " AND a.xchb010 = c.xchb010 ",
               " AND a.xchb011 = c.xchb011 ",
               " AND a.xchb014 = c.xchb007 ",
               " AND a.xchb015 = c.xchb008) ", 
               " WHEN MATCHED THEN    ",
               "       UPDATE SET a.xchb203  = c.xchb301  ,",
               "                  a.xchb204  = c.xchb302  ,",
               "                  a.xchb204a = c.xchb302a ,",
               "                  a.xchb204b = c.xchb302b ,",
               "                  a.xchb204c = c.xchb302c ,",
               "                  a.xchb204d = c.xchb302d ,",
               "                  a.xchb204e = c.xchb302e ,",
               "                  a.xchb204f = c.xchb302f ,",
               "                  a.xchb204g = c.xchb302g ,",
               "                  a.xchb204h = c.xchb302h " #,  #201027-00001#1 mark ,
               #"        WHERE a.xchb007 = 'END' ",  #201027-00001#1 mark
               #"          AND a.xchb008 = '0' "     #201027-00001#1 mark
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p53 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p53"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  
   
   EXECUTE s_axcp500_avg_wip_process_p53
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p53"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
   #171115-00033#1 -add -e  
   
   #抓取处理资料中xcbt_t中最大的顺序来做循环
   #190411-00017#1 A mark-S
#   LET g_sql = "SELECT MAX(xcbt008) FROM xcbt_t,xchb_tmp,sfac_tmp2,sfaa_tmp ",
#               " WHERE xcbtent = xchbent ",
#               "   AND xcbt001 = xchb004 ",
#               "   AND xcbt002 = xchb005 ",
#               "   AND xcbt003 = xchb006 ",
#               "   AND xchb006 = sfacdocno ",
#               "   AND xchb006 = sfaadocno ",
#               "   AND xchbent = sfaaent ",
#               "   AND clevel = ",p_xcbb006,
#               "   AND sfaa042 = '",p_flag,"'"
   #190411-00017#1 A mark-E
   #190411-00017#1 A add-S
   LET g_sql = "SELECT MAX(xcbt008) FROM xcbt_t ",
               " WHERE EXISTS(SELECT 1 FROM xchb_tmp WHERE xcbtent = xchbent AND xcbt001 = xchb004 AND xcbt002 = xchb005 AND xcbt003 = xchb006 ) ",
               "   AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xcbt003 = sfacdocno AND clevel = ",p_xcbb006,") ",
               "   AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE xcbt003 = sfaadocno AND xcbtent = sfaaent AND sfaa042 = '",p_flag,"' ) "
   #190411-00017#1 A add-E
   PREPARE s_axcp500_avg_wip_process_cycle FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_cycle"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_process_cycle INTO l_cycle
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_cycle"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF               
   FOR l_xcbt008 = 1 TO l_cycle 
#170724-00055#1---mark---s   
#      #170618-00158#1--add--s
#      #更新 xchb305/xchb306 当站下线
#      LET g_sql = " MERGE INTO xchb_tmp ",
#                  "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel, qpa ,sfba006, ",  #170618-00158#1 add               
#                  "                     SUM(xcck201 ) xcck201, SUM(xcck202) xcck202,  ",
#                  "                     SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
#                  "                     SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
#                  "                     SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
#                  "                     SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",   
#                  "               FROM ( SELECT DISTINCT xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
#                  "                     decode(sfha006,NULL,'END',' ','END',sfha006) sfha006,",     
#                  "                     decode(sfha007,NULL,'0',' ','0',sfha007) sfha007,clevel,qpa , sfba006,  ", 
#                  "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xccw202*xcck009 *-1) xcck202, ",
#                  "                     SUM(xccw202a*xcck009*-1) xcck202a,SUM(xccw202b*xcck009*-1) xcck202b,",
#                  "                     SUM(xccw202c*xcck009*-1) xcck202c,SUM(xccw202d*xcck009*-1) xcck202d,",
#                  "                     SUM(xccw202e*xcck009*-1) xcck202e,SUM(xccw202f*xcck009*-1) xcck202f,",
#                  "                     SUM(xccw202g*xcck009*-1) xcck202g,SUM(xccw202h*xcck009*-1) xcck202h",
#                  "                FROM xcck_tmp,sfaa_tmp,xccw_t,sfac_tmp2,sfha_t ,    ",    
#                  #"                     (SELECT sfbadocno,sfba006,DECODE(sfaa012,0,1,(SUM((sfba013-sfba015)/NVL(sfba022,1)) OVER ( PARTITION BY sfbadocno,sfba006))/sfaa012) qpa ", #170705-00006#1 mark
#                  "                     (SELECT sfbadocno,sfba006,DECODE(sfaa012,0,1, (SUM( CASE sfba022 WHEN 0 THEN 1 ELSE (sfba013-sfba015)/NVL(sfba022,1) END) OVER ( PARTITION BY sfbadocno,sfba006))/sfaa012) qpa ", #170705-00006#1 add
#                  "                        FROM sfba_tmp,sfaa_tmp WHERE sfaaent = sfbaent AND sfaadocno = sfbadocno AND sfaa042='",p_flag,"') ", 
#                  "               WHERE xccwent = xcckent ",
#                  "                 AND xcck047 = sfbadocno ",
#                  "                 AND xccwld  = xcckld  ",
#                  "                 AND xccw001 = xcck001 ",
#                  "                 AND xccw002 = xcck002 ",
#                  "                 AND xccw003 = xcck003 ",
#                  "                 AND xccw004 = xcck004 ",
#                  "                 AND xccw005 = xcck005 ",
#                  "                 AND xccw006 = xcck006 ",
#                  "                 AND xccw007 = xcck007 ",
#                  "                 AND xccw008 = xcck008 ",
#                  "                 AND xccw009 = xcck009 ",
#                  "                 AND xcck020 = '115' AND xcck055 IN ('213') ",  
#                  "                 AND xcckent = sfaaent ", 
#                  "                 AND xcck047 = sfaadocno ",
#                  "                 AND xcck047 = sfha004  AND xcckent=sfhaent  " ,              
#                  "                 AND sfaa042 = ? ",   
#                  "                 AND sfaadocno=sfacdocno ",  #一张工单的主件即时多特征，也只指定一个成本阶
#                  "                 AND xcck001 = '",p_seq,"'",               
#                  "                GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel,qpa,sfba006) tsed",  #170618-00158#1 add
#                  "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel,qpa,sfba006 ", #Mod zhangllc 150730 add clevel #170618-00158#1 mark
#                  "                ) b ",
#                  "          ON ( xchbent = ",g_enterprise,
#                  "         AND   xchbld  = '",g_ld,"'",
#                  "         AND   xchb001 = '",p_seq,"'",
#                  "         AND   xchb002 = b.xcck002  ",
#                  "         AND   xchb003 = '",g_xcat001,"'",
#                  "         AND   xchb004 = ",g_yy,
#                  "         AND   xchb005 = ",g_pp,
#                  "         AND   xchb006 = b.xcck047  ",       #工单
#                  "         AND   xchb007 = b.sfha006  ",       #作业编号  
#                  "         AND   xchb008 = b.sfha007  ",       #作业序    
#                  #"         AND   xchb009 = b.xcck010  ",       #料     #170618-00158#1 mark #当站下线写入的料号是T99999，不是元件料号
#                  #"         AND   xchb010 = b.xcck011  ",       #特征   #170618-00158#1 mark
#                  #"         AND   xchb011 = b.xcck017  ",       #批号   #170618-00158#1 mark
#                  "         AND xchb009 = b.sfba006  ",  
#                  "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到            
#                  "  WHEN MATCHED THEN    ",
#                  "     UPDATE SET xchb305  = nvl(b.xcck201 ,0) * -1 * b.qpa   ",
#                  #"                xchb306  = nvl(b.xcck202 ,0) * -1 ,  ",
#                  #"                xchb306a = nvl(b.xcck202a,0) * -1 ,  ",
#                  #"                xchb306b = nvl(b.xcck202b,0) * -1 ,  ",
#                  #"                xchb306c = nvl(b.xcck202c,0) * -1 ,  ",
#                  #"                xchb306d = nvl(b.xcck202d,0) * -1 ,  ",
#                  #"                xchb306e = nvl(b.xcck202e,0) * -1 ,  ",
#                  #"                xchb306f = nvl(b.xcck202f,0) * -1 ,  ",
#                  #"                xchb306g = nvl(b.xcck202g,0) * -1 ,  ",
#                  #"                xchb306h = nvl(b.xcck202h,0) * -1    " ,    
#                  "  WHERE EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
#                  "                   AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")"
#      PREPARE s_axcp500_avg_wip_process_p4 FROM g_sql
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p4"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
##        RETURN r_success
#      END IF  
#      
#      EXECUTE s_axcp500_avg_wip_process_p4 USING p_flag
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p4"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
##        RETURN r_success
#      END IF   
#      LET g_sql = " MERGE INTO xchb_tmp ",
#                  "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel,  ",  #170618-00158#1 add               
#                  "                     SUM(xcck201 ) xcck201, SUM(xcck202) xcck202,  ",
#                  "                     SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
#                  "                     SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
#                  "                     SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
#                  "                     SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",   
#                  "               FROM ( SELECT DISTINCT xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
#                  "                     decode(sfha006,NULL,'END',' ','END',sfha006) sfha006,",     
#                  "                     decode(sfha007,NULL,'0',' ','0',sfha007) sfha007,clevel,  ", 
#                  "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xccw202*xcck009 *-1) xcck202, ",
#                  "                     SUM(xccw202a*xcck009*-1) xcck202a,SUM(xccw202b*xcck009*-1) xcck202b,",
#                  "                     SUM(xccw202c*xcck009*-1) xcck202c,SUM(xccw202d*xcck009*-1) xcck202d,",
#                  "                     SUM(xccw202e*xcck009*-1) xcck202e,SUM(xccw202f*xcck009*-1) xcck202f,",
#                  "                     SUM(xccw202g*xcck009*-1) xcck202g,SUM(xccw202h*xcck009*-1) xcck202h",
#                  "                FROM xcck_tmp,sfaa_tmp,xccw_t,sfac_tmp2,sfha_t     ",     
#                  "               WHERE xccwent = xcckent ",
#                  "                 AND xccwld  = xcckld  ",
#                  "                 AND xccw001 = xcck001 ",
#                  "                 AND xccw002 = xcck002 ",
#                  "                 AND xccw003 = xcck003 ",
#                  "                 AND xccw004 = xcck004 ",
#                  "                 AND xccw005 = xcck005 ",
#                  "                 AND xccw006 = xcck006 ",
#                  "                 AND xccw007 = xcck007 ",
#                  "                 AND xccw008 = xcck008 ",
#                  "                 AND xccw009 = xcck009 ",
#                  "                 AND xcck020 = '115' AND xcck055 IN ('213') ",  
#                  "                 AND xcckent = sfaaent ", 
#                  "                 AND xcck047 = sfaadocno ",
#                  "                 AND xcck047 = sfha004  AND xcckent=sfhaent  " ,              
#                  "                 AND sfaa042 = ? ",   
#                  "                 AND sfaadocno=sfacdocno ",  #一张工单的主件即时多特征，也只指定一个成本阶
#                  "                 AND xcck001 = '",p_seq,"'",               
#                  "                GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel) tsed",
#                  "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel ", 
#                  "                ) b ",
#                  "          ON ( xchbent = ",g_enterprise,
#                  "         AND   xchbld  = '",g_ld,"'",
#                  "         AND   xchb001 = '",p_seq,"'",
#                  "         AND   xchb002 = b.xcck002  ",
#                  "         AND   xchb003 = '",g_xcat001,"'",
#                  "         AND   xchb004 = ",g_yy,
#                  "         AND   xchb005 = ",g_pp,
#                  "         AND   xchb006 = b.xcck047  ",       #工单
#                  "         AND   xchb007 = b.sfha006  ",       #作业编号  
#                  "         AND   xchb008 = b.sfha007  ",       #作业序   
#                  "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到            
#                  "  WHEN MATCHED THEN    ",
#                  "     UPDATE SET xchb305  = nvl(b.xcck201 ,0) * -1  ",  
#                  "  WHERE EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
#                  "                   AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")",
#                  "        AND (xchb009 = 'DL+OH+SUB' OR xchb009 = 'ADJUST') "
#      PREPARE s_axcp500_avg_wip_process_p41 FROM g_sql
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p41"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
##        RETURN r_success
#      END IF  
#      
#      EXECUTE s_axcp500_avg_wip_process_p41 USING p_flag
#      IF SQLCA.sqlcode THEN
#         INITIALIZE g_errparam TO NULL
#         LET g_errparam.code   = SQLCA.sqlcode
#         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p41"
#         LET g_errparam.popup  = TRUE
#         CALL cl_err()
##        RETURN r_success
#      END IF   
#      #170618-00158#1--add--e
#170724-00055#1---mark---s 

      #170629-00004#1---mark---s
      ##170724-00055#1---add---s
      ##更新 xchb305/xchb306 当站下线
      #LET g_sql = " MERGE INTO xchb_tmp ",
      #            "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel,   ",  #170618-00158#1 add               
      #            "                     SUM(xcck201 ) xcck201, SUM(xcck202) xcck202,  ",
      #            "                     SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
      #            "                     SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
      #            "                     SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
      #            "                     SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",   
      #            "               FROM ( SELECT DISTINCT xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
      #            "                     decode(sfha006,NULL,'END',' ','END',sfha006) sfha006,",     
      #            "                     decode(sfha007,NULL,'0',' ','0',sfha007) sfha007,clevel,   ", 
      #            "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xccw202*xcck009 *-1) xcck202, ",
      #            "                     SUM(xccw202a*xcck009*-1) xcck202a,SUM(xccw202b*xcck009*-1) xcck202b,",
      #            "                     SUM(xccw202c*xcck009*-1) xcck202c,SUM(xccw202d*xcck009*-1) xcck202d,",
      #            "                     SUM(xccw202e*xcck009*-1) xcck202e,SUM(xccw202f*xcck009*-1) xcck202f,",
      #            "                     SUM(xccw202g*xcck009*-1) xcck202g,SUM(xccw202h*xcck009*-1) xcck202h",
      #            "                FROM xcck_tmp,sfaa_tmp,xccw_t,sfac_tmp2,sfha_t     ",   
      #            "               WHERE xccwent = xcckent ",
      #            "                 AND xccwld  = xcckld  ",
      #            "                 AND xccw001 = xcck001 ",
      #            "                 AND xccw002 = xcck002 ",
      #            "                 AND xccw003 = xcck003 ",
      #            "                 AND xccw004 = xcck004 ",
      #            "                 AND xccw005 = xcck005 ",
      #            "                 AND xccw006 = xcck006 ",
      #            "                 AND xccw007 = xcck007 ",
      #            "                 AND xccw008 = xcck008 ",
      #            "                 AND xccw009 = xcck009 ",
      #            "                 AND xcck020 = '115' AND xcck055 IN ('213') ",  #170618-00158#1 add #当站下线的xcck055='213'
      #            "                 AND xcckent = sfaaent ",  
      #            "                 AND xcck047 = sfaadocno ",
      #            "                 AND xcck047 = sfha004  AND xcckent=sfhaent  " , #170618-00158#1 add
      #            "                 AND sfaa042 = ? ",   
      #            "                 AND sfaadocno=sfacdocno ",  #一张工单的主件即时多特征，也只指定一个成本阶
      #            "                 AND xcck001 = '",p_seq,"'",               
      #            "                GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel) tsed",  #170618-00158#1 add
      #            "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel ", #Mod zhangllc 150730 add clevel #170618-00158#1 mark
      #            "                ) b ",
      #            "          ON ( xchbent = ",g_enterprise,
      #            "         AND   xchbld  = '",g_ld,"'",
      #            "         AND   xchb001 = '",p_seq,"'",
      #            "         AND   xchb002 = b.xcck002  ",
      #            "         AND   xchb003 = '",g_xcat001,"'",
      #            "         AND   xchb004 = ",g_yy,
      #            "         AND   xchb005 = ",g_pp,
      #            "         AND   xchb006 = b.xcck047  ",       #工单
      #            "         AND   xchb009 <> 'DL+OH+SUB' ",
      #            "         AND   xchb007 = b.sfha006  ",       #作业编号 
      #            "         AND   xchb008 = b.sfha007  ",       #作业序   
      #            "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到            
      #            "  WHEN MATCHED THEN    ",
      #            "     UPDATE SET xchb305  = nvl(b.xcck201 ,0) ,  ",
      #            "                xchb306  = nvl(b.xcck202 ,0) ,  ",
      #            "                xchb306a = nvl(b.xcck202a,0) ,  ",
      #            "                xchb306b = nvl(b.xcck202b,0) ,  ",
      #            "                xchb306c = nvl(b.xcck202c,0) ,  ",
      #            "                xchb306d = nvl(b.xcck202d,0) ,  ",
      #            "                xchb306e = nvl(b.xcck202e,0) ,  ",
      #            "                xchb306f = nvl(b.xcck202f,0) ,  ",
      #            "                xchb306g = nvl(b.xcck202g,0) ,  ",
      #            "                xchb306h = nvl(b.xcck202h,0)    ",     
      #            "  WHERE EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
      #            "                   AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")"                  
      #PREPARE s_axcp500_avg_wip_process_p4 FROM g_sql
      #IF SQLCA.sqlcode THEN
      #   INITIALIZE g_errparam TO NULL
      #   LET g_errparam.code   = SQLCA.sqlcode
      #   LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p4"
      #   LET g_errparam.popup  = TRUE
      #   CALL cl_err()
   #  #   RETURN r_success
      #END IF  
      #
      #EXECUTE s_axcp500_avg_wip_process_p4 USING p_flag
      #IF SQLCA.sqlcode THEN
      #   INITIALIZE g_errparam TO NULL
      #   LET g_errparam.code   = SQLCA.sqlcode
      #   LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p4"
      #   LET g_errparam.popup  = TRUE
      #   CALL cl_err()
   #  #   RETURN r_success
      #END IF   
      ##170724-00055#1---add---e
      #170629-00004#1---mark---e
      
      #更新xchb301/xchb303/xchb307 良品轉出、報發、回收數量 
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xchb_tmp ",
                  "       USING (SELECT unique xchaent,xchald ,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcha007,xcha008,xcha301,xcha303,xcha307,qpa,clevel,sfba006 ",
                  "                FROM xcha_tmp,sfac_tmp2, ",
                  #"                     (SELECT sfbadocno,sfba006,DECODE(sfaa012,0,1,(SUM((sfba013-sfba015)/NVL(sfba022,1)) OVER ( PARTITION BY sfbadocno,sfba006))/sfaa012) qpa ", #170705-00006#1 mark
                  #"                     (SELECT sfbadocno,sfba006,DECODE(sfaa012,0,1, (SUM( CASE sfba022 WHEN 0 THEN 1 ELSE (sfba013-sfba015)/NVL(sfba022,1) END) OVER ( PARTITION BY sfbadocno,sfba006))/sfaa012 ) qpa ", #170705-00006#1 add  #181120-00039#1 mark
                  #"                     (SELECT sfbadocno,sfba006,DECODE(sfaa012,0,1, (SUM( CASE sfba022 WHEN 0 THEN 1 ELSE (sfba013-sfba015) END) OVER ( PARTITION BY sfbadocno,sfba006))/sfaa012 ) qpa ", #181120-00039#1 #210105-00048#1 mark
                  #210105-00048#1---add---s
                  "                     (SELECT sfbadocno,sfba006,",
                  "                             (CASE WHEN sfba008='3' AND sfba013 =0 ",  #间接材料在发料发其他料时,总应发量是记录0,数量记录在超领发料中,所以这边单独处理
                  "                                   THEN DECODE(sfaa012,0,1, (SUM( CASE sfba022 WHEN 0 THEN 1 ELSE (sfba013-sfba015) END) OVER ( PARTITION BY sfbadocno,sfbaseq))/sfaa012) ",
                  "                                   ELSE DECODE(sfaa012,0,1, (SUM( CASE sfba022 WHEN 0 THEN 1 ELSE (sfba013-sfba015) END) OVER ( PARTITION BY sfbadocno,sfba006))/sfaa012) ",
                  "                              END) qpa ",
                  #210105-00048#1---add---e
                  #"                        FROM sfba_tmp,sfaa_tmp WHERE sfaadocno = sfbadocno) ", 
                  "                        FROM sfba_tmp,sfaa_tmp WHERE sfaaent = sfbaent AND sfaadocno = sfbadocno AND sfaa042='",p_flag,"') ",                
                  "               WHERE xcha006 = sfbadocno ",
                  "                 AND xcha006 = sfacdocno ",
                  "                 AND xchaent = ",g_enterprise,
                  "                 AND xchald  = '",g_ld,"'",
                  "                 AND xcha001 = '",p_seq,"'",
                  "                 AND xcha003 = '",g_xcat001,"'",
                  "                 AND xcha004 = ",g_yy,
                  "                 AND xcha005 = ",g_pp,
                  "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchaent AND sfaadocno = xcha006 AND sfaa042 = '",p_flag,"')",                                          
                  "                 AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchaent  AND xcbt001 = xcha004 AND xcbt002 = xcha005 ",
                  "                                      AND xcbt003 = xcha006 AND xcbt004 = xcha007 AND xcbt005 = xcha008 AND xcbt008 = ",l_xcbt008,")",				  
                  "                ) b ",
                  "          ON ( xchbent = b.xchaent  ",
                  "           AND xchbld  = b.xchald   ",
                  "           AND xchb001 = b.xcha001  ",
                  #"           AND xchb002 = b.xcha002  ",  #210220-00018#1 mark
                  "           AND xchb003 = b.xcha003  ",
                  "           AND xchb004 = b.xcha004  ",
                  "           AND xchb005 = b.xcha005  ",
                  "           AND xchb006 = b.xcha006  ",  
                  "           AND xchb007 = b.xcha007  ",  
                  "           AND xchb008 = b.xcha008  ",
                  "           AND xchb009 = b.sfba006  ",    
                  "           AND b.clevel = ",p_xcbb006,  
                  " ) ",                
                  "  WHEN MATCHED THEN ",
                  "     UPDATE SET xchb301 = nvl(b.xcha301,0)*qpa ,",
                  "                xchb303 = nvl(b.xcha303,0)*qpa ,",
                  "                xchb307 = nvl(b.xcha307,0)*qpa  "   
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg_wip_process_p6 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p6"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p6 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p6"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF     
      
      #170724-00055#1---add---s
      #对良品转出,报废,回收数量进行单位的小数位取位
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xchb_tmp a",
                  " USING (SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,",
                  "                         xchb006,xchb007,xchb008,xchb009,xchb010,",
                  "                         xchb011,xchb012,xchb013,xchb014,xchb015, ",
                  "               (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xchb301,0),6),ooca002) " ,
                  "                     WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xchb301,0),6),ooca002),(2/power(10,ooca002)))=0 ",
                  "                                                 THEN round(round(COALESCE(xchb301,0),6),ooca002) ",
                  "                                                 ELSE round(round(COALESCE(xchb301,0),6),ooca002)-(-1/power(10,ooca002)) ",
                  "                                             END )",
                  "                     WHEN ooca004 = 3 THEN trunc(round(COALESCE(xchb301,0),6),ooca002)",
                  "                     WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xchb301,0),6)*power(10,ooca002))/power(10,ooca002)",
                  "               END ) xchb301,",
                  "               (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xchb303,0),6),ooca002) " ,
                  "                     WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xchb303,0),6),ooca002),(2/power(10,ooca002)))=0 ",
                  "                                                 THEN round(round(COALESCE(xchb303,0),6),ooca002) ",
                  "                                                 ELSE round(round(COALESCE(xchb303,0),6),ooca002)-(-1/power(10,ooca002)) ",
                  "                                             END )",
                  "                     WHEN ooca004 = 3 THEN trunc(round(COALESCE(xchb303,0),6),ooca002)",
                  "                     WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xchb303,0),6)*power(10,ooca002))/power(10,ooca002)",
                  "               END ) xchb303,",
                  "               (CASE WHEN ooca004 = 1 THEN round(round(COALESCE(xchb307,0),6),ooca002) " ,
                  "                     WHEN ooca004 = 2 THEN (CASE WHEN MOD(round(round(COALESCE(xchb307,0),6),ooca002),(2/power(10,ooca002)))=0 ",
                  "                                                 THEN round(round(COALESCE(xchb307,0),6),ooca002) ",
                  "                                                 ELSE round(round(COALESCE(xchb307,0),6),ooca002)-(-1/power(10,ooca002)) ",
                  "                                             END )",
                  "                     WHEN ooca004 = 3 THEN trunc(round(COALESCE(xchb307,0),6),ooca002)",
                  "                     WHEN ooca004 = 4 THEN -1*ceil(round(COALESCE(-1*xchb307,0),6)*power(10,ooca002))/power(10,ooca002)",
                  "               END ) xchb307 ",
                  #190411-00017#1 A mark-S
#                  "          FROM xchb_tmp,sfac_tmp2,imaa_t ",
#                  "          LEFT OUTER JOIN ooca_t ON oocaent = imaaent AND ooca001 = imaa006 ",  
#                  "         WHERE xchbent = imaaent AND xchb009 = imaa001 ",
#                  "           AND xchb006 = sfacdocno ",
#                  "           AND xchbent = ",g_enterprise,
#                  "           AND xchbld  = '",g_ld,"'",
#                  "           AND xchb001 = '",p_seq,"'",
#                  "           AND xchb003 = '",g_xcat001,"'",
#                  "           AND xchb004 = ",g_yy,
#                  "           AND xchb005 = ",g_pp,
#                  "           AND clevel = ",p_xcbb006,
                  #190411-00017#1 A mark-E
                  #190411-00017#1 A add-S 
                  "          FROM xchb_tmp,imaa_t ",
                  "          LEFT OUTER JOIN ooca_t ON oocaent = imaaent AND ooca001 = imaa006 ",  
                  "         WHERE xchbent = imaaent AND xchb009 = imaa001 ",
                  "           AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,") ",
                  "           AND xchbent = ",g_enterprise,
                  "           AND xchbld  = '",g_ld,"'",
                  "           AND xchb001 = '",p_seq,"'",
                  "           AND xchb003 = '",g_xcat001,"'",
                  "           AND xchb004 = ",g_yy,
                  "           AND xchb005 = ",g_pp,
                  #190411-00017#1 A add-E                 
                  "           AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')", 
                  "           AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                  "           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")" ,                  
                  "           AND (xchb009 <> 'DL+OH+SUB' AND xchb009 <> 'ADJUST') ",
                  "         ) b",                  
                  "       ON (a.xchbent = b.xchbent ",
                  "       AND a.xchbld  = b.xchbld  ",
                  "       AND a.xchb001 = b.xchb001 ",
                  "       AND a.xchb002 = b.xchb002 ",
                  "       AND a.xchb003 = b.xchb003 ",
                  "       AND a.xchb004 = b.xchb004 ",
                  "       AND a.xchb005 = b.xchb005 ",
                  "       AND a.xchb006 = b.xchb006 ",
                  "       AND a.xchb007 = b.xchb007 ",
                  "       AND a.xchb008 = b.xchb008 ",
                  "       AND a.xchb009 = b.xchb009 ",
                  "       AND a.xchb010 = b.xchb010 ",
                  "       AND a.xchb011 = b.xchb011 ",
                  "       AND a.xchb014 = b.xchb014 ",
                  "       AND a.xchb015 = b.xchb015 )",          
                  "  WHEN MATCHED THEN ",
                  "     UPDATE SET a.xchb301 = nvl(b.xchb301,0),",
                  "                a.xchb303 = nvl(b.xchb303,0),",
                  "                a.xchb307 = nvl(b.xchb307,0) "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg_wip_process_p61 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p61"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p61 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p61"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF                  
      #170724-00055#1---add---e
      
      #DL+OH_SUB良品轉出、報發、回收數量
      #190411-00017#1 A mark-S
#      LET g_sql = " MERGE INTO xchb_tmp ",
#                  "       USING (SELECT unique xchaent,xchald ,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcha007,xcha008,xcha301,xcha303,xcha307,clevel ",
#                  "                FROM xcha_tmp,sfac_tmp2 ",               
#                  "               WHERE xcha006 = sfacdocno ",
#                  "                 AND xchaent = ",g_enterprise,
#                  "                 AND xchald  = '",g_ld,"'",
#                  "                 AND xcha001 = '",p_seq,"'",
#                  "                 AND xcha003 = '",g_xcat001,"'",
#                  "                 AND xcha004 = ",g_yy,
#                  "                 AND xcha005 = ",g_pp,  
#                  "                 AND clevel = ",p_xcbb006,
#                  "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchaent AND sfaadocno = xcha006 AND sfaa042 = '",p_flag,"')",                                                            
#                  "                 AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchaent  AND xcbt001 = xcha004 AND xcbt002 = xcha005 ",
#                  "                                      AND xcbt003 = xcha006 AND xcbt004 = xcha007 AND xcbt005 = xcha008 AND xcbt008 = ",l_xcbt008,")",			  
#                  "                ) b ",
#                  "          ON ( xchbent = b.xchaent  ",
#                  "         AND   xchbld  = b.xchald   ",
#                  "         AND   xchb001 = b.xcha001  ",
#                  "         AND   xchb002 = b.xcha002  ",
#                  "         AND   xchb003 = b.xcha003  ",
#                  "         AND   xchb004 = b.xcha004  ",
#                  "         AND   xchb005 = b.xcha005  ",
#                  "         AND   xchb006 = b.xcha006  ",  
#                  "         AND   xchb007 = b.xcha007  ",  
#                  "         AND   xchb008 = b.xcha008 ",
#                  " ) ",                
#                  "  WHEN MATCHED THEN ",
#                  "     UPDATE SET xchb301 = nvl(b.xcha301,0)*1 ,",
#                  "                xchb303 = nvl(b.xcha303,0)*1 ,",
#                  "                xchb307 = nvl(b.xcha307,0)*1  ", 
#                  "          WHERE (xchb009 = 'DL+OH+SUB' OR xchb009 = 'ADJUST') "     #170418-00026#1 add adjust              
      #190411-00017#1 A mark-E   
      #190411-00017#1 A mod-S
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xchb_tmp ",
                  "       USING (SELECT unique xchaent,xchald ,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcha007,xcha008,xcha301,xcha303,xcha307 ",
                  "                FROM xcha_tmp ",
                  "               WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xcha006 = sfacdocno AND clevel = ",p_xcbb006,") ",
                  "                 AND xchaent = ",g_enterprise,
                  "                 AND xchald  = '",g_ld,"'",
                  "                 AND xcha001 = '",p_seq,"'",
                  "                 AND xcha003 = '",g_xcat001,"'",
                  "                 AND xcha004 = ",g_yy,
                  "                 AND xcha005 = ",g_pp,  
                  "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchaent AND sfaadocno = xcha006 AND sfaa042 = '",p_flag,"')",                                                            
                  "                 AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchaent  AND xcbt001 = xcha004 AND xcbt002 = xcha005 ",
                  "                                      AND xcbt003 = xcha006 AND xcbt004 = xcha007 AND xcbt005 = xcha008 AND xcbt008 = ",l_xcbt008,")",			  
                  "                ) b ",
                  "          ON ( xchbent = b.xchaent  ",
                  "         AND   xchbld  = b.xchald   ",
                  "         AND   xchb001 = b.xcha001  ",
                  #"         AND   xchb002 = b.xcha002  ",  #210220-00018#1 mark
                  "         AND   xchb003 = b.xcha003  ",
                  "         AND   xchb004 = b.xcha004  ",
                  "         AND   xchb005 = b.xcha005  ",
                  "         AND   xchb006 = b.xcha006  ",  
                  "         AND   xchb007 = b.xcha007  ",  
                  "         AND   xchb008 = b.xcha008 ",
                  " ) ",                
                  "  WHEN MATCHED THEN ",
                  "     UPDATE SET xchb301 = nvl(b.xcha301,0)*1 ,",
                  "                xchb303 = nvl(b.xcha303,0)*1 ,",
                  "                xchb307 = nvl(b.xcha307,0)*1  ", 
                  "          WHERE (xchb009 = 'DL+OH+SUB' OR xchb009 = 'ADJUST') "     #170418-00026#1 add adjust
      #PGS(D)-00824 --- end ---
      #190411-00017#1 A mod-E      
      PREPARE s_axcp500_avg_wip_process_p60 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p60"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p60 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p60"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF     

      #190103-00004#1---add---s
      #回收料的部分用參數S_FIN-6026，3個轉出時間點：
      #1.當期全數轉出（T100目前的方式） 
      #2.依工單QPA比率轉出 -> 回收料的預計生產量和該張工單生產數量(sfaa012)的比例
      #3.結案月轉出（TIPTOP的方式）
      #範例
      #工單生產數量100，生產入庫數量60。回收料預計產量50，回收料入庫20
      #1.當期轉出
      #  回收料投入-20(退料)，轉出20
      #2.依工單QPA比率轉出
      #  回收料投入-20(退料)，轉出20*50/100=10
      #3.結案月轉出
      #  回收料投入-20(退料)，轉出0，期末結存20
      #  結案月：依結案轉出參數轉至入庫轉出或差異轉出
      CASE g_sys_6026
         WHEN '1'
            UPDATE xchb_tmp
               SET xchb301 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209)*-1   
             WHERE EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                                    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
               AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
               AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = p_flag )
               AND EXISTS(SELECT 1 FROM sfac_t WHERE sfacent = xchbent AND sfacdocno = xchb006 
                                    AND sfac001 = xchb009 
                                    AND ((g_sys_6013 = 'Y' AND sfac006 = xchb010) OR (g_sys_6013 = 'N' AND xchb010 = ' ')) 
                                    AND sfac002='5')     #代表回收料             
         WHEN '2'
            #PGS(D)-00824 ---start---
            LET g_sql = " MERGE INTO xchb_tmp ",
                        "       USING (SELECT xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcha007,xcha008,sfaa010,c.clevel,d.sfac001,",
                        "                     CASE WHEN '",g_sys_6013,"' = 'Y' THEN d.sfac006 ELSE ' ' END sfac006, ",
                        "                     SUM(xcha301) * SUM(d.sfac003) / SUM(sfaa012) xchb301",
                        "                FROM xcha_tmp,sfaa_tmp,sfac_tmp2 c ,sfac_t d",
                        "                WHERE xchaent = ",g_enterprise,
                        "                  AND xchald  = '",g_ld,"'",
                        "                  AND xcha001 = '",p_seq,"'",
                        "                  AND xcha003 = '",g_xcat001,"'",
                        "                  AND xcha004 = ",g_yy,
                        "                  AND xcha005 = ",g_pp,
                        "                  AND xcha006 = sfaadocno  ",       #工单
                        "                  AND xcha009 = sfaa010 ",            
                        "                  AND sfaa042 = ? ", 
                        "                  AND sfaadocno=c.sfacdocno ",  
                        "                  AND sfaaent = ",g_enterprise,
                        "                  AND sfaaent = d.sfacent AND sfaadocno = d.sfacdocno AND d.sfac002 = '5' ",
                        "                  AND c.clevel = ",p_xcbb006, 
                        "                GROUP BY xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcha007,xcha008,sfaa010,c.clevel,d.sfac001,d.sfac006 ", 
                        "                ) b ",
                        "          ON ( xchbent = b.xchaent ",
                        "         AND   xchbld  = b.xchald ",
                        "         AND   xchb001 = b.xcha001 ",
                        "         AND   xchb003 = b.xcha003 ",
                        "         AND   xchb004 = b.xcha004 ",
                        "         AND   xchb005 = b.xcha005 ",
                        "         AND   xchb006 = b.xcha006 ",
                        "         AND   xchb007 = b.xcha007 ",
                        "         AND   xchb008 = b.xcha008 ",
                        "         AND   xchb009 = b.sfac001  ",
                        "         AND   xchb010 = b.sfac006  ) ", 
                        "  WHEN MATCHED THEN    ",
                        "     UPDATE SET xchb301  = nvl(b.xchb301 ,0) * -1 ", 
                        " WHERE EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                        "                        AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")",
                        "   AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = ",p_xcbb006,")",
                        "   AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",
                        "   AND EXISTS(SELECT 1 FROM sfac_t WHERE sfacent = xchbent AND sfacdocno = xchb006 ",
                        "                        AND (('",g_sys_6013,"' = 'Y' AND sfac006 = xchb010) OR ('",g_sys_6013,"' = 'N' AND xchb010 = ' '))",
                        "                        AND sfac001 = xchb009  AND sfac002='5') "    #代表回收料
            #PGS(D)-00824 --- end ---
            PREPARE s_axcp500_avg_wip_process_p62 FROM g_sql
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code   = SQLCA.sqlcode
               LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p62"
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF  
            
            EXECUTE s_axcp500_avg_wip_process_p62  USING p_flag
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code   = SQLCA.sqlcode
               LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p62"
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF                   
      END CASE      
      #190103-00004#1---add---e
      
      #如果計算後的數量大於期初+本期投入+退料+超領，則將良品轉出數量改為期初+本期投入+退料+超領
      UPDATE xchb_tmp
         #SET xchb301 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb305)*-1   #170724-00055#1 add xchb305  #170629-00004#1 mark
       #WHERE ABS(xchb301) > xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb305   #170724-00055#1 add xchb305  #170629-00004#1 mark
         #SET xchb301 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209)*-1   #170724-00055#1 add xchb305  #170629-00004#1 add  #191205-00016#1 mark
      #WHERE ABS(xchb301) > xchb101 + xchb201 + xchb203 + xchb207 + xchb209   #170724-00055#1 add xchb305  #170629-00004#1 add #171114-00027#1 mark
       #WHERE ABS(xchb301) > ABS(xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb305)  #170724-00055#1 add xchb305  #171114-00027#1 add #191205-00016#1 mark
         SET xchb301 = (xchb101 + xchb201 + xchb203 + xchb207)*-1     #191205-00016#1
       WHERE ABS(xchb301) > ABS(xchb101 + xchb201 + xchb203 + xchb207 + xchb305)  #170724-00055#1 add xchb305  #171114-00027#1 add #191205-00016#1  
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = p_flag )                                        
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb301 "
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF
   
      #如果計算後的數量大於期初+本期投入+退料+超領-良品轉出，則將良品轉出數量改為期初+本期投入+退料+超領-良品轉出的數量
      UPDATE xchb_tmp
         #SET xchb303 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb305)*-1  #170724-00055#1 add xchb305  #170629-00004#1 mark
       #WHERE ABS(xchb303) > xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb305  #170724-00055#1 add xchb305  #170629-00004#1 mark
         SET xchb303 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 )*-1  #170724-00055#1 add xchb305  #170629-00004#1 add
       #WHERE ABS(xchb303) > xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301  #170724-00055#1 add xchb305  #170629-00004#1 add #171114-00027#1 mark
        WHERE ABS(xchb303) > ABS(xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb305)  #170724-00055#1 add xchb305  #171114-00027#1 add
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)                               
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = p_flag)                                          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb303 "
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF 
      
      #如果計算後的數量大於期初+本期投入+退料+超領-良品轉出，則將良品轉出數量改為期初+本期投入+退料+超領-良品轉出的數量
      UPDATE xchb_tmp
         #SET xchb307 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb305)*-1  #170724-00055#1 add xchb305  #170629-00004#1 mark
       #WHERE ABS(xchb307) > xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 +xchb305   #170724-00055#1 add xchb305  #170629-00004#1 mark
         SET xchb307 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 )*-1  #170724-00055#1 add xchb305  #170629-00004#1 add
      #WHERE ABS(xchb307) > xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301   #170724-00055#1 add xchb305  #170629-00004#1 add #171114-00027#1 mark
       WHERE ABS(xchb307) > ABS(xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb305)  #170724-00055#1 add xchb305    #171114-00027#1 add
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)                               
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = p_flag)                                          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb307 "
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF 
      
      #剩余数量处理xchb309
      UPDATE xchb_tmp
         #SET xchb309 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb303 + xchb305 + xchb307)*-1   #170629-00004#1 mark
         SET xchb309 = (xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb303 + xchb307)*-1   #170629-00004#1 add
       WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa048 >= g_bdate  AND sfaa048 < l_date2 AND sfaa042 = p_flag)  
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)                                                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb307 "
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
      
      #如工單未結案，期末數量=剩餘數量，如工單已結案，將剩餘數量給差異轉出(上面结案的单据已经做了处理，这边未结案的就不用在添加是否结案的条件，把所有的进出项加起来就是期末结存)
      UPDATE xchb_tmp
         #SET xchb901 = xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb303 + xchb305 + xchb307
         SET xchb901 = xchb101 + xchb201 + xchb203 + xchb207 + xchb209 + xchb301 + xchb303 + xchb305 + xchb307 + xchb309
       #WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND (sfaa048 IS NULL OR sfaa048 >= l_date2) AND sfaa042 = p_flag)   
       WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb307 "
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF	  
	  
      #更新当前站各项转出金额
      LET g_sql = " UPDATE xchb_tmp ",
                  #170808-00077#1---modify---s
                  #"    SET xchb302  = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  #"        xchb302a = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  #"        xchb302b = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  #"        xchb302c = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  #"        xchb302d = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  #"        xchb302e = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  #"        xchb302f = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  #"        xchb302g = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  #"        xchb302h = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb301 END,",
                  "    SET xchb302  = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102+xchb202+xchb204+xchb208+xchb306)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  "        xchb302a = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102a+xchb202a+xchb204a+xchb208a+xchb306a)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  "        xchb302b = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102b+xchb202b+xchb204b+xchb208b+xchb306b)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  "        xchb302c = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102c+xchb202c+xchb204c+xchb208c+xchb306c)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  "        xchb302d = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102d+xchb202d+xchb204d+xchb208d+xchb306d)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  "        xchb302e = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102e+xchb202e+xchb204e+xchb208e+xchb306e)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  "        xchb302f = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102f+xchb202f+xchb204f+xchb208f+xchb306f)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  "        xchb302g = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102g+xchb202g+xchb204g+xchb208g+xchb306g)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  "        xchb302h = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb305) = 0 THEN 0 ELSE (xchb102h+xchb202h+xchb204h+xchb208h+xchb306h)/(xchb101+xchb201+xchb203+xchb207+xchb305)*xchb301 END,",
                  #170808-00077#1---modify---e
                  "        xchb304  = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb304a = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb304b = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb304c = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb304d = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb304e = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb304f = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb304g = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb304h = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb303 END,",
                  "        xchb308  = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END,",
                  "        xchb308a = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END,",
                  "        xchb308b = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END,",
                  "        xchb308c = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END,",
                  "        xchb308d = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END,",
                  "        xchb308e = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END,",
                  "        xchb308f = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END,",
                  "        xchb308g = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END,",
                  "        xchb308h = CASE WHEN (xchb101+xchb201+xchb203+xchb207+xchb209+xchb305) = 0 THEN 0 ELSE (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h)/(xchb101+xchb201+xchb203+xchb207+xchb209+xchb305)*xchb307 END ",
                  "  WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                  "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                  "                                      AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")",
                  "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"                                          
      PREPARE s_axcp500_avg_wip_process_p7 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p7"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p7 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p7"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF    
      FREE s_axcp500_avg_wip_process_p7

      #xchb302,xchb304,xchb308 金額取位
       CASE g_round_type
           WHEN '1'   #四舍五入
                LET g_sql = "UPDATE xchb_tmp SET xchb302  = round(xchb302 ,? ), xchb302a = round(xchb302a,? ), xchb302b = round(xchb302b,? ), ",
                            "                    xchb302c = round(xchb302c,? ), xchb302d = round(xchb302d,? ), ",
                            "                    xchb302e = round(xchb302e,? ), xchb302f = round(xchb302f,? ), ",
                            "                    xchb302g = round(xchb302g,? ), xchb302h = round(xchb302h,? ), ",
                            "                    xchb304  = round(xchb304 ,? ), xchb304a = round(xchb304a,? ), xchb304b = round(xchb304b,? ), ",
                            "                    xchb304c = round(xchb304c,? ), xchb304d = round(xchb304d,? ), ",
                            "                    xchb304e = round(xchb304e,? ), xchb304f = round(xchb304f,? ), ",
                            "                    xchb304g = round(xchb304g,? ), xchb304h = round(xchb304h,? ), ",
                            #170724-00055#1---add---s                            
                            "                    xchb306  = round(xchb306 ,? ), xchb306a = round(xchb306a,? ), xchb306b = round(xchb306b,? ), ",
                            "                    xchb306c = round(xchb306c,? ), xchb306d = round(xchb306d,? ), ",
                            "                    xchb306e = round(xchb306e,? ), xchb306f = round(xchb306f,? ), ",
                            "                    xchb306g = round(xchb306g,? ), xchb306h = round(xchb306h,? ), ", 
                            #170724-00055#1---add---e                            
                            "                    xchb308  = round(xchb308 ,? ), xchb308a = round(xchb308a,? ), xchb308b = round(xchb308b,? ), ",
                            "                    xchb308c = round(xchb308c,? ), xchb308d = round(xchb308d,? ), ",
                            "                    xchb308e = round(xchb308e,? ), xchb308f = round(xchb308f,? ), ",
                            "                    xchb308g = round(xchb308g,? ), xchb308h = round(xchb308h,? )  ",
                            " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"                         
           WHEN '3'   #无条件截位
                LET g_sql = "UPDATE xchb_tmp SET xchb302  = trunc(xchb302 ,? ), xchb302a = trunc(xchb302a,? ), xchb302b = trunc(xchb302b,? ), ",
                            "                    xchb302c = trunc(xchb302c,? ), xchb302d = trunc(xchb302d,? ), ",
                            "                    xchb302e = trunc(xchb302e,? ), xchb302f = trunc(xchb302f,? ), ",
                            "                    xchb302g = trunc(xchb302g,? ), xchb302h = trunc(xchb302h,? ), ",
                            "                    xchb304  = trunc(xchb304 ,? ), xchb304a = trunc(xchb304a,? ), xchb304b = trunc(xchb304b,? ), ",
                            "                    xchb304c = trunc(xchb304c,? ), xchb304d = trunc(xchb304d,? ), ",
                            "                    xchb304e = trunc(xchb304e,? ), xchb304f = trunc(xchb304f,? ), ",
                            "                    xchb304g = trunc(xchb304g,? ), xchb304h = trunc(xchb304h,? ), ",
                            #170724-00055#1---add---s                            
                            "                    xchb306  = trunc(xchb306 ,? ), xchb306a = trunc(xchb306a,? ), xchb306b = trunc(xchb306b,? ), ",
                            "                    xchb306c = trunc(xchb306c,? ), xchb306d = trunc(xchb306d,? ), ",
                            "                    xchb306e = trunc(xchb306e,? ), xchb306f = trunc(xchb306f,? ), ",
                            "                    xchb306g = trunc(xchb306g,? ), xchb306h = trunc(xchb306h,? ), ", 
                            #170724-00055#1---add---e                              
                            "                    xchb308  = trunc(xchb308 ,? ), xchb308a = trunc(xchb308a,? ), xchb308b = trunc(xchb308b,? ), ",
                            "                    xchb308c = trunc(xchb308c,? ), xchb308d = trunc(xchb308d,? ), ",
                            "                    xchb308e = trunc(xchb308e,? ), xchb308f = trunc(xchb308f,? ), ",
                            "                    xchb308g = trunc(xchb308g,? ), xchb308h = trunc(xchb308h,? )  ",
                            " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"  
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xchb_tmp SET xchb302  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb302,?) ",
                         "                                                          ELSE ROUND(xchb302,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb302,?)",
                         "                                END ),",
                         "                    xchb302a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb302a,?) ",
                         "                                                         ELSE ROUND(xchb302a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb302a,?)",
                         "                                END ),",
                         "                    xchb302b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb302b,?) ",
                         "                                                         ELSE ROUND(xchb302b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb302b,?)",
                         "                                END ),",
                         "                    xchb302c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb302c,?) ",
                         "                                                         ELSE ROUND(xchb302c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb302c,?)",
                         "                                END ),",
                         "                    xchb302d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb302d,?) ",
                         "                                                         ELSE ROUND(xchb302d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb302d,?)",
                         "                                END ),",
                         "                    xchb302e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb302e,?) ",
                         "                                                         ELSE ROUND(xchb302e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb302e,?)",
                         "                                END ),",
                         "                    xchb302f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb302f,?) ",
                         "                                                         ELSE ROUND(xchb302f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb302f,?)",
                         "                                END ),",
                         "                    xchb302g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb302g,?) ",
                         "                                                         ELSE ROUND(xchb302g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb302g,?)",
                         "                                END ),",
                         "                    xchb302h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb302h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb302h,?) ",
                         "                                                         ELSE ROUND(xchb302h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb302h,?)",
                         "                                END ),",   
                         "                    xchb304  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb304,?) ",
                         "                                                          ELSE ROUND(xchb304,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb304,?)",
                         "                                END ),",
                         "                    xchb304a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb304a,?) ",
                         "                                                         ELSE ROUND(xchb304a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb304a,?)",
                         "                                END ),",
                         "                    xchb304b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb304b,?) ",
                         "                                                         ELSE ROUND(xchb304b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb304b,?)",
                         "                                END ),",
                         "                    xchb304c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb304c,?) ",
                         "                                                         ELSE ROUND(xchb304c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb304c,?)",
                         "                                END ),",
                         "                    xchb304d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb304d,?) ",
                         "                                                         ELSE ROUND(xchb304d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb304d,?)",
                         "                                END ),",
                         "                    xchb304e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb304e,?) ",
                         "                                                         ELSE ROUND(xchb304e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb304e,?)",
                         "                                END ),",
                         "                    xchb304f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb304f,?) ",
                         "                                                         ELSE ROUND(xchb304f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb304f,?)",
                         "                                END ),",
                         "                    xchb304g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb304g,?) ",
                         "                                                         ELSE ROUND(xchb304g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb304g,?)",
                         "                                END ),",
                         "                    xchb304h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb304h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb304h,?) ",
                         "                                                         ELSE ROUND(xchb304h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb304h,?)",
                         "                                END ),",  
                         "                    xchb306  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb306,?) ",
                         "                                                          ELSE ROUND(xchb306,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb306,?)",
                         "                                END ),",
                         "                    xchb306a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306a,?) ",
                         "                                                         ELSE ROUND(xchb306a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306a,?)",
                         "                                END ),",
                         "                    xchb306b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306b,?) ",
                         "                                                         ELSE ROUND(xchb306b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306b,?)",
                         "                                END ),",
                         "                    xchb306c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306c,?) ",
                         "                                                         ELSE ROUND(xchb306c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306c,?)",
                         "                                END ),",
                         "                    xchb306d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306d,?) ",
                         "                                                         ELSE ROUND(xchb306d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306d,?)",
                         "                                END ),",
                         "                    xchb306e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306e,?) ",
                         "                                                         ELSE ROUND(xchb306e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306e,?)",
                         "                                END ),",
                         "                    xchb306f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306f,?) ",
                         "                                                         ELSE ROUND(xchb306f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306f,?)",
                         "                                END ),",
                         "                    xchb306g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306g,?) ",
                         "                                                         ELSE ROUND(xchb306g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306g,?)",
                         "                                END ),",
                         "                    xchb306h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306h,?) ",
                         "                                                         ELSE ROUND(xchb306h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306h,?)",
                         "                                END ),",  
                         "                    xchb308  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb308,?) ",
                         "                                                          ELSE ROUND(xchb308,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb308,?)",
                         "                                END ),",
                         "                    xchb308a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb308a,?) ",
                         "                                                         ELSE ROUND(xchb308a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb308a,?)",
                         "                                END ),",
                         "                    xchb308b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb308b,?) ",
                         "                                                         ELSE ROUND(xchb308b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb308b,?)",
                         "                                END ),",
                         "                    xchb308c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb308c,?) ",
                         "                                                         ELSE ROUND(xchb308c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb308c,?)",
                         "                                END ),",
                         "                    xchb308d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb308d,?) ",
                         "                                                         ELSE ROUND(xchb308d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb308d,?)",
                         "                                END ),",
                         "                    xchb308e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb308e,?) ",
                         "                                                         ELSE ROUND(xchb308e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb308e,?)",
                         "                                END ),",
                         "                    xchb308f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb308f,?) ",
                         "                                                         ELSE ROUND(xchb308f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb308f,?)",
                         "                                END ),",
                         "                    xchb308g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb308g,?) ",
                         "                                                         ELSE ROUND(xchb308g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb308g,?)",
                         "                                END ),",
                         "                    xchb308h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb308h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb308h,?) ",
                         "                                                         ELSE ROUND(xchb308h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb308h,?)",
                         "                                END ) ",                         
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xchb_tmp SET xchb302  = ceil(xchb302 *power(10,?))/power(10,?),",
                         "                    xchb302a = ceil(xchb302a*power(10,?))/power(10,?),",
                         "                    xchb302b = ceil(xchb302b*power(10,?))/power(10,?),",
                         "                    xchb302c = ceil(xchb302c*power(10,?))/power(10,?),",
                         "                    xchb302d = ceil(xchb302d*power(10,?))/power(10,?),",
                         "                    xchb302e = ceil(xchb302e*power(10,?))/power(10,?),",
                         "                    xchb302f = ceil(xchb302f*power(10,?))/power(10,?),",
                         "                    xchb302g = ceil(xchb302g*power(10,?))/power(10,?),",
                         "                    xchb302h = ceil(xchb302h*power(10,?))/power(10,?),", 
                         "                    xchb304  = ceil(xchb304 *power(10,?))/power(10,?),",
                         "                    xchb304a = ceil(xchb304a*power(10,?))/power(10,?),",
                         "                    xchb304b = ceil(xchb304b*power(10,?))/power(10,?),",
                         "                    xchb304c = ceil(xchb304c*power(10,?))/power(10,?),",
                         "                    xchb304d = ceil(xchb304d*power(10,?))/power(10,?),",
                         "                    xchb304e = ceil(xchb304e*power(10,?))/power(10,?),",
                         "                    xchb304f = ceil(xchb304f*power(10,?))/power(10,?),",
                         "                    xchb304g = ceil(xchb304g*power(10,?))/power(10,?),",
                         "                    xchb304h = ceil(xchb304h*power(10,?))/power(10,?),",   
                         "                    xchb306  = ceil(xchb306 *power(10,?))/power(10,?),",
                         "                    xchb306a = ceil(xchb306a*power(10,?))/power(10,?),",
                         "                    xchb306b = ceil(xchb306b*power(10,?))/power(10,?),",
                         "                    xchb306c = ceil(xchb306c*power(10,?))/power(10,?),",
                         "                    xchb306d = ceil(xchb306d*power(10,?))/power(10,?),",
                         "                    xchb306e = ceil(xchb306e*power(10,?))/power(10,?),",
                         "                    xchb306f = ceil(xchb306f*power(10,?))/power(10,?),",
                         "                    xchb306g = ceil(xchb306g*power(10,?))/power(10,?),",
                         "                    xchb306h = ceil(xchb306h*power(10,?))/power(10,?),", 
                         "                    xchb308  = ceil(xchb308 *power(10,?))/power(10,?),",
                         "                    xchb308a = ceil(xchb308a*power(10,?))/power(10,?),",
                         "                    xchb308b = ceil(xchb308b*power(10,?))/power(10,?),",
                         "                    xchb308c = ceil(xchb308c*power(10,?))/power(10,?),",
                         "                    xchb308d = ceil(xchb308d*power(10,?))/power(10,?),",
                         "                    xchb308e = ceil(xchb308e*power(10,?))/power(10,?),",
                         "                    xchb308f = ceil(xchb308f*power(10,?))/power(10,?),",
                         "                    xchb308g = ceil(xchb308g*power(10,?))/power(10,?),",
                         "                    xchb308h = ceil(xchb308h*power(10,?))/power(10,?) ",                        
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
        #180802-00015#1 add-E                                  
      END CASE
      PREPARE s_axcp500_avg_wip_process_p74 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p74"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF   
      #180802-00015#1 mark-S
#      EXECUTE s_axcp500_avg_wip_process_p74 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,
#                                                  #170724-00055#1---add---s
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,                                                  
#                                                  #170724-00055#1---add---e                                                  
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                                  g_curr[p_seq].digit2
      #180802-00015#1 mark-E
      #180802-00015#1 add-S
      CASE g_round_type
         WHEN '1'
            EXECUTE s_axcp500_avg_wip_process_p74 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
         WHEN '2'
            EXECUTE s_axcp500_avg_wip_process_p74 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                      
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                      
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
         WHEN '3'
            EXECUTE s_axcp500_avg_wip_process_p74 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
         WHEN '4' 
            EXECUTE s_axcp500_avg_wip_process_p74 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb302h
                                                      
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb304h
                                                      
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306h
                                                      
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb308
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb308a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb308b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb308c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb308d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb308e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb308f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb308g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xchb308h
      END CASE
      #180802-00015#1 add-E 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p74"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
      
      #170601-00092#1---add---s
      #修正xchb302的值-先修至xchb302a,若xchb302a为零,则修正xchb302b......
      UPDATE xchb_tmp SET xchb302a = xchb302 - (xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h)   
       WHERE xchb302 <> xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h
         #AND xchb302 - (xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h) <> 0    #170804-00027#1 mark
         AND xchb302a <= xchb302b AND xchb302a <= xchb302c
         AND xchb302a <= xchb302d AND xchb302a <= xchb302e
         AND xchb302a <= xchb302f AND xchb302a <= xchb302g
         AND xchb302a <= xchb302h
         AND xchb009 <> 'DL+OH+SUB'  #171020-00010#1  add 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb302a"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb302a')         
   #     RETURN r_success
      END IF 

      UPDATE xchb_tmp SET xchb302b = xchb302 - (xchb302a + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h)  
       WHERE xchb302 <> xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h
         #AND xchb302 - (xchb302a + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h) <> 0 #170804-00027#1 mark
         AND xchb302b <= xchb302c
         AND xchb302b <= xchb302d AND xchb302b <= xchb302e
         AND xchb302b <= xchb302f AND xchb302b <= xchb302g
         AND xchb302b <= xchb302h 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb302b"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb302b')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb302c = xchb302 - (xchb302a + xchb302b + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h)  
       WHERE xchb302 <> xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h
         #AND xchb302 - (xchb302a + xchb302b + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h) <> 0 #170804-00027#1 mark
         AND xchb302c <= xchb302d AND xchb302c <= xchb302e
         AND xchb302c <= xchb302f AND xchb302c <= xchb302g
         AND xchb302c <= xchb302h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb302c"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb302c')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb302d = xchb302 - (xchb302a + xchb302b + xchb302c + xchb302e + xchb302f + xchb302g + xchb302h)  
       WHERE xchb302 <> xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h
         #AND xchb302 - (xchb302a + xchb302b + xchb302c + xchb302e + xchb302f + xchb302g + xchb302h) <> 0  #170804-00027#1 mark
         AND xchb302d <= xchb302e
         AND xchb302d <= xchb302f AND xchb302d <= xchb302g
         AND xchb302d <= xchb302h    
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb302d"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb302d')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb302e = xchb302 - (xchb302a + xchb302b + xchb302c + xchb302d + xchb302f + xchb302g + xchb302h)  
       WHERE xchb302 <> xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h
         #AND xchb302 - (xchb302a + xchb302b + xchb302c + xchb302d + xchb302f + xchb302g + xchb302h) <> 0 #170804-00027#1 mark
         AND xchb302e <= xchb302f AND xchb302e <= xchb302g
         AND xchb302e <= xchb302h     
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb302e"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb302e')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb302f = xchb302 - (xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302g + xchb302h)  
       WHERE xchb302 <> xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h
         #AND xchb302 - (xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302g + xchb302h) <> 0 #170804-00027#1 mark
         AND xchb302f <= xchb302g
         AND xchb302f <= xchb302h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb302f"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb302f')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb302g = xchb302 - (xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302h)  
       WHERE xchb302 <> xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h
         #AND xchb302 - (xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302h) <> 0 #170804-00027#1 mark
         AND xchb302g <= xchb302h 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb302g"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb302g')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb302h = xchb302 - (xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g)  
       WHERE xchb302 <> xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g + xchb302h
         #AND xchb302 - (xchb302a + xchb302b + xchb302c + xchb302d + xchb302e + xchb302f + xchb302g) <> 0 #170804-00027#1 mark
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb302h"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb302h')         
   #     RETURN r_success
      END IF  


      #修正xchb304的值-先修至xchb304a,若xchb304a为零,则修正xchb304b......
      UPDATE xchb_tmp SET xchb304a = xchb304 - (xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h)   
       WHERE xchb304 <> xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h
         #AND xchb304 - (xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h) <> 0   #170804-00027#1 mark
         AND xchb304a <= xchb304b AND xchb304a <= xchb304c
         AND xchb304a <= xchb304d AND xchb304a <= xchb304e
         AND xchb304a <= xchb304f AND xchb304a <= xchb304g
         AND xchb304a <= xchb304h
         AND xchb009 <> 'DL+OH+SUB'  #171020-00010#1  add 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb304a"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb304a')         
   #     RETURN r_success
      END IF 

      UPDATE xchb_tmp SET xchb304b = xchb304 - (xchb304a + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h)  
       WHERE xchb304 <> xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h
         #AND xchb304 - (xchb304a + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h) <> 0 #170804-00027#1 mark
         AND xchb304b <= xchb304c
         AND xchb304b <= xchb304d AND xchb304b <= xchb304e
         AND xchb304b <= xchb304f AND xchb304b <= xchb304g
         AND xchb304b <= xchb304h 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb304b"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb304b')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb304c = xchb304 - (xchb304a + xchb304b + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h)  
       WHERE xchb304 <> xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h
         #AND xchb304 - (xchb304a + xchb304b + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h) <> 0 #170804-00027#1 mark
         AND xchb304c <= xchb304d AND xchb304c <= xchb304e
         AND xchb304c <= xchb304f AND xchb304c <= xchb304g
         AND xchb304c <= xchb304h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb304c"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb304c')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb304d = xchb304 - (xchb304a + xchb304b + xchb304c + xchb304e + xchb304f + xchb304g + xchb304h)  
       WHERE xchb304 <> xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h
         #AND xchb304 - (xchb304a + xchb304b + xchb304c + xchb304e + xchb304f + xchb304g + xchb304h) <> 0  #170804-00027#1 mark
         AND xchb304d <= xchb304e
         AND xchb304d <= xchb304f AND xchb304d <= xchb304g
         AND xchb304d <= xchb304h    
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb304d"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb304d')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb304e = xchb304 - (xchb304a + xchb304b + xchb304c + xchb304d + xchb304f + xchb304g + xchb304h)  
       WHERE xchb304 <> xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h
         #AND xchb304 - (xchb304a + xchb304b + xchb304c + xchb304d + xchb304f + xchb304g + xchb304h) <> 0 #170804-00027#1 mark
         AND xchb304e <= xchb304f AND xchb304e <= xchb304g
         AND xchb304e <= xchb304h     
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb304e"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb304e')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb304f = xchb304 - (xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304g + xchb304h)  
       WHERE xchb304 <> xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h
         #AND xchb304 - (xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304g + xchb304h) <> 0 #170804-00027#1 mark
         AND xchb304f <= xchb304g
         AND xchb304f <= xchb304h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb304f"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb304f')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb304g = xchb304 - (xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304h)  
       WHERE xchb304 <> xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h
         #AND xchb304 - (xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304h) <> 0 #170804-00027#1 mark
         AND xchb304g <= xchb304h 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb304g"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb304g')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb304h = xchb304 - (xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g)  
       WHERE xchb304 <> xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g + xchb304h
         #AND xchb304 - (xchb304a + xchb304b + xchb304c + xchb304d + xchb304e + xchb304f + xchb304g) <> 0 #170804-00027#1 mark
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb304h"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb304h')         
   #     RETURN r_success
      END IF
      
      #修正xchb308的值-先修至xchb308a,若xchb308a为零,则修正xchb308b......
      UPDATE xchb_tmp SET xchb308a = xchb308 - (xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h)   
       WHERE xchb308 <> xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h
         #AND xchb308 - (xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h) <> 0   #170804-00027#1 mark
         AND xchb308a <= xchb308b AND xchb308a <= xchb308c
         AND xchb308a <= xchb308d AND xchb308a <= xchb308e
         AND xchb308a <= xchb308f AND xchb308a <= xchb308g
         AND xchb308a <= xchb308h
         AND xchb009 <> 'DL+OH+SUB'  #171020-00010#1  add 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb308a"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb308a')         
   #     RETURN r_success
      END IF 

      UPDATE xchb_tmp SET xchb308b = xchb308 - (xchb308a + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h)  
       WHERE xchb308 <> xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h
         #AND xchb308 - (xchb308a + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h) <> 0 #170804-00027#1 mark
         AND xchb308b <= xchb308c
         AND xchb308b <= xchb308d AND xchb308b <= xchb308e
         AND xchb308b <= xchb308f AND xchb308b <= xchb308g
         AND xchb308b <= xchb308h 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb308b"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb308b')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb308c = xchb308 - (xchb308a + xchb308b + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h)  
       WHERE xchb308 <> xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h
         #AND xchb308 - (xchb308a + xchb308b + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h) <> 0 #170804-00027#1 mark
         AND xchb308c <= xchb308d AND xchb308c <= xchb308e
         AND xchb308c <= xchb308f AND xchb308c <= xchb308g
         AND xchb308c <= xchb308h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb308c"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb308c')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb308d = xchb308 - (xchb308a + xchb308b + xchb308c + xchb308e + xchb308f + xchb308g + xchb308h)  
       WHERE xchb308 <> xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h
         #AND xchb308 - (xchb308a + xchb308b + xchb308c + xchb308e + xchb308f + xchb308g + xchb308h) <> 0  #170804-00027#1 mark
         AND xchb308d <= xchb308e
         AND xchb308d <= xchb308f AND xchb308d <= xchb308g
         AND xchb308d <= xchb308h    
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb308d"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb308d')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb308e = xchb308 - (xchb308a + xchb308b + xchb308c + xchb308d + xchb308f + xchb308g + xchb308h)  
       WHERE xchb308 <> xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h
         #AND xchb308 - (xchb308a + xchb308b + xchb308c + xchb308d + xchb308f + xchb308g + xchb308h) <> 0 #170804-00027#1 mark
         AND xchb308e <= xchb308f AND xchb308e <= xchb308g
         AND xchb308e <= xchb308h     
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb308e"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb308e')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb308f = xchb308 - (xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308g + xchb308h)  
       WHERE xchb308 <> xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h
         #AND xchb308 - (xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308g + xchb308h) <> 0 #170804-00027#1 mark
         AND xchb308f <= xchb308g
         AND xchb308f <= xchb308h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb308f"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb308f')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb308g = xchb308 - (xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308h)  
       WHERE xchb308 <> xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h
         #AND xchb308 - (xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308h) <> 0 #170804-00027#1 mark
         AND xchb308g <= xchb308h 
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb308g"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb308g')         
   #     RETURN r_success
      END IF   
      UPDATE xchb_tmp SET xchb308h = xchb308 - (xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g)  
       WHERE xchb308 <> xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g + xchb308h
         #AND xchb308 - (xchb308a + xchb308b + xchb308c + xchb308d + xchb308e + xchb308f + xchb308g) <> 0 #170804-00027#1 mark
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb308h"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb308h')         
   #     RETURN r_success
      END IF      
      #170601-00092#1---add---e
      
      #金额的尾差处理
      #210105-00009#1---add---s
      #如果总的金额全部转出,那把转出的各项金额就给投入的各项金额
      LET g_sql = " UPDATE xchb_tmp ",
                  #良品轉出、報廢、回收轉出是存放負數
                  "    SET xchb302  = ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb304  + xchb308 ) * (-1),",
                  "        xchb302a = ((xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb304a + xchb308a) * (-1),",
                  "        xchb302b = ((xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb304b + xchb308b) * (-1),",
                  "        xchb302c = ((xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb304c + xchb308c) * (-1),",
                  "        xchb302d = ((xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb304d + xchb308d) * (-1),",
                  "        xchb302e = ((xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb304e + xchb308e) * (-1),",
                  "        xchb302f = ((xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb304f + xchb308f) * (-1),",
                  "        xchb302g = ((xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb304g + xchb308g) * (-1),",
                  "        xchb302h = ((xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb304h + xchb308h) * (-1) ",
                  "  WHERE ABS(xchb301) >= ABS(xchb303) AND ABS(xchb301) >= ABS(xchb307) ",
                  "    AND ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306) + xchb304  + xchb308 ) = 0 ",  
                  "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                  "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                  "    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")",                  
                  "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"                                          
      PREPARE s_axcp500_avg_wip_process_p711 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p711"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p711 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p711"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF    
      FREE s_axcp500_avg_wip_process_p711      

      LET g_sql = " UPDATE xchb_tmp ",
                  #良品轉出、報廢、回收轉出是存放負數
                  "    SET xchb304  = ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb302  + xchb308 ) * (-1),",
                  "        xchb304a = ((xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb302a + xchb308a) * (-1),",
                  "        xchb304b = ((xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb302b + xchb308b) * (-1),",
                  "        xchb304c = ((xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb302c + xchb308c) * (-1),",
                  "        xchb304d = ((xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb302d + xchb308d) * (-1),",
                  "        xchb304e = ((xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb302e + xchb308e) * (-1),",
                  "        xchb304f = ((xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb302f + xchb308f) * (-1),",
                  "        xchb304g = ((xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb302g + xchb308g) * (-1),",
                  "        xchb304h = ((xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb302h + xchb308h) * (-1) ",
                  "  WHERE ABS(xchb303) >= ABS(xchb301) AND ABS(xchb303) >= ABS(xchb307) ",
                  "    AND ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306) + xchb304  + xchb308 ) = 0 ",  
                  "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                  "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                  "    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")",                  
                  "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"                                          
      PREPARE s_axcp500_avg_wip_process_p721 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p721"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p721 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p721"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF    
      FREE s_axcp500_avg_wip_process_p721
      
      LET g_sql = " UPDATE xchb_tmp ",
                  #良品轉出、報廢、回收轉出是存放負數
                  "    SET xchb308  = ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb304  + xchb302 ) * (-1),",
                  "        xchb308a = ((xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb304a + xchb302a) * (-1),",
                  "        xchb308b = ((xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb304b + xchb302b) * (-1),",
                  "        xchb308c = ((xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb304c + xchb302c) * (-1),",
                  "        xchb308d = ((xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb304d + xchb302d) * (-1),",
                  "        xchb308e = ((xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb304e + xchb302e) * (-1),",
                  "        xchb308f = ((xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb304f + xchb302f) * (-1),",
                  "        xchb308g = ((xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb304g + xchb302g) * (-1),",
                  "        xchb308h = ((xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb304h + xchb302h) * (-1) ",
                  "  WHERE ABS(xchb307) >= ABS(xchb301) AND ABS(xchb307) >= ABS(xchb303) ",
                  "    AND ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306) + xchb304  + xchb308 ) = 0 ",  
                  "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                  "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                  "    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")",                  
                  "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"                                          
      PREPARE s_axcp500_avg_wip_process_p731 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p731"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p731 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p731"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF    
      FREE s_axcp500_avg_wip_process_p731      
      #210105-00009#1---add---e      
      
      LET g_sql = " UPDATE xchb_tmp ",
                  #170618-00158#1--modify---s
                  #良品轉出、報廢、回收轉出是存放負數
                  #"    SET xchb302  = (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       - xchb304  - xchb308,",
                  #"        xchb302a = (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) - xchb304a - xchb308a,",
                  #"        xchb302b = (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) - xchb304b - xchb308b,",
                  #"        xchb302c = (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) - xchb304c - xchb308c,",
                  #"        xchb302d = (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) - xchb304d - xchb308d,",
                  #"        xchb302e = (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) - xchb304e - xchb308e,",
                  #"        xchb302f = (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) - xchb304f - xchb308f,",
                  #"        xchb302g = (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) - xchb304g - xchb308g,",
                  #"        xchb302h = (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) - xchb304h - xchb308h ",
                  #170811-00039#1---modify---s
                  #"    SET xchb302  = (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb304  + xchb308,",
                  #"        xchb302a = (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb304a + xchb308a,",
                  #"        xchb302b = (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb304b + xchb308b,",
                  #"        xchb302c = (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb304c + xchb308c,",
                  #"        xchb302d = (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb304d + xchb308d,",
                  #"        xchb302e = (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb304e + xchb308e,",
                  #"        xchb302f = (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb304f + xchb308f,",
                  #"        xchb302g = (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb304g + xchb308g,",
                  #"        xchb302h = (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb304h + xchb308h ",
                  ##170618-00158#1--modify---e
                  #"  WHERE xchb301 >= xchb303 AND xchb301 >= xchb307 ",
                  "    SET xchb302  = ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb304  + xchb308 ) * (-1),",
                  "        xchb302a = ((xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb304a + xchb308a) * (-1),",
                  "        xchb302b = ((xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb304b + xchb308b) * (-1),",
                  "        xchb302c = ((xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb304c + xchb308c) * (-1),",
                  "        xchb302d = ((xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb304d + xchb308d) * (-1),",
                  "        xchb302e = ((xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb304e + xchb308e) * (-1),",
                  "        xchb302f = ((xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb304f + xchb308f) * (-1),",
                  "        xchb302g = ((xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb304g + xchb308g) * (-1),",
                  "        xchb302h = ((xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb304h + xchb308h) * (-1) ",
                  "  WHERE ABS(xchb301) >= ABS(xchb303) AND ABS(xchb301) >= ABS(xchb307) ",
                  "    AND xchb901 = 0 ",
                  #170811-00039#1---modify---e
                  "    AND xchb309 = 0 ",  #190103-00004#1 
                  "    AND xchb301 <> 0 ",
                  "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                  "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                  "    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")",                  
                  "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"                                          
      PREPARE s_axcp500_avg_wip_process_p71 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p71"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p71 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p71"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF    
      FREE s_axcp500_avg_wip_process_p71
      
      LET g_sql = " UPDATE xchb_tmp ",
                  #170618-00158#1--modify---s
                  #良品轉出、報廢、回收轉出是存放負數
                  #"    SET xchb304  = (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       - xchb302 - xchb308,",
                  #"        xchb304a = (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) - xchb302a - xchb308a,",
                  #"        xchb304b = (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) - xchb302b - xchb308b,",
                  #"        xchb304c = (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) - xchb302c - xchb308c,",
                  #"        xchb304d = (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) - xchb302d - xchb308d,",
                  #"        xchb304e = (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) - xchb302e - xchb308e,",
                  #"        xchb304f = (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) - xchb302f - xchb308f,",
                  #"        xchb304g = (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) - xchb302g - xchb308g,",
                  #"        xchb304h = (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) - xchb302h - xchb308h ",
                  #170811-00039#1---modify---s
                  #"    SET xchb304  = (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb302  + xchb308,",
                  #"        xchb304a = (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb302a + xchb308a,",
                  #"        xchb304b = (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb302b + xchb308b,",
                  #"        xchb304c = (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb302c + xchb308c,",
                  #"        xchb304d = (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb302d + xchb308d,",
                  #"        xchb304e = (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb302e + xchb308e,",
                  #"        xchb304f = (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb302f + xchb308f,",
                  #"        xchb304g = (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb302g + xchb308g,",
                  #"        xchb304h = (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb302h + xchb308h ",
                  ##170618-00158#1--modify--e
                  #"  WHERE xchb303 > xchb301 AND xchb303 >= xchb307 ",
                  "    SET xchb304  = ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb302  + xchb308 ) * (-1),",
                  "        xchb304a = ((xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb302a + xchb308a) * (-1),",
                  "        xchb304b = ((xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb302b + xchb308b) * (-1),",
                  "        xchb304c = ((xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb302c + xchb308c) * (-1),",
                  "        xchb304d = ((xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb302d + xchb308d) * (-1),",
                  "        xchb304e = ((xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb302e + xchb308e) * (-1),",
                  "        xchb304f = ((xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb302f + xchb308f) * (-1),",
                  "        xchb304g = ((xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb302g + xchb308g) * (-1),",
                  "        xchb304h = ((xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb302h + xchb308h) * (-1) ",
                  "  WHERE ABS(xchb303) > ABS(xchb301) AND ABS(xchb303) >= ABS(xchb307) ",
                  "    AND xchb901 = 0 ",
                  #170811-00039#1---modify---e
                  "    AND xchb309 = 0 ",  #190103-00004#1
                  "    AND xchb303 <> 0 ",
                  "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
                  "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                  "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                  "    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")"                   
      PREPARE s_axcp500_avg_wip_process_p72 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p72"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p72 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p72"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF
      FREE s_axcp500_avg_wip_process_p72
      
      LET g_sql = " UPDATE xchb_tmp ",
                  #170618-00158#1--modify---s
                  #良品轉出、報廢、回收轉出是存放負數
                  #"    SET xchb308  = (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       - xchb302  - xchb304,",
                  #"        xchb308a = (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) - xchb302a - xchb304a,",
                  #"        xchb308b = (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) - xchb302b - xchb304b,",
                  #"        xchb308c = (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) - xchb302c - xchb304c,",
                  #"        xchb308d = (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) - xchb302d - xchb304d,",
                  #"        xchb308e = (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) - xchb302e - xchb304e,",
                  #"        xchb308f = (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) - xchb302f - xchb304f,",
                  #"        xchb308g = (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) - xchb302g - xchb304g,",
                  #"        xchb308h = (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) - xchb302h - xchb304h ",
                  #170811-00039#1---modify---s
                  #"    SET xchb308  = (xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb302  + xchb304,",
                  #"        xchb308a = (xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb302a + xchb304a,",
                  #"        xchb308b = (xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb302b + xchb304b,",
                  #"        xchb308c = (xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb302c + xchb304c,",
                  #"        xchb308d = (xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb302d + xchb304d,",
                  #"        xchb308e = (xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb302e + xchb304e,",
                  #"        xchb308f = (xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb302f + xchb304f,",
                  #"        xchb308g = (xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb302g + xchb304g,",
                  #"        xchb308h = (xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb302h + xchb304h ",
                  ##170618-00158#1--modify---e
                  #"  WHERE xchb307 > xchb301 AND xchb307 > xchb303 ",
                  "    SET xchb308  = ((xchb102+xchb202+xchb204+xchb208+xchb210+xchb306)       + xchb302  + xchb304 ) * (-1),",
                  "        xchb308a = ((xchb102a+xchb202a+xchb204a+xchb208a+xchb210a+xchb306a) + xchb302a + xchb304a) * (-1),",
                  "        xchb308b = ((xchb102b+xchb202b+xchb204b+xchb208b+xchb210b+xchb306b) + xchb302b + xchb304b) * (-1),",
                  "        xchb308c = ((xchb102c+xchb202c+xchb204c+xchb208c+xchb210c+xchb306c) + xchb302c + xchb304c) * (-1),",
                  "        xchb308d = ((xchb102d+xchb202d+xchb204d+xchb208d+xchb210d+xchb306d) + xchb302d + xchb304d) * (-1),",
                  "        xchb308e = ((xchb102e+xchb202e+xchb204e+xchb208e+xchb210e+xchb306e) + xchb302e + xchb304e) * (-1),",
                  "        xchb308f = ((xchb102f+xchb202f+xchb204f+xchb208f+xchb210f+xchb306f) + xchb302f + xchb304f) * (-1),",
                  "        xchb308g = ((xchb102g+xchb202g+xchb204g+xchb208g+xchb210g+xchb306g) + xchb302g + xchb304g) * (-1),",
                  "        xchb308h = ((xchb102h+xchb202h+xchb204h+xchb208h+xchb210h+xchb306h) + xchb302h + xchb304h) * (-1) ",
                  "  WHERE ABS(xchb307) > ABS(xchb301) AND ABS(xchb307) > ABS(xchb303) ",
                  "    AND xchb901 = 0 ",
                  #170811-00039#1---modify---e
                  "    AND xchb309 = 0 ",  #190103-00004#1
                  "    AND xchb307 <> 0 ",
                  "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
                  "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                  "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                  "    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")"                   
      PREPARE s_axcp500_avg_wip_process_p73 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p73"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p73 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p73"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
      FREE s_axcp500_avg_wip_process_p73


      #将良品转出移至下一站的上站转入 
      #PGS(D)-00824 ---start---
      LET g_sql = "  MERGE INTO xchb_tmp a ",
                  "  USING (SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,",
                  "                         xchb006,xcbt006,xcbt007,xchb009,xchb010,",
                  "                         xchb011,xchb012,xchb013,xchb014,xchb015, ",
                  #180712-00001#1 mark-S
#                  "                         xchb301,xchb302,xchb302a,xchb302b,xchb302c,",
#                  "                         xchb302d,xchb302e,xchb302f,xchb302g,xchb302h,xchbtime ",
                  #180712-00001#1 mark-E
                  #180712-00001#1 add-S
                  "                         SUM(xchb301) xchb301,SUM(xchb302) xchb302,SUM(xchb302a) xchb302a,SUM(xchb302b) xchb302b,SUM(xchb302c) xchb302c,",
                  #"                         SUM(xchb302d) xchb302d,SUM(xchb302e) xchb302e,SUM(xchb302f) xchb302f,SUM(xchb302g) xchb302g,SUM(xchb302h) xchb302h,xchbtime ",  #191126-00020#1 mark
                  "                         SUM(xchb302d) xchb302d,SUM(xchb302e) xchb302e,SUM(xchb302f) xchb302f,SUM(xchb302g) xchb302g,SUM(xchb302h) xchb302h ",            #191126-00020#1 add                  
                  #180712-00001#1 add-E
                  #190411-00017#1 A mark-S
#                  "           FROM xchb_tmp b,xcbt_t,sfac_tmp2",
#                  "          WHERE xchbent = xcbtent ",
#                  "            AND b.xchb004 = xcbt001 ",
#                  "            AND b.xchb005 = xcbt002 ",
#                  "            AND b.xchb006 = xcbt003 ",
#                  "            AND b.xchb007 = xcbt004 ",
#                  "            AND b.xchb008 = xcbt005 ",
#                  "            AND b.xchb006 = sfacdocno ",
#                  "            AND b.xchbent = ",g_enterprise,
#                  "            AND b.xchbld  = '",g_ld,"'",
#                  "            AND b.xchb001 = '",p_seq,"'",
#                  "            AND b.xchb003 = '",g_xcat001,"'",
#                  "            AND b.xchb004 = ",g_yy,
#                  "            AND b.xchb005 = ",g_pp,
#                  "            AND xcbt008 = ",l_xcbt008,
#                  "            AND clevel = ",p_xcbb006, 
                  #190411-00017#1 A mark-E
                  #190411-00017#1 A add-S
                  "           FROM xchb_tmp b,xcbt_t ",
                  "          WHERE xchbent = xcbtent ",
                  "            AND b.xchb004 = xcbt001 ",
                  "            AND b.xchb005 = xcbt002 ",
                  "            AND b.xchb006 = xcbt003 ",
                  "            AND b.xchb007 = xcbt004 ",
                  "            AND b.xchb008 = xcbt005 ",
                  "            AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = b.xchb006 AND clevel = ",p_xcbb006,") ",
                  "            AND b.xchbent = ",g_enterprise,
                  "            AND b.xchbld  = '",g_ld,"'",
                  "            AND b.xchb001 = '",p_seq,"'",
                  "            AND b.xchb003 = '",g_xcat001,"'",
                  "            AND b.xchb004 = ",g_yy,
                  "            AND b.xchb005 = ",g_pp,
                  "            AND xcbt008 = ",l_xcbt008,
                  #190411-00017#1 A add-E
                  "            AND b.xchb007 <> 'END' ",         #170330-00107#1 add                  
                  "            AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = b.xchbent AND sfaadocno = b.xchb006 AND sfaa042 = '",p_flag,"')",
                  #170629-00004#1---add---s
                  #若只有當站下線，那就不做下站轉入
                  "            AND (b.xchb201 <> 0 OR b.xchb203 <> 0 OR b.xchb207 <> 0 OR b.xchb209 <> 0 OR b.xchb301 <> 0 ",
                  "              OR b.xchb303 <> 0 OR b.xchb307 <> 0 OR b.xchb309 <> 0 ) " ,
                  #170629-00004#1---add---e           
                  #180712-00001#1 add-S       
                  "          GROUP BY xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xcbt006,xcbt007,xchb009,xchb010, ",
                  #"                   xchb011,xchb012,xchb013,xchb014,xchb015,xchbtime ",  #191126-00020#1 mark
                  "                   xchb011,xchb012,xchb013,xchb014,xchb015 ",            #191126-00020#1 add                  
                  #180712-00001#1 add-E   
                  "        ) c", 
                  " ON (a.xchbent = c.xchbent ",
                  " AND a.xchbld  = c.xchbld  ",
                  " AND a.xchb001 = c.xchb001 ",
                  " AND a.xchb002 = c.xchb002 ",
                  " AND a.xchb003 = c.xchb003 ",
                  " AND a.xchb004 = c.xchb004 ",
                  " AND a.xchb005 = c.xchb005 ",
                  " AND a.xchb006 = c.xchb006 ",
                  " AND a.xchb007 = c.xcbt006 ",
                  " AND a.xchb008 = c.xcbt007 ",
                  " AND a.xchb009 = c.xchb009 ",
                  " AND a.xchb010 = c.xchb010 ",
                  " AND a.xchb011 = c.xchb011 ",
                  " AND a.xchb014 = c.xchb014 ",
                  " AND a.xchb015 = c.xchb015 )",
                  " WHEN MATCHED THEN    ",
                  "       UPDATE SET a.xchb203  = c.xchb301 *-1  ,",
                  "                  a.xchb204  = c.xchb302 *-1  ,",
                  "                  a.xchb204a = c.xchb302a *-1 ,",
                  "                  a.xchb204b = c.xchb302b *-1 ,",
                  "                  a.xchb204c = c.xchb302c *-1 ,",
                  "                  a.xchb204d = c.xchb302d *-1 ,",
                  "                  a.xchb204e = c.xchb302e *-1 ,",
                  "                  a.xchb204f = c.xchb302f *-1 ,",
                  "                  a.xchb204g = c.xchb302g *-1 ,",
                  "                  a.xchb204h = c.xchb302h *-1 " ,
                  "   WHEN NOT MATCHED THEN ",
                  "       INSERT VALUES(c.xchbent,c.xchbcomp,c.xchbld,c.xchb001,c.xchb002,c.xchb003,c.xchb004,c.xchb005,",
                  "                     c.xchb006,c.xcbt006,c.xcbt007,c.xchb009,c.xchb010,",               
                  "                     c.xchb011,c.xchb012,c.xchb013,c.xchb014,c.xchb015,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
				      "                     0,0,0,0,0,0,0,0,0,0,",
                  "                     c.xchb301*-1,c.xchb302*-1,c.xchb302a*-1,c.xchb302b*-1,c.xchb302c*-1,c.xchb302d*-1,c.xchb302e*-1,c.xchb302f*-1,c.xchb302g*-1,c.xchb302h*-1,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
                  "                     0,0,0,0,0,0,0,0,0,0,",
                  #"                     c.xchbtime )"  #191126-00020#1 mark
                  "                     ? )"            #191126-00020#1 add                  
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg_wip_process_p63 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p63"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      #EXECUTE s_axcp500_avg_wip_process_p63              #191126-00020#1 mark
      EXECUTE s_axcp500_avg_wip_process_p63 USING l_date  #191126-00020#1 add  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p63"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF
      
      #PGS(D)-00824 ---start---
      #PGS(D)-00824 --- end ---
      
      #190103-00004#1---add---s
      #如果下站是群组站,则上站转入要与转出一样,这笔资料要么全部转出要么0转出0转入 
      #将良品转出移至下一站的上站转入 
      #PGS(D)-00824 ---start---
      LET g_sql = "  MERGE INTO xchb_tmp a ",
                  "  USING (SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,xchb002,",
                  "                         xchb003,xchb004,xchb005,xchb006,xchb007,",
                  "                         xchb008,xchb009,xchb010,xchb011,xchb014,xchb015, ",
                  "                         (xcbt010+xcbt011+xcbt012+xcbt013)*NVL(qpa,1) l_out ",
                  "           FROM xchb_tmp",
	               #"                LEFT JOIN (SELECT sfbadocno,sfba006,DECODE(sfaa012,0,1, (SUM( CASE sfba022 WHEN 0 THEN 1 ELSE (sfba013-sfba015) END) OVER ( PARTITION BY sfbadocno,sfba006))/sfaa012 ) qpa ",  #210105-00048#1 mark
                  #210105-00048#1---add---s
                  "                LEFT JOIN (SELECT sfbadocno,sfba006,",
                  "                                  (CASE WHEN sfba008='3' AND sfba013 =0 ",  #间接材料在发料发其他料时,总应发量是记录0,数量记录在超领发料中,所以这边单独处理
                  "                                        THEN DECODE(sfaa012,0,1, (SUM( CASE sfba022 WHEN 0 THEN 1 ELSE (sfba013-sfba015) END) OVER ( PARTITION BY sfbadocno,sfbaseq))/sfaa012) ",
                  "                                        ELSE DECODE(sfaa012,0,1, (SUM( CASE sfba022 WHEN 0 THEN 1 ELSE (sfba013-sfba015) END) OVER ( PARTITION BY sfbadocno,sfba006))/sfaa012) ",
                  "                                   END) qpa ",
                  #210105-00048#1---add---e                  
                  "                             FROM sfba_tmp,sfaa_tmp WHERE sfaaent = sfbaent AND sfaadocno = sfbadocno AND sfaa042='",p_flag,"' AND sfaaent = ",g_enterprise,") ",
                  "                       ON xchb006 = sfbadocno AND xchb009 = sfba006",
                  "                ,xcbt_t,sfac_tmp2 ",
                  "          WHERE xchbent = xcbtent ",
                  "            AND xchb004 = xcbt001 ",
                  "            AND xchb005 = xcbt002 ",
                  "            AND xchb006 = xcbt003 ",
                  "            AND xchb007 = xcbt006 ",
                  "            AND xchb008 = xcbt007 ",
                  "            AND xchb006 = sfacdocno ",
                  "            AND xchbent = ",g_enterprise,
                  "            AND xchbld  = '",g_ld,"'",
                  "            AND xchb001 = '",p_seq,"'",
                  "            AND xchb003 = '",g_xcat001,"'",
                  "            AND xchb004 = ",g_yy,
                  "            AND xchb005 = ",g_pp,
                  "            AND xcbt008 = ",l_xcbt008,
                  "            AND clevel = ",p_xcbb006, 
                  "            AND xchb007 <> 'END' ",                         
                  #"            AND EXISTS(SELECT 1 FROM sfcb_t WHERE sfcbent=xchbent AND sfcbdocno = xchb006 AND sfcb001 = 0 AND sfcb003 = xchb007 AND sfcb004 = xchb008 AND sfcb006 IS NOT NULL ) ",  #191126-00020#1 mark
                  "            AND EXISTS(SELECT 1 FROM sfcb_t WHERE sfcbent = xcbtent AND sfcbdocno = xcbt003 AND sfcb003 = xcbt006 AND sfcb004 = xcbt006 AND sfcb006 = xcbt004  ) ",                  #191126-00020#1 add
                  "            AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                 
                  "        ) b", 
                  " ON (a.xchbent = b.xchbent ",
                  " AND a.xchbld  = b.xchbld  ",
                  " AND a.xchb001 = b.xchb001 ",
                  " AND a.xchb002 = b.xchb002 ",
                  " AND a.xchb003 = b.xchb003 ",
                  " AND a.xchb004 = b.xchb004 ",
                  " AND a.xchb005 = b.xchb005 ",
                  " AND a.xchb006 = b.xchb006 ",
                  " AND a.xchb007 = b.xchb007 ",
                  " AND a.xchb008 = b.xchb008 ",
                  " AND a.xchb009 = b.xchb009 ",
                  " AND a.xchb010 = b.xchb010 ",
                  " AND a.xchb011 = b.xchb011 ",
                  " AND a.xchb014 = b.xchb014 ",
                  " AND a.xchb015 = b.xchb015 )",
                  " WHEN MATCHED THEN    ",
                  "       UPDATE SET a.xchb203  = CASE WHEN b.l_out > a.xchb203 THEN a.xchb203 ELSE DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209)) END  ,",
                  "                  a.xchb204  = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204 ELSE DECODE(a.xchb203,0,0,a.xchb204 /a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END ,",
                  "                  a.xchb204a = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204a ELSE DECODE(a.xchb203,0,0,a.xchb204a/a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END ,",
                  "                  a.xchb204b = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204b ELSE DECODE(a.xchb203,0,0,a.xchb204b/a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END ,",
                  "                  a.xchb204c = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204c ELSE DECODE(a.xchb203,0,0,a.xchb204c/a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END ,",
                  "                  a.xchb204d = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204d ELSE DECODE(a.xchb203,0,0,a.xchb204d/a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END ,",
                  "                  a.xchb204e = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204e ELSE DECODE(a.xchb203,0,0,a.xchb204e/a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END ,",
                  "                  a.xchb204f = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204f ELSE DECODE(a.xchb203,0,0,a.xchb204f/a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END ,",
                  "                  a.xchb204g = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204g ELSE DECODE(a.xchb203,0,0,a.xchb204g/a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END ,",
                  "                  a.xchb204h = CASE WHEN b.l_out > a.xchb203 THEN a.xchb204h ELSE DECODE(a.xchb203,0,0,a.xchb204h/a.xchb203*DECODE(b.l_out,0,0,b.l_out -(a.xchb101+a.xchb201+a.xchb207+a.xchb209))) END "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg_wip_process_p64 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p64"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  
   
      EXECUTE s_axcp500_avg_wip_process_p64
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p64"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
   #     RETURN r_success
      END IF  

      #處理金額尾差
      CASE g_round_type
           WHEN '1'   #四舍五入
                LET g_sql = "UPDATE xchb_tmp SET xchb204  = round(xchb204 ,? ), xchb204a = round(xchb204a,? ), xchb204b = round(xchb204b,? ), ",
                            "                    xchb204c = round(xchb204c,? ), xchb204d = round(xchb204d,? ), ",
                            "                    xchb204e = round(xchb204e,? ), xchb204f = round(xchb204f,? ), ",
                            "                    xchb204g = round(xchb204g,? ), xchb204h = round(xchb204h,? ) ",
                            " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
           WHEN '3'   #无条件截位
                LET g_sql = "UPDATE xchb_tmp SET xchb204  = trunc(xchb204 ,? ), xchb204a = trunc(xchb204a,? ), xchb204b = trunc(xchb204b,? ), ",
                            "                    xchb204c = trunc(xchb204c,? ), xchb204d = trunc(xchb204d,? ), ",
                            "                    xchb204e = trunc(xchb204e,? ), xchb204f = trunc(xchb204f,? ), ",
                            "                    xchb204g = trunc(xchb204g,? ), xchb204h = trunc(xchb204h,? ) ",
                            " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
           WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xchb_tmp SET xchb204  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb204,?) ",
                         "                                                          ELSE ROUND(xchb204,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb204,?)",
                         "                                END ),",
                         "                    xchb204a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb204a,?) ",
                         "                                                         ELSE ROUND(xchb204a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb204a,?)",
                         "                                END ),",
                         "                    xchb204b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb204b,?) ",
                         "                                                         ELSE ROUND(xchb204b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb204b,?)",
                         "                                END ),",
                         "                    xchb204c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb204c,?) ",
                         "                                                         ELSE ROUND(xchb204c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb204c,?)",
                         "                                END ),",
                         "                    xchb204d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb204d,?) ",
                         "                                                         ELSE ROUND(xchb204d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb204d,?)",
                         "                                END ),",
                         "                    xchb204e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb204e,?) ",
                         "                                                         ELSE ROUND(xchb204e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb204e,?)",
                         "                                END ),",
                         "                    xchb204f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb204f,?) ",
                         "                                                         ELSE ROUND(xchb204f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb204f,?)",
                         "                                END ),",
                         "                    xchb204g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb204g,?) ",
                         "                                                         ELSE ROUND(xchb204g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb204g,?)",
                         "                                END ),",
                         "                    xchb204h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb204h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb204h,?) ",
                         "                                                         ELSE ROUND(xchb204h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb204h,?)",
                         "                                END )",
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xchb_tmp SET xchb204  = ceil(xchb204 *power(10,?))/power(10,?),",
                         "                    xchb204a = ceil(xchb204a*power(10,?))/power(10,?),",
                         "                    xchb204b = ceil(xchb204b*power(10,?))/power(10,?),",
                         "                    xchb204c = ceil(xchb204c*power(10,?))/power(10,?),",
                         "                    xchb204d = ceil(xchb204d*power(10,?))/power(10,?),",
                         "                    xchb204e = ceil(xchb204e*power(10,?))/power(10,?),",
                         "                    xchb204f = ceil(xchb204f*power(10,?))/power(10,?),",
                         "                    xchb204g = ceil(xchb204g*power(10,?))/power(10,?),",
                         "                    xchb204h = ceil(xchb204h*power(10,?))/power(10,?)",
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
      END CASE

      PREPARE s_axcp500_avg_wip_process_p80 FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p74"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
      END IF
      CASE g_round_type
         WHEN '1'
            EXECUTE s_axcp500_avg_wip_process_p80 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
         WHEN '2'
            EXECUTE s_axcp500_avg_wip_process_p80 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
         WHEN '3'
            EXECUTE s_axcp500_avg_wip_process_p80 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                        g_curr[p_seq].digit2
         WHEN '4'
            EXECUTE s_axcp500_avg_wip_process_p80 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb204
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb204a
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb204b
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb204c
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb204d
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb204e
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb204f
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb204g
                                                        g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xchb204h
      END CASE


      UPDATE xchb_tmp SET xchb204a = xchb204 - (xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h)
       WHERE xchb204 <> xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h
         AND xchb204a <= xchb204b AND xchb204a <= xchb204c
         AND xchb204a <= xchb204d AND xchb204a <= xchb204e
         AND xchb204a <= xchb204f AND xchb204a <= xchb204g
         AND xchb204a <= xchb204h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb204a"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb204a')
      END IF
      UPDATE xchb_tmp SET xchb204b = xchb204 - (xchb204a + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h)
       WHERE xchb204 <> xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h
         AND xchb204b <= xchb204c
         AND xchb204b <= xchb204d AND xchb204b <= xchb204e
         AND xchb204b <= xchb204f AND xchb204b <= xchb204g
         AND xchb204b <= xchb204h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb204b"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb204b')
      END IF
      UPDATE xchb_tmp SET xchb204c = xchb204 - (xchb204a + xchb204b + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h)
       WHERE xchb204 <> xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h
         AND xchb204c <= xchb204d AND xchb204c <= xchb204e
         AND xchb204c <= xchb204f AND xchb204c <= xchb204g
         AND xchb204c <= xchb204h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb204c"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb204c')
      END IF
      UPDATE xchb_tmp SET xchb204d = xchb204 - (xchb204a + xchb204b + xchb204c + xchb204e + xchb204f + xchb204g + xchb204h)
       WHERE xchb204 <> xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h
         AND xchb204d <= xchb204e
         AND xchb204d <= xchb204f AND xchb204d <= xchb204g
         AND xchb204d <= xchb204h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb204d"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb204d')
      END IF
      UPDATE xchb_tmp SET xchb204e = xchb204 - (xchb204a + xchb204b + xchb204c + xchb204d + xchb204f + xchb204g + xchb204h)
       WHERE xchb204 <> xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h
         AND xchb204e <= xchb204f AND xchb204e <= xchb204g
         AND xchb204e <= xchb204h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb204e"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb204e')
      END IF
      UPDATE xchb_tmp SET xchb204f = xchb204 - (xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204g + xchb204h)
       WHERE xchb204 <> xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h
         AND xchb204f <= xchb204g
         AND xchb204f <= xchb204h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb204f"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb204f')
      END IF
      UPDATE xchb_tmp SET xchb204g = xchb204 - (xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204h)
       WHERE xchb204 <> xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h
         AND xchb204g <= xchb204h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb204g"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb204g')
      END IF
      UPDATE xchb_tmp SET xchb204h = xchb204 - (xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g)
       WHERE xchb204 <> xchb204a + xchb204b + xchb204c + xchb204d + xchb204e + xchb204f + xchb204g + xchb204h
         AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)
         AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005
                              AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008)
         AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xchb_tmp SET xchb204h"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb204h')
      END IF
      #190103-00004#1---add---e
      
      IF g_sys_6023 = '2' THEN #170906-00019#1
         #170808-00077#1---add---s
         #将超龄的部分更新到良品转出上
         LET g_sql = " UPDATE xchb_tmp ",
                     "    SET xchb301  = xchb301  + xchb209 * (-1) ,",
                     "        xchb302  = xchb302  + xchb210  * (-1),",
                     "        xchb302a = xchb302a + xchb210a * (-1),",
                     "        xchb302b = xchb302b + xchb210b * (-1),",
                     "        xchb302c = xchb302c + xchb210c * (-1),",
                     "        xchb302d = xchb302d + xchb210d * (-1),",
                     "        xchb302e = xchb302e + xchb210e * (-1),",
                     "        xchb302f = xchb302f + xchb210f * (-1),",
                     "        xchb302g = xchb302g + xchb210g * (-1),",
                     "        xchb302h = xchb302h + xchb210h * (-1) ",
                     "  WHERE (xchb209 <> 0 OR xchb210 <> 0 )",
                     "    AND xchb007 <> 'END' ",  #200210-00001#1 add
                     "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
                     "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                     "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                     "    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")"                   
         PREPARE s_axcp500_avg_wip_process_p75 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p75"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
   #        RETURN r_success
         END IF  
         
         EXECUTE s_axcp500_avg_wip_process_p75 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p75"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
   #        RETURN r_success
         END IF  
         FREE s_axcp500_avg_wip_process_p75

         #200210-00001#1---add---s
         #将超龄的部分在END站判断档期有入库则更新到良品转出上
         LET g_sql = " UPDATE xchb_tmp ",
                     "    SET xchb301  = xchb301  + xchb209 * (-1) ,",
                     "        xchb302  = xchb302  + xchb210  * (-1),",
                     "        xchb302a = xchb302a + xchb210a * (-1),",
                     "        xchb302b = xchb302b + xchb210b * (-1),",
                     "        xchb302c = xchb302c + xchb210c * (-1),",
                     "        xchb302d = xchb302d + xchb210d * (-1),",
                     "        xchb302e = xchb302e + xchb210e * (-1),",
                     "        xchb302f = xchb302f + xchb210f * (-1),",
                     "        xchb302g = xchb302g + xchb210g * (-1),",
                     "        xchb302h = xchb302h + xchb210h * (-1) ",
                     "  WHERE (xchb209 <> 0 OR xchb210 <> 0 )",
                     "    AND xchb007 = 'END' ",  
                     "    AND EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
                     "                      WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
                     "                        AND inaj020 = xchb006 ",
                     "                    ) ",                     
                     "    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
                     "    AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = ",p_xcbb006,")",
                     "    AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 ",
                     "    AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = ",l_xcbt008,")"                   
         PREPARE s_axcp500_avg_wip_process_p77 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p77"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF  
         
         EXECUTE s_axcp500_avg_wip_process_p77 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p77"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF  
         FREE s_axcp500_avg_wip_process_p77         
         #200210-00001#1---add---e
         
         #YS01-03在B003投入400、超領40，良品轉出440
         #轉到下一站B004，改成上站轉入400、超領40
         #PGS(D)-00824 ---start---
         LET g_sql = "  MERGE INTO xchb_tmp a ",
                     "  USING (SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,",
                     "                         xchb006,xcbt006,xcbt007,xchb009,xchb010,",
                     "                         xchb011,xchb012,xchb013,xchb014,xchb015, ",
                     "                         xchb209,xchb210,xchb210a,xchb210b,xchb210c,",
                     "                         xchb210d,xchb210e,xchb210f,xchb210g,xchb210h ",
                     #190411-00017#1 A mark-S
#                     "           FROM xchb_tmp b,xcbt_t,sfac_tmp2",
#                     "          WHERE xchbent = xcbtent ",
#                     "            AND b.xchb004 = xcbt001 ",
#                     "            AND b.xchb005 = xcbt002 ",
#                     "            AND b.xchb006 = xcbt003 ",
#                     "            AND b.xchb007 = xcbt004 ",
#                     "            AND b.xchb008 = xcbt005 ",
#                     "            AND b.xchb006 = sfacdocno ",
#                     "            AND b.xchbent = ",g_enterprise,
#                     "            AND b.xchbld  = '",g_ld,"'",
#                     "            AND b.xchb001 = '",p_seq,"'",
#                     "            AND b.xchb003 = '",g_xcat001,"'",
#                     "            AND b.xchb004 = ",g_yy,
#                     "            AND b.xchb005 = ",g_pp,
#                     "            AND xcbt008 = ",l_xcbt008,
#                     "            AND clevel = ",p_xcbb006,
                     #190411-00017#1 A mark-E
                     #190411-00017#1 A add-S
                     "           FROM xchb_tmp b,xcbt_t ",
                     "          WHERE xchbent = xcbtent ",
                     "            AND b.xchb004 = xcbt001 ",
                     "            AND b.xchb005 = xcbt002 ",
                     "            AND b.xchb006 = xcbt003 ",
                     "            AND b.xchb007 = xcbt004 ",
                     "            AND b.xchb008 = xcbt005 ",
                     "            AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = b.xchb006 AND clevel = ",p_xcbb006,") ",
                     "            AND b.xchbent = ",g_enterprise,
                     "            AND b.xchbld  = '",g_ld,"'",
                     "            AND b.xchb001 = '",p_seq,"'",
                     "            AND b.xchb003 = '",g_xcat001,"'",
                     "            AND b.xchb004 = ",g_yy,
                     "            AND b.xchb005 = ",g_pp,
                     "            AND xcbt008 = ",l_xcbt008,
                     #190411-00017#1 A add-E                     
                     "            AND b.xchb007 <> 'END' ",       
                     "            AND (b.xchb209 <> 0 OR b.xchb210 <> 0 ) ",                  
                     "            AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = b.xchbent AND sfaadocno = b.xchb006 AND sfaa042 = '",p_flag,"')",                                          
                     "        ) c", 
                     " ON (a.xchbent = c.xchbent ",
                     " AND a.xchbld  = c.xchbld  ",
                     " AND a.xchb001 = c.xchb001 ",
                     " AND a.xchb002 = c.xchb002 ",
                     " AND a.xchb003 = c.xchb003 ",
                     " AND a.xchb004 = c.xchb004 ",
                     " AND a.xchb005 = c.xchb005 ",
                     " AND a.xchb006 = c.xchb006 ",
                     " AND a.xchb007 = c.xcbt006 ",
                     " AND a.xchb008 = c.xcbt007 ",
                     " AND a.xchb009 = c.xchb009 ",
                     " AND a.xchb010 = c.xchb010 ",
                     " AND a.xchb011 = c.xchb011 ",
                     " AND a.xchb014 = c.xchb014 ",
                     " AND a.xchb015 = c.xchb015 )",
                     " WHEN MATCHED THEN    ",
                     "       UPDATE SET a.xchb209  = c.xchb209 ,",
                     "                  a.xchb210  = c.xchb210 ,",
                     "                  a.xchb210a = c.xchb210a ,",
                     "                  a.xchb210b = c.xchb210b ,",
                     "                  a.xchb210c = c.xchb210c ,",
                     "                  a.xchb210d = c.xchb210d ,",
                     "                  a.xchb210e = c.xchb210e ,",
                     "                  a.xchb210f = c.xchb210f ,",
                     "                  a.xchb210g = c.xchb210g ,",
                     "                  a.xchb210h = c.xchb210h "
         #PGS(D)-00824 --- end ---
         PREPARE s_axcp500_avg_wip_process_p76 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p76"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
   #        RETURN r_success
         END IF  
         
         EXECUTE s_axcp500_avg_wip_process_p76 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p76"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
   #        RETURN r_success
         END IF  
         FREE s_axcp500_avg_wip_process_p76            
         #170808-00077#1---add---e
      END IF #170906-00019#1   add
   END FOR
   
   #170629-00004#1---add---s
   #更新 xchb305/xchb306 当站下线
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xchb_tmp ",
               "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
               "                     decode(sfha006,NULL,'END',' ','END',sfha006) sfha006,",     
               "                     decode(sfha007,NULL,'0',' ','0',sfha007) sfha007,clevel,   ", 
               "                     SUM(xcck201*xcck009 *-1) xcck201 ",
               "                   FROM xcck_tmp,sfaa_tmp,sfac_tmp2,sfha_t     ",   
#               "                  WHERE xcck020 = '115' AND xcck055 IN ('3011','3012') ",  #200212-00020#1 mark
               "                  WHERE (xcck020 = '115') ",   #200212-00020#1 add
               "                    AND xcckent = sfaaent ",  
               "                    AND xcck047 = sfaadocno ",
               "                    AND xcck047 = sfha004  AND xcckent=sfhaent  " , 
               "                    AND xcck006 = sfhadocno ",  #201126-00039#1
               "                    AND sfaa042 = ? ",   
               "                    AND sfaadocno=sfacdocno ",  #一张工单的主件即时多特征，也只指定一个成本阶
               "                    AND xcck001 = '",p_seq,"'",          #170618-00158#1 add
               "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel ", #Mod zhangllc 150730 add clevel #170618-00158#1 mark
               "                ) b ",
               "          ON ( xchbent = ",g_enterprise,
               "         AND   xchbld  = '",g_ld,"'",
               "         AND   xchb001 = '",p_seq,"'",
               "         AND   xchb002 = b.xcck002  ",
               "         AND   xchb003 = '",g_xcat001,"'",
               "         AND   xchb004 = ",g_yy,
               "         AND   xchb005 = ",g_pp,
               "         AND   xchb006 = b.xcck047  ",       #工单
               "         AND   xchb009 <> 'DL+OH+SUB' ",
               "         AND   xchb007 = b.sfha006  ",       #作业编号 
               "         AND   xchb008 = b.sfha007  ",       #作业序   
               "         AND   xchb009 = b.xcck010  ",       #料    
               "         AND   xchb010 = b.xcck011  ",       #特征  
               "         AND   xchb011 = b.xcck017  ",       #批号 
               "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到            
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET xchb305  = nvl(b.xcck201 ,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p42 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p42"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
  #   RETURN r_success
   END IF  
   
   EXECUTE s_axcp500_avg_wip_process_p42 USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p42"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
  #   RETURN r_success
   END IF   
   #增加一參數「當站下線的取價方式」：1.系統設定 2.人工設定
   #1.系統設定：合計投料的單價*當站下線數量,投入元件成本/主件投入數量=單價 (像主件單位成本算法)
   #2.人工設定：取axct314成本
   IF g_sys_6025 = '1' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xchb_tmp ",
                  "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,",
                  "                     decode(sfha006,NULL,'END',' ','END',sfha006) sfha006,",     
                  "                     decode(sfha007,NULL,'0',' ','0',sfha007) sfha007,clevel,   ", 
                  "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xcck201*xcck009 *-1*c.price) xcck202, ",
                  "                     SUM(xcck201*xcck009 *-1*c.pricea) xcck202a,SUM(xcck201*xcck009 *-1*c.priceb) xcck202b,",
                  "                     SUM(xcck201*xcck009 *-1*c.pricec) xcck202c,SUM(xcck201*xcck009 *-1*c.priced) xcck202d,",
                  "                     SUM(xcck201*xcck009 *-1*c.pricee) xcck202e,SUM(xcck201*xcck009 *-1*c.pricef) xcck202f,",
                  "                     SUM(xcck201*xcck009 *-1*c.priceg) xcck202g,SUM(xcck201*xcck009 *-1*c.priceh) xcck202h",
#                  "                   FROM xcck_tmp,sfaa_tmp,sfac_tmp2,sfha_t ,    ",        #190411-00017#1 A mark
                  "                   FROM xcck_tmp,sfac_tmp2,sfha_t, ", #190411-00017#1 A mod
                  "                     ( SELECT xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcha007,xcha008, ",  
                  "                              SUM(xchb202+xchb204)/(xcha201+xcha203) price,  SUM(xchb202a+xchb204a)/(xcha201+xcha203) pricea,SUM(xchb202b+xchb204b)/(xcha201+xcha203) priceb, ",
                  "                              SUM(xchb202c+xchb204c)/(xcha201+xcha203) pricec,SUM(xchb202d+xchb204d)/(xcha201+xcha203) priced,SUM(xchb202e+xchb204e)/(xcha201+xcha203) pricee, ",
                  "                              SUM(xchb202f+xchb204f)/(xcha201+xcha203) pricef,SUM(xchb202g+xchb204g)/(xcha201+xcha203) priceg,SUM(xchb202h+xchb204h)/(xcha201+xcha203) priceh  ",
                  "                          FROM xchb_tmp,xcha_tmp ",
                  #"                          WHERE xchbent = xchaent AND xchbld = xchald AND xchb001 = xcha001 AND xchb002 = xcha002 ",  #210220-00018#1 mark
                  "                          WHERE xchbent = xchaent AND xchbld = xchald AND xchb001 = xcha001   ",  #210220-00018#1
                  "                            AND xchb003 = xcha003 AND xchb004 = xcha004 AND xchb005 = xcha005 AND xchb006 = xcha006 ",
                  "                            AND xchb007 = xcha007 AND xchb008 = xcha008  ",
                  "                            AND (xcha201 <> 0 OR xcha203<> 0) ",
                  "                        GROUP BY xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcha007,xcha008,xcha201,xcha203 ",
                  "                      ) c ",        
                  "                  WHERE c.xchaent = xcckent ",
                  "                    AND c.xchald  = xcckld  ",
                  "                    AND c.xcha001 = xcck001 ",
                  #"                    AND c.xcha002 = xcck002 ", #210220-00018#1 mark
                  "                    AND c.xcha003 = xcck003 ",
                  "                    AND c.xcha004 = xcck004 ",
                  "                    AND c.xcha005 = xcck005 ",
                  "                    AND c.xcha006 = xcck047 ",
#                  "                    AND c.xcha007 = sfha006 AND c.xcha008 = sfha007 ", #180108-00085#1 mark
                  "                    AND c.xcha007 = decode(sfha006,NULL,'END',' ','END',sfha006) ",  #180108-00085#1 add
                  "                    AND c.xcha008 = decode(sfha007,NULL,'0',' ','0',sfha007) ", #180108-00085#1 add
#                  "                    AND xcck020 = '115' AND xcck055 IN ('3011','3012') ",  #200212-00020#1 mark
                  "                    AND (xcck020 = '115') ",   #200212-00020#1 add
                  #190411-00017#1 A mark-S
#                  "                    AND xcckent = sfaaent ",  
#                  "                    AND xcck047 = sfaadocno ",
#                  "                    AND xcck047 = sfha004  AND xcckent=sfhaent  " , 
#                  "                    AND sfaa042 = ? ",   
#                  "                    AND sfaadocno=sfacdocno ",  #一张工单的主件即时多特征，也只指定一个成本阶
                  #190411-00017#1 A mark-E
                  #190411-00017#1 A add-S
                  "                    AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xcckent AND sfaadocno = xcck047 AND sfaa042 = ?) ",
                  "                    AND xcck047 = sfha004  AND xcckent=sfhaent  " , 
                  "                    AND xcck006 = sfhadocno ",  #201126-00039#1
                  "                    AND xcck047 = sfacdocno ",  #一张工单的主件即时多特征，也只指定一个成本阶
                  #190411-00017#1 A add-E
                  "                    AND clevel = ",p_xcbb006 ,
                  "                    AND xcck001 = '",p_seq,"'",               
                  "                   GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfha006,sfha007,clevel",
                  "                    )b ",  
                  "          ON ( xchbent = ",g_enterprise,
                  "         AND   xchbld  = '",g_ld,"'",
                  "         AND   xchb001 = '",p_seq,"'",
                  "         AND   xchb002 = b.xcck002  ",
                  "         AND   xchb003 = '",g_xcat001,"'",
                  "         AND   xchb004 = ",g_yy,
                  "         AND   xchb005 = ",g_pp,
                  "         AND   xchb006 = b.xcck047  ",       #工单
                  "         AND   xchb009 <> 'DL+OH+SUB' ",
                  "         AND   xchb007 = b.sfha006  ",       #作业编号 
                  "         AND   xchb008 = b.sfha007  ",       #作业序   
                  "         AND   xchb009 = b.xcck010  ",       #料    
                  "         AND   xchb010 = b.xcck011  ",       #特征  
                  "         AND   xchb011 = b.xcck017  ",       #批号 
                  "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到            
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xchb306  = nvl(b.xcck202 ,0) ,  ",
                  "                xchb306a = nvl(b.xcck202a,0) ,  ",
                  "                xchb306b = nvl(b.xcck202b,0) ,  ",
                  "                xchb306c = nvl(b.xcck202c,0) ,  ",
                  "                xchb306d = nvl(b.xcck202d,0) ,  ",
                  "                xchb306e = nvl(b.xcck202e,0) ,  ",
                  "                xchb306f = nvl(b.xcck202f,0) ,  ",
                  "                xchb306g = nvl(b.xcck202g,0) ,  ",
                  "                xchb306h = nvl(b.xcck202h,0)    "
      #PGS(D)-00824 --- end ---
   ELSE
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xchb_tmp ",
                  "       USING (SELECT DISTINCT xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel,   ",  #170618-00158#1 add               
                  "                     SUM(xcck201 ) xcck201, SUM(xcck202) xcck202,  ",
                  "                     SUM(xcck202a) xcck202a,SUM(xcck202b) xcck202b, ",
                  "                     SUM(xcck202c) xcck202c,SUM(xcck202d) xcck202d, ",
                  "                     SUM(xcck202e) xcck202e,SUM(xcck202f) xcck202f, ",
                  "                     SUM(xcck202g) xcck202g,SUM(xcck202h) xcck202h  ",   
                  "               FROM ( SELECT DISTINCT xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,",
                  "                     decode(sfha006,NULL,'END',' ','END',sfha006) sfha006,",     
                  "                     decode(sfha007,NULL,'0',' ','0',sfha007) sfha007,clevel,   ", 
                  "                     SUM(xcck201*xcck009 *-1) xcck201, SUM(xccw202*xcck009 *-1) xcck202, ",
                  "                     SUM(xccw202a*xcck009*-1) xcck202a,SUM(xccw202b*xcck009*-1) xcck202b,",
                  "                     SUM(xccw202c*xcck009*-1) xcck202c,SUM(xccw202d*xcck009*-1) xcck202d,",
                  "                     SUM(xccw202e*xcck009*-1) xcck202e,SUM(xccw202f*xcck009*-1) xcck202f,",
                  "                     SUM(xccw202g*xcck009*-1) xcck202g,SUM(xccw202h*xcck009*-1) xcck202h",
                  "                   FROM xcck_tmp,sfaa_tmp,xccw_t,sfac_tmp2,sfha_t     ",   
                  "                  WHERE xccwent = xcckent ",
                  "                    AND xccwld  = xcckld  ",
                  "                    AND xccw001 = xcck001 ",
                  "                    AND xccw002 = xcck002 ",
                  "                    AND xccw003 = xcck003 ",
                  "                    AND xccw004 = xcck004 ",
                  "                    AND xccw005 = xcck005 ",
                  "                    AND xccw006 = xcck006 ",
                  "                    AND xccw007 = xcck007 ",
                  "                    AND xccw008 = xcck008 ",
                  "                    AND xccw009 = xcck009 ",
#                  "                    AND xcck020 = '115' AND xcck055 IN ('3011','3012') ",#200212-00020#1 mark
                  "                    AND (xcck020 = '115') ",   #200212-00020#1 add
                  "                    AND xcckent = sfaaent ",  
                  "                    AND xcck047 = sfaadocno ",
                  "                    AND xcck047 = sfha004  AND xcckent=sfhaent  " ,
                  "                    AND xcck006 = sfhadocno ",  #201126-00039#1                  
                  "                    AND sfaa042 = ? ",   
                  "                    AND sfaadocno=sfacdocno ",  #一张工单的主件即时多特征，也只指定一个成本阶
                  "                    AND xcck001 = '",p_seq,"'",               
                  "                   GROUP BY xcck006,xcck007,xcck008,xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel) tsed",  #170618-00158#1 add
                  "                GROUP BY xcck002,xcck010,xcck011,xcck017,xcck047,sfaa010,sfha006,sfha007,clevel ", #Mod zhangllc 150730 add clevel #170618-00158#1 mark
                  "                ) b ",
                  "          ON ( xchbent = ",g_enterprise,
                  "         AND   xchbld  = '",g_ld,"'",
                  "         AND   xchb001 = '",p_seq,"'",
                  "         AND   xchb002 = b.xcck002  ",
                  "         AND   xchb003 = '",g_xcat001,"'",
                  "         AND   xchb004 = ",g_yy,
                  "         AND   xchb005 = ",g_pp,
                  "         AND   xchb006 = b.xcck047  ",       #工单
                  "         AND   xchb009 <> 'DL+OH+SUB' ",
                  "         AND   xchb007 = b.sfha006  ",       #作业编号 
                  "         AND   xchb008 = b.sfha007  ",       #作业序   
                  "         AND   xchb009 = b.xcck010  ",       #料    
                  "         AND   xchb010 = b.xcck011  ",       #特征  
                  "         AND   xchb011 = b.xcck017  ",       #批号 
                  "         AND   b.clevel = ",p_xcbb006," ) ", #如果启用特性，若主件+特性没有异动记录会写不到s_axcp500_tmp中，即使其他特征有写进去，成本阶也不一定符，所以会有少算到            
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xchb306  = nvl(b.xcck202 ,0) ,  ",
                  "                xchb306a = nvl(b.xcck202a,0) ,  ",
                  "                xchb306b = nvl(b.xcck202b,0) ,  ",
                  "                xchb306c = nvl(b.xcck202c,0) ,  ",
                  "                xchb306d = nvl(b.xcck202d,0) ,  ",
                  "                xchb306e = nvl(b.xcck202e,0) ,  ",
                  "                xchb306f = nvl(b.xcck202f,0) ,  ",
                  "                xchb306g = nvl(b.xcck202g,0) ,  ",
                  "                xchb306h = nvl(b.xcck202h,0)    "
      #PGS(D)-00824 --- end ---
   END IF
   
   PREPARE s_axcp500_avg_wip_process_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
  #   RETURN r_success
   END IF  
   
   EXECUTE s_axcp500_avg_wip_process_p4 USING p_flag
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
  #   RETURN r_success
   END IF   
   #金額取位
   CASE g_round_type
        WHEN '1'   #四舍五入
             LET g_sql = "UPDATE xchb_tmp SET xchb306  = round(xchb306 ,? ), xchb306a = round(xchb306a,? ), xchb306b = round(xchb306b,? ), ",
                         "                    xchb306c = round(xchb306c,? ), xchb306d = round(xchb306d,? ), ",
                         "                    xchb306e = round(xchb306e,? ), xchb306f = round(xchb306f,? ), ",
                         "                    xchb306g = round(xchb306g,? ), xchb306h = round(xchb306h,? )  ",
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"                         
        WHEN '3'   #无条件截位
             LET g_sql = "UPDATE xchb_tmp SET xchb306  = trunc(xchb306 ,? ), xchb306a = trunc(xchb306a,? ), xchb306b = trunc(xchb306b,? ), ",
                         "                    xchb306c = trunc(xchb306c,? ), xchb306d = trunc(xchb306d,? ), ",
                         "                    xchb306e = trunc(xchb306e,? ), xchb306f = trunc(xchb306f,? ), ",
                         "                    xchb306g = trunc(xchb306g,? ), xchb306h = trunc(xchb306h,? )  ",
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"   
        #180802-00015#1 add-S
        WHEN '2'  #四舍六入五成双
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xchb_tmp SET xchb306  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xchb306,?) ",
                         "                                                          ELSE ROUND(xchb306,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xchb306,?)",
                         "                                END ),",
                         "                    xchb306a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306a,?) ",
                         "                                                         ELSE ROUND(xchb306a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306a,?)",
                         "                                END ),",
                         "                    xchb306b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306b,?) ",
                         "                                                         ELSE ROUND(xchb306b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306b,?)",
                         "                                END ),",
                         "                    xchb306c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306c,?) ",
                         "                                                         ELSE ROUND(xchb306c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306c,?)",
                         "                                END ),",
                         "                    xchb306d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306d,?) ",
                         "                                                         ELSE ROUND(xchb306d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306d,?)",
                         "                                END ),",
                         "                    xchb306e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306e,?) ",
                         "                                                         ELSE ROUND(xchb306e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306e,?)",
                         "                                END ),",
                         "                    xchb306f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306f,?) ",
                         "                                                         ELSE ROUND(xchb306f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306f,?)",
                         "                                END ),",
                         "                    xchb306g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306g,?) ",
                         "                                                         ELSE ROUND(xchb306g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306g,?)",
                         "                                END ),",
                         "                    xchb306h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xchb306h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xchb306h,?) ",
                         "                                                         ELSE ROUND(xchb306h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xchb306h,?)",
                         "                                END )",
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
        #201119-00005#1 add--e         
        WHEN '4'  #无条件进位
             LET g_sql = "UPDATE xchb_tmp SET xchb306  = ceil(xchb306 *power(10,?))/power(10,?),",
                         "                    xchb306a = ceil(xchb306a*power(10,?))/power(10,?),",
                         "                    xchb306b = ceil(xchb306b*power(10,?))/power(10,?),",
                         "                    xchb306c = ceil(xchb306c*power(10,?))/power(10,?),",
                         "                    xchb306d = ceil(xchb306d*power(10,?))/power(10,?),",
                         "                    xchb306e = ceil(xchb306e*power(10,?))/power(10,?),",
                         "                    xchb306f = ceil(xchb306f*power(10,?))/power(10,?),",
                         "                    xchb306g = ceil(xchb306g*power(10,?))/power(10,?),",
                         "                    xchb306h = ceil(xchb306h*power(10,?))/power(10,?) ",     
                         " WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')"
        #180802-00015#1 add-E                                                                          
   END CASE
   PREPARE s_axcp500_avg_wip_process_p14 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p14"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
   #180802-00015#1 mark-S
#   EXECUTE s_axcp500_avg_wip_process_p14 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                               g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
#                                               g_curr[p_seq].digit2
   #180802-00015#1 mark-E
   #180802-00015#1 add-S
   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg_wip_process_p14 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg_wip_process_p14 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg_wip_process_p14 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,g_curr[p_seq].digit2,
                                                     g_curr[p_seq].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg_wip_process_p14 USING g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306a
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306b
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306c
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306d
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306e
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306f
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2,   #xchb306g
                                                     g_curr[p_seq].digit2,g_curr[p_seq].digit2    #xchb306h
   END CASE
   #180802-00015#1 add-E   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p14"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
   
   #修正xchb306的值-先修至xchb306a,若xchb306a为零,则修正xchb306b......
   UPDATE xchb_tmp SET xchb306a = xchb306 - (xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h)   
    WHERE xchb306 <> xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h
      #AND xchb306 - (xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h) <> 0   #170804-00027#1 mark
      AND xchb306a <= xchb306b AND xchb306a <= xchb306c
      AND xchb306a <= xchb306d AND xchb306a <= xchb306e
      AND xchb306a <= xchb306f AND xchb306a <= xchb306g
      AND xchb306a <= xchb306h
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
      AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb306a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb306a')         
   END IF 
   
   UPDATE xchb_tmp SET xchb306b = xchb306 - (xchb306a + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h)  
    WHERE xchb306 <> xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h
      #AND xchb306 - (xchb306a + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h) <> 0 #170804-00027#1 mark
      AND xchb306b <= xchb306c
      AND xchb306b <= xchb306d AND xchb306b <= xchb306e
      AND xchb306b <= xchb306f AND xchb306b <= xchb306g
      AND xchb306b <= xchb306h 
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
      AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb306b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb306b')         
   END IF   
   UPDATE xchb_tmp SET xchb306c = xchb306 - (xchb306a + xchb306b + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h)  
    WHERE xchb306 <> xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h
      #AND xchb306 - (xchb306a + xchb306b + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h) <> 0 #170804-00027#1 mark
      AND xchb306c <= xchb306d AND xchb306c <= xchb306e
      AND xchb306c <= xchb306f AND xchb306c <= xchb306g
      AND xchb306c <= xchb306h
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
      AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)       
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb306c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb306c')         
   END IF   
   UPDATE xchb_tmp SET xchb306d = xchb306 - (xchb306a + xchb306b + xchb306c + xchb306e + xchb306f + xchb306g + xchb306h)  
    WHERE xchb306 <> xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h
      #AND xchb306 - (xchb306a + xchb306b + xchb306c + xchb306e + xchb306f + xchb306g + xchb306h) <> 0  #170804-00027#1 mark
      AND xchb306d <= xchb306e
      AND xchb306d <= xchb306f AND xchb306d <= xchb306g
      AND xchb306d <= xchb306h    
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
      AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb306d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb306d')         
   END IF   
   UPDATE xchb_tmp SET xchb306e = xchb306 - (xchb306a + xchb306b + xchb306c + xchb306d + xchb306f + xchb306g + xchb306h)  
    WHERE xchb306 <> xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h
      #AND xchb306 - (xchb306a + xchb306b + xchb306c + xchb306d + xchb306f + xchb306g + xchb306h) <> 0 #170804-00027#1 mark
      AND xchb306e <= xchb306f AND xchb306e <= xchb306g
      AND xchb306e <= xchb306h     
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
      AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb306e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb306e')         
   END IF   
   UPDATE xchb_tmp SET xchb306f = xchb306 - (xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306g + xchb306h)  
    WHERE xchb306 <> xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h
      #AND xchb306 - (xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306g + xchb306h) <> 0 #170804-00027#1 mark
      AND xchb306f <= xchb306g
      AND xchb306f <= xchb306h
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
      AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb306f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb306f')         
   END IF   
   UPDATE xchb_tmp SET xchb306g = xchb306 - (xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306h)  
    WHERE xchb306 <> xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h
      #AND xchb306 - (xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306h) <> 0 #170804-00027#1 mark
      AND xchb306g <= xchb306h 
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
      AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb306g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb306g')         
   END IF   
   UPDATE xchb_tmp SET xchb306h = xchb306 - (xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g)  
    WHERE xchb306 <> xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g + xchb306h
      #AND xchb306 - (xchb306a + xchb306b + xchb306c + xchb306d + xchb306e + xchb306f + xchb306g) <> 0 #170804-00027#1 mark
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag)   
      AND EXISTS(SELECT 1 FROM xcbt_t WHERE xcbtent = xchbent  AND xcbt001 = xchb004 AND xcbt002 = xchb005 
                           AND xcbt003 = xchb006 AND xcbt004 = xchb007 AND xcbt005 = xchb008 AND xcbt008 = l_xcbt008) 
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006)          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb306h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xchb_tmp SET xchb306h')         
   END IF      
   #170629-00004#1---add---e

   #差异金额处理xchb309/xchb310
   UPDATE xchb_tmp
      SET xchb309  = (xchb101  + xchb201  + xchb203  + xchb207  + xchb209  + xchb301  + xchb303  + xchb305  + xchb307 )*-1, 
          xchb310  = (xchb102  + xchb202  + xchb204  + xchb208  + xchb210  + xchb302  + xchb304  + xchb306  + xchb308 )*-1, 
          xchb310a = (xchb102a + xchb202a + xchb204a + xchb208a + xchb210a + xchb302a + xchb304a + xchb306a + xchb308a)*-1, 
          xchb310b = (xchb102b + xchb202b + xchb204b + xchb208b + xchb210b + xchb302b + xchb304b + xchb306b + xchb308b)*-1, 
          xchb310c = (xchb102c + xchb202c + xchb204c + xchb208c + xchb210c + xchb302c + xchb304c + xchb306c + xchb308c)*-1, 
          xchb310d = (xchb102d + xchb202d + xchb204d + xchb208d + xchb210d + xchb302d + xchb304d + xchb306d + xchb308d)*-1, 
          xchb310e = (xchb102e + xchb202e + xchb204e + xchb208e + xchb210e + xchb302e + xchb304e + xchb306e + xchb308e)*-1, 
          xchb310f = (xchb102f + xchb202f + xchb204f + xchb208f + xchb210f + xchb302f + xchb304f + xchb306f + xchb308f)*-1, 
          xchb310g = (xchb102g + xchb202g + xchb204g + xchb208g + xchb210g + xchb302g + xchb304g + xchb306g + xchb308g)*-1, 
          xchb310h = (xchb102h + xchb202h + xchb204h + xchb208h + xchb210h + xchb302h + xchb304h + xchb306h + xchb308h)*-1 
    WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa048 >= g_bdate  AND sfaa048 < l_date2 AND sfaa042 = p_flag)
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = p_xcbb006)    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xchb_tmp SET xchb310 "
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #181214-00009#1---02295---s
   #判斷該工單是研發工單時，將入庫轉出的數量金額，轉到差異轉出上
   UPDATE xchb_tmp
      SET xchb310  = xchb310  + xchb302 ,
          xchb310a = xchb310a + xchb302a,
          xchb310b = xchb310b + xchb302b,
          xchb310c = xchb310c + xchb302c,
          xchb310d = xchb310d + xchb302d,
          xchb310e = xchb310e + xchb302e,
          xchb310f = xchb310f + xchb302f,
          xchb310g = xchb310g + xchb302g,
          xchb310h = xchb310h + xchb302h,
          xchb302  = 0,
          xchb302a = 0,
          xchb302b = 0,
          xchb302c = 0,
          xchb302d = 0,
          xchb302e = 0,
          xchb302f = 0,
          xchb302g = 0,
          xchb302h = 0
    WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xchb006 AND sfaa042 = p_flag AND sfaa003 = '4')
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE xchb006 = sfacdocno AND clevel = p_xcbb006)
      AND xchb007 = 'END' AND xchb008 = '0'      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xchb310"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #181214-00009#1---02295---e
   
   #將xchb_t的金額合計至xcha_t的金額
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcha_tmp ",
               #" USING (SELECT DISTINCT xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,clevel,",  #210220-00018#1 mark
               " USING (SELECT DISTINCT xchbent,xchbld,xchb001,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,clevel,",  #210220-00018#1
               "               SUM(xchb102) xchb102,SUM(xchb102a) xchb102a,SUM(xchb102b) xchb102b,SUM(xchb102c) xchb102c,",
               "               SUM(xchb102d) xchb102d,SUM(xchb102e) xchb102e,SUM(xchb102f) xchb102f,SUM(xchb102g) xchb102g,SUM(xchb102h) xchb102h,",             
               #210220-00018#1---mark---s
               #"               SUM(xchb202) xchb202,SUM(xchb202a) xchb202a,SUM(xchb202b) xchb202b,SUM(xchb202c) xchb202c,",
               #"               SUM(xchb202d) xchb202d,SUM(xchb202e) xchb202e,SUM(xchb202f) xchb202f,SUM(xchb202g) xchb202g,SUM(xchb202h) xchb202h,",               
               #210220-00018#1---mark---e
               #210220-00018#1---add---s
               "               SUM(xchb202+xchb208) xchb202,SUM(xchb202a+xchb208a) xchb202a,SUM(xchb202b+xchb208b) xchb202b,SUM(xchb202c+xchb208c) xchb202c,",
               "               SUM(xchb202d+xchb208d) xchb202d,SUM(xchb202e+xchb208e) xchb202e,SUM(xchb202f+xchb208f) xchb202f,SUM(xchb202g+xchb208g) xchb202g,SUM(xchb202h+xchb208h) xchb202h,",               
               #210220-00018#1---add---e               
               "               SUM(xchb204) xchb204,SUM(xchb204a) xchb204a,SUM(xchb204b) xchb204b,SUM(xchb204c) xchb204c,",
               "               SUM(xchb204d) xchb204d,SUM(xchb204e) xchb204e,SUM(xchb204f) xchb204f,SUM(xchb204g) xchb204g,SUM(xchb204h) xchb204h,",               
               "               SUM(xchb302) xchb302,SUM(xchb302a) xchb302a,SUM(xchb302b) xchb302b,SUM(xchb302c) xchb302c,",
               "               SUM(xchb302d) xchb302d,SUM(xchb302e) xchb302e,SUM(xchb302f) xchb302f,SUM(xchb302g) xchb302g,SUM(xchb302h) xchb302h,",
               "               SUM(xchb304) xchb304,SUM(xchb304a) xchb304a,SUM(xchb304b) xchb304b,SUM(xchb304c) xchb304c,",
               "               SUM(xchb304d) xchb304d,SUM(xchb304e) xchb304e,SUM(xchb304f) xchb304f,SUM(xchb304g) xchb304g,SUM(xchb304h) xchb304h,",
               "               SUM(xchb306) xchb306,SUM(xchb306a) xchb306a,SUM(xchb306b) xchb306b,SUM(xchb306c) xchb306c,",
               "               SUM(xchb306d) xchb306d,SUM(xchb306e) xchb306e,SUM(xchb306f) xchb306f,SUM(xchb306g) xchb306g,SUM(xchb306h) xchb306h,",               
               "               SUM(xchb308) xchb308,SUM(xchb308a) xchb308a,SUM(xchb308b) xchb308b,SUM(xchb308c) xchb308c,",
               "               SUM(xchb308d) xchb308d,SUM(xchb308e) xchb308e,SUM(xchb308f) xchb308f,SUM(xchb308g) xchb308g,SUM(xchb308h) xchb308h,",
               "               SUM(xchb310) xchb310,SUM(xchb310a) xchb310a,SUM(xchb310b) xchb310b,SUM(xchb310c) xchb310c,",
               "               SUM(xchb310d) xchb310d,SUM(xchb310e) xchb310e,SUM(xchb310f) xchb310f,SUM(xchb310g) xchb310g,SUM(xchb310h) xchb310h,",
               "               SUM(xchb902) xchb902,SUM(xchb902a) xchb902a,SUM(xchb902b) xchb902b,SUM(xchb902c) xchb902c,",
               "               SUM(xchb902d) xchb902d,SUM(xchb902e) xchb902e,SUM(xchb902f) xchb902f,SUM(xchb902g) xchb902g,SUM(xchb902h) xchb902h ",               
               "          FROM xchb_tmp,sfac_tmp2 ",
               "         WHERE xchbent = ",g_enterprise,
               "           AND xchbld  = '",g_ld,"'",
               "           AND xchb001 = '",p_seq,"'",
               "           AND xchb003 = '",g_xcat001,"'",
               "           AND xchb004 = ",g_yy,
               "           AND xchb005 = ",g_pp,
               "           AND xchb006 = sfacdocno ",
               "           AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
               #"         GROUP BY xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,clevel ",   #210220-00018#1 mark
               "         GROUP BY xchbent,xchbld,xchb001,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,clevel ",   #210220-00018#1
               "        ) b",
               "         ON  ( xchaent = b.xchbent    ",
               "         AND   xchald  = b.xchbld   ",
               "         AND   xcha001 = b.xchb001  ",
               #"         AND   xcha002 = b.xchb002  ",   #210220-00018#1 mark
               "         AND   xcha003 = b.xchb003  ",
               "         AND   xcha004 = b.xchb004  ",
               "         AND   xcha005 = b.xchb005  ",
               "         AND   xcha006 = b.xchb006  ",  
               "         AND   xcha007 = b.xchb007  ",  
               "         AND   xcha008 = b.xchb008  ",
               "         AND   b.clevel = ",p_xcbb006,")",  
               "  WHEN MATCHED THEN    ",
                                #上期结存金额
               "     UPDATE SET xcha102  = b.xchb102  ,",  
               "                xcha102a = b.xchb102a ,",
               "                xcha102b = b.xchb102b ,",                               
               "                xcha102c = b.xchb102c ,",                               
               "                xcha102d = b.xchb102d ,",                               
               "                xcha102e = b.xchb102e ,",                               
               "                xcha102f = b.xchb102f ,",                               
               "                xcha102g = b.xchb102g ,",                               
               "                xcha102h = b.xchb102h ,",
                                #本期投入金额
               "                xcha202  = b.xchb202  ,",
               "                xcha202a = b.xchb202a ,",
               "                xcha202b = b.xchb202b ,",                               
               "                xcha202c = b.xchb202c ,",                               
               "                xcha202d = b.xchb202d ,",                               
               "                xcha202e = b.xchb202e ,",                               
               "                xcha202f = b.xchb202f ,",                               
               "                xcha202g = b.xchb202g ,",                               
               "                xcha202h = b.xchb202h ,",                                
                                #上站转入金额
               "                xcha204  = b.xchb204  ,",
               "                xcha204a = b.xchb204a ,",
               "                xcha204b = b.xchb204b ,",                               
               "                xcha204c = b.xchb204c ,",                               
               "                xcha204d = b.xchb204d ,",                               
               "                xcha204e = b.xchb204e ,",                               
               "                xcha204f = b.xchb204f ,",                               
               "                xcha204g = b.xchb204g ,",                               
               "                xcha204h = b.xchb204h ,",                                
                                #良品转出金额
               "                xcha302  = b.xchb302  ,",
               "                xcha302a = b.xchb302a ,",
               "                xcha302b = b.xchb302b ,",                               
               "                xcha302c = b.xchb302c ,",                               
               "                xcha302d = b.xchb302d ,",                               
               "                xcha302e = b.xchb302e ,",                               
               "                xcha302f = b.xchb302f ,",                               
               "                xcha302g = b.xchb302g ,",                               
               "                xcha302h = b.xchb302h ,",
                                #报废金额
               "                xcha304  = b.xchb304  ,",
               "                xcha304a = b.xchb304a ,",
               "                xcha304b = b.xchb304b ,",                               
               "                xcha304c = b.xchb304c ,",                               
               "                xcha304d = b.xchb304d ,",                               
               "                xcha304e = b.xchb304e ,",                               
               "                xcha304f = b.xchb304f ,",                               
               "                xcha304g = b.xchb304g ,",                               
               "                xcha304h = b.xchb304h ,", 
                                #当站下线金额
               "                xcha306  = b.xchb306  ,",
               "                xcha306a = b.xchb306a ,",
               "                xcha306b = b.xchb306b ,",                               
               "                xcha306c = b.xchb306c ,",                               
               "                xcha306d = b.xchb306d ,",                               
               "                xcha306e = b.xchb306e ,",                               
               "                xcha306f = b.xchb306f ,",                               
               "                xcha306g = b.xchb306g ,",                               
               "                xcha306h = b.xchb306h ,",                                
                                #回收转出金额
               "                xcha308  = b.xchb308  ,",
               "                xcha308a = b.xchb308a ,",
               "                xcha308b = b.xchb308b ,",                               
               "                xcha308c = b.xchb308c ,",                               
               "                xcha308d = b.xchb308d ,",                               
               "                xcha308e = b.xchb308e ,",                               
               "                xcha308f = b.xchb308f ,",                               
               "                xcha308g = b.xchb308g ,",                               
               "                xcha308h = b.xchb308h ,",
                                #差异转出金额
               "                xcha310  = b.xchb310  ,",
               "                xcha310a = b.xchb310a ,",
               "                xcha310b = b.xchb310b ,",                               
               "                xcha310c = b.xchb310c ,",                               
               "                xcha310d = b.xchb310d ,",                               
               "                xcha310e = b.xchb310e ,",                               
               "                xcha310f = b.xchb310f ,",                               
               "                xcha310g = b.xchb310g ,",                               
               "                xcha310h = b.xchb310h ,",                                
                                #期末结存金额
               "                xcha902  = b.xchb902  ,",
               "                xcha902a = b.xchb902a ,",
               "                xcha902b = b.xchb902b ,",                               
               "                xcha902c = b.xchb902c ,",                               
               "                xcha902d = b.xchb902d ,",                               
               "                xcha902e = b.xchb902e ,",                               
               "                xcha902f = b.xchb902f ,",                               
               "                xcha902g = b.xchb902g ,",                               
               "                xcha902h = b.xchb902h  "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p8 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_process_p8 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p8"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #將xchb_t的期末金額重计
   UPDATE xchb_tmp SET xchb901  = xchb101  + xchb201  + xchb203  + xchb207 + 
                                  xchb209  + xchb301  + xchb303  + xchb305 + xchb307 + xchb309 ,
                       xchb902  = xchb102  + xchb202  + xchb204  + xchb208 + 
                                  xchb210  + xchb302  + xchb304  + xchb306 + xchb308 + xchb310 ,
                       xchb902a = xchb102a + xchb202a + xchb204a + xchb208a + 
                                  xchb210a + xchb302a + xchb304a + xchb306a + xchb308a + xchb310a ,
                       xchb902b = xchb102b + xchb202b + xchb204b + xchb208b + 
                                  xchb210b + xchb302b + xchb304b + xchb306b + xchb308b + xchb310b ,
                       xchb902c = xchb102c + xchb202c + xchb204c + xchb208c + 
                                  xchb210c + xchb302c + xchb304c + xchb306c + xchb308c + xchb310c ,
                       xchb902d = xchb102d + xchb202d + xchb204d + xchb208d + 
                                  xchb210d + xchb302d + xchb304d + xchb306d + xchb308d + xchb310d ,
                       xchb902e = xchb102e + xchb202e + xchb204e + xchb208e + 
                                  xchb210e + xchb302e + xchb304e + xchb306e + xchb308e + xchb310e ,
                       xchb902f = xchb102f + xchb202f + xchb204f + xchb208f + 
                                  xchb210f + xchb302f + xchb304f + xchb306f + xchb308f + xchb310f ,
                       xchb902g = xchb102g + xchb202g + xchb204g + xchb208g + 
                                  xchb210g + xchb302g + xchb304g + xchb306g + xchb308g + xchb310g ,
                       xchb902h = xchb102h + xchb202h + xchb204h + xchb208h + 
                                  xchb210h + xchb302h + xchb304h + xchb306h + xchb308h + xchb310h 
   WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = p_xcbb006 )     
     AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = p_flag )                                         
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "upd xchb_tmp xchb901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #更新xcha_tmp中的上站转入数量与金额  
   #PGS(D)-00824 ---start---
   LET g_sql = "  MERGE INTO xcha_tmp a ",
               "  USING (SELECT DISTINCT xchaent,xchald,xcha001,xcha002,xcha003,",
               "                 xcha004,xcha005,xcha006,xcbt006,xcbt007,",
               "                 SUM(xcha302) xcha302,SUM(xcha302a) xcha302a,SUM(xcha302b) xcha302b,SUM(xcha302c) xcha302c,SUM(xcha302d) xcha302d,",
               "                 SUM(xcha302e) xcha302e,SUM(xcha302f) xcha302f,SUM(xcha302g) xcha302g,SUM(xcha302h) xcha302h ",
               #190411-00017#1 A mark-S               
#               "           FROM xcha_tmp,xcbt_t,sfac_tmp2 ",
#               "          WHERE xchaent = xcbtent ",
#               "            AND xcha004 = xcbt001 ",
#               "            AND xcha005 = xcbt002 ",
#               "            AND xcha006 = xcbt003 ",
#               "            AND xcha007 = xcbt004 ",
#               "            AND xcha008 = xcbt005 ",
#               "            AND xcha006 = sfacdocno ",
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
               "           FROM xcha_tmp,xcbt_t ",
               "          WHERE xchaent = xcbtent ",
               "            AND xcha004 = xcbt001 ",
               "            AND xcha005 = xcbt002 ",
               "            AND xcha006 = xcbt003 ",
               "            AND xcha007 = xcbt004 ",
               "            AND xcha008 = xcbt005 ",
               "            AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xcha006 AND clevel = ",p_xcbb006,")",
               #190411-00017#1 A add-E
               "            AND xchaent = ",g_enterprise,
               "            AND xchald  = '",g_ld,"'",
               "            AND xcha001 = '",p_seq,"'",
               "            AND xcha003 = '",g_xcat001,"'",
               "            AND xcha004 = ",g_yy,
               "            AND xcha005 = ",g_pp,
#               "            AND clevel = ",p_xcbb006,  #190411-00017#1 A mark
               "            AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchaent AND sfaadocno = xcha006 AND sfaa042 = '",p_flag,"')",                                          
               "          GROUP BY xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcbt006,xcbt007",
               "        ) c", 
               " ON (a.xchaent = c.xchaent ",
               " AND a.xchald  = c.xchald ",
               " AND a.xcha001 = c.xcha001 ",
               " AND a.xcha002 = c.xcha002 ", 
               " AND a.xcha003 = c.xcha003 ",
               " AND a.xcha004 = c.xcha004 ",
               " AND a.xcha005 = c.xcha005 ",
               " AND a.xcha006 = c.xcha006 ",
               " AND a.xcha007 = c.xcbt006 ",
               " AND a.xcha008 = c.xcbt007) ",
               " WHEN MATCHED THEN    ",
               "       UPDATE SET a.xcha204  = c.xcha302  ,",               
               "                  a.xcha204a = c.xcha302a  ,",               
               "                  a.xcha204b = c.xcha302b  ,",               
               "                  a.xcha204c = c.xcha302c  ,",               
               "                  a.xcha204d = c.xcha302d  ,",               
               "                  a.xcha204e = c.xcha302e  ,",               
               "                  a.xcha204f = c.xcha302f  ,",               
               "                  a.xcha204g = c.xcha302g  ,",               
               "                  a.xcha204h = c.xcha302h  "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p10 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p10"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_process_p10
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p10"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF           

   #將xchb_t的金額合計至xcha_t的金額
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcha_tmp ",
               #" USING (SELECT xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,clevel,",  #210220-00018#1 mark
               " USING (SELECT xchbent,xchbld,xchb001,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,clevel,",  #210220-00018#1
               "               SUM(xchb102) xchb102,SUM(xchb102a) xchb102a,SUM(xchb102b) xchb102b,SUM(xchb102c) xchb102c,",
               "               SUM(xchb102d) xchb102d,SUM(xchb102e) xchb102e,SUM(xchb102f) xchb102f,SUM(xchb102g) xchb102g,SUM(xchb102h) xchb102h,",             
               #210220-00018#1---mark---s
               #"               SUM(xchb202) xchb202,SUM(xchb202a) xchb202a,SUM(xchb202b) xchb202b,SUM(xchb202c) xchb202c,",
               #"               SUM(xchb202d) xchb202d,SUM(xchb202e) xchb202e,SUM(xchb202f) xchb202f,SUM(xchb202g) xchb202g,SUM(xchb202h) xchb202h,",               
               #210220-00018#1---mark---e
               #210220-00018#1---add---s
               "               SUM(xchb202+xchb208) xchb202,SUM(xchb202a+xchb208a) xchb202a,SUM(xchb202b+xchb208b) xchb202b,SUM(xchb202c+xchb208c) xchb202c,",
               "               SUM(xchb202d+xchb208d) xchb202d,SUM(xchb202e+xchb208e) xchb202e,SUM(xchb202f+xchb208f) xchb202f,SUM(xchb202g+xchb208g) xchb202g,SUM(xchb202h+xchb208h) xchb202h,",               
               #210220-00018#1---add---e                 
               "               SUM(xchb204) xchb204,SUM(xchb204a) xchb204a,SUM(xchb204b) xchb204b,SUM(xchb204c) xchb204c,",
               "               SUM(xchb204d) xchb204d,SUM(xchb204e) xchb204e,SUM(xchb204f) xchb204f,SUM(xchb204g) xchb204g,SUM(xchb204h) xchb204h,",               
               "               SUM(xchb302) xchb302,SUM(xchb302a) xchb302a,SUM(xchb302b) xchb302b,SUM(xchb302c) xchb302c,",
               "               SUM(xchb302d) xchb302d,SUM(xchb302e) xchb302e,SUM(xchb302f) xchb302f,SUM(xchb302g) xchb302g,SUM(xchb302h) xchb302h,",
               "               SUM(xchb304) xchb304,SUM(xchb304a) xchb304a,SUM(xchb304b) xchb304b,SUM(xchb304c) xchb304c,",
               "               SUM(xchb304d) xchb304d,SUM(xchb304e) xchb304e,SUM(xchb304f) xchb304f,SUM(xchb304g) xchb304g,SUM(xchb304h) xchb304h,",
               "               SUM(xchb306) xchb306,SUM(xchb306a) xchb306a,SUM(xchb306b) xchb306b,SUM(xchb306c) xchb306c,",
               "               SUM(xchb306d) xchb306d,SUM(xchb306e) xchb306e,SUM(xchb306f) xchb306f,SUM(xchb306g) xchb306g,SUM(xchb306h) xchb306h,",               
               "               SUM(xchb308) xchb308,SUM(xchb308a) xchb308a,SUM(xchb308b) xchb308b,SUM(xchb308c) xchb308c,",
               "               SUM(xchb308d) xchb308d,SUM(xchb308e) xchb308e,SUM(xchb308f) xchb308f,SUM(xchb308g) xchb308g,SUM(xchb308h) xchb308h,",
               "               SUM(xchb310) xchb310,SUM(xchb310a) xchb310a,SUM(xchb310b) xchb310b,SUM(xchb310c) xchb310c,",
               "               SUM(xchb310d) xchb310d,SUM(xchb310e) xchb310e,SUM(xchb310f) xchb310f,SUM(xchb310g) xchb310g,SUM(xchb310h) xchb310h,",
               "               SUM(xchb902) xchb902,SUM(xchb902a) xchb902a,SUM(xchb902b) xchb902b,SUM(xchb902c) xchb902c,",
               "               SUM(xchb902d) xchb902d,SUM(xchb902e) xchb902e,SUM(xchb902f) xchb902f,SUM(xchb902g) xchb902g,SUM(xchb902h) xchb902h ",               
               "          FROM xchb_tmp,sfac_tmp2 ",
               "         WHERE xchbent = ",g_enterprise,
               "           AND xchbld  = '",g_ld,"'",
               "           AND xchb001 = '",p_seq,"'",
               "           AND xchb003 = '",g_xcat001,"'",
               "           AND xchb004 = ",g_yy,
               "           AND xchb005 = ",g_pp,
               "           AND xchb006 = sfacdocno ",
               "           AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
               #"         GROUP BY xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,clevel ",  #210220-00018#1 mark
               "         GROUP BY xchbent,xchbld,xchb001,xchb003,xchb004,xchb005,xchb006,xchb007,xchb008,clevel ",  #210220-00018#1
               "        ) b",
               "         ON  ( xchaent = b.xchbent    ",
               "         AND   xchald  = b.xchbld   ",
               "         AND   xcha001 = b.xchb001  ",
               #"         AND   xcha002 = b.xchb002  ",  #210220-00018#1 mark
               "         AND   xcha003 = b.xchb003  ",
               "         AND   xcha004 = b.xchb004  ",
               "         AND   xcha005 = b.xchb005  ",
               "         AND   xcha006 = b.xchb006  ",  
               "         AND   xcha007 = b.xchb007  ",  
               "         AND   xcha008 = b.xchb008  ",
               "         AND  b.clevel = ",p_xcbb006,")",  
               "  WHEN MATCHED THEN    ",
                                #上期结存金额
               "     UPDATE SET xcha102  = b.xchb102  ,",  
               "                xcha102a = b.xchb102a ,",
               "                xcha102b = b.xchb102b ,",                               
               "                xcha102c = b.xchb102c ,",                               
               "                xcha102d = b.xchb102d ,",                               
               "                xcha102e = b.xchb102e ,",                               
               "                xcha102f = b.xchb102f ,",                               
               "                xcha102g = b.xchb102g ,",                               
               "                xcha102h = b.xchb102h ,",
                                #本期投入金额
               "                xcha202  = b.xchb202  ,",
               "                xcha202a = b.xchb202a ,",
               "                xcha202b = b.xchb202b ,",                               
               "                xcha202c = b.xchb202c ,",                               
               "                xcha202d = b.xchb202d ,",                               
               "                xcha202e = b.xchb202e ,",                               
               "                xcha202f = b.xchb202f ,",                               
               "                xcha202g = b.xchb202g ,",                               
               "                xcha202h = b.xchb202h ,",                                
                                #上站转入金额
               "                xcha204  = b.xchb204  ,",
               "                xcha204a = b.xchb204a ,",
               "                xcha204b = b.xchb204b ,",                               
               "                xcha204c = b.xchb204c ,",                               
               "                xcha204d = b.xchb204d ,",                               
               "                xcha204e = b.xchb204e ,",                               
               "                xcha204f = b.xchb204f ,",                               
               "                xcha204g = b.xchb204g ,",                               
               "                xcha204h = b.xchb204h ,",                                
                                #良品转出金额
               "                xcha302  = b.xchb302  ,",
               "                xcha302a = b.xchb302a ,",
               "                xcha302b = b.xchb302b ,",                               
               "                xcha302c = b.xchb302c ,",                               
               "                xcha302d = b.xchb302d ,",                               
               "                xcha302e = b.xchb302e ,",                               
               "                xcha302f = b.xchb302f ,",                               
               "                xcha302g = b.xchb302g ,",                               
               "                xcha302h = b.xchb302h ,",
                                #报废金额
               "                xcha304  = b.xchb304  ,",
               "                xcha304a = b.xchb304a ,",
               "                xcha304b = b.xchb304b ,",                               
               "                xcha304c = b.xchb304c ,",                               
               "                xcha304d = b.xchb304d ,",                               
               "                xcha304e = b.xchb304e ,",                               
               "                xcha304f = b.xchb304f ,",                               
               "                xcha304g = b.xchb304g ,",                               
               "                xcha304h = b.xchb304h ,", 
                                #当站下线金额
               "                xcha306  = b.xchb306  ,",
               "                xcha306a = b.xchb306a ,",
               "                xcha306b = b.xchb306b ,",                               
               "                xcha306c = b.xchb306c ,",                               
               "                xcha306d = b.xchb306d ,",                               
               "                xcha306e = b.xchb306e ,",                               
               "                xcha306f = b.xchb306f ,",                               
               "                xcha306g = b.xchb306g ,",                               
               "                xcha306h = b.xchb306h ,",                                
                                #回收转出金额
               "                xcha308  = b.xchb308  ,",
               "                xcha308a = b.xchb308a ,",
               "                xcha308b = b.xchb308b ,",                               
               "                xcha308c = b.xchb308c ,",                               
               "                xcha308d = b.xchb308d ,",                               
               "                xcha308e = b.xchb308e ,",                               
               "                xcha308f = b.xchb308f ,",                               
               "                xcha308g = b.xchb308g ,",                               
               "                xcha308h = b.xchb308h ,",
                                #差异转出金额
               "                xcha310  = b.xchb310  ,",
               "                xcha310a = b.xchb310a ,",
               "                xcha310b = b.xchb310b ,",                               
               "                xcha310c = b.xchb310c ,",                               
               "                xcha310d = b.xchb310d ,",                               
               "                xcha310e = b.xchb310e ,",                               
               "                xcha310f = b.xchb310f ,",                               
               "                xcha310g = b.xchb310g ,",                               
               "                xcha310h = b.xchb310h ,",                                
                                #期末结存金额
               "                xcha902  = b.xchb902  ,",
               "                xcha902a = b.xchb902a ,",
               "                xcha902b = b.xchb902b ,",                               
               "                xcha902c = b.xchb902c ,",                               
               "                xcha902d = b.xchb902d ,",                               
               "                xcha902e = b.xchb902e ,",                               
               "                xcha902f = b.xchb902f ,",                               
               "                xcha902g = b.xchb902g ,",                               
               "                xcha902h = b.xchb902h  "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p81 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p81"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_process_p81 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p81"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #將xcha_t的差异金額重计
   UPDATE xcha_tmp SET xcha309  = (xcha101  + xcha201  + xcha203  + xcha301  + xcha303  + xcha305 +   xcha307)*-1  ,
                       xcha310  = (xcha102  + xcha202  + xcha204  + xcha302  + xcha304  + xcha306 +   xcha308)*-1  ,
                       xcha310a = (xcha102a + xcha202a + xcha204a + xcha302a + xcha304a + xcha306a + xcha308a)*-1  ,
                       xcha310b = (xcha102b + xcha202b + xcha204b + xcha302b + xcha304b + xcha306b + xcha308b)*-1  ,
                       xcha310c = (xcha102c + xcha202c + xcha204c + xcha302c + xcha304c + xcha306c + xcha308c)*-1  ,
                       xcha310d = (xcha102d + xcha202d + xcha204d + xcha302d + xcha304d + xcha306d + xcha308d)*-1  ,
                       xcha310e = (xcha102e + xcha202e + xcha204e + xcha302e + xcha304e + xcha306e + xcha308e)*-1  ,
                       xcha310f = (xcha102f + xcha202f + xcha204f + xcha302f + xcha304f + xcha306f + xcha308f)*-1  ,
                       xcha310g = (xcha102g + xcha202g + xcha204g + xcha302g + xcha304g + xcha306g + xcha308g)*-1  ,
                       xcha310h = (xcha102h + xcha202h + xcha204h + xcha302h + xcha304h + xcha306h + xcha308h)*-1  
   WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xcha006 AND clevel = p_xcbb006)
     AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xcha006 AND sfaa048 >= g_bdate  AND sfaa048 < l_date2 AND sfaa042 = p_flag)  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "upd xcha_tmp xcha309"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF 

   #將xcha_t的期末金額重计(上面结案的单据已经做了处理，这边未结案的就不用在添加是否结案的条件，把所有的进出项加起来就是期末结存)
   UPDATE xcha_tmp SET xcha901  = xcha101  + xcha201  + xcha203  + xcha301  + xcha303  + xcha305 + xcha307 + xcha309 ,
                       xcha902  = xcha102  + xcha202  + xcha204  + xcha302    + xcha304  + xcha306 + xcha308 + xcha310 ,
                       xcha902a = xcha102a + xcha202a + xcha204a + xcha302a + xcha304a + xcha306a + xcha308a + xcha310a ,
                       xcha902b = xcha102b + xcha202b + xcha204b + xcha302b + xcha304b + xcha306b + xcha308b + xcha310b ,
                       xcha902c = xcha102c + xcha202c + xcha204c + xcha302c + xcha304c + xcha306c + xcha308c + xcha310c ,
                       xcha902d = xcha102d + xcha202d + xcha204d + xcha302d + xcha304d + xcha306d + xcha308d + xcha310d ,
                       xcha902e = xcha102e + xcha202e + xcha204e + xcha302e + xcha304e + xcha306e + xcha308e + xcha310e ,
                       xcha902f = xcha102f + xcha202f + xcha204f + xcha302f + xcha304f + xcha306f + xcha308f + xcha310f ,
                       xcha902g = xcha102g + xcha202g + xcha204g + xcha302g + xcha304g + xcha306g + xcha308g + xcha310g ,
                       xcha902h = xcha102h + xcha202h + xcha204h + xcha302h + xcha304h + xcha306h + xcha308h + xcha310h 
   WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xcha006 AND clevel = p_xcbb006 )
     #AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xcha006 AND (sfaa048 IS NULL OR sfaa048 >= l_date2) AND sfaa042 = p_flag)   
     AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xcha006  AND sfaa042 = p_flag)   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "upd xcha_tmp xcha901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
   
   #181120-00039#1---add---s
   #当投入少,转出多时,会出现期末为负数,这边给xcha901=0
   UPDATE xcha_tmp SET xcha901  = 0 ,
                       xcha902  = 0 ,
                       xcha902a = 0 ,
                       xcha902b = 0 ,
                       xcha902c = 0 ,
                       xcha902d = 0 ,
                       xcha902e = 0 ,
                       xcha902f = 0 ,
                       xcha902g = 0 ,
                       xcha902h = 0
   WHERE EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xcha006 AND clevel = p_xcbb006 )
     AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaadocno = xcha006  AND sfaa042 = p_flag)
     AND xcha901 < 0
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "upd xcha_tmp xcha901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF
   #181120-00039#1---add---e 
   
   
   #更新xcce_t的各項投入金額
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING (SELECT DISTINCT xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,xchb013,",#xchbtime,",  #mark by lixiang 20170228
               "                     SUM(xchb201) xchb201,SUM(xchb202) xchb202,SUM(xchb202a) xchb202a,SUM(xchb202b) xchb202b,SUM(xchb202c) xchb202c,SUM(xchb202d) xchb202d,SUM(xchb202e) xchb202e,SUM(xchb202f) xchb202f,SUM(xchb202g) xchb202g,SUM(xchb202h) xchb202h,",
               "                     SUM(xchb305) xchb305,SUM(xchb306) xchb306,SUM(xchb306a) xchb306a,SUM(xchb306b) xchb306b,SUM(xchb306c) xchb306c,SUM(xchb306d) xchb306d,SUM(xchb306e) xchb306e,SUM(xchb306f) xchb306f,SUM(xchb306g) xchb306g,SUM(xchb306h) xchb306h,",
               "                     SUM(xchb207) xchb207,SUM(xchb208) xchb208,SUM(xchb208a) xchb208a,SUM(xchb208b) xchb208b,SUM(xchb208c) xchb208c,SUM(xchb208d) xchb208d,SUM(xchb208e) xchb208e,SUM(xchb208f) xchb208f,SUM(xchb208g) xchb208g,SUM(xchb208h) xchb208h,",
               "                     SUM(xchb209) xchb209,SUM(xchb210) xchb210,SUM(xchb210a) xchb210a,SUM(xchb210b) xchb210b,SUM(xchb210c) xchb210c,SUM(xchb210d) xchb210d,SUM(xchb210e) xchb210e,SUM(xchb210f) xchb210f,SUM(xchb210g) xchb210g,SUM(xchb210h) xchb210h ",
               #190411-00017#1 A mark-S
#               "                FROM xchb_tmp,sfac_tmp2 ",
#               "               WHERE xchb007 = xchb014 ",
#               "                 AND xchb008 = xchb015 ",
#               "                 AND xchb006 = sfacdocno ",
#               "                 AND clevel = ",p_xcbb006,
               #190411-00017#1 A mark-E
               #190411-00017#1 A add-S
               "                FROM xchb_tmp ",
               "               WHERE xchb007 = xchb014 ",
               "                 AND xchb008 = xchb015 ",
               "                 AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xchb006 AND clevel = ",p_xcbb006,") ",
               #190411-00017#1 A add-E
#               "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",   #171122-00029#2 mark
               "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"' AND sfaa003 <> '3')",   #171122-00029#2 mod 加上"sfaa003 <> 3.拆解工單"的條件                                        
               "               GROUP By xchbent,xchbcomp,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,xchb013",#,xchbtime",  #mark by lixiang 20170228
               "             ) b ",
               "          ON ( a.xcceent = b.xchbent ",
               "         AND   a.xcceld  = b.xchbld  ",
               "         AND   a.xcce001 = b.xchb001 ",
               "         AND   NVL(a.xcce002,' ') = NVL(b.xchb002,' ') ",
               "         AND   a.xcce003 = b.xchb003 ",
               "         AND   a.xcce004 = b.xchb004 ",
               "         AND   a.xcce005 = b.xchb005 ",
               "         AND   a.xcce006 = b.xchb006 ",       
               "         AND   a.xcce007 = b.xchb009 ",
               "         AND   NVL(a.xcce008,' ') = NVL(b.xchb010,' ') ",
               "         AND   NVL(a.xcce009,' ') = NVL(b.xchb011,' ') ",
               "         )",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce201  = nvl(b.xchb201 ,0) ,  ",
               "                a.xcce202  = nvl(b.xchb202 ,0) ,  ",
               "                a.xcce202a = nvl(b.xchb202a,0) ,  ",
               "                a.xcce202b = nvl(b.xchb202b,0) ,  ",
               "                a.xcce202c = nvl(b.xchb202c,0) ,  ",
               "                a.xcce202d = nvl(b.xchb202d,0) ,  ",
               "                a.xcce202e = nvl(b.xchb202e,0) ,  ",
               "                a.xcce202f = nvl(b.xchb202f,0) ,  ",
               "                a.xcce202g = nvl(b.xchb202g,0) ,  ",
               "                a.xcce202h = nvl(b.xchb202h,0) ,  ",                
               "                a.xcce205  = nvl(b.xchb305 ,0) ,  ",
               "                a.xcce206  = nvl(b.xchb306 ,0) ,  ",
               "                a.xcce206a = nvl(b.xchb306a,0) ,  ",
               "                a.xcce206b = nvl(b.xchb306b,0) ,  ",
               "                a.xcce206c = nvl(b.xchb306c,0) ,  ",
               "                a.xcce206d = nvl(b.xchb306d,0) ,  ",
               "                a.xcce206e = nvl(b.xchb306e,0) ,  ",
               "                a.xcce206f = nvl(b.xchb306f,0) ,  ",
               "                a.xcce206g = nvl(b.xchb306g,0) ,  ",
               "                a.xcce206h = nvl(b.xchb306h,0) ,  ",               
               "                a.xcce207  = nvl(b.xchb207,0) ,   ",
               "                a.xcce208  = nvl(b.xchb208,0) ,   ",
               "                a.xcce208a = nvl(b.xchb208a,0) ,  ",
               "                a.xcce208b = nvl(b.xchb208b,0) ,  ",
               "                a.xcce208c = nvl(b.xchb208c,0) ,  ",
               "                a.xcce208d = nvl(b.xchb208d,0) ,  ",
               "                a.xcce208e = nvl(b.xchb208e,0) ,  ",
               "                a.xcce208f = nvl(b.xchb208f,0) ,  ",
               "                a.xcce208g = nvl(b.xchb208g,0) ,  ",
               "                a.xcce208h = nvl(b.xchb208h,0) ,  ",                
               "                a.xcce209  = nvl(b.xchb209,0) ,   ",
               "                a.xcce210  = nvl(b.xchb210,0) ,   ",
               "                a.xcce210a = nvl(b.xchb210a,0) ,  ",
               "                a.xcce210b = nvl(b.xchb210b,0) ,  ",
               "                a.xcce210c = nvl(b.xchb210c,0) ,  ",
               "                a.xcce210d = nvl(b.xchb210d,0) ,  ",
               "                a.xcce210e = nvl(b.xchb210e,0) ,  ",
               "                a.xcce210f = nvl(b.xchb210f,0) ,  ",
               "                a.xcce210g = nvl(b.xchb210g,0) ,  ",
               "                a.xcce210h = nvl(b.xchb210h,0)    ",
               "  WHEN NOT MATCHED THEN                      ",
               "       INSERT VALUES(b.xchbent,b.xchbcomp,b.xchbld,b.xchb001,b.xchb002,b.xchb003,b.xchb004,b.xchb005,b.xchb006,b.xchb009,NVL(b.xchb010,' '),NVL(b.xchb011,' '),b.xchb013, ",
               "                     0,0,0,0,0,0,0,0,0,0,",   #上期结存 xcce101   
               "                     nvl(b.xchb201,0),nvl(b.xchb202,0),nvl(b.xchb202a,0),nvl(b.xchb202b,0),nvl(b.xchb202c,0),nvl(b.xchb202d,0),nvl(b.xchb202e,0),nvl(b.xchb202f,0),nvl(b.xchb202g,0),nvl(b.xchb202h,0),",   #本期投入 xcce201   
               "                     nvl(b.xchb305,0),nvl(b.xchb306,0),nvl(b.xchb306a,0),nvl(b.xchb306b,0),nvl(b.xchb306c,0),nvl(b.xchb306d,0),nvl(b.xchb306e,0),nvl(b.xchb306f,0),nvl(b.xchb306g,0),nvl(b.xchb306h,0),",   #本期当站下线 xcce205   
               "                     nvl(b.xchb207,0),nvl(b.xchb208,0),nvl(b.xchb208a,0),nvl(b.xchb208b,0),nvl(b.xchb208c,0),nvl(b.xchb208d,0),nvl(b.xchb208e,0),nvl(b.xchb208f,0),nvl(b.xchb208g,0),nvl(b.xchb208h,0),",   #本期一般退料 xcce207   
               "                     nvl(b.xchb209,0),nvl(b.xchb210,0),nvl(b.xchb210a,0),nvl(b.xchb210b,0),nvl(b.xchb210c,0),nvl(b.xchb210d,0),nvl(b.xchb210e,0),nvl(b.xchb210f,0),nvl(b.xchb210g,0),nvl(b.xchb210h,0),",   #本期超领退 xcce209  
               "                     0,0,0,0,0,0,0,0,0,0,",   #本期转出 xcce301
               "                     0,0,0,0,0,0,0,0,0,0,",   #差异转出 xcce303   
               "                     0,0,0,0,0,0,0,0,0,0,",   #盘差数量 xcce307   
               "                     0,0,0,0,0,0,0,0,0,0,",   #期末结存 xcce901   
               #"                     b.xchbtime)"   #mark by lixiang 20170228
               "                     to_date('",l_time,"','yyyy-mm-dd hh24:mi:ss') ) "  #add by lixiang 20170228
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p11 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   EXECUTE s_axcp500_avg_wip_process_p11 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  

   #PGS(D)-00824 ---start---
   #PGS(D)-00824 --- end ---

   #171115-00022#1---add---s
   #DL+OH+SUB的投入数量不能用SUM(xchb201),因为不同站数量会重复,金额不会重复,所以金额是SUM(xchb202)
   #数量用工单的投入套数
   UPDATE xcce_tmp 
      #SET xcce201 = (SELECT xccd201 FROM xccd_tmp                                             #191126-00020#1 mark
      #SET xcce201 = (SELECT CASE WHEN xccd201 = 0 THEN xccd101 ELSE xccd201 END FROM xccd_tmp  #191126-00020#1 add     #201210-00021#1 mark
      SET xcce201 = (SELECT CASE WHEN xcce101 = 0 THEN xccd201+xccd001 ELSE xccd201 END FROM xccd_tmp   #201210-00021#1
                      WHERE xccdent = xcceent
                        AND xccd006 = xcce006 )
    WHERE xcce007 = 'DL+OH+SUB' 
      AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xcceent AND sfaadocno = xcce006 AND sfaa042 = p_flag)
      AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfacdocno = xcce006 AND clevel = p_xcbb006)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce201 "
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF       
   #171115-00022#1---add---e
   
   #更新xcce_t的各項转出金額
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING (SELECT xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel,",
               "                     SUM(xchb301) xchb301,SUM(xchb302) xchb302,SUM(xchb302a) xchb302a,SUM(xchb302b) xchb302b,SUM(xchb302c) xchb302c,SUM(xchb302d) xchb302d,SUM(xchb302e) xchb302e,SUM(xchb302f) xchb302f,SUM(xchb302g) xchb302g,SUM(xchb302h) xchb302h",
               "                FROM xchb_tmp,sfac_tmp2 ",
               "               WHERE xchb007 = 'END' ",
               "                 AND xchb008 = '0' ",
               "                 AND xchb006 = sfacdocno ",
               "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
               "               GROUP By xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel",
               "             )b ",
               "          ON ( a.xcceent = b.xchbent ",
               "         AND   a.xcceld  = b.xchbld  ",
               "         AND   a.xcce001 = b.xchb001 ",
               "         AND   a.xcce002 = b.xchb002 ",
               "         AND   a.xcce003 = b.xchb003 ",
               "         AND   a.xcce004 = b.xchb004 ",
               "         AND   a.xcce005 = b.xchb005 ",
               "         AND   a.xcce006 = b.xchb006 ",       
               "         AND   a.xcce007 = b.xchb009 ",
               "         AND   a.xcce008 = b.xchb010 ",
               "         AND   a.xcce009 = b.xchb011 ",
               "         AND   b.clevel = ",p_xcbb006,")",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = nvl(b.xchb301 ,0) ,  ",
               "                a.xcce302  = nvl(b.xchb302 ,0) ,  ",
               "                a.xcce302a = nvl(b.xchb302a,0) ,  ",
               "                a.xcce302b = nvl(b.xchb302b,0) ,  ",
               "                a.xcce302c = nvl(b.xchb302c,0) ,  ",
               "                a.xcce302d = nvl(b.xchb302d,0) ,  ",
               "                a.xcce302e = nvl(b.xchb302e,0) ,  ",
               "                a.xcce302f = nvl(b.xchb302f,0) ,  ",
               "                a.xcce302g = nvl(b.xchb302g,0) ,  ",
               "                a.xcce302h = nvl(b.xchb302h,0)   "
   #PGS(D)0-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p12 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
   
   EXECUTE s_axcp500_avg_wip_process_p12 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF     

   #181214-00009#1---02295---s
   #判斷該工單是研發工單時,則將差異金額更新到xcce的差異轉出裡面
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING (SELECT xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel,",
               "                     SUM(xchb310) xchb310,SUM(xchb310a) xchb310a,SUM(xchb310b) xchb310b,SUM(xchb310c) xchb310c,SUM(xchb310d) xchb310d,SUM(xchb310e) xchb310e,SUM(xchb310f) xchb310f,SUM(xchb310g) xchb310g,SUM(xchb310h) xchb310h",
               "                FROM xchb_tmp,sfac_tmp2 ",
               "               WHERE xchb007 = 'END' ",
               "                 AND xchb008 = '0' ",
               "                 AND xchb006 = sfacdocno ",
               "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa003 = '4' AND sfaa042 = '",p_flag,"')",                                          
               "               GROUP By xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel",
               "             )b ",
               "          ON ( a.xcceent = b.xchbent ",
               "         AND   a.xcceld  = b.xchbld  ",
               "         AND   a.xcce001 = b.xchb001 ",
               "         AND   a.xcce002 = b.xchb002 ",
               "         AND   a.xcce003 = b.xchb003 ",
               "         AND   a.xcce004 = b.xchb004 ",
               "         AND   a.xcce005 = b.xchb005 ",
               "         AND   a.xcce006 = b.xchb006 ",       
               "         AND   a.xcce007 = b.xchb009 ",
               "         AND   a.xcce008 = b.xchb010 ",
               "         AND   a.xcce009 = b.xchb011 ",
               "         AND   b.clevel = ",p_xcbb006,")",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce304  = nvl(b.xchb310 ,0) ,  ",
               "                a.xcce304a = nvl(b.xchb310a,0) ,  ",
               "                a.xcce304b = nvl(b.xchb310b,0) ,  ",
               "                a.xcce304c = nvl(b.xchb310c,0) ,  ",
               "                a.xcce304d = nvl(b.xchb310d,0) ,  ",
               "                a.xcce304e = nvl(b.xchb310e,0) ,  ",
               "                a.xcce304f = nvl(b.xchb310f,0) ,  ",
               "                a.xcce304g = nvl(b.xchb310g,0) ,  ",
               "                a.xcce304h = nvl(b.xchb310h,0)   "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p121 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p121"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  
   
   EXECUTE s_axcp500_avg_wip_process_p121 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p121"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF    
   #181214-00009#1---02295---e
   
   #170418-00026#1---add---s
   #S-FIN-6007判断当站报废转出
   #1.结案月转出,在axcp163排除报废的转出的计算.
   #2.当月转出金额转入库存成本,则将报废转到xcce的当月入库中.
   #3.当月转出金额专职在制差异转出,则将报废的转到xcce的差异转出中
   CASE g_sys_6007
      WHEN '1'
         #结案月转出,在axcp163排除报废的转出的计算     
      WHEN '2'
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xcce_tmp   a ",
                     "       USING (SELECT xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel,",
                     "                     SUM(xchb303  + xchb307) xchb303,  SUM(xchb304  + xchb308) xchb304,",
                     "                     SUM(xchb304a + xchb308a) xchb304a,SUM(xchb304b + xchb308b) xchb304b,",
                     "                     SUM(xchb304c + xchb308c) xchb304c,SUM(xchb304d + xchb308d) xchb304d,",
                     "                     SUM(xchb304e + xchb308e) xchb304e,SUM(xchb304f + xchb308f) xchb304f,",
                     "                     SUM(xchb304g + xchb308g) xchb304g,SUM(xchb304h + xchb308h) xchb304h ",
                     "                FROM xchb_tmp,sfac_tmp2 ",
                     "               WHERE xchb006 = sfacdocno ",
                     "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
                     "               GROUP By xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel",
                     "             )b ",
                     "          ON ( a.xcceent = b.xchbent ",
                     "         AND   a.xcceld  = b.xchbld  ",
                     "         AND   a.xcce001 = b.xchb001 ",
                     "         AND   a.xcce002 = b.xchb002 ",
                     "         AND   a.xcce003 = b.xchb003 ",
                     "         AND   a.xcce004 = b.xchb004 ",
                     "         AND   a.xcce005 = b.xchb005 ",
                     "         AND   a.xcce006 = b.xchb006 ",       
                     "         AND   a.xcce007 = b.xchb009 ",
                     "         AND   a.xcce008 = b.xchb010 ",
                     "         AND   a.xcce009 = b.xchb011 ",
                     "         AND   b.clevel = ",p_xcbb006,")",
                     "  WHEN MATCHED THEN    ",
                     "     UPDATE SET a.xcce301  = nvl(a.xcce301 ,0) + nvl(b.xchb303 ,0),",  
                     "                a.xcce302  = nvl(a.xcce302 ,0) + nvl(b.xchb304 ,0),",  
                     "                a.xcce302a = nvl(a.xcce302a,0) + nvl(b.xchb304a,0),",  
                     "                a.xcce302b = nvl(a.xcce302b,0) + nvl(b.xchb304b,0),",  
                     "                a.xcce302c = nvl(a.xcce302c,0) + nvl(b.xchb304c,0),",  
                     "                a.xcce302d = nvl(a.xcce302d,0) + nvl(b.xchb304d,0),",  
                     "                a.xcce302e = nvl(a.xcce302e,0) + nvl(b.xchb304e,0),",  
                     "                a.xcce302f = nvl(a.xcce302f,0) + nvl(b.xchb304f,0),",  
                     "                a.xcce302g = nvl(a.xcce302g,0) + nvl(b.xchb304g,0),",  
                     "                a.xcce302h = nvl(a.xcce302h,0) + nvl(b.xchb304h,0) "
         #PGS(D)-00824 --- end ---
         PREPARE s_axcp500_avg_wip_process_p122_2 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p122_2"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
      #     RETURN r_success
         END IF  
         
         EXECUTE s_axcp500_avg_wip_process_p122_2 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p122_2"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
      #     RETURN r_success
         END IF    
         #200212-00022#1 mark(s)         
         ##170724-00055#1---add---s         
         ##根据xcck012单据类型='DIFF'可以判断为调整的，或者根据xcck055判断
         #LET g_sql = "INSERT INTO xcck_tmp ",                                         
         #            #                           企业编号 site组织 法人组织 账套 账套本位币顺序                      #161114-00003#1 add  #170110-00028#1                    
         #            #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,",            #170110-00028#1       #180910-00065#1 mark              
         #            " SELECT xcceent,sfaa_tmp.sfaasite,xccecomp,xcceld,xcce001,",            #180910-00065#1
         #            #        成本域  成本计算类型 年度 期别 
         #            "        xcce002,xcce003,xcce004,xcce005, ",
         #            #        参考单号 项次                                    #参考单号=工单单号 项次为同个工单+1
         #            "        xccd006 ,ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 )   , ",
         #            #        项序 出入库码  料号
         #            "        0   ,1       ,xccd007, ",
         #            #特性：不能直接用xccd008，xccd上是不存特征的，肯定是空格，但实际工单上的主件不一定是有空格的，都有特征，那这样写入xcck后，最后汇总到xccc时，特征就会匹配不到，这部分也就会计入不到xccc中
         #            #              所以需再关联sfac_tmp去获取一个特征,用sfac006。尽量关联相同成本阶的那个特征
         #            #      再如果工单有多产出主件，则只要抓一笔就行了，这部分差异转出的部分只要有个主件认领就可以了
         #            #"        sfac_tmp.sfac006, ", #180910-00065#1 mark
#        #             "        sfaa_tmp.sfaa006, ", #180910-00065#1      #190513-00024#1 mark
         #            "        sfaa_tmp.sfaa011, ", #190513-00024#1 mod
         #            #        单据类型 单据日期 时间 仓库 储位                  #单据类型xcck012='DIFF'
         #            "        'DIFF' ,''      ,'' ,' ' ,' ' ,  ",
         #            "        'DIFF' ,NULL      ,'' ,' ' ,' ' ,  ",   #PGS-(D)-03080
         #            #        批号    异动类型  原因码 交易对象 客群
         #            "        xccd009,'1100'  ,' '   ,' '    ,' ',  ",        #xcck020异动类型='1100'本月无入库差异转出的类型
         #            #        区域 成本中心 经营类别 渠道 品类
         #            "        ' ' ,' '     ,' '     ,' ' ,' '  ,  ",
         #            #        品牌              项目号 WBS 存货科目 费用成本科目
         #            "        nvl(imaa126,' '),' '   ,' ',' '     ,' '         ,  ",
         #            #        收入科目 交易币种 本位币种   汇率  交易单位            
         #            "        ' '    ,xccd011,xccd011,1      ,imaa006,  ",
         #            #        成本单位 换算率 交易数量 工单号码 重复性生产-计划编号        
         #            "        imaa006 ,1    ,0      ,xccd006,' '    ,  ",
         #            #        重复性生产-生产料号 BOM特性 产品特征
         #            "        ' '              ,' '    ,' '    ,  ",
         #            #        xccc类型                                                                                              本期异动数量
         #            #"        CASE '",p_flag,"' WHEN 'Y' THEN '2090' ELSE '2050' END IF, 0, ",   #xcck055异动类型=本月无入库差异转出的类型 '2050'一般工单 '2090'重工工单  #本期异动数量=0
         #            "        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END IF, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型
         #            "        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型     #PGS-(D)-03080 need TQC
         #            #        本期异动数量金额    
         #            "        xcce302*(-1),xcce302a*(-1),xcce302b*(-1),xcce302c*(-1),xcce302d*(-1),xcce302e*(-1),xcce302f*(-1),xcce302g*(-1),xcce302h*(-1), ", 
         #            #        本期异动单价        
         #            "        xcce302*(-1),xcce302a*(-1),xcce302b*(-1),xcce302c*(-1),xcce302d*(-1),xcce302e*(-1),xcce302f*(-1),xcce302g*(-1),xcce302h*(-1), ",                     
         #            #        已耗数量金额          结存数量金额          结存单位成本        结存调整金额
         #            "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, ",
         #            #        资料所有者      部门         录入者       部门  创建日 更改者 最近更改日 状态码
         #            "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"','','','','Y', ",
         #            "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"',CAST(NULL as timestamp),'',CAST(NULL as timestamp),'Y', ",   #PGS-(D)-03080
         #            #        自定义字段
         #            "        '','','','','','','','','','','','','','','', ",
         #            "        '','','','','','','','','','','','','','','', ",
         #            #"        '','','','','','','','','','','','','','','', ",   #PGS-(D)-03080 mark
         #            "        0,0,0,0,0,CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp), ",   #PGS-(D)-03080
         #            "        '',",    #成本代销单号  
         #            "        ' ' ",   #库存管理特征 for xccq use
         #            #"    FROM xcce_tmp LEFT OUTER JOIN imaa_t ON imaaent = xcceent AND imaa001 = xcce007,xccd_tmp, ",  #191205-00053#1 mark
         #            "    FROM xcce_tmp,xccd_tmp LEFT OUTER JOIN imaa_t ON imaaent = xccdent AND imaa001 = xccd007, ",  #191205-00053#1
         #            #180910-00065#1---mark---s
         #            #"         (SELECT * ",
         #            #"            FROM ( SELECT sfacdocno,sfacsite,sfac001,sfac006,clevel,ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) num FROM sfac_tmp WHERE clevel =",p_xcbb006,") a ",  #mod zhangllc SBS7 add sfacsite
         #            #"           WHERE num=1 ",
         #            #"         ) sfac_tmp, ",
         #            #180910-00065#1---mark---e
         #            #190411-00017#1 A mark-S
#        #             "         (SELECT sfaa_tmp.* FROM sfaa_tmp,sfac_tmp2 ",
#        #             "           WHERE sfaaent = ",g_enterprise,
#        #             "             AND sfaadocno=sfacdocno ",
#        #             "             AND clevel= ",p_xcbb006,
#        #             "             AND sfaa042 = '",p_flag,"' ",
#        #             "          ) sfaa_tmp ",
         #            #190411-00017#1 A mark-E
         #            #190411-00017#1 A add-S
         #            "         (SELECT sfaa_tmp.* FROM sfaa_tmp ",
         #            "           WHERE sfaaent = ",g_enterprise,
         #            "             AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfaadocno=sfacdocno AND clevel = ",p_xcbb006,") ",
         #            "             AND sfaa042 = '",p_flag,"' ",
         #            "          ) sfaa_tmp ",
         #            #190411-00017#1 A add-E
         #            "   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce002=xccd002 AND xcce003=xccd003 ",
         #            "     AND xcce004 = xccd004 AND xcce005=xccd005 AND xcce006=xccd006 ",
         #            #"     AND sfacdocno = xccd006 AND sfac001=xccd007 ",  #关联sfac_tmp  #180910-00065#1 mark
         #            "     AND xcce001 ='",p_seq,"' ",
         #            "     AND xcceent = sfaaent AND xcce006 = sfaadocno ", #关联sfaa_tmp
         #            "     AND xcce302 != 0 ", 
         #            "     AND sfaa003 <> '4' ", ##180320-00059#1 add
         #            "     AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
         #            "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
         #            "                     AND inaj020 = xcce006 ",
         #            "                     ) ",
         #            #當月有報廢
         #            "     AND EXISTS (SELECT 1 FROM sffb_t ",
         #            "                  WHERE sffbent = xccdent ",
         #            "                    AND sffb005 = xccd006 ",
         #            "                    AND sffb012 >= '",g_bdate,"' AND sffb012 < '",l_date2,"' ",
         #            "                    AND sffb018 > 0 ",
         #            "                    AND sffbstus=  'Y' AND sffb001 = '3' ) "                   
         #PREPARE s_axcp500_avg_wip_process_p122_22 FROM g_sql
         #IF SQLCA.sqlcode THEN
         #   INITIALIZE g_errparam TO NULL
         #   LET g_errparam.code   = SQLCA.sqlcode
         #   LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p122_22"
         #   LET g_errparam.popup  = TRUE
         #   CALL cl_err()     
         #END IF     
         #EXECUTE s_axcp500_avg_wip_process_p122_22
         #IF SQLCA.sqlcode THEN
         #   INITIALIZE g_errparam TO NULL
         #   LET g_errparam.code   = SQLCA.sqlcode
         #   LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p122_22"
         #   LET g_errparam.popup  = TRUE
         #   CALL cl_err()      
         #END IF   
         ##170724-00055#1---add---e    
         ##200212-00022#1 mark(e)         
      WHEN '3'
         #PGS(D)-00824 ---start---
         LET g_sql = " MERGE INTO xcce_tmp   a ",
                     "       USING (SELECT xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel,",
                     "                     SUM(xchb303  + xchb307) xchb303,  SUM(xchb304  + xchb308) xchb304,",
                     "                     SUM(xchb304a + xchb308a) xchb304a,SUM(xchb304b + xchb308b) xchb304b,",
                     "                     SUM(xchb304c + xchb308c) xchb304c,SUM(xchb304d + xchb308d) xchb304d,",
                     "                     SUM(xchb304e + xchb308e) xchb304e,SUM(xchb304f + xchb308f) xchb304f,",
                     "                     SUM(xchb304g + xchb308g) xchb304g,SUM(xchb304h + xchb308h) xchb304h ",
                     "                FROM xchb_tmp,sfac_tmp2 ",
                     "               WHERE xchb006 = sfacdocno ",
                     "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",                                          
                     "               GROUP By xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel",
                     "             )b ",
                     "          ON ( a.xcceent = b.xchbent ",
                     "         AND   a.xcceld  = b.xchbld  ",
                     "         AND   a.xcce001 = b.xchb001 ",
                     "         AND   a.xcce002 = b.xchb002 ",
                     "         AND   a.xcce003 = b.xchb003 ",
                     "         AND   a.xcce004 = b.xchb004 ",
                     "         AND   a.xcce005 = b.xchb005 ",
                     "         AND   a.xcce006 = b.xchb006 ",       
                     "         AND   a.xcce007 = b.xchb009 ",
                     "         AND   a.xcce008 = b.xchb010 ",
                     "         AND   a.xcce009 = b.xchb011 ",
                     "         AND   b.clevel = ",p_xcbb006,")",
                     "  WHEN MATCHED THEN    ",
                     "     UPDATE SET a.xcce303  = nvl(a.xcce303 ,0) + nvl(b.xchb303 ,0),",  
                     "                a.xcce304  = nvl(a.xcce304 ,0) + nvl(b.xchb304 ,0),",  
                     "                a.xcce304a = nvl(a.xcce304a,0) + nvl(b.xchb304a,0),",  
                     "                a.xcce304b = nvl(a.xcce304b,0) + nvl(b.xchb304b,0),",  
                     "                a.xcce304c = nvl(a.xcce304c,0) + nvl(b.xchb304c,0),",  
                     "                a.xcce304d = nvl(a.xcce304d,0) + nvl(b.xchb304d,0),",  
                     "                a.xcce304e = nvl(a.xcce304e,0) + nvl(b.xchb304e,0),",  
                     "                a.xcce304f = nvl(a.xcce304f,0) + nvl(b.xchb304f,0),",  
                     "                a.xcce304g = nvl(a.xcce304g,0) + nvl(b.xchb304g,0),",  
                     "                a.xcce304h = nvl(a.xcce304h,0) + nvl(b.xchb304h,0) "
         #PGS(D)-00824 --- end ---
         PREPARE s_axcp500_avg_wip_process_p122_3 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p122_3"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
      #     RETURN r_success
         END IF  
         
         EXECUTE s_axcp500_avg_wip_process_p122_3 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p122_3"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
      #     RETURN r_success
         END IF       
   END CASE
   #170418-00026#1---add---e
   #将xchb_t中差异更新至xcce_t的期末中，后面将根据参数决定这些数据存在xcce_t中的入库转出还是差异转出
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp   a ",
               "       USING (SELECT xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel,",
               #170330-00107#1--mod--s
               #"                     SUM(xchb901) xchb901,SUM(xchb902) xchb902,SUM(xchb902a) xchb902a,SUM(xchb902b) xchb902b,SUM(xchb902c) xchb902c,SUM(xchb902d) xchb902d,SUM(xchb902e) xchb902e,SUM(xchb902f) xchb902f,SUM(xchb902g) xchb902g,SUM(xchb902h) xchb902h ",
               "                     SUM((xchb309)*-1+xchb901) xchb901,   SUM((xchb310)*-1+xchb902) xchb902,",
               "                     SUM((xchb310a)*-1+xchb902a) xchb902a,SUM((xchb310b)*-1+xchb902b) xchb902b,",
               "                     SUM((xchb310c)*-1+xchb902c) xchb902c,SUM((xchb310d)*-1+xchb902d) xchb902d,",
               "                     SUM((xchb310e)*-1+xchb902e) xchb902e,SUM((xchb310f)*-1+xchb902f) xchb902f,",
               "                     SUM((xchb310g)*-1+xchb902g) xchb902g,SUM((xchb310h)*-1+xchb902h) xchb902h ",
               #170330-00107#1--mod--e
               "                FROM xchb_tmp,sfac_tmp2 ",
               "               WHERE xchb006 = sfacdocno ",
               #"                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa042 = '",p_flag,"')",   #181214-00009#1 mark                                       
               "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchbent AND sfaadocno = xchb006 AND sfaa003 <> '4' AND sfaa042 = '",p_flag,"')",   #181214-00009#1  add                                       
               "               GROUP By xchbent,xchbld,xchb001,xchb002,xchb003,xchb004,xchb005,xchb006,xchb009,xchb010,xchb011,clevel",
               "             )b ",
               "          ON ( a.xcceent = b.xchbent ",
               "         AND   a.xcceld  = b.xchbld  ",
               "         AND   a.xcce001 = b.xchb001 ",
               "         AND   a.xcce002 = b.xchb002 ",
               "         AND   a.xcce003 = b.xchb003 ",
               "         AND   a.xcce004 = b.xchb004 ",
               "         AND   a.xcce005 = b.xchb005 ",
               "         AND   a.xcce006 = b.xchb006 ",       
               "         AND   a.xcce007 = b.xchb009 ",
               "         AND   a.xcce008 = b.xchb010 ",
               "         AND   a.xcce009 = b.xchb011 ",
               "         AND   b.clevel = ",p_xcbb006,")",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce901  = nvl(b.xchb901 ,0),",  
               "                a.xcce902  = nvl(b.xchb902 ,0),",  
               "                a.xcce902a = nvl(b.xchb902a,0),",  
               "                a.xcce902b = nvl(b.xchb902b,0),",  
               "                a.xcce902c = nvl(b.xchb902c,0),",  
               "                a.xcce902d = nvl(b.xchb902d,0),",  
               "                a.xcce902e = nvl(b.xchb902e,0),",  
               "                a.xcce902f = nvl(b.xchb902f,0),",  
               "                a.xcce902g = nvl(b.xchb902g,0),",  
               "                a.xcce902h = nvl(b.xchb902h,0) "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p122 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p122"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF  
   
   EXECUTE s_axcp500_avg_wip_process_p122 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p122"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF      

   #171115-00022#1---add---s
   #DL+OH+SUB的转出数量为xcha_t END站转出的数量 
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp a ",
               "       USING (SELECT xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,xcha301,xcha309,xcha901,clevel",
               "                FROM xcha_tmp,sfac_tmp2 ",
               "               WHERE xcha006 = sfacdocno ",
               "                 AND xcha007 = 'END' ",
               "                 AND xcha008 = '0'   ",               
               "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchaent AND sfaadocno = xcha006 AND sfaa042 = '",p_flag,"')",   
               "             )b ",
               "          ON ( a.xcceent = b.xchaent ",
               "         AND   a.xcceld  = b.xchald  ",
               "         AND   a.xcce001 = b.xcha001 ",
               "         AND   a.xcce003 = b.xcha003 ",
               "         AND   a.xcce004 = b.xcha004 ",
               "         AND   a.xcce005 = b.xcha005 ",
               "         AND   a.xcce006 = b.xcha006 ",
               "         AND   a.xcce007 = 'DL+OH+SUB'",
               "         AND   b.clevel = ",p_xcbb006,")",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce301  = nvl(b.xcha301 ,0) "  #200310-00043#1 add
               #200310-00043#1 mark(s)
               #"     UPDATE SET a.xcce301  = nvl(b.xcha301 ,0),",
               ##181024-00082#1---mod---s               
               ##"                a.xcce303  = nvl(b.xcha309 ,0),",
               ##"                a.xcce901  = nvl(b.xcha901 ,0) "
               #"                a.xcce303  = nvl(b.xcha309 ,0)"
               ##181024-00082#1---mod---e 
               #200310-00043#1 mark(e)               
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p123 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p123"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF  
   
   EXECUTE s_axcp500_avg_wip_process_p123 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p123"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF       
   #171115-00022#1---add---e

   #181024-00082#1---add---s
   #DL+OH+SUB的期末数量为xcha_t所有站的SUM(xcha901)数量 
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcce_tmp a ",
#               "       USING (SELECT xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,SUM(xcha901) xcha901,clevel",  #200310-00043#1 mark
               "       USING (SELECT xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,SUM(xcha303) xcha303,SUM(xcha901) xcha901,clevel", #200310-00043#1 add
               "                FROM xcha_tmp,sfac_tmp2 ",
               "               WHERE xcha006 = sfacdocno ",
               "                 AND EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xchaent AND sfaadocno = xcha006 AND sfaa042 = '",p_flag,"')",   #200310-00043#1 add
               "               GROUP BY xchaent,xchald,xcha001,xcha002,xcha003,xcha004,xcha005,xcha006,clevel",
               "             )b ",
               "          ON ( a.xcceent = b.xchaent ",
               "         AND   a.xcceld  = b.xchald  ",
               "         AND   a.xcce001 = b.xcha001 ",
               "         AND   a.xcce003 = b.xcha003 ",
               "         AND   a.xcce004 = b.xcha004 ",
               "         AND   a.xcce005 = b.xcha005 ",
               "         AND   a.xcce006 = b.xcha006 ",
               "         AND   a.xcce007 = 'DL+OH+SUB'",
               "         AND   b.clevel = ",p_xcbb006,")",
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcce901  = nvl(b.xcha901 ,0) "
              ,"               ,a.xcce303  = NVL(b.xcha303,0 )"    #200310-00043#1 add
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg_wip_process_p124 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p124"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF

   EXECUTE s_axcp500_avg_wip_process_p124
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p124"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF
   #181024-00082#1---add---e
   
   CALL s_axcp500_avg1_sum_xcce(p_xcbb006,p_seq) RETURNING l_success #190221-00003#1 add

   #200212-00022#1 add(a)
   IF g_sys_6026 = '1' OR g_sys_6007 = '2' THEN
      LET g_sql = "INSERT INTO xcck_tmp ",
                     #                           企业编号 site组织 法人组织 账套 账套本位币顺序                      #161114-00003#1 add  #170110-00028#1                    
                     #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,",            #170110-00028#1       #180910-00065#1 mark              
                     " SELECT xcceent,sfaa_tmp.sfaasite,xccecomp,xcceld,xcce001,",            #180910-00065#1
                     #        成本域  成本计算类型 年度 期别 
                     "        xcce002,xcce003,xcce004,xcce005, ",
                     #        参考单号 项次                                    #参考单号=工单单号 项次为同个工单+1
                     "        xccd006 ,ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 )   , ",
                     #        项序 出入库码  料号
                     "        0   ,1       ,xccd007, ",
                     #特性：不能直接用xccd008，xccd上是不存特征的，肯定是空格，但实际工单上的主件不一定是有空格的，都有特征，那这样写入xcck后，最后汇总到xccc时，特征就会匹配不到，这部分也就会计入不到xccc中
                     #              所以需再关联sfac_tmp去获取一个特征,用sfac006。尽量关联相同成本阶的那个特征
                     #      再如果工单有多产出主件，则只要抓一笔就行了，这部分差异转出的部分只要有个主件认领就可以了
                     #"        sfac_tmp.sfac006, ", #180910-00065#1 mark
#                     "        sfaa_tmp.sfaa006, ", #180910-00065#1      #190513-00024#1 mark
                     "        sfaa_tmp.sfaa011, ", #190513-00024#1 mod
                     #        单据类型 单据日期 时间 仓库 储位                  #单据类型xcck012='DIFF'
                     "        'DIFF' ,''      ,'' ,' ' ,' ' ,  ", 
                     #        批号    异动类型  原因码 交易对象 客群
                     "        xccd009,'1100'  ,' '   ,' '    ,' ',  ",        #xcck020异动类型='1100'本月无入库差异转出的类型
                     #        区域 成本中心 经营类别 渠道 品类
                     "        ' ' ,' '     ,' '     ,' ' ,' '  ,  ",
                     #        品牌              项目号 WBS 存货科目 费用成本科目
                     "        nvl(imaa126,' '),' '   ,' ',' '     ,' '         ,  ",
                     #        收入科目 交易币种 本位币种   汇率  交易单位            
                     "        ' '    ,xccd011,xccd011,1      ,imaa006,  ",
                     #        成本单位 换算率 交易数量 工单号码 重复性生产-计划编号        
                     "        imaa006 ,1    ,0      ,xccd006,' '    ,  ",
                     #        重复性生产-生产料号 BOM特性 产品特征
                     "        ' '              ,' '    ,' '    ,  ",
                     #        xccc类型                                                                                              本期异动数量
                     #"        CASE '",p_flag,"' WHEN 'Y' THEN '2090' ELSE '2050' END IF, 0, ",   #xcck055异动类型=本月无入库差异转出的类型 '2050'一般工单 '2090'重工工单  #本期异动数量=0
                     "        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END IF, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型
                     #        本期异动数量金额    
                     "        xcce302*(-1),xcce302a*(-1),xcce302b*(-1),xcce302c*(-1),xcce302d*(-1),xcce302e*(-1),xcce302f*(-1),xcce302g*(-1),xcce302h*(-1), ",
                     #        本期异动单价        
                     "        xcce302*(-1),xcce302a*(-1),xcce302b*(-1),xcce302c*(-1),xcce302d*(-1),xcce302e*(-1),xcce302f*(-1),xcce302g*(-1),xcce302h*(-1), ",
                     #        已耗数量金额          结存数量金额          结存单位成本        结存调整金额
                     "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, ",
                     #        资料所有者      部门         录入者       部门  创建日 更改者 最近更改日 状态码
                     "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"','','','','Y', ",
                     #        自定义字段
                     "        '','','','','','','','','','','','','','','', ",
                     "        '','','','','','','','','','','','','','','', ",
                     "        '',",    #成本代销单号  
                     "        ' ' ",   #库存管理特征 for xccq use
                     "    FROM xcce_tmp LEFT OUTER JOIN imaa_t ON imaaent = xcceent AND imaa001 = xcce007,xccd_tmp, ",
                     #180910-00065#1---mark---s
                     #"         (SELECT * ",
                     #"            FROM ( SELECT sfacdocno,sfacsite,sfac001,sfac006,clevel,ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) num FROM sfac_tmp WHERE clevel =",p_xcbb006,") a ",  #mod zhangllc SBS7 add sfacsite
                     #"           WHERE num=1 ",
                     #"         ) sfac_tmp, ",
                     #180910-00065#1---mark---e
                     #190411-00017#1 A mark-S
#                     "         (SELECT sfaa_tmp.* FROM sfaa_tmp,sfac_tmp2 ",
#                     "           WHERE sfaaent = ",g_enterprise,
#                     "             AND sfaadocno=sfacdocno ",
#                     "             AND clevel= ",p_xcbb006,
#                     "             AND sfaa042 = '",p_flag,"' ",
#                     "          ) sfaa_tmp ",
                     #190411-00017#1 A mark-E
                     #190411-00017#1 A add-S
                     "         (SELECT sfaa_tmp.* FROM sfaa_tmp ",
                     "           WHERE sfaaent = ",g_enterprise,
                     "             AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE sfaadocno=sfacdocno AND clevel = ",p_xcbb006,") ",
                     "             AND sfaa042 = '",p_flag,"' ",
                     "          ) sfaa_tmp ",
                     #190411-00017#1 A add-E
                     "   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce002=xccd002 AND xcce003=xccd003 ",
                     "     AND xcce004 = xccd004 AND xcce005=xccd005 AND xcce006=xccd006 ",
                     #"     AND sfacdocno = xccd006 AND sfac001=xccd007 ",  #关联sfac_tmp  #180910-00065#1 mark
                     "     AND xcce001 ='",p_seq,"' ",
                     "     AND xcceent = sfaaent AND xcce006 = sfaadocno ", #关联sfaa_tmp
#                     "     AND xcce302 != 0 ",     #200618-00056#1 mark
                     "     AND (xcce302 <> 0 OR xcce302a <> 0 OR xcce302b <> 0 OR xcce302c <> 0 OR xcce302d <> 0 OR xcce302e <> 0 OR xcce302f <> 0 OR xcce302g <> 0 OR xcce302h <> 0)",  #200618-00056#1 add
                     "     AND sfaa003 <> '4' ", ##180320-00059#1 add
                     "     AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
                     "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
                     "                     AND inaj020 = xcce006 ",
                     "                     ) "
         PREPARE s_axcp500_avg_wip_process_p122_22 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p122_22"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF
         EXECUTE s_axcp500_avg_wip_process_p122_22
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p122_22"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
         END IF
   END IF
   #200212-00022#1 add(e)

   #工单结案,把结余转至差异或是入库
   #说明:工单结案时,若有结余,则要处理结余
   #     若参数g_sys_6008 = 'Y' (工单结案在制差异转入主件当期入库),则把结余转至xccd302
   #                     = 'N',则把结余至到xccd304
   # 但有一个例外,若g_sys_6008 = 'Y',但是本月没有入库,那转至xccd302后,无法正常结转至xccc中,会出现对不平的现象
   #             若遇这种现象时,即使参数='Y',也要结至xccd304
   IF g_sys_6008 = 'Y' THEN
      IF g_sys_6022 = 'N' THEN  #本月无入库的在制差异转入主件当期入库='N' 
         #本月有入库,则结转至xcce302
         UPDATE xcce_tmp SET xcce301  = xcce301  + xcce901 * -1,
                             xcce302  = xcce302  + xcce902 * -1,
                             xcce302a = xcce302a + xcce902a * -1,
                             xcce302b = xcce302b + xcce902b * -1,
                             xcce302c = xcce302c + xcce902c * -1,
                             xcce302d = xcce302d + xcce902d * -1,
                             xcce302e = xcce302e + xcce902e * -1,
                             xcce302f = xcce302f + xcce902f * -1,
                             xcce302g = xcce302g + xcce902g * -1,
                             xcce302h = xcce302h + xcce902h * -1
          WHERE xcce001 = p_seq
            #190411-00017#1 A mark-S
#            AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
#                              WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
#                                AND xccdent = sfaaent   AND xccd006 = sfaadocno AND sfaa042 = p_flag
#                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date2 )
            #190411-00017#1 A mark-E
            #190411-00017#1 A add-S
            AND EXISTS( SELECT 1 FROM xccd_tmp
                         WHERE EXISTS(SELECT 1 FROM sfaa_tmp WHERE sfaaent = xccdent AND sfaadocno = xccd006 AND sfaa042 = p_flag AND sfaa048 >= g_bdate AND sfaa048 < l_date2))
            #190411-00017#1 A add-E
            AND EXISTS ( SELECT 1 FROM inaj_tmp   #有入库
                          WHERE inaj036 IN ('110','111','112','113','103','104','105','106')
                            AND inaj020 = xcce006
                        )
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xcce_tmp SET xcce301"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF
         
         #本月无入库,则结转至xcce304
         UPDATE xcce_tmp SET xcce303  = xcce303  + xcce901 * -1,
                             xcce304  = xcce304  + xcce902 * -1,
                             xcce304a = xcce304a + xcce902a * -1,
                             xcce304b = xcce304b + xcce902b * -1,
                             xcce304c = xcce304c + xcce902c * -1,
                             xcce304d = xcce304d + xcce902d * -1,
                             xcce304e = xcce304e + xcce902e * -1,
                             xcce304f = xcce304f + xcce902f * -1,
                             xcce304g = xcce304g + xcce902g * -1,
                             xcce304h = xcce304h + xcce902h * -1
          WHERE xcce001 = p_seq
            AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
                              WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
                                AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date2 )  
            AND NOT EXISTS ( SELECT 1 FROM inaj_tmp   #无入库
                          WHERE inaj036 IN ('110','111','112','113','103','104','105','106')
                            AND inaj020 = xcce006
                            )
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xcce_tmp SET xcce303"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF
      ELSE #本月无入库的在制差异转入主件当期入库='Y'
         #将本月无入库的部分写入一笔新的xcck
         #根据xcck012单据类型='DIFF'可以判断为调整的，或者根据xcck055判断
         LET g_sql = "INSERT INTO xcck_tmp ",                                         
                    #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,",  #Mod zhangllc SBS7 xccksite存入sfacsite #161114-00003#1 mark
                     #                           企业编号 site组织 法人组织 账套 账套本位币顺序 
                     #" SELECT xcceent,sfac_tmp.sfacsite,xccecomp,xcceld,xcce001,",     #161114-00003#1 add    #180910-00065#1 mark                  
                     " SELECT xcceent,sfaa_tmp.sfaasite,xccecomp,xcceld,xcce001,",       #180910-00065#1
                     #        成本域  成本计算类型 年度 期别 
                     "        xcce002,xcce003,xcce004,xcce005, ",
                     #        参考单号 项次                                    #参考单号=工单单号 项次为同个工单+1
                     #190730-00046#1---mod---s
                     #"        xccd006 ,(ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 )), ",
                     "        xccd006 ,(ROW_NUMBER() OVER ( PARTITION BY xccd006 ORDER BY xccd007,xccd008 ))+ ",
                     "        NVL((SELECT MAX(xcck007) FROM xcck_tmp ",
                     "              WHERE xcckent=xcceent AND xcckld=xcceld AND xcck001=xcce001 AND xcck002=xcce002",
                     "                AND xcck003=xcce003 AND xcck004=xcce004 AND xcck005=xcce005 ",
                     "                AND xcck006=xcce006 AND xcck008=0 AND xcck009=1 AND xcck012='DIFF'),0) xcck007,",
                     #190730-00046#1---mod---e                      
                     #        项序 出入库码  料号
                     "        0   ,1       ,xccd007, ",
                     #特性：不能直接用xccd008，xccd上是不存特征的，肯定是空格，但实际工单上的主件不一定是有空格的，都有特征，那这样写入xcck后，最后汇总到xccc时，特征就会匹配不到，这部分也就会计入不到xccc中
                     #              所以需再关联sfac_tmp去获取一个特征,用sfac006。尽量关联相同成本阶的那个特征
                     #      再如果工单有多产出主件，则只要抓一笔就行了，这部分差异转出的部分只要有个主件认领就可以了
                     #"        sfac_tmp.sfac006, ",  #180910-00065#1  mark
                     "        sfaa_tmp.sfaa011, ",  #180910-00065#1
                     #        单据类型 单据日期 时间 仓库 储位                  #单据类型xcck012='DIFF'
                     #"        'DIFF' ,''      ,'' ,' ' ,' ' ,  ",   #PGS-(D)-03080 mark
                     "        'DIFF' ,NULL      ,'' ,' ' ,' ' ,  ",   #PGS-(D)-03080
                     #        批号    异动类型  原因码 交易对象 客群
                     "        xccd009,'1100'  ,' '   ,' '    ,' ',  ",        #xcck020异动类型='1100'本月无入库差异转出的类型
                     #        区域 成本中心 经营类别 渠道 品类
                     "        ' ' ,' '     ,' '     ,' ' ,' '  ,  ",
                     #        品牌              项目号 WBS 存货科目 费用成本科目
                     "        nvl(imaa126,' '),' '   ,' ',' '     ,' '         ,  ",
                     #        收入科目 交易币种 本位币种   汇率  交易单位            
                     "        ' '    ,xccd011,xccd011,1      ,imaa006,  ",
                     #        成本单位 换算率 交易数量 工单号码 重复性生产-计划编号        
                     "        imaa006 ,1    ,0      ,xccd006,' '    ,  ",
                     #        重复性生产-生产料号 BOM特性 产品特征
                     "        ' '              ,' '    ,' '    ,  ",
                     #        xccc类型                                                                                              本期异动数量
                     #"        CASE '",p_flag,"' WHEN 'Y' THEN '2090' ELSE '2050' END IF, 0, ",   #xcck055异动类型=本月无入库差异转出的类型 '2050'一般工单 '2090'重工工单  #本期异动数量=0
                     #"        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END IF, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型   #PGS-(D)-03080 mark need TQC
                     "        CASE  WHEN  sfaa042= 'Y' THEN '2090'  WHEN sfaa057='2' AND sfaa042='N' THEN '2030' ELSE '2050' END, 0, ",   #mod zhangllc 160608 SBS2 增加2030返工入库类型   #PGS-(D)-03080                     
                     #        本期异动数量金额   
                     "        xcce902,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h, ",
                     #        本期异动单价        
                     "        xcce902,xcce902a,xcce902b,xcce902c,xcce902d,xcce902e,xcce902f,xcce902g,xcce902h,   ",
                     #        已耗数量金额          结存数量金额          结存单位成本        结存调整金额
                     "        0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0, ",
                     #        资料所有者      部门         录入者       部门  创建日 更改者 最近更改日 状态码
                     "        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"',CAST(NULL as timestamp),'',CAST(NULL as timestamp),'Y', ",   #PGS-(D)-03080
                     #"        '",g_user,"','",g_dept,"','",g_user,"','",g_dept,"','','','','Y', ",   #PGS-(D)-03080 mark                  
                     #        自定义字段
                     #"        '','','','','','','','','','','','','','','', ",   #PGS-(D)-03080 mark
                     "        '','','','','','','','','','',0,0,0,0,0, ",   #PGS-(D)-03080
                     #"        '','','','','','','','','','','','','','','', ",   #PGS-(D)-03080 mark
                     "        0,0,0,0,0,CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp),CAST(NULL as timestamp), ",   #PGS-(D)-03080
                     "        '',",    #成本代销单号  160509-00004#76
                     "        ' ' ",   #库存管理特征 for xccq use
                     #"    FROM xcce_tmp LEFT OUTER JOIN imaa_t ON imaaent = xcceent AND imaa001 = xcce007,xccd_tmp, ",  #191205-00053#1 mark
                     "    FROM xcce_tmp,xccd_tmp LEFT OUTER JOIN imaa_t ON imaaent = xccdent AND imaa001 = xccd007, ",  #191205-00053#1
                     #180910-00065#1---mark---s
                     #"         (SELECT * ",
                     #"            FROM ( SELECT sfacdocno,sfacsite,sfac001,sfac006,clevel,ROW_NUMBER() OVER ( PARTITION BY sfacdocno ORDER BY sfac001,sfac006 ) num FROM sfac_tmp WHERE clevel =",p_xcbb006,") a ",  #mod zhangllc SBS7 add sfacsite
                     #"           WHERE num=1 ",
                     #"         ) sfac_tmp, ",
                     #180910-00065#1---mark---e
                     "         (SELECT sfaa_tmp.* FROM sfaa_tmp,sfac_tmp2 ",
                     "           WHERE sfaaent = ",g_enterprise,
                     "             AND sfaadocno=sfacdocno ",
                     "             AND clevel= ",p_xcbb006,
                     "             AND sfaa042 = '",p_flag,"' ",
                     "             AND sfaa048 >= '",g_bdate,"'  AND sfaa048 < '",l_date2,"'  ",  
                     "          ) sfaa_tmp ",
                     #"   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce002=xccd002 AND xcce003=xccd003 ", #171228-00050#1 mark
                     "   WHERE xcceent = xccdent AND xcceld =xccdld  AND xcce001=xccd001 AND xcce003=xccd003 ", #171228-00050#1 add
                     "     AND xcce004 = xccd004 AND xcce005=xccd005 AND xcce006=xccd006 ",
                     #"     AND sfacdocno = xccd006 AND sfac001=xccd007 ",  #关联sfac_tmp  #180910-00065#1 mark
                     "     AND xcce001 ='",p_seq,"' ",
                     "     AND xcceent = sfaaent AND xcce006 = sfaadocno ", #关联sfaa_tmp
                     #"     AND xcce902 != 0 ",   #170513-00005#1 add #200604-00071#1 mark
                     "     AND (xcce902<>0 OR xcce902a<>0 OR xcce902b<>0 OR xcce902c<>0 OR xcce902d<>0 OR xcce902e<>0 OR xcce902f<>0 OR xcce902g<>0 OR xcce902h<>0)",   #200604-00071#1
                     "     AND sfaa003 <> '4' ", ##180320-00059#1 add
                     "     AND NOT EXISTS ( SELECT 1 FROM inaj_tmp  ",  #无入库
                     "                   WHERE inaj036 IN ('110','111','112','113','103','104','105','106') ",
                     "                     AND inaj020 = xcce006 ",
                     "                     ) "
                     #mod zhangllc 160608--e
         PREPARE s_axcp500_avg_wip_process_p13 FROM g_sql
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_process_p13"
            LET g_errparam.popup  = TRUE
            CALL cl_err()     
         END IF     
         EXECUTE s_axcp500_avg_wip_process_p13
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "EXECUTE s_axcp500_avg_wip_process_p13"
            LET g_errparam.popup  = TRUE
            CALL cl_err()      
         END IF
         
         #不管本月有无入库,全结转至xcce302
         UPDATE xcce_tmp SET xcce301  = xcce301  + xcce901 * -1,
                             xcce302  = xcce302  + xcce902 * -1,
                             xcce302a = xcce302a + xcce902a * -1,
                             xcce302b = xcce302b + xcce902b * -1,
                             xcce302c = xcce302c + xcce902c * -1,
                             xcce302d = xcce302d + xcce902d * -1,
                             xcce302e = xcce302e + xcce902e * -1,
                             xcce302f = xcce302f + xcce902f * -1,
                             xcce302g = xcce302g + xcce902g * -1,
                             xcce302h = xcce302h + xcce902h * -1
          WHERE xcce001 = p_seq
            AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
                              WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
                                AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
                                AND sfaa048 >= g_bdate  AND sfaa048 < l_date2 )
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "UPDATE xcce_tmp SET xcce301"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
#           RETURN r_success
         END IF
       
      END IF
   ELSE
      UPDATE xcce_tmp SET xcce303  = xcce303  + xcce901 * -1,
                          xcce304  = xcce304  + xcce902 * -1,
                          xcce304a = xcce304a + xcce902a * -1,
                          xcce304b = xcce304b + xcce902b * -1,
                          xcce304c = xcce304c + xcce902c * -1,
                          xcce304d = xcce304d + xcce902d * -1,
                          xcce304e = xcce304e + xcce902e * -1,
                          xcce304f = xcce304f + xcce902f * -1,
                          xcce304g = xcce304g + xcce902g * -1,
                          xcce304h = xcce304h + xcce902h * -1
       WHERE xcce001 = p_seq
         AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
                           WHERE xccd006 = sfacdocno   AND clevel = p_xcbb006
                             AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
                             AND sfaa048 >= g_bdate  AND sfaa048 < l_date2 )
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "UPDATE xcce_tmp SET xcce303"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
#        RETURN r_success
      END IF                             
   END IF
   UPDATE xcce_tmp SET xcce901  = 0,
                       xcce902  = 0,
                       xcce902a = 0,
                       xcce902b = 0,
                       xcce902c = 0,
                       xcce902d = 0,
                       xcce902e = 0,
                       xcce902f = 0,
                       xcce902g = 0,
                       xcce902h = 0
    WHERE xcce001 = p_seq
      AND xcce006 IN ( SELECT xccd006 FROM xccd_tmp,sfac_tmp2,sfaa_tmp
                        WHERE xccd006 = sfacdocno AND clevel = p_xcbb006
                          AND xccdent = sfaaent AND xccd006 = sfaadocno AND sfaa042 = p_flag
                          AND sfaa048 >= g_bdate  AND sfaa048 < l_date2 )
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcce_tmp SET xcce901"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
#     RETURN r_success
   END IF    
END FUNCTION

################################################################################
# Descriptions...: 工艺在制成本计算 - 取得加工
# Date & Author..: 2017/02/23 By 02295
# Modify.........: #161121-00018#5
################################################################################
PUBLIC FUNCTION s_axcp500_avg_wip_xchb_1_1(p_seq)
DEFINE p_seq     LIKE xchb_t.xchb001
DEFINE l_xchb006 LIKE xchb_t.xchb006
DEFINE l_xchb013 LIKE xchb_t.xchb013
DEFINE l_date    DATETIME YEAR TO SECOND
DEFINE l_tot     LIKE xchb_t.xchb202   
DEFINE l_qty     LIKE xchb_t.xchb201   
DEFINE l_sum     LIKE xchb_t.xchb202   
DEFINE l_cnt1    LIKE type_t.num10    
DEFINE l_pmdtdocno LIKE pmdt_t.pmdtdocno
DEFINE l_pmdtseq   LIKE pmdt_t.pmdtseq
DEFINE l_pmdt009   LIKE pmdt_t.pmdt009
DEFINE l_pmdt010   LIKE pmdt_t.pmdt010
DEFINE l_pmdv019   LIKE pmdv_t.pmdv019


   WHENEVER ERROR CONTINUE


   LET l_date = cl_get_current()

   LET l_xchb013 = g_curr[p_seq].curr 
   LET g_sql = " UPDATE xchb_tmp ",
               "    SET xchb202c = ? ",
               "  WHERE xchbent = ",g_enterprise,
               "    AND xchbld  = '",g_ld,"'",
               "    AND xchb001 = '",p_seq,"'",
               "    AND xchb003 = '",g_xcat001,"'",
               "    AND xchb004 = ",g_yy,
               "    AND xchb005 = ",g_pp,
               "    AND xchb006 = ? ",
               "    AND xchb007 = ? ",
               "    AND xchb008 = ? ",
               "    AND xchb009 = 'DL+OH+SUB' ",
               "    AND xchb010 = ' ' ",
               "    AND xchb011 = ' ' ",
               "    AND xchb007 = xchb014 ",
               "    AND xchb008 = xchb015 "               
   PREPARE s_axcp500_avg_wip_xchb_1_1_upd FROM g_sql
   
   LET g_sql= " INSERT INTO xchb_tmp VALUES(",g_enterprise,",'",g_comp,"','",g_ld,"','",p_seq,"',' ',",
             "       '",g_xcat001,"',",g_yy,",",g_pp,",?,?,?,'DL+OH+SUB',",               
             "          ' ',' ','','",l_xchb013,"',?,?,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          ?,?,0,0,?,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          0,0,0,0,0,0,0,0,0,0,",
             "          ? )" 
   PREPARE s_axcp500_avg_wip_xchb_1_1_ins FROM g_sql 
           
   #180712-00023#1---mod---s      
   #LET g_sql = "SELECT DISTINCT pmdtdocno,pmdtseq,pmdv019 FROM pmds_t,pmdt_t,pmdv_t,sfaa_t,sfca_t ",  #入库单号/退货单号,项次
   #            " WHERE pmdsent = pmdtent AND pmdsdocno = pmdtdocno ",
   #            "   AND pmdvent = pmdtent AND pmdvdocno = pmdtdocno AND pmdvseq = pmdtseq ",
   #            "   AND sfaaent = pmdvent AND sfaadocno = pmdv014 ",
   #            "   AND sfcaent = pmdvent AND sfcadocno = pmdv014 ",
   #            "   AND pmdsent = ",g_enterprise,
   #            "   AND pmdssite IN(SELECT ooef001 FROM ooef_t WHERE ooefent = '",g_enterprise,"'",
   #            "                       AND ooefstus ='Y' AND ooef017 ='",g_comp,"') ",
   #            "   AND pmdv014 = ?     ",  #工单编号
   #            "   AND DECODE(pmdv003,NULL,'END',' ','END',pmdv003) = ?     ",  #作业编号
   #            "   AND DECODE(pmdv004,NULL,'0',' ','0',pmdv004) = ?     ",  #作业序
   #            "   AND pmds011 = '2' ",  #采购性质:2委外采购
   #            "   AND pmds001 BETWEEN '",g_bdate,"' AND '",g_edate,"'", #扣帐日期
   #            "   AND pmdsstus = 'S' ", #已委外入库过账
   #            "   AND sfca005 = '1' "
   LET g_sql = "SELECT DISTINCT pmdtdocno,pmdtseq,pmdp023 FROM pmds_t,pmdt_t,pmdp_t,sfaa_t,sfca_t ",  #入库单号/退货单号,项次
               " WHERE pmdsent = pmdtent AND pmdsdocno = pmdtdocno ",  #入库/仓退单 单头单身关联
               "   AND pmdtent = pmdpent AND pmdt001 = pmdpdocno AND pmdt002 = pmdpseq ",  #入库/仓退单身采购单号与但采购单关联单据页签关联
               "   AND pmdpent = sfaaent AND pmdp003 = sfaadocno ",   #采购单关联单据的来源单号与工单关联
               "   AND pmdpent = sfcaent AND pmdp003 = sfcadocno ",
               "   AND pmdsent = ",g_enterprise,
               "   AND pmdssite IN(SELECT ooef001 FROM ooef_t WHERE ooefent = '",g_enterprise,"'",
               "                       AND ooefstus ='Y' AND ooef017 ='",g_comp,"') ",
               "   AND pmdp003 = ?     ",  #工单编号
               "   AND DECODE(pmdp009,NULL,'END',' ','END',pmdp009) = ?     ",  #作业编号
               "   AND DECODE(pmdp010,NULL,'0',' ','0',pmdp010) = ?     ",  #作业序
               "   AND pmds011 = '2' ",  #采购性质:2委外采购
               "   AND pmds001 BETWEEN '",g_bdate,"' AND '",g_edate,"'", #扣帐日期
               "   AND pmdsstus = 'S' ", #已委外入库过账
               "   AND sfca005 = '1' "
   #180712-00023#1---mod---e     
   PREPARE s_axcp500_avg_wip_xchb_1_1_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_1_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF   
   
   DECLARE s_axcp500_avg_wip_xchb_1_1_c2 CURSOR FOR s_axcp500_avg_wip_xchb_1_1_p2
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DECLARE s_axcp500_avg_wip_xchb_1_1_c2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF 
   LET g_sql = " SELECT COUNT(1) ",
               "   FROM xchb_tmp ",
               "  WHERE xchbent = ",g_enterprise,
               "    AND xchbld  = '",g_ld,"'",
               "    AND xchb001 = '",p_seq,"'",
               "    AND xchb003 = '",g_xcat001,"'",
               "    AND xchb004 = ",g_yy,
               "    AND xchb005 = ",g_pp,
               "    AND xchb006 = ? ",
               "    AND xchb007 = ? ",
               "    AND xchb008 = ? ",
               "    AND xchb009 = 'DL+OH+SUB' ",
               "    AND xchb014 = xchb007 ",
               "    AND xchb015 = xchb008 "
   PREPARE s_axcp500_avg_wip_xchb_1_1_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg_wip_xchb_1_1_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
   END IF

   #180712-00023#1---mod---s
   #LET g_sql = "SELECT DISTINCT pmdv014,DECODE(pmdv003,NULL,'END',' ','END',pmdv003),DECODE(pmdv004,NULL,'0',' ','0',pmdv004) FROM pmds_t,pmdv_t,sfaa_t,sfca_t ",  #入库单号/退货单号,项次
   #            " WHERE pmdsent = pmdvent AND pmdsdocno = pmdvdocno ",
   #            "   AND sfaaent = pmdvent AND sfaadocno = pmdv014 ",
   #            "   AND sfcaent = pmdvent AND sfcadocno = pmdv014 ",
   #            "   AND pmdsent = ",g_enterprise,
   #            "   AND pmdssite IN(SELECT ooef001 FROM ooef_t WHERE ooefent = '",g_enterprise,"'",
   #            "                       AND ooefstus ='Y' AND ooef017 ='",g_comp,"') ",
   #            "   AND pmds011 = '2' ",  #采购性质:2委外采购
   #            "   AND pmds001 BETWEEN '",g_bdate,"' AND '",g_edate,"'", #扣帐日期
   #            "   AND pmdsstus = 'S' ", #已委外入库过账
   #            "   AND sfca005 = '1' "      
   LET g_sql = "SELECT DISTINCT pmdp003,DECODE(pmdp009,NULL,'END',' ','END',pmdp009),DECODE(pmdp010,NULL,'0',' ','0',pmdp010) FROM pmds_t,pmdt_t,pmdp_t,sfaa_t,sfca_t ",  #入库单号/退货单号,项次
               " WHERE pmdsent = pmdtent AND pmdsdocno = pmdtdocno ",  #入库/仓退单 单头单身关联
               "   AND pmdtent = pmdpent AND pmdt001 = pmdpdocno AND pmdt002 = pmdpseq ",  #入库/仓退单身采购单号与但采购单关联单据页签关联
               "   AND pmdpent = sfaaent AND pmdp003 = sfaadocno ",   #采购单关联单据的来源单号与工单关联
               "   AND pmdpent = sfcaent AND pmdp003 = sfcadocno ",
               "   AND pmdsent = ",g_enterprise,
               "   AND pmdssite IN(SELECT ooef001 FROM ooef_t WHERE ooefent = '",g_enterprise,"'",
               "                       AND ooefstus ='Y' AND ooef017 ='",g_comp,"') ",
               "   AND pmds011 = '2' ",  #采购性质:2委外采购
               "   AND pmds001 BETWEEN '",g_bdate,"' AND '",g_edate,"'", #扣帐日期
               "   AND pmdsstus = 'S' ", #已委外入库过账
               "   AND sfca005 = '1' "  
   #180712-00023#1---mod---e               
   PREPARE s_axcp500_avg_wip_xchb_1_1_p1 FROM g_sql
   DECLARE s_axcp500_avg_wip_xchb_1_1_c1 CURSOR FOR s_axcp500_avg_wip_xchb_1_1_p1
   FOREACH s_axcp500_avg_wip_xchb_1_1_c1 INTO l_xchb006,l_pmdt009,l_pmdt010          
      LET l_tot = 0
      LET l_qty = 0
      INITIALIZE l_pmdtdocno TO NULL 
      INITIALIZE l_pmdtseq TO NULL 
      FOREACH s_axcp500_avg_wip_xchb_1_1_c2 USING l_xchb006,l_pmdt009,l_pmdt010 INTO l_pmdtdocno,l_pmdtseq,l_pmdv019
          IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = 'FOREACH s_axcp500_wip_2_3_cs2'
            LET g_errparam.popup  = TRUE
            CALL cl_err()   
            CALL s_axcp500_ins_error('','','','',l_xchb006,'','','','','',
                                     '','',SQLCA.sqlcode,'','FOREACH s_axcp500_avg_wip_xchb_1_1_c2')
            CONTINUE FOREACH  
         END IF  
         
         CALL s_axcp500_get_ap_sum_1(p_seq,l_pmdtdocno,l_pmdtseq,0)    
              RETURNING l_sum
         LET l_tot = l_tot + l_sum
         LET l_qty = l_qty + l_pmdv019
      END FOREACH 
      LET l_cnt1 = 0
      EXECUTE s_axcp500_avg_wip_xchb_1_1_p3 USING l_xchb006,l_pmdt009,l_pmdt010 INTO l_cnt1     
      IF l_cnt1 = 0 THEN
         EXECUTE s_axcp500_avg_wip_xchb_1_1_ins USING l_xchb006,l_pmdt009,l_pmdt010,l_pmdt009,l_pmdt010,l_qty,l_tot,l_tot,l_date
      ELSE
         EXECUTE s_axcp500_avg_wip_xchb_1_1_upd USING l_tot,l_xchb006,l_pmdt009,l_pmdt010
      END IF                                              
   END FOREACH   
END FUNCTION

################################################################################
# Descriptions...: 計算SET取替代轉出套數與數量
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_getsetout()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 17/12/20 By 07423 (#160726-00001#11 add)
# Modify.........:
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_getsetout()
DEFINE l_sfbadocno     LIKE sfba_t.sfbadocno
DEFINE l_sfba027       LIKE sfba_t.sfba027
DEFINE l_sfba034       LIKE sfba_t.sfba034
DEFINE l_xccd301       LIKE xccd_t.xccd301
DEFINE l_totqty        LIKE sfba_t.sfba035
DEFINE l_qty           LIKE sfba_t.sfba035
DEFINE r_success       LIKE type_t.num5

   LET r_success = TRUE
   
   #更新已發套數
   LET g_sql = " UPDATE wip4_tmp6 ",
               "    SET qty6 = (qty3 * sfba011/decode(sfba010,0,1,sfba010)) "
       
   PREPARE s_axcp500_avg1_getsetout_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF  

   EXECUTE s_axcp500_avg1_getsetout_p1 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_getsetout_p1"
      LET g_errparam.popup  = TRUE
      LET r_success = FALSE
      CALL cl_err()
   END IF 
   
   #更新累計轉出套數
   LET g_sql = " UPDATE wip4_tmp6 ",
               "    SET qty11 = (qty10 * sfba011/decode(sfba010,0,1,sfba010)) "
       
   PREPARE s_axcp500_avg1_getsetout_p2 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF  

   EXECUTE s_axcp500_avg1_getsetout_p2 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_getsetout_p2"
      LET g_errparam.popup  = TRUE
      LET r_success = FALSE
      CALL cl_err()
   END IF 
   
   #更新SET同一群組累計總足套數
   #PGS(D)-00824 ---start---
   LET g_sql = "  MERGE INTO wip4_tmp6 a ",
               "  USING (SELECT sfbadocno,sfba034,SUM(qty11) tqty       ",
               "           FROM ( SELECT DISTINCT sfbadocno,sfba027,sfba034,qty11       ",
               "                   FROM wip4_tmp6 b)  ", 
               "          GROUP BY sfbadocno,sfba034                  ",
               "       ) c                                                                   ",
               "    ON (c.sfbadocno = a.sfbadocno                                            ",
               "        AND c.sfba034 = a.sfba034)                                           ",
               "  WHEN MATCHED THEN UPDATE SET a.qty12 =c.tqty                               "       
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_getsetout_p3 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF  
   
   EXECUTE s_axcp500_avg1_getsetout_p3 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_getsetout_p3"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF
   
   #更新剩餘轉出套數,更新主件剩餘轉出套數
   LET g_sql = " UPDATE wip4_tmp6 ",
               "    SET qty13 = (qty6 - qty11), ",
               "        qty16 = (qty14 + qty15 - qty12) "
       
   PREPARE s_axcp500_avg1_getsetout_p4 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p4"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF  

   EXECUTE s_axcp500_avg1_getsetout_p4 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_getsetout_p4"
      LET g_errparam.popup  = TRUE
      LET r_success = FALSE
      CALL cl_err()
   END IF 
   
   #更新SET各群組足套數
   #PGS(D)-00824 ---start---
   LET g_sql = "  MERGE INTO wip4_tmp6 a ",
               "  USING (SELECT sfbadocno,sfba027,sfba034,mqty       ",
               "           FROM ( SELECT sfbadocno,sfba027,sfba034,MIN(qty13) mqty       ",
               "                   FROM wip4_tmp6 b  ", 
               "                  GROUP BY sfbadocno,sfba027,sfba034 )                 ",
               "       ) c                                                                   ",
               "    ON (c.sfbadocno = a.sfbadocno                                            ",
               "        AND c.sfba027 = a.sfba027                                            ",
               "        AND c.sfba034 = a.sfba034)                                           ",
               "  WHEN MATCHED THEN UPDATE SET a.qty7 =c.mqty                                "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_getsetout_p5 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF  

   EXECUTE s_axcp500_avg1_getsetout_p5
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_getsetout_p5"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF
   
   #更新SET同一群組總足套數
   #PGS(D)-00824 ---start---
   LET g_sql = "  MERGE INTO wip4_tmp6 a ",
               "  USING (SELECT sfbadocno,sfba034,SUM(qty7) tqty       ",
               "           FROM ( SELECT DISTINCT sfbadocno,sfba027,sfba034,qty7  ",
               "                   FROM wip4_tmp6 b)  ", 
               "          GROUP BY sfbadocno,sfba034                 ",
               "       ) c                                                                   ",
               "    ON (c.sfbadocno = a.sfbadocno                                            ",
               "        AND c.sfba034 = a.sfba034)                                           ",
               "  WHEN MATCHED THEN UPDATE SET a.qty8 =c.tqty                                "
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_getsetout_p6 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF  

   EXECUTE s_axcp500_avg1_getsetout_p6 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_getsetout_p6"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF
   
   #200903-00086#1---add---s
   #SET取替代轉出量
   LET g_sql = " SELECT DISTINCT sfbadocno,sfba034,qty16 ",
               "   FROM wip4_tmp6 ",
               "  WHERE qty8 > qty16 "

   PREPARE s_axcp500_avg1_getsetout_p11 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p11"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   DECLARE s_axcp500_avg1_getsetout_cs1 CURSOR FOR s_axcp500_avg1_getsetout_p11
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DECLARE s_axcp500_avg1_getsetout_cs1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   LET g_sql = " SELECT sfba027,qty7 ",
               "   FROM wip4_tmp6 ",
               "  WHERE sfbadocno = ? AND sfba034 = ? ",
               "  ORDER BY qty7 desc"

   PREPARE s_axcp500_avg1_getsetout_p12 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p12"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF

   DECLARE s_axcp500_avg1_getsetout_cs2 CURSOR FOR s_axcp500_avg1_getsetout_p12
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "DECLARE s_axcp500_avg1_getsetout_cs2"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN r_success
   END IF
   #200903-00086#1---add---e
   
   #若同一群組套數大於轉出套數,則依序發料最大套數開始轉出
   FOREACH s_axcp500_avg1_getsetout_cs1 INTO l_sfbadocno,l_sfba034,l_xccd301
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH s_axcp500_avg1_getsetout_cs1"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CONTINUE FOREACH
      END IF
      
      LET l_totqty = l_xccd301
      
      FOREACH s_axcp500_avg1_getsetout_cs2 USING l_sfbadocno,l_sfba034 
                                            #INTO l_sfba034,l_qty    #200903-00086#1 mark
                                            INTO l_sfba027,l_qty     #200903-00086#1
                                            
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH s_axcp500_avg1_getsetout_cs2"
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CONTINUE FOREACH
         END IF                                      
         
         IF l_qty >= l_totqty THEN
         
            UPDATE wip4_tmp6 
               SET qty7 = l_totqty
             WHERE sfbadocno = l_sfbadocno
               AND sfba034   = l_sfba034
               AND sfba027   = l_sfba027
               
            LET l_totqty = 0
         ELSE
            LET l_totqty = l_totqty - l_qty         
         END IF
         IF l_totqty <=0 THEN EXIT FOREACH END IF  #200903-00086#1 add
      END FOREACH
       
   END FOREACH

   #依群組套數轉出
   LET g_sql = " UPDATE wip4_tmp6 ",
               "    SET qty9 = (qty7 * sfba010/decode(sfba011,0,1,sfba011)) "
       
   PREPARE s_axcp500_avg1_getsetout_p7 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_getsetout_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF  

   EXECUTE s_axcp500_avg1_getsetout_p7 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_getsetout_p7"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF 
   
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 整批寫xcck - 213.當站下線
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xcck_2_3(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本階
#                  p_seq          本位幣順序
# Return code....: r_success      成功否識別字
# Date & Author..: 2019/10/01 By 00593
# Modify.........: 190802-00007#1 add
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xcck_2_3(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xcck_t.xcck001
   DEFINE r_success       LIKE type_t.num5                       
   DEFINE l_date          DATETIME YEAR TO SECOND

   WHENEVER ERROR CONTINUE
   LET r_success = FALSE
   LET l_date = cl_get_current()

   #213.當站下線 
   #PGS(D)-00824 ---start---
   LET g_sql = " MERGE INTO xcck_tmp a ",
               #200604-00021#1---mark---s
               #"      USING (SELECT xccc001,xccc002,xccc006,xccc007,xccc008,",
               #"                    xccc280,xccc280a,xccc280b,xccc280c,xccc280d,xccc280e,xccc280f,xccc280g,xccc280h ",
               #"               FROM ( SELECT xccc001,xccc002,xccc006,xccc007,xccc008, ",
               #"                            xccc101,xccc201,xccc203,xccc205,xccc211,xccc213,xccc215,xccc217,",
               #"                            xccc280,xccc280a,xccc280b,xccc280c,xccc280d,xccc280e,xccc280f,xccc280g,xccc280h,",
               #"                            SUM(xcck201*xcck009) a",
               #"                       FROM xccc_tmp,xcck_tmp",
               #"                      WHERE xcckent = xcccent ",
               #"                        AND xcckld  = xcccld  ",
               #"                        AND xcck001 = xccc001 ",
               #"                        AND xcck002 = xccc002 ",
               #"                        AND xcck003 = xccc003 ",
               #"                        AND xcck004 = xccc004 ",
               #"                        AND xcck005 = xccc005 ",
               #"                        AND xcck010 = xccc006 ",
               #"                        AND xcck011 = xccc007 ",
               #"                        AND xcck017 = xccc008 ",
               #"                        AND xcck055 = '213'",
               #"                      GROUP By xccc001,xccc002,xccc006,xccc007,xccc008,",
               #"                               xccc101,xccc201,xccc203,xccc205,xccc211,xccc213,xccc215,xccc217,",
               #"                               xccc280,xccc280a,xccc280b,xccc280c,xccc280d,xccc280e,xccc280f,xccc280g,xccc280h) ",             
               #"              WHERE xccc101+xccc201+xccc203+xccc205+xccc211+xccc213+xccc215+xccc217+a<>0) b ",   #200506-00046#1 mark
               #"  ) b",  #200506-00046#1 add
               #"         ON ( a.xcck001 = b.xccc001 ",
               #"        AND   a.xcck002 = b.xccc002 ",
               #"        AND   a.xcck010 = b.xccc006 ",
               #"        AND   a.xcck011 = b.xccc007 ",
               #"        AND   a.xcck017 = b.xccc008 ", 
               #"        AND   a.xcck055 = '213'  ",    #200407-00007#1 add            
               #"        AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE a.xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,"))",
               #200604-00021#1---mark---e 
               #200604-00021#1---add---s
               "      USING xccc_tmp b ",
               "          ON ( a.xcckent = b.xcccent ",
               "         AND   a.xcckld  = b.xcccld  ",
               "         AND   a.xcck001 = b.xccc001 ",
               "         AND   a.xcck002 = b.xccc002 ",
               "         AND   a.xcck003 = b.xccc003 ",
               "         AND   a.xcck004 = b.xccc004 ",
               "         AND   a.xcck005 = b.xccc005 ",
               "         AND   a.xcck010 = b.xccc006 ",
               "         AND   a.xcck011 = b.xccc007 ",
               "         AND   a.xcck017 = b.xccc008 ) ",               
               #200604-00021#1---add---e   
               "  WHEN MATCHED THEN    ",
               "     UPDATE SET a.xcck202  = NVL(xcck201 * b.xccc280 ,0),  ",   #本期異動金額
               "                a.xcck202a = NVL(xcck201 * b.xccc280a,0),  ",
               "                a.xcck202b = NVL(xcck201 * b.xccc280b,0),  ",
               "                a.xcck202c = NVL(xcck201 * b.xccc280c,0),  ",
               "                a.xcck202d = NVL(xcck201 * b.xccc280d,0),  ",
               "                a.xcck202e = NVL(xcck201 * b.xccc280e,0),  ",
               "                a.xcck202f = NVL(xcck201 * b.xccc280f,0),  ",
               "                a.xcck202g = NVL(xcck201 * b.xccc280g,0),  ",
               "                a.xcck202h = NVL(xcck201 * b.xccc280h,0),  ",
               "                a.xcck282  = NVL(b.xccc280 ,0),  ",             #本期異動單價
               "                a.xcck282a = NVL(b.xccc280a,0),  ",
               "                a.xcck282b = NVL(b.xccc280b,0),  ",
               "                a.xcck282c = NVL(b.xccc280c,0),  ",
               "                a.xcck282d = NVL(b.xccc280d,0),  ",
               "                a.xcck282e = NVL(b.xccc280e,0),  ",
               "                a.xcck282f = NVL(b.xccc280f,0),  ",
               "                a.xcck282g = NVL(b.xccc280g,0),  ",
               "                a.xcck282h = NVL(b.xccc280h,0)   "
               #200604-00021#1---add---s
              ,"    WHERE (xcck055 = '213' ",
               "       OR (xcck055 = '3011' AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE a.xcck010 = imaa001 AND xcbb006 <= ",p_xcbb006,")",
               "            AND EXISTS(SELECT 1 FROM sfac_tmp2 WHERE a.xcck047 = sfacdocno AND clevel = ",p_xcbb006,")))"
               #200604-00021#1---add---e                  
   #PGS(D)-00824 --- end ---
   PREPARE s_axcp500_avg1_set_xcck_2_3_p FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_2_3_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_2_3_p') 
   END IF

   EXECUTE s_axcp500_avg1_set_xcck_2_3_p 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_2_3_p"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_2_3_p')
   END IF 
      
   #xcck202a~xcck202h進行取位
   CASE g_round_type
        WHEN '1'   #四捨五入
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = round(xcck202 ,? ), xcck202a = round(xcck202a,? ), xcck202b = round(xcck202b,? ), ",
                         "                    xcck202c = round(xcck202c,? ), xcck202d = round(xcck202d,? ), ",
                         "                    xcck202e = round(xcck202e,? ), xcck202f = round(xcck202f,? ), ",
                         "                    xcck202g = round(xcck202g,? ), xcck202h = round(xcck202h,? )  ",
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",
                         "   AND xcck055 = '213'"
        WHEN '2'  #四捨六入五成雙
        #201119-00005#1 add--s           
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                          THEN ROUND(xcck202,?) ",
                         "                                                          ELSE ROUND(xcck202,?)-(1/power(10,?)) ",
                         "                                                     END) ",
                         "                                      ELSE ROUND(xcck202,?)",
                         "                                END ),",
                         "                    xcck202a = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202a,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202a,?) ",
                         "                                                         ELSE ROUND(xcck202a,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202a,?)",
                         "                                END ),",
                         "                    xcck202b = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202b,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202b,?) ",
                         "                                                         ELSE ROUND(xcck202b,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202b,?)",
                         "                                END ),",
                         "                    xcck202c = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202c,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202c,?) ",
                         "                                                         ELSE ROUND(xcck202c,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202c,?)",
                         "                                END ),",
                         "                    xcck202d = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202d,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202d,?) ",
                         "                                                         ELSE ROUND(xcck202d,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202d,?)",
                         "                                END ),",
                         "                    xcck202e = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202e,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202e,?) ",
                         "                                                         ELSE ROUND(xcck202e,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202e,?)",
                         "                                END ),",
                         "                    xcck202f = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202f,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202f,?) ",
                         "                                                         ELSE ROUND(xcck202f,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202f,?)",
                         "                                END ),",
                         "                    xcck202g = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202g,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202g,?) ",
                         "                                                         ELSE ROUND(xcck202g,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202g,?)",
                         "                                END ),",
                         "                    xcck202h = (CASE WHEN ?<>0 THEN (CASE WHEN MOD(ROUND(xcck202h,?),CAST((2/power(10,?)) as number))=0 ", #200922-00036#1 (2/power(10,?))->CAST((2/power(10,?)) as number)
                         "                                                         THEN ROUND(xcck202h,?) ",
                         "                                                         ELSE ROUND(xcck202h,?)-(1/power(10,?)) ",
                         "                                                    END) ",
                         "                                     ELSE ROUND(xcck202h,?)",
                         "                                END )",
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",   
                         "   AND xcck055 = '213'" 
        #201119-00005#1 add--e         
        WHEN '3'   #無條件截位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = trunc(xcck202 ,? ), xcck202a = trunc(xcck202a,? ), xcck202b = trunc(xcck202b,? ), ",
                         "                    xcck202c = trunc(xcck202c,? ), xcck202d = trunc(xcck202d,? ), ",
                         "                    xcck202e = trunc(xcck202e,? ), xcck202f = trunc(xcck202f,? ), ",
                         "                    xcck202g = trunc(xcck202g,? ), xcck202h = trunc(xcck202h,? )  ",
                         " WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",
                         "   AND xcck055 = '213'"
        WHEN '4'  #無條件進位
             LET g_sql = "UPDATE xcck_tmp SET xcck202  = ceil(xcck202 *power(10,?))/power(10,?),",
                         "                    xcck202a = ceil(xcck202a*power(10,?))/power(10,?),",
                         "                    xcck202b = ceil(xcck202b*power(10,?))/power(10,?),",
                         "                    xcck202c = ceil(xcck202c*power(10,?))/power(10,?),",
                         "                    xcck202d = ceil(xcck202d*power(10,?))/power(10,?),",
                         "                    xcck202e = ceil(xcck202e*power(10,?))/power(10,?),",
                         "                    xcck202f = ceil(xcck202f*power(10,?))/power(10,?),",
                         "                    xcck202g = ceil(xcck202g*power(10,?))/power(10,?),",
                         "                    xcck202h = ceil(xcck202h*power(10,?))/power(10,?) ",
                         "  WHERE EXISTS( SELECT 1 FROM s_axcp500_tmp WHERE xcck010 = imaa001 AND xcbb006 = ",p_xcbb006,")",
                         "   AND xcck055 = '213'"
   END CASE                         
   PREPARE s_axcp500_avg1_set_xcck_2_3_p1 FROM g_sql
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xcck_2_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xcck_2_3_p1')
   END IF

   CASE g_round_type
      WHEN '1'
         EXECUTE s_axcp500_avg1_set_xcck_2_3_p1 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2
      WHEN '2'
         EXECUTE s_axcp500_avg1_set_xcck_2_3_p1 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2
      WHEN '3'
         EXECUTE s_axcp500_avg1_set_xcck_2_3_p1 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2
      WHEN '4'
         EXECUTE s_axcp500_avg1_set_xcck_2_3_p1 USING g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,g_curr[1].digit2,
                                                      g_curr[1].digit2
   END CASE   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xcck_2_3_p1"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xcck_2_3_p1')         
   END IF      
               
               
   #修正xcck202的值-先修至xcck202a,若xcck202a為零,則修正xcck202b......
   UPDATE xcck_tmp
      SET xcck202a = xcck202 - (xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcck010 AND xcbb006 = p_xcbb006)
      AND xcck055 = '213'
      AND xcck202a >= xcck202b AND xcck202a >= xcck202c
      AND xcck202a >= xcck202d AND xcck202a >= xcck202e
      AND xcck202a >= xcck202f AND xcck202a >= xcck202g
      AND xcck202a >= xcck202h
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202a"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202a')         
   END IF
   UPDATE xcck_tmp
      SET xcck202b = xcck202 - (xcck202a + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcck010 AND xcbb006 = p_xcbb006)      
      AND xcck055 = '213' 
      AND xcck202b >= xcck202c
      AND xcck202b >= xcck202d AND xcck202b >= xcck202e
      AND xcck202b >= xcck202f AND xcck202b >= xcck202g
      AND xcck202b >= xcck202h      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202b"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202b')         
   END IF   
   UPDATE xcck_tmp
      SET xcck202c = xcck202 - (xcck202a + xcck202b + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcck010 AND xcbb006 = p_xcbb006)      
      AND xcck055 = '213'
      AND xcck202c >= xcck202d AND xcck202c >= xcck202e
      AND xcck202c >= xcck202f AND xcck202c >= xcck202g
      AND xcck202c >= xcck202h      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202c"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202c')         
   END IF   
   UPDATE xcck_tmp
      SET xcck202d = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202e + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcck010 AND xcbb006 = p_xcbb006)       
      AND xcck055 = '213'
      AND xcck202d >= xcck202e
      AND xcck202d >= xcck202f AND xcck202d >= xcck202g
      AND xcck202d >= xcck202h     
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202d"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202d')         
   END IF   
   UPDATE xcck_tmp
      SET xcck202e = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202f + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcck010 AND xcbb006 = p_xcbb006)  
      AND xcck055 = '213'
      AND xcck202e >= xcck202f AND xcck202e >= xcck202g
      AND xcck202e >= xcck202h     
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202e"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202e')         
   END IF   
   UPDATE xcck_tmp
      SET xcck202f = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202g + xcck202h)  
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcck010 AND xcbb006 = p_xcbb006)
      AND xcck055 = '213'
      AND xcck202f >= xcck202g
      AND xcck202f >= xcck202h        
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202f"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202f')
   END IF   
   UPDATE xcck_tmp
      SET xcck202g = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202h)
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcck010 AND xcbb006 = p_xcbb006)
      AND xcck055 = '213' 
      AND xcck202g >= xcck202h
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202g"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202g')
   END IF
   UPDATE xcck_tmp
      SET xcck202h = xcck202 - (xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g)
    WHERE xcck202 <> xcck202a + xcck202b + xcck202c + xcck202d + xcck202e + xcck202f + xcck202g + xcck202h
      AND EXISTS (SELECT 1 FROM s_axcp500_tmp WHERE imaa001=xcck010 AND xcbb006 = p_xcbb006)
      AND xcck055 = '213'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code   = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE xcck_tmp SET xcck202h"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL s_axcp500_ins_error('','','','','','','','','','','',
                               '',SQLCA.sqlcode,'','UPDATE xcck_tmp SET xcck202h')
   END IF
   
   LET r_success = TRUE
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 整批寫xccc - 213.當站下線
# Memo...........:
# Usage..........: CALL s_axcp500_avg1_set_xccc_2_3(p_xcbb006,p_seq)
#                       RETURNING r_success
# Input parameter: p_xcbb006      成本階
#                  p_seq          本位幣順序
# Return code....: r_success      成功否識別字
# Date & Author..: 2019/10/01 By 00593
# Modify.........: 190802-00007#1 add
################################################################################
PUBLIC FUNCTION s_axcp500_avg1_set_xccc_2_3(p_xcbb006,p_seq)
   DEFINE p_xcbb006       LIKE xcbb_t.xcbb006
   DEFINE p_seq           LIKE xccc_t.xccc001
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_success       LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = FALSE

   #213.當站下線 
   #當「當站下線是否影響成本」=Y 且 「當站下線的取價方式」=1.系統取價時，
   #計算完一般入庫及銷退入庫後，在計算重工領之前，增加處理當站下線的金額取值，更新調整入庫(xccc213,xccc214*)
   IF g_sys_6016 = 'Y' AND g_sys_6025 = '1' THEN
      #PGS(D)-00824 ---start---
      LET g_sql = " MERGE INTO xccc_tmp ",
                  "       USING (SELECT xcckent,xcckld, xcck001,xcck002,xcck003,",
                  "                     xcck004,xcck005,xcck010,xcck011,xcck017,",
                  "                     SUM(xcck201*xcck009)  xcck201, SUM(xcck202*xcck009)  xcck202, SUM(xcck202a*xcck009) xcck202a,",
                  "                     SUM(xcck202b*xcck009) xcck202b,SUM(xcck202c*xcck009) xcck202c,SUM(xcck202d*xcck009) xcck202d,",
                  "                     SUM(xcck202e*xcck009) xcck202e,SUM(xcck202f*xcck009) xcck202f,SUM(xcck202g*xcck009) xcck202g,",
                  "                     SUM(xcck202h*xcck009) xcck202h",
                  "                FROM xcck_tmp",                         
                  "                WHERE xcck055 = '213'",
                  "                  AND EXISTS (SELECT 1 FROM sfaa_t WHERE sfaaent = ",g_enterprise," AND sfaadocno = xcck047 AND sfaa003 <> '3') ",
                  "                GROUP BY xcckent,xcckld, xcck001,xcck002,xcck003,",
                  "                         xcck004,xcck005,xcck010,xcck011,xcck017",
                  "                ) b ",
                  "          ON ( xcccent = b.xcckent  ",
                  "         AND   xcccld  = b.xcckld   ",
                  "         AND   xccc001 = b.xcck001  ",
                  "         AND   xccc002 = b.xcck002  ",
                  "         AND   xccc003 = b.xcck003  ",
                  "         AND   xccc004 = b.xcck004  ",
                  "         AND   xccc005 = b.xcck005  ",
                  "         AND   xccc006 = b.xcck010  ",
                  "         AND   xccc007 = b.xcck011  ",
                  "         AND   xccc008 = b.xcck017  ",
                  "         AND   (xccc006) IN ( SELECT imaa001 FROM s_axcp500_tmp WHERE xcbb006 = ",p_xcbb006,") )",
                  "  WHEN MATCHED THEN    ",
                  "     UPDATE SET xccc213  = nvl(b.xcck201 ,0) ,  ",
                  "                xccc214  = nvl(b.xcck202 ,0) ,  ",
                  "                xccc214a = nvl(b.xcck202a,0) ,  ",
                  "                xccc214b = nvl(b.xcck202b,0) ,  ",
                  "                xccc214c = nvl(b.xcck202c,0) ,  ",
                  "                xccc214d = nvl(b.xcck202d,0) ,  ",
                  "                xccc214e = nvl(b.xcck202e,0) ,  ",
                  "                xccc214f = nvl(b.xcck202f,0) ,  ",
                  "                xccc214g = nvl(b.xcck202g,0) ,  ",
                  "                xccc214h = nvl(b.xcck202h,0)    "
      #PGS(D)-00824 --- end ---
      PREPARE s_axcp500_avg1_set_xccc_2_3_p FROM g_sql
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "PREPARE s_axcp500_avg1_set_xccc_2_3_p"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','PREPARE s_axcp500_avg1_set_xccc_2_3_p')
      END IF
      EXECUTE s_axcp500_avg1_set_xccc_2_3_p 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.extend = "EXECUTE s_axcp500_avg1_set_xccc_2_3_p"
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         CALL s_axcp500_ins_error('','','','','','','','','','','',
                                  '',SQLCA.sqlcode,'','EXECUTE s_axcp500_avg1_set_xccc_2_3_p')
      END IF

      #計算料件的平均單價 - 第二輪月加權平均成本單價
      CALL s_axcp500_avg1_set_xccc280(p_xcbb006,p_seq,'2')
           RETURNING l_success

      LET r_success = TRUE
      RETURN r_success
   ELSE
      LET r_success = TRUE
      RETURN r_success
   END IF
END FUNCTION

 
{</section>}
 
